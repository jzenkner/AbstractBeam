{
    "num_tasks": 104,
    "num_tasks_solved": 62,
    "results": [
        {
            "elapsed_time": 1.719118189997971,
            "num_unique_values": 350,
            "solution": "Map((lambda u1: ((lambda v1: fn_7(v1)))(u1)), fn_23(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 67.2992700729927,
                "explored_percent_lambda": 22.18978102189781,
                "explored_percent_none": 10.510948905109489,
                "kept_percent_concrete": 64.41176470588235,
                "kept_percent_lambda": 35.588235294117645,
                "num_examples": 15,
                "num_explored_concrete": 461,
                "num_explored_lambda": 152,
                "num_explored_none": 72,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 121,
                "num_values_explored": 685,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 685
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.30065465485677123,
            "num_unique_values": 127,
            "solution": "fn_10(x1, fn_6(Car(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.088235294117645,
                "explored_percent_lambda": 22.426470588235293,
                "explored_percent_none": 19.485294117647058,
                "kept_percent_concrete": 49.572649572649574,
                "kept_percent_lambda": 50.427350427350426,
                "num_examples": 15,
                "num_explored_concrete": 158,
                "num_explored_lambda": 61,
                "num_explored_none": 53,
                "num_inputs": 1,
                "num_kept_concrete": 58,
                "num_kept_lambda": 59,
                "num_values_explored": 272,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33590213116258383,
            "num_unique_values": 159,
            "solution": "fn_10(x1, fn_6(Index(4, x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 75.81227436823104,
                "explored_percent_lambda": 19.494584837545126,
                "explored_percent_none": 4.693140794223827,
                "kept_percent_concrete": 66.44295302013423,
                "kept_percent_lambda": 33.557046979865774,
                "num_examples": 15,
                "num_explored_concrete": 210,
                "num_explored_lambda": 54,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 50,
                "num_values_explored": 277,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37225670786574483,
            "num_unique_values": 140,
            "solution": "fn_17(x1, 1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 72.43401759530792,
                "explored_percent_lambda": 8.79765395894428,
                "explored_percent_none": 18.7683284457478,
                "kept_percent_concrete": 80.0,
                "kept_percent_lambda": 20.0,
                "num_examples": 15,
                "num_explored_concrete": 247,
                "num_explored_lambda": 30,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 104,
                "num_kept_lambda": 26,
                "num_values_explored": 341,
                "num_values_kept": 130,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3699799389578402,
            "num_unique_values": 138,
            "solution": "fn_17(x1, 2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 72.14076246334311,
                "explored_percent_lambda": 9.3841642228739,
                "explored_percent_none": 18.475073313782993,
                "kept_percent_concrete": 78.125,
                "kept_percent_lambda": 21.875,
                "num_examples": 15,
                "num_explored_concrete": 246,
                "num_explored_lambda": 32,
                "num_explored_none": 63,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 28,
                "num_values_explored": 341,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.72159246820956,
            "num_unique_values": 477,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.3800695249131,
                "explored_percent_lambda": 16.64735419080726,
                "explored_percent_none": 38.97257628427965,
                "kept_percent_concrete": 51.39186295503212,
                "kept_percent_lambda": 48.60813704496788,
                "num_examples": 15,
                "num_explored_concrete": 1149,
                "num_explored_lambda": 431,
                "num_explored_none": 1009,
                "num_inputs": 1,
                "num_kept_concrete": 240,
                "num_kept_lambda": 227,
                "num_values_explored": 2589,
                "num_values_kept": 467,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82554
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.534604465123266,
            "num_unique_values": 194,
            "solution": "fn_24(Map((lambda u1: ((lambda v1: Mod(v1, 2)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.50121065375303,
                "explored_percent_lambda": 18.886198547215496,
                "explored_percent_none": 19.612590799031477,
                "kept_percent_concrete": 65.76086956521739,
                "kept_percent_lambda": 34.23913043478261,
                "num_examples": 15,
                "num_explored_concrete": 254,
                "num_explored_lambda": 78,
                "num_explored_none": 81,
                "num_inputs": 1,
                "num_kept_concrete": 121,
                "num_kept_lambda": 63,
                "num_values_explored": 413,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.3024115660228,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.151047844998025,
                "explored_percent_lambda": 16.963226571767496,
                "explored_percent_none": 40.88572558323448,
                "kept_percent_concrete": 52.23880597014925,
                "kept_percent_lambda": 47.76119402985075,
                "num_examples": 15,
                "num_explored_concrete": 1066,
                "num_explored_lambda": 429,
                "num_explored_none": 1034,
                "num_inputs": 1,
                "num_kept_concrete": 245,
                "num_kept_lambda": 224,
                "num_values_explored": 2529,
                "num_values_kept": 469,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81560
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.5448582950048,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.97781178270849,
                "explored_percent_lambda": 16.143840856924253,
                "explored_percent_none": 36.87834736036725,
                "kept_percent_concrete": 54.27974947807933,
                "kept_percent_lambda": 45.72025052192067,
                "num_examples": 15,
                "num_explored_concrete": 1228,
                "num_explored_lambda": 422,
                "num_explored_none": 964,
                "num_inputs": 1,
                "num_kept_concrete": 260,
                "num_kept_lambda": 219,
                "num_values_explored": 2614,
                "num_values_kept": 479,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 84515
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7615967439487576,
            "num_unique_values": 288,
            "solution": "Map((lambda u1: ((lambda v1: fn_21(v1, 4)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.5,
                "explored_percent_lambda": 18.313953488372093,
                "explored_percent_none": 19.186046511627907,
                "kept_percent_concrete": 66.54676258992805,
                "kept_percent_lambda": 33.45323741007194,
                "num_examples": 15,
                "num_explored_concrete": 430,
                "num_explored_lambda": 126,
                "num_explored_none": 132,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 93,
                "num_values_explored": 688,
                "num_values_kept": 278,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 688
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6303120367229,
            "num_unique_values": 453,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.054140127388536,
                "explored_percent_lambda": 13.773885350318471,
                "explored_percent_none": 39.17197452229299,
                "kept_percent_concrete": 53.04740406320542,
                "kept_percent_lambda": 46.95259593679458,
                "num_examples": 15,
                "num_explored_concrete": 1182,
                "num_explored_lambda": 346,
                "num_explored_none": 984,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 208,
                "num_values_explored": 2512,
                "num_values_kept": 443,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 80645
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.0157708832994,
            "num_unique_values": 488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.984375,
                "explored_percent_lambda": 17.265625,
                "explored_percent_none": 38.75,
                "kept_percent_concrete": 51.88284518828452,
                "kept_percent_lambda": 48.11715481171548,
                "num_examples": 15,
                "num_explored_concrete": 1126,
                "num_explored_lambda": 442,
                "num_explored_none": 992,
                "num_inputs": 1,
                "num_kept_concrete": 248,
                "num_kept_lambda": 230,
                "num_values_explored": 2560,
                "num_values_kept": 478,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81446
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.7844541929662,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.1897233201581,
                "explored_percent_lambda": 17.66798418972332,
                "explored_percent_none": 38.14229249011858,
                "kept_percent_concrete": 49.04051172707889,
                "kept_percent_lambda": 50.95948827292111,
                "num_examples": 15,
                "num_explored_concrete": 1118,
                "num_explored_lambda": 447,
                "num_explored_none": 965,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 239,
                "num_values_explored": 2530,
                "num_values_kept": 469,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 79249
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.5175778288394,
            "num_unique_values": 495,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.183609141055946,
                "explored_percent_lambda": 16.15445232466509,
                "explored_percent_none": 40.66193853427896,
                "kept_percent_concrete": 50.51546391752577,
                "kept_percent_lambda": 49.48453608247423,
                "num_examples": 15,
                "num_explored_concrete": 1096,
                "num_explored_lambda": 410,
                "num_explored_none": 1032,
                "num_inputs": 1,
                "num_kept_concrete": 245,
                "num_kept_lambda": 240,
                "num_values_explored": 2538,
                "num_values_kept": 485,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 79226
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7812227900139987,
            "num_unique_values": 290,
            "solution": "Map((lambda u1: ((lambda v1: fn_21(v1, 5)))(u1)), fn_23(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.93265007320644,
                "explored_percent_lambda": 19.472913616398245,
                "explored_percent_none": 18.594436310395317,
                "kept_percent_concrete": 64.64285714285714,
                "kept_percent_lambda": 35.357142857142854,
                "num_examples": 15,
                "num_explored_concrete": 423,
                "num_explored_lambda": 133,
                "num_explored_none": 127,
                "num_inputs": 1,
                "num_kept_concrete": 181,
                "num_kept_lambda": 99,
                "num_values_explored": 683,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 683
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7474555224180222,
            "num_unique_values": 312,
            "solution": "Length(fn_12(x1, 1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 72.9646697388633,
                "explored_percent_lambda": 10.138248847926267,
                "explored_percent_none": 16.897081413210447,
                "kept_percent_concrete": 81.45695364238411,
                "kept_percent_lambda": 18.543046357615893,
                "num_examples": 15,
                "num_explored_concrete": 475,
                "num_explored_lambda": 66,
                "num_explored_none": 110,
                "num_inputs": 1,
                "num_kept_concrete": 246,
                "num_kept_lambda": 56,
                "num_values_explored": 651,
                "num_values_kept": 302,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 651
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8466436620801687,
            "num_unique_values": 330,
            "solution": "Length(fn_12(x1, 2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 76.65130568356375,
                "explored_percent_lambda": 10.291858678955453,
                "explored_percent_none": 13.056835637480798,
                "kept_percent_concrete": 82.8125,
                "kept_percent_lambda": 17.1875,
                "num_examples": 15,
                "num_explored_concrete": 499,
                "num_explored_lambda": 67,
                "num_explored_none": 85,
                "num_inputs": 1,
                "num_kept_concrete": 265,
                "num_kept_lambda": 55,
                "num_values_explored": 651,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 651
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7506273230537772,
            "num_unique_values": 329,
            "solution": "Length(fn_12(x1, 4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 70.81413210445469,
                "explored_percent_lambda": 11.52073732718894,
                "explored_percent_none": 17.665130568356375,
                "kept_percent_concrete": 79.62382445141066,
                "kept_percent_lambda": 20.37617554858934,
                "num_examples": 15,
                "num_explored_concrete": 461,
                "num_explored_lambda": 75,
                "num_explored_none": 115,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 65,
                "num_values_explored": 651,
                "num_values_kept": 319,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 651
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.0100525720045,
            "num_unique_values": 552,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.3216525267429,
                "explored_percent_lambda": 15.381777941718923,
                "explored_percent_none": 36.296569531538175,
                "kept_percent_concrete": 57.93357933579336,
                "kept_percent_lambda": 42.06642066420664,
                "num_examples": 15,
                "num_explored_concrete": 1310,
                "num_explored_lambda": 417,
                "num_explored_none": 984,
                "num_inputs": 1,
                "num_kept_concrete": 314,
                "num_kept_lambda": 228,
                "num_values_explored": 2711,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86209
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.839400377124548,
            "num_unique_values": 325,
            "solution": "Car(fn_17(fn_12(x1, 1), 0))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 78.47113884555382,
                "explored_percent_lambda": 8.424336973478939,
                "explored_percent_none": 13.104524180967239,
                "kept_percent_concrete": 85.39682539682539,
                "kept_percent_lambda": 14.603174603174603,
                "num_examples": 15,
                "num_explored_concrete": 503,
                "num_explored_lambda": 54,
                "num_explored_none": 84,
                "num_inputs": 1,
                "num_kept_concrete": 269,
                "num_kept_lambda": 46,
                "num_values_explored": 641,
                "num_values_kept": 315,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 641
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 61.9745335187763,
            "num_unique_values": 520,
            "solution": "If(IsEmpty(fn_12(x1, 2)), 0, 1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.67805953693495,
                "explored_percent_lambda": 9.298052186696067,
                "explored_percent_none": 35.02388827636898,
                "kept_percent_concrete": 74.70588235294117,
                "kept_percent_lambda": 25.294117647058822,
                "num_examples": 15,
                "num_explored_concrete": 1515,
                "num_explored_lambda": 253,
                "num_explored_none": 953,
                "num_inputs": 1,
                "num_kept_concrete": 381,
                "num_kept_lambda": 129,
                "num_values_explored": 2721,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 19792
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0857238401658833,
            "num_unique_values": 371,
            "solution": "fn_21(0, fn_8(Length(fn_12(x1, 4))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 73.90829694323143,
                "explored_percent_lambda": 7.096069868995633,
                "explored_percent_none": 18.995633187772924,
                "kept_percent_concrete": 85.59556786703601,
                "kept_percent_lambda": 14.404432132963988,
                "num_examples": 15,
                "num_explored_concrete": 677,
                "num_explored_lambda": 65,
                "num_explored_none": 174,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 52,
                "num_values_explored": 916,
                "num_values_kept": 361,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 916
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 262.4104218548164,
            "num_unique_values": 506,
            "solution": "If(IsEmpty(fn_16(fn_14(x1, 2), (lambda u1: ((lambda v1: IsPrime(v1)))(u1)))), 1, 0)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.9599395313681,
                "explored_percent_lambda": 9.410430839002268,
                "explored_percent_none": 29.62962962962963,
                "kept_percent_concrete": 77.8225806451613,
                "kept_percent_lambda": 22.177419354838708,
                "num_examples": 15,
                "num_explored_concrete": 1613,
                "num_explored_lambda": 249,
                "num_explored_none": 784,
                "num_inputs": 1,
                "num_kept_concrete": 386,
                "num_kept_lambda": 110,
                "num_values_explored": 2646,
                "num_values_kept": 496,
                "temperature": 1.0,
                "total_num_restarts": 27,
                "total_num_values_explored": 75352
            },
            "success": true,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.8940840717405,
            "num_unique_values": 532,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.79009687836383,
                "explored_percent_lambda": 10.584858270541801,
                "explored_percent_none": 34.625044851094366,
                "kept_percent_concrete": 71.0727969348659,
                "kept_percent_lambda": 28.9272030651341,
                "num_examples": 15,
                "num_explored_concrete": 1527,
                "num_explored_lambda": 295,
                "num_explored_none": 965,
                "num_inputs": 1,
                "num_kept_concrete": 371,
                "num_kept_lambda": 151,
                "num_values_explored": 2787,
                "num_values_kept": 522,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87423
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.728919881396,
            "num_unique_values": 597,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.61538461538461,
                "explored_percent_lambda": 10.454545454545455,
                "explored_percent_none": 34.93006993006993,
                "kept_percent_concrete": 72.40204429301534,
                "kept_percent_lambda": 27.597955706984667,
                "num_examples": 15,
                "num_explored_concrete": 1562,
                "num_explored_lambda": 299,
                "num_explored_none": 999,
                "num_inputs": 1,
                "num_kept_concrete": 425,
                "num_kept_lambda": 162,
                "num_values_explored": 2860,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90111
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.26250354666263,
            "num_unique_values": 586,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.43722943722944,
                "explored_percent_lambda": 13.383838383838384,
                "explored_percent_none": 32.17893217893218,
                "kept_percent_concrete": 65.97222222222223,
                "kept_percent_lambda": 34.02777777777778,
                "num_examples": 15,
                "num_explored_concrete": 1509,
                "num_explored_lambda": 371,
                "num_explored_none": 892,
                "num_inputs": 1,
                "num_kept_concrete": 380,
                "num_kept_lambda": 196,
                "num_values_explored": 2772,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85672
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6612301180139,
            "num_unique_values": 593,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.597122302158276,
                "explored_percent_lambda": 13.848920863309353,
                "explored_percent_none": 37.55395683453237,
                "kept_percent_concrete": 60.20583190394511,
                "kept_percent_lambda": 39.79416809605489,
                "num_examples": 15,
                "num_explored_concrete": 1351,
                "num_explored_lambda": 385,
                "num_explored_none": 1044,
                "num_inputs": 1,
                "num_kept_concrete": 351,
                "num_kept_lambda": 232,
                "num_values_explored": 2780,
                "num_values_kept": 583,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87433
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.048576280009,
            "num_unique_values": 603,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.287241625089095,
                "explored_percent_lambda": 13.328581610833927,
                "explored_percent_none": 37.384176764076976,
                "kept_percent_concrete": 63.40640809443508,
                "kept_percent_lambda": 36.59359190556492,
                "num_examples": 15,
                "num_explored_concrete": 1383,
                "num_explored_lambda": 374,
                "num_explored_none": 1049,
                "num_inputs": 1,
                "num_kept_concrete": 376,
                "num_kept_lambda": 217,
                "num_values_explored": 2806,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87739
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6512385359965,
            "num_unique_values": 618,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.758633494244336,
                "explored_percent_lambda": 12.959524693650204,
                "explored_percent_none": 37.28184181210546,
                "kept_percent_concrete": 62.5,
                "kept_percent_lambda": 37.5,
                "num_examples": 15,
                "num_explored_concrete": 1340,
                "num_explored_lambda": 349,
                "num_explored_none": 1004,
                "num_inputs": 1,
                "num_kept_concrete": 380,
                "num_kept_lambda": 228,
                "num_values_explored": 2693,
                "num_values_kept": 608,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85582
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.86335477791727,
            "num_unique_values": 612,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.90718771807397,
                "explored_percent_lambda": 12.665736217725053,
                "explored_percent_none": 36.427076064200975,
                "kept_percent_concrete": 65.61461794019934,
                "kept_percent_lambda": 34.38538205980066,
                "num_examples": 15,
                "num_explored_concrete": 1459,
                "num_explored_lambda": 363,
                "num_explored_none": 1044,
                "num_inputs": 1,
                "num_kept_concrete": 395,
                "num_kept_lambda": 207,
                "num_values_explored": 2866,
                "num_values_kept": 602,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91562
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.23951315972954,
            "num_unique_values": 597,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.21519939804364,
                "explored_percent_lambda": 8.20165537998495,
                "explored_percent_none": 25.583145221971407,
                "kept_percent_concrete": 80.57921635434413,
                "kept_percent_lambda": 19.420783645655877,
                "num_examples": 15,
                "num_explored_concrete": 1760,
                "num_explored_lambda": 218,
                "num_explored_none": 680,
                "num_inputs": 1,
                "num_kept_concrete": 473,
                "num_kept_lambda": 114,
                "num_values_explored": 2658,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 83287
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8429295299575,
            "num_unique_values": 604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.5179407176287,
                "explored_percent_lambda": 8.385335413416536,
                "explored_percent_none": 18.096723868954758,
                "kept_percent_concrete": 81.48148148148148,
                "kept_percent_lambda": 18.51851851851852,
                "num_examples": 15,
                "num_explored_concrete": 1885,
                "num_explored_lambda": 215,
                "num_explored_none": 464,
                "num_inputs": 1,
                "num_kept_concrete": 484,
                "num_kept_lambda": 110,
                "num_values_explored": 2564,
                "num_values_kept": 594,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 80432
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.83374388702214,
            "num_unique_values": 622,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.21670606776989,
                "explored_percent_lambda": 8.116627265563436,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 82.51633986928104,
                "kept_percent_lambda": 17.483660130718953,
                "num_examples": 15,
                "num_explored_concrete": 1909,
                "num_explored_lambda": 206,
                "num_explored_none": 423,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 107,
                "num_values_explored": 2538,
                "num_values_kept": 612,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 79874
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.21166096581146,
            "num_unique_values": 511,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.039468830689785,
                "explored_percent_lambda": 9.221689413500552,
                "explored_percent_none": 27.738841755809663,
                "kept_percent_concrete": 73.25349301397206,
                "kept_percent_lambda": 26.746506986027946,
                "num_examples": 15,
                "num_explored_concrete": 1709,
                "num_explored_lambda": 250,
                "num_explored_none": 752,
                "num_inputs": 1,
                "num_kept_concrete": 367,
                "num_kept_lambda": 134,
                "num_values_explored": 2711,
                "num_values_kept": 501,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85300
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.33548157382756,
            "num_unique_values": 590,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.07747273411057,
                "explored_percent_lambda": 8.123354644603234,
                "explored_percent_none": 25.799172621286196,
                "kept_percent_concrete": 79.3103448275862,
                "kept_percent_lambda": 20.689655172413794,
                "num_examples": 15,
                "num_explored_concrete": 1757,
                "num_explored_lambda": 216,
                "num_explored_none": 686,
                "num_inputs": 1,
                "num_kept_concrete": 460,
                "num_kept_lambda": 120,
                "num_values_explored": 2659,
                "num_values_kept": 580,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82583
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.50109728518873,
            "num_unique_values": 551,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.897756528135346,
                "explored_percent_lambda": 9.48878264067672,
                "explored_percent_none": 28.613460831187936,
                "kept_percent_concrete": 74.86136783733826,
                "kept_percent_lambda": 25.138632162661736,
                "num_examples": 15,
                "num_explored_concrete": 1683,
                "num_explored_lambda": 258,
                "num_explored_none": 778,
                "num_inputs": 1,
                "num_kept_concrete": 405,
                "num_kept_lambda": 136,
                "num_values_explored": 2719,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85237
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.10559207899496,
            "num_unique_values": 532,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.24944320712695,
                "explored_percent_lambda": 9.725315515961396,
                "explored_percent_none": 28.025241276911654,
                "kept_percent_concrete": 75.28735632183908,
                "kept_percent_lambda": 24.71264367816092,
                "num_examples": 15,
                "num_explored_concrete": 1677,
                "num_explored_lambda": 262,
                "num_explored_none": 755,
                "num_inputs": 1,
                "num_kept_concrete": 393,
                "num_kept_lambda": 129,
                "num_values_explored": 2694,
                "num_values_kept": 522,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 84182
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18040623981505632,
            "num_unique_values": 85,
            "solution": "Map((lambda u1: ((lambda v1: Multiply(4, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.63157894736842,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 36.0,
                "kept_percent_lambda": 64.0,
                "num_examples": 15,
                "num_explored_concrete": 80,
                "num_explored_lambda": 48,
                "num_explored_none": 24,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 48,
                "num_values_explored": 152,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 152
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11835100594907999,
            "num_unique_values": 51,
            "solution": "Cons(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.70229007633588,
                "explored_percent_lambda": 19.84732824427481,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 41.46341463414634,
                "kept_percent_lambda": 58.53658536585366,
                "num_examples": 15,
                "num_explored_concrete": 90,
                "num_explored_lambda": 26,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 24,
                "num_values_explored": 131,
                "num_values_kept": 41,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11713270517066121,
            "num_unique_values": 55,
            "solution": "Cons(5, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 72.51908396946565,
                "explored_percent_lambda": 16.03053435114504,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 57.77777777777778,
                "kept_percent_lambda": 42.22222222222222,
                "num_examples": 15,
                "num_explored_concrete": 95,
                "num_explored_lambda": 21,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 26,
                "num_kept_lambda": 19,
                "num_values_explored": 131,
                "num_values_kept": 45,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.8830467010848,
            "num_unique_values": 447,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.27272727272727,
                "explored_percent_lambda": 17.12727272727273,
                "explored_percent_none": 19.6,
                "kept_percent_concrete": 66.36155606407323,
                "kept_percent_lambda": 33.63844393592677,
                "num_examples": 15,
                "num_explored_concrete": 1740,
                "num_explored_lambda": 471,
                "num_explored_none": 539,
                "num_inputs": 1,
                "num_kept_concrete": 290,
                "num_kept_lambda": 147,
                "num_values_explored": 2750,
                "num_values_kept": 437,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85138
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3219877281226218,
            "num_unique_values": 140,
            "solution": "fn_9(x1, fn_4(Cdr(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 66.66666666666667,
                "explored_percent_lambda": 26.053639846743295,
                "explored_percent_none": 7.2796934865900385,
                "kept_percent_concrete": 51.53846153846154,
                "kept_percent_lambda": 48.46153846153846,
                "num_examples": 15,
                "num_explored_concrete": 174,
                "num_explored_lambda": 68,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 63,
                "num_values_explored": 261,
                "num_values_kept": 130,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.7159678726457,
            "num_unique_values": 638,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.53574234092694,
                "explored_percent_lambda": 12.215239591516104,
                "explored_percent_none": 21.249018067556953,
                "kept_percent_concrete": 71.4968152866242,
                "kept_percent_lambda": 28.503184713375795,
                "num_examples": 15,
                "num_explored_concrete": 1694,
                "num_explored_lambda": 311,
                "num_explored_none": 541,
                "num_inputs": 1,
                "num_kept_concrete": 449,
                "num_kept_lambda": 179,
                "num_values_explored": 2546,
                "num_values_kept": 628,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 80145
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.94330511428416,
            "num_unique_values": 629,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.63718820861678,
                "explored_percent_lambda": 12.849584278155707,
                "explored_percent_none": 27.513227513227513,
                "kept_percent_concrete": 67.8513731825525,
                "kept_percent_lambda": 32.14862681744749,
                "num_examples": 15,
                "num_explored_concrete": 1578,
                "num_explored_lambda": 340,
                "num_explored_none": 728,
                "num_inputs": 1,
                "num_kept_concrete": 420,
                "num_kept_lambda": 199,
                "num_values_explored": 2646,
                "num_values_kept": 619,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82459
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.64468267466873,
            "num_unique_values": 627,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.106082036775106,
                "explored_percent_lambda": 14.25035360678925,
                "explored_percent_none": 35.64356435643565,
                "kept_percent_concrete": 60.94003241491086,
                "kept_percent_lambda": 39.05996758508914,
                "num_examples": 15,
                "num_explored_concrete": 1417,
                "num_explored_lambda": 403,
                "num_explored_none": 1008,
                "num_inputs": 1,
                "num_kept_concrete": 376,
                "num_kept_lambda": 241,
                "num_values_explored": 2828,
                "num_values_kept": 617,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86940
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8307224176824,
            "num_unique_values": 590,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.898524649154375,
                "explored_percent_lambda": 12.41453760345448,
                "explored_percent_none": 29.68693774739115,
                "kept_percent_concrete": 66.89655172413794,
                "kept_percent_lambda": 33.10344827586207,
                "num_examples": 15,
                "num_explored_concrete": 1609,
                "num_explored_lambda": 345,
                "num_explored_none": 825,
                "num_inputs": 1,
                "num_kept_concrete": 388,
                "num_kept_lambda": 192,
                "num_values_explored": 2779,
                "num_values_kept": 580,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86206
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.09064918383956,
            "num_unique_values": 478,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.15217391304348,
                "explored_percent_lambda": 10.108695652173912,
                "explored_percent_none": 21.73913043478261,
                "kept_percent_concrete": 72.86324786324786,
                "kept_percent_lambda": 27.136752136752136,
                "num_examples": 15,
                "num_explored_concrete": 1881,
                "num_explored_lambda": 279,
                "num_explored_none": 600,
                "num_inputs": 1,
                "num_kept_concrete": 341,
                "num_kept_lambda": 127,
                "num_values_explored": 2760,
                "num_values_kept": 468,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85003
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.462200409732759,
            "num_unique_values": 382,
            "solution": "fn_10(fn_10(x1, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.32335329341317,
                "explored_percent_lambda": 15.94311377245509,
                "explored_percent_none": 20.733532934131738,
                "kept_percent_concrete": 69.6236559139785,
                "kept_percent_lambda": 30.376344086021504,
                "num_examples": 15,
                "num_explored_concrete": 846,
                "num_explored_lambda": 213,
                "num_explored_none": 277,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 113,
                "num_values_explored": 1336,
                "num_values_kept": 372,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1336
            },
            "success": true,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4178856071084738,
            "num_unique_values": 399,
            "solution": "fn_10(fn_10(fn_10(x1, x1), x1), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.17417417417417,
                "explored_percent_lambda": 9.30930930930931,
                "explored_percent_none": 16.516516516516518,
                "kept_percent_concrete": 81.23393316195373,
                "kept_percent_lambda": 18.76606683804627,
                "num_examples": 15,
                "num_explored_concrete": 988,
                "num_explored_lambda": 124,
                "num_explored_none": 220,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 73,
                "num_values_explored": 1332,
                "num_values_kept": 389,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1332
            },
            "success": true,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.04268057411537,
            "num_unique_values": 597,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.903179190751445,
                "explored_percent_lambda": 14.234104046242775,
                "explored_percent_none": 34.86271676300578,
                "kept_percent_concrete": 59.45485519591141,
                "kept_percent_lambda": 40.54514480408859,
                "num_examples": 15,
                "num_explored_concrete": 1409,
                "num_explored_lambda": 394,
                "num_explored_none": 965,
                "num_inputs": 1,
                "num_kept_concrete": 349,
                "num_kept_lambda": 238,
                "num_values_explored": 2768,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 83610
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19148684293031693,
            "num_unique_values": 86,
            "solution": "Map((lambda u1: Index(4, x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.70967741935484,
                "explored_percent_lambda": 29.677419354838708,
                "explored_percent_none": 11.612903225806452,
                "kept_percent_concrete": 43.421052631578945,
                "kept_percent_lambda": 56.578947368421055,
                "num_examples": 15,
                "num_explored_concrete": 91,
                "num_explored_lambda": 46,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 43,
                "num_values_explored": 155,
                "num_values_kept": 76,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.3586171446368,
            "num_unique_values": 553,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.29260935143288,
                "explored_percent_lambda": 12.066365007541478,
                "explored_percent_none": 25.641025641025642,
                "kept_percent_concrete": 64.64088397790056,
                "kept_percent_lambda": 35.35911602209945,
                "num_examples": 15,
                "num_explored_concrete": 1652,
                "num_explored_lambda": 320,
                "num_explored_none": 680,
                "num_inputs": 1,
                "num_kept_concrete": 351,
                "num_kept_lambda": 192,
                "num_values_explored": 2652,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 80923
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.91667060088366,
            "num_unique_values": 614,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.73069535151748,
                "explored_percent_lambda": 11.064156742220515,
                "explored_percent_none": 22.205147906262006,
                "kept_percent_concrete": 70.19867549668874,
                "kept_percent_lambda": 29.801324503311257,
                "num_examples": 15,
                "num_explored_concrete": 1737,
                "num_explored_lambda": 288,
                "num_explored_none": 578,
                "num_inputs": 1,
                "num_kept_concrete": 424,
                "num_kept_lambda": 180,
                "num_values_explored": 2603,
                "num_values_kept": 604,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81438
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.98887644009665,
            "num_unique_values": 624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.13986566574476,
                "explored_percent_lambda": 10.94429079415251,
                "explored_percent_none": 22.915843540102728,
                "kept_percent_concrete": 72.8013029315961,
                "kept_percent_lambda": 27.19869706840391,
                "num_examples": 15,
                "num_explored_concrete": 1674,
                "num_explored_lambda": 277,
                "num_explored_none": 580,
                "num_inputs": 1,
                "num_kept_concrete": 447,
                "num_kept_lambda": 167,
                "num_values_explored": 2531,
                "num_values_kept": 614,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 79710
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19538327027112246,
            "num_unique_values": 82,
            "solution": "fn_0(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 69.00584795321637,
                "explored_percent_lambda": 22.80701754385965,
                "explored_percent_none": 8.187134502923977,
                "kept_percent_concrete": 45.833333333333336,
                "kept_percent_lambda": 54.166666666666664,
                "num_examples": 15,
                "num_explored_concrete": 118,
                "num_explored_lambda": 39,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 39,
                "num_values_explored": 171,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 132.9615641431883,
            "num_unique_values": 702,
            "solution": "fn_9(x1, fn_0(fn_4(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.29992841803866,
                "explored_percent_lambda": 9.234073013600574,
                "explored_percent_none": 17.465998568360774,
                "kept_percent_concrete": 75.72254335260115,
                "kept_percent_lambda": 24.277456647398843,
                "num_examples": 15,
                "num_explored_concrete": 2048,
                "num_explored_lambda": 258,
                "num_explored_none": 488,
                "num_inputs": 1,
                "num_kept_concrete": 524,
                "num_kept_lambda": 168,
                "num_values_explored": 2794,
                "num_values_kept": 692,
                "temperature": 1.0,
                "total_num_restarts": 14,
                "total_num_values_explored": 36000
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9819118399173021,
            "num_unique_values": 366,
            "solution": "fn_1((lambda u1: fn_0(fn_4(x1))), Cdr(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 78.2122905027933,
                "explored_percent_lambda": 16.899441340782122,
                "explored_percent_none": 4.888268156424581,
                "kept_percent_concrete": 73.03370786516854,
                "kept_percent_lambda": 26.96629213483146,
                "num_examples": 15,
                "num_explored_concrete": 560,
                "num_explored_lambda": 121,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 260,
                "num_kept_lambda": 96,
                "num_values_explored": 716,
                "num_values_kept": 356,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25267024291679263,
            "num_unique_values": 116,
            "solution": "fn_4(fn_1((lambda u1: fn_0(Cdr(x1))), x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 75.81395348837209,
                "explored_percent_lambda": 18.13953488372093,
                "explored_percent_none": 6.046511627906977,
                "kept_percent_concrete": 65.09433962264151,
                "kept_percent_lambda": 34.905660377358494,
                "num_examples": 15,
                "num_explored_concrete": 163,
                "num_explored_lambda": 39,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 69,
                "num_kept_lambda": 37,
                "num_values_explored": 215,
                "num_values_kept": 106,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 215
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37429809710010886,
            "num_unique_values": 142,
            "solution": "fn_9(fn_4(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 75.09578544061303,
                "explored_percent_lambda": 19.54022988505747,
                "explored_percent_none": 5.363984674329502,
                "kept_percent_concrete": 65.9090909090909,
                "kept_percent_lambda": 34.09090909090909,
                "num_examples": 15,
                "num_explored_concrete": 196,
                "num_explored_lambda": 51,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 87,
                "num_kept_lambda": 45,
                "num_values_explored": 261,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 23.480243802070618,
            "num_unique_values": 638,
            "solution": "fn_1((lambda u1: fn_0(fn_19(x1))), fn_4(Cdr(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.65063187933143,
                "explored_percent_lambda": 12.066856909906237,
                "explored_percent_none": 19.282511210762333,
                "kept_percent_concrete": 69.90445859872611,
                "kept_percent_lambda": 30.095541401273884,
                "num_examples": 15,
                "num_explored_concrete": 1684,
                "num_explored_lambda": 296,
                "num_explored_none": 473,
                "num_inputs": 1,
                "num_kept_concrete": 439,
                "num_kept_lambda": 189,
                "num_values_explored": 2453,
                "num_values_kept": 628,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8170
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25753484293818474,
            "num_unique_values": 115,
            "solution": "fn_4(fn_0(Map((lambda u1: Index(4, x1)), x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.10280373831776,
                "explored_percent_lambda": 17.757009345794394,
                "explored_percent_none": 5.140186915887851,
                "kept_percent_concrete": 67.61904761904762,
                "kept_percent_lambda": 32.38095238095238,
                "num_examples": 15,
                "num_explored_concrete": 165,
                "num_explored_lambda": 38,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 71,
                "num_kept_lambda": 34,
                "num_values_explored": 214,
                "num_values_kept": 105,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 214
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9647491606883705,
            "num_unique_values": 384,
            "solution": "fn_0(fn_19(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 73.46647646219687,
                "explored_percent_lambda": 21.683309557774606,
                "explored_percent_none": 4.85021398002853,
                "kept_percent_concrete": 66.31016042780749,
                "kept_percent_lambda": 33.68983957219251,
                "num_examples": 15,
                "num_explored_concrete": 515,
                "num_explored_lambda": 152,
                "num_explored_none": 34,
                "num_inputs": 1,
                "num_kept_concrete": 248,
                "num_kept_lambda": 126,
                "num_values_explored": 701,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 701
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0546352001838386,
            "num_unique_values": 392,
            "solution": "fn_9(fn_19(x1), fn_0(fn_19(fn_4(x1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.14646464646465,
                "explored_percent_lambda": 18.30808080808081,
                "explored_percent_none": 4.545454545454546,
                "kept_percent_concrete": 70.94240837696336,
                "kept_percent_lambda": 29.05759162303665,
                "num_examples": 15,
                "num_explored_concrete": 611,
                "num_explored_lambda": 145,
                "num_explored_none": 36,
                "num_inputs": 1,
                "num_kept_concrete": 271,
                "num_kept_lambda": 111,
                "num_values_explored": 792,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.24066668376327,
            "num_unique_values": 522,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.77122728958101,
                "explored_percent_lambda": 10.381905821282906,
                "explored_percent_none": 28.846866889136077,
                "kept_percent_concrete": 71.2890625,
                "kept_percent_lambda": 28.7109375,
                "num_examples": 15,
                "num_explored_concrete": 1639,
                "num_explored_lambda": 280,
                "num_explored_none": 778,
                "num_inputs": 1,
                "num_kept_concrete": 365,
                "num_kept_lambda": 147,
                "num_values_explored": 2697,
                "num_values_kept": 512,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85519
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 117.31924606813118,
            "num_unique_values": 245,
            "solution": "fn_10(fn_1((lambda u1: fn_0(Cdr(x1))), x1), fn_6(Index(4, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 50.714966634890374,
                "explored_percent_lambda": 15.72926596758818,
                "explored_percent_none": 33.55576739752145,
                "kept_percent_concrete": 57.4468085106383,
                "kept_percent_lambda": 42.5531914893617,
                "num_examples": 15,
                "num_explored_concrete": 532,
                "num_explored_lambda": 165,
                "num_explored_none": 352,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 100,
                "num_values_explored": 1049,
                "num_values_kept": 235,
                "temperature": 1.0,
                "total_num_restarts": 13,
                "total_num_values_explored": 31665
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34768264926970005,
            "num_unique_values": 153,
            "solution": "fn_12(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 79.03780068728523,
                "explored_percent_lambda": 14.776632302405499,
                "explored_percent_none": 6.185567010309279,
                "kept_percent_concrete": 74.12587412587412,
                "kept_percent_lambda": 25.874125874125873,
                "num_examples": 15,
                "num_explored_concrete": 230,
                "num_explored_lambda": 43,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 37,
                "num_values_explored": 291,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38981048110872507,
            "num_unique_values": 164,
            "solution": "fn_14(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.13504823151125,
                "explored_percent_lambda": 17.684887459807072,
                "explored_percent_none": 4.180064308681672,
                "kept_percent_concrete": 65.58441558441558,
                "kept_percent_lambda": 34.41558441558441,
                "num_examples": 15,
                "num_explored_concrete": 243,
                "num_explored_lambda": 55,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 53,
                "num_values_explored": 311,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 311
            },
            "success": true,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.72475337795913,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.57142857142857,
                "explored_percent_lambda": 10.338345864661655,
                "explored_percent_none": 21.090225563909776,
                "kept_percent_concrete": 69.1542288557214,
                "kept_percent_lambda": 30.845771144278608,
                "num_examples": 15,
                "num_explored_concrete": 1824,
                "num_explored_lambda": 275,
                "num_explored_none": 561,
                "num_inputs": 1,
                "num_kept_concrete": 417,
                "num_kept_lambda": 186,
                "num_values_explored": 2660,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 84370
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4448400167748332,
            "num_unique_values": 173,
            "solution": "fn_16(x1, (lambda u1: ((lambda v1: Greater(2, v1)))(u1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 81.98198198198199,
                "explored_percent_lambda": 14.414414414414415,
                "explored_percent_none": 3.6036036036036037,
                "kept_percent_concrete": 74.84662576687117,
                "kept_percent_lambda": 25.153374233128833,
                "num_examples": 15,
                "num_explored_concrete": 273,
                "num_explored_lambda": 48,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 41,
                "num_values_explored": 333,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 333
            },
            "success": true,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3370178211480379,
            "num_unique_values": 146,
            "solution": "fn_12(x1, 2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 77.66323024054982,
                "explored_percent_lambda": 16.83848797250859,
                "explored_percent_none": 5.498281786941581,
                "kept_percent_concrete": 66.91176470588235,
                "kept_percent_lambda": 33.088235294117645,
                "num_examples": 15,
                "num_explored_concrete": 226,
                "num_explored_lambda": 49,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 45,
                "num_values_explored": 291,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.41892320802435,
            "num_unique_values": 596,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.41826381059752,
                "explored_percent_lambda": 11.649755730928222,
                "explored_percent_none": 20.931980458474257,
                "kept_percent_concrete": 65.8703071672355,
                "kept_percent_lambda": 34.129692832764505,
                "num_examples": 15,
                "num_explored_concrete": 1794,
                "num_explored_lambda": 310,
                "num_explored_none": 557,
                "num_inputs": 1,
                "num_kept_concrete": 386,
                "num_kept_lambda": 200,
                "num_values_explored": 2661,
                "num_values_kept": 586,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82054
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.40872060926631093,
            "num_unique_values": 159,
            "solution": "fn_14(x1, 2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.45659163987138,
                "explored_percent_lambda": 18.006430868167204,
                "explored_percent_none": 3.536977491961415,
                "kept_percent_concrete": 65.1006711409396,
                "kept_percent_lambda": 34.899328859060404,
                "num_examples": 15,
                "num_explored_concrete": 244,
                "num_explored_lambda": 56,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 52,
                "num_values_explored": 311,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 311
            },
            "success": true,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3609196627512574,
            "num_unique_values": 153,
            "solution": "fn_12(x1, 3)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 77.66323024054982,
                "explored_percent_lambda": 17.52577319587629,
                "explored_percent_none": 4.810996563573883,
                "kept_percent_concrete": 69.23076923076923,
                "kept_percent_lambda": 30.76923076923077,
                "num_examples": 15,
                "num_explored_concrete": 226,
                "num_explored_lambda": 51,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 44,
                "num_values_explored": 291,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8069390258752,
            "num_unique_values": 600,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.96463272444618,
                "explored_percent_lambda": 11.77613680528566,
                "explored_percent_none": 21.259230470268168,
                "kept_percent_concrete": 67.62711864406779,
                "kept_percent_lambda": 32.3728813559322,
                "num_examples": 15,
                "num_explored_concrete": 1723,
                "num_explored_lambda": 303,
                "num_explored_none": 547,
                "num_inputs": 1,
                "num_kept_concrete": 399,
                "num_kept_lambda": 191,
                "num_values_explored": 2573,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81801
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.443984838668257,
            "num_unique_values": 178,
            "solution": "fn_16(x1, (lambda u1: ((lambda v1: Greater(4, v1)))(u1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 76.80722891566265,
                "explored_percent_lambda": 18.072289156626507,
                "explored_percent_none": 5.120481927710843,
                "kept_percent_concrete": 66.07142857142857,
                "kept_percent_lambda": 33.92857142857143,
                "num_examples": 15,
                "num_explored_concrete": 255,
                "num_explored_lambda": 60,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 111,
                "num_kept_lambda": 57,
                "num_values_explored": 332,
                "num_values_kept": 168,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 332
            },
            "success": true,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.49392121005803347,
            "num_unique_values": 200,
            "solution": "fn_23(Map((lambda u1: ((lambda v1: Subtract(v1, 1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.97530864197531,
                "explored_percent_lambda": 20.493827160493826,
                "explored_percent_none": 17.530864197530864,
                "kept_percent_concrete": 62.63157894736842,
                "kept_percent_lambda": 37.36842105263158,
                "num_examples": 15,
                "num_explored_concrete": 251,
                "num_explored_lambda": 83,
                "num_explored_none": 71,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 71,
                "num_values_explored": 405,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 405
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6665488658473,
            "num_unique_values": 477,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.6306973120374,
                "explored_percent_lambda": 16.94585118815738,
                "explored_percent_none": 39.42345149980522,
                "kept_percent_concrete": 53.53319057815846,
                "kept_percent_lambda": 46.46680942184154,
                "num_examples": 15,
                "num_explored_concrete": 1120,
                "num_explored_lambda": 435,
                "num_explored_none": 1012,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 217,
                "num_values_explored": 2567,
                "num_values_kept": 467,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81948
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6646291753277,
            "num_unique_values": 533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.66717674062739,
                "explored_percent_lambda": 15.340474368783473,
                "explored_percent_none": 29.992348890589135,
                "kept_percent_concrete": 57.74378585086042,
                "kept_percent_lambda": 42.25621414913958,
                "num_examples": 15,
                "num_explored_concrete": 1429,
                "num_explored_lambda": 401,
                "num_explored_none": 784,
                "num_inputs": 1,
                "num_kept_concrete": 302,
                "num_kept_lambda": 221,
                "num_values_explored": 2614,
                "num_values_kept": 523,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81577
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2547009950503707,
            "num_unique_values": 78,
            "solution": "Map((lambda u1: If(IsEmpty(x1), 0, 1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.38709677419355,
                "explored_percent_lambda": 20.64516129032258,
                "explored_percent_none": 10.96774193548387,
                "kept_percent_concrete": 54.411764705882355,
                "kept_percent_lambda": 45.588235294117645,
                "num_examples": 15,
                "num_explored_concrete": 106,
                "num_explored_lambda": 32,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 37,
                "num_kept_lambda": 31,
                "num_values_explored": 155,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1186442538164556,
            "num_unique_values": 392,
            "solution": "fn_24(Map((lambda u1: ((lambda v1: fn_29(v1, 1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 69.394261424017,
                "explored_percent_lambda": 17.85334750265675,
                "explored_percent_none": 12.75239107332625,
                "kept_percent_concrete": 72.5130890052356,
                "kept_percent_lambda": 27.486910994764397,
                "num_examples": 15,
                "num_explored_concrete": 653,
                "num_explored_lambda": 168,
                "num_explored_none": 120,
                "num_inputs": 1,
                "num_kept_concrete": 277,
                "num_kept_lambda": 105,
                "num_values_explored": 941,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 941
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.1785505008884,
            "num_unique_values": 468,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.10718492343934,
                "explored_percent_lambda": 18.296034550451513,
                "explored_percent_none": 40.59678052610915,
                "kept_percent_concrete": 51.7467248908297,
                "kept_percent_lambda": 48.2532751091703,
                "num_examples": 15,
                "num_explored_concrete": 1047,
                "num_explored_lambda": 466,
                "num_explored_none": 1034,
                "num_inputs": 1,
                "num_kept_concrete": 237,
                "num_kept_lambda": 221,
                "num_values_explored": 2547,
                "num_values_kept": 458,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81083
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.086265233810991,
            "num_unique_values": 351,
            "solution": "fn_24(Map((lambda u1: ((lambda v1: fn_21(v1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 62.48671625929862,
                "explored_percent_lambda": 17.534537725823593,
                "explored_percent_none": 19.97874601487779,
                "kept_percent_concrete": 69.50146627565982,
                "kept_percent_lambda": 30.498533724340177,
                "num_examples": 15,
                "num_explored_concrete": 588,
                "num_explored_lambda": 165,
                "num_explored_none": 188,
                "num_inputs": 1,
                "num_kept_concrete": 237,
                "num_kept_lambda": 104,
                "num_values_explored": 941,
                "num_values_kept": 341,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 941
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.5756997060962,
            "num_unique_values": 470,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.147239263803684,
                "explored_percent_lambda": 16.5260736196319,
                "explored_percent_none": 31.32668711656442,
                "kept_percent_concrete": 56.95652173913044,
                "kept_percent_lambda": 43.04347826086956,
                "num_examples": 15,
                "num_explored_concrete": 1360,
                "num_explored_lambda": 431,
                "num_explored_none": 817,
                "num_inputs": 1,
                "num_kept_concrete": 262,
                "num_kept_lambda": 198,
                "num_values_explored": 2608,
                "num_values_kept": 460,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 81938
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.576254352927208,
            "num_unique_values": 161,
            "solution": "fn_24(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 64.72019464720195,
                "explored_percent_lambda": 15.571776155717762,
                "explored_percent_none": 19.708029197080293,
                "kept_percent_concrete": 60.264900662251655,
                "kept_percent_lambda": 39.735099337748345,
                "num_examples": 15,
                "num_explored_concrete": 266,
                "num_explored_lambda": 64,
                "num_explored_none": 81,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 60,
                "num_values_explored": 411,
                "num_values_kept": 151,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10694177821278572,
            "num_unique_values": 56,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 60.57692307692308,
                "explored_percent_lambda": 32.69230769230769,
                "explored_percent_none": 6.730769230769231,
                "kept_percent_concrete": 26.08695652173913,
                "kept_percent_lambda": 73.91304347826087,
                "num_examples": 15,
                "num_explored_concrete": 63,
                "num_explored_lambda": 34,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 34,
                "num_values_explored": 104,
                "num_values_kept": 46,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 104
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23084843205288053,
            "num_unique_values": 104,
            "solution": "fn_4(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 67.77251184834124,
                "explored_percent_lambda": 20.85308056872038,
                "explored_percent_none": 11.374407582938389,
                "kept_percent_concrete": 56.38297872340426,
                "kept_percent_lambda": 43.61702127659574,
                "num_examples": 15,
                "num_explored_concrete": 143,
                "num_explored_lambda": 44,
                "num_explored_none": 24,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 41,
                "num_values_explored": 211,
                "num_values_kept": 94,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 211
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5072043230757117,
            "num_unique_values": 211,
            "solution": "fn_19(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 75.34626038781164,
                "explored_percent_lambda": 19.667590027700832,
                "explored_percent_none": 4.986149584487535,
                "kept_percent_concrete": 66.66666666666667,
                "kept_percent_lambda": 33.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 272,
                "num_explored_lambda": 71,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 67,
                "num_values_explored": 361,
                "num_values_kept": 201,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 361
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.171847451012582,
            "num_unique_values": 110,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.908232118758434,
                "explored_percent_lambda": 15.92442645074224,
                "explored_percent_none": 36.16734143049933,
                "kept_percent_concrete": 33.0,
                "kept_percent_lambda": 67.0,
                "num_examples": 15,
                "num_explored_concrete": 355,
                "num_explored_lambda": 118,
                "num_explored_none": 268,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 67,
                "num_values_explored": 741,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3391
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09815544774755836,
            "num_unique_values": 49,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 77.87610619469027,
                "explored_percent_lambda": 17.699115044247787,
                "explored_percent_none": 4.424778761061947,
                "kept_percent_concrete": 48.717948717948715,
                "kept_percent_lambda": 51.282051282051285,
                "num_examples": 15,
                "num_explored_concrete": 88,
                "num_explored_lambda": 20,
                "num_explored_none": 5,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 20,
                "num_values_explored": 113,
                "num_values_kept": 39,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 113
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13527271384373307,
            "num_unique_values": 70,
            "solution": "Index(3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 75.177304964539,
                "explored_percent_lambda": 19.148936170212767,
                "explored_percent_none": 5.673758865248227,
                "kept_percent_concrete": 55.0,
                "kept_percent_lambda": 45.0,
                "num_examples": 15,
                "num_explored_concrete": 106,
                "num_explored_lambda": 27,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 27,
                "num_values_explored": 141,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 141
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.74474082514644,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.726211531659004,
                "explored_percent_lambda": 7.110010611956137,
                "explored_percent_none": 31.16377785638486,
                "kept_percent_concrete": 80.61420345489444,
                "kept_percent_lambda": 19.385796545105567,
                "num_examples": 15,
                "num_explored_concrete": 1745,
                "num_explored_lambda": 201,
                "num_explored_none": 881,
                "num_inputs": 1,
                "num_kept_concrete": 420,
                "num_kept_lambda": 101,
                "num_values_explored": 2827,
                "num_values_kept": 521,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88066
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.681042826268822,
            "num_unique_values": 275,
            "solution": "Subtract(1, fn_21(Car(x1), 2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 75.32228360957643,
                "explored_percent_lambda": 10.128913443830571,
                "explored_percent_none": 14.548802946593002,
                "kept_percent_concrete": 82.26415094339623,
                "kept_percent_lambda": 17.735849056603772,
                "num_examples": 15,
                "num_explored_concrete": 409,
                "num_explored_lambda": 55,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 47,
                "num_values_explored": 543,
                "num_values_kept": 265,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 543
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.03464196808636,
            "num_unique_values": 410,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.96686746987952,
                "explored_percent_lambda": 13.78012048192771,
                "explored_percent_none": 38.25301204819277,
                "kept_percent_concrete": 57.25,
                "kept_percent_lambda": 42.75,
                "num_examples": 15,
                "num_explored_concrete": 1274,
                "num_explored_lambda": 366,
                "num_explored_none": 1016,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 171,
                "num_values_explored": 2656,
                "num_values_kept": 400,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82981
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22910208441317081,
            "num_unique_values": 92,
            "solution": "fn_3(Cdr(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.8019801980198,
                "explored_percent_lambda": 21.287128712871286,
                "explored_percent_none": 8.910891089108912,
                "kept_percent_concrete": 51.21951219512195,
                "kept_percent_lambda": 48.78048780487805,
                "num_examples": 15,
                "num_explored_concrete": 141,
                "num_explored_lambda": 43,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 40,
                "num_values_explored": 202,
                "num_values_kept": 82,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 202
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26002970710396767,
            "num_unique_values": 106,
            "solution": "fn_5(fn_4(Cdr(x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 67.40088105726872,
                "explored_percent_lambda": 24.229074889867842,
                "explored_percent_none": 8.370044052863436,
                "kept_percent_concrete": 48.958333333333336,
                "kept_percent_lambda": 51.041666666666664,
                "num_examples": 15,
                "num_explored_concrete": 153,
                "num_explored_lambda": 55,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 47,
                "num_kept_lambda": 49,
                "num_values_explored": 227,
                "num_values_kept": 96,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 227
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12983356416225433,
            "num_unique_values": 64,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 62.595419847328245,
                "explored_percent_lambda": 25.954198473282442,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 40.74074074074074,
                "kept_percent_lambda": 59.25925925925926,
                "num_examples": 15,
                "num_explored_concrete": 82,
                "num_explored_lambda": 34,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 32,
                "num_values_explored": 131,
                "num_values_kept": 54,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1297491709701717,
            "num_unique_values": 64,
            "solution": "Cons(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 61.06870229007634,
                "explored_percent_lambda": 24.427480916030536,
                "explored_percent_none": 14.50381679389313,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 15,
                "num_explored_concrete": 80,
                "num_explored_lambda": 32,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 30,
                "num_values_explored": 131,
                "num_values_kept": 54,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12555368710309267,
            "num_unique_values": 62,
            "solution": "Cons(3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 65.64885496183206,
                "explored_percent_lambda": 20.610687022900763,
                "explored_percent_none": 13.740458015267176,
                "kept_percent_concrete": 51.92307692307692,
                "kept_percent_lambda": 48.07692307692308,
                "num_examples": 15,
                "num_explored_concrete": 86,
                "num_explored_lambda": 27,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 25,
                "num_values_explored": 131,
                "num_values_kept": 52,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11125900130718946,
            "num_unique_values": 61,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 53.84615384615385,
                "explored_percent_lambda": 40.38461538461539,
                "explored_percent_none": 5.769230769230769,
                "kept_percent_concrete": 17.647058823529413,
                "kept_percent_lambda": 82.3529411764706,
                "num_examples": 15,
                "num_explored_concrete": 56,
                "num_explored_lambda": 42,
                "num_explored_none": 6,
                "num_inputs": 1,
                "num_kept_concrete": 9,
                "num_kept_lambda": 42,
                "num_values_explored": 104,
                "num_values_kept": 51,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 104
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14808416878804564,
            "num_unique_values": 76,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 67.97385620915033,
                "explored_percent_lambda": 23.529411764705884,
                "explored_percent_none": 8.49673202614379,
                "kept_percent_concrete": 46.96969696969697,
                "kept_percent_lambda": 53.03030303030303,
                "num_examples": 15,
                "num_explored_concrete": 104,
                "num_explored_lambda": 36,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 31,
                "num_kept_lambda": 35,
                "num_values_explored": 153,
                "num_values_kept": 66,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16102397674694657,
            "num_unique_values": 78,
            "solution": "Map((lambda u1: Index(2, x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.63636363636363,
                "explored_percent_lambda": 26.623376623376622,
                "explored_percent_none": 9.74025974025974,
                "kept_percent_concrete": 42.64705882352941,
                "kept_percent_lambda": 57.35294117647059,
                "num_examples": 15,
                "num_explored_concrete": 98,
                "num_explored_lambda": 41,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 39,
                "num_values_explored": 154,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2977811428718269,
            "num_unique_values": 132,
            "solution": "fn_9(x1, [])",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 76.62835249042146,
                "explored_percent_lambda": 17.24137931034483,
                "explored_percent_none": 6.130268199233717,
                "kept_percent_concrete": 65.57377049180327,
                "kept_percent_lambda": 34.42622950819672,
                "num_examples": 15,
                "num_explored_concrete": 200,
                "num_explored_lambda": 45,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 42,
                "num_values_explored": 261,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21800711378455162,
            "num_unique_values": 96,
            "solution": "fn_3(x1, [])",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 79.60199004975124,
                "explored_percent_lambda": 14.427860696517413,
                "explored_percent_none": 5.970149253731344,
                "kept_percent_concrete": 66.27906976744185,
                "kept_percent_lambda": 33.72093023255814,
                "num_examples": 15,
                "num_explored_concrete": 160,
                "num_explored_lambda": 29,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 57,
                "num_kept_lambda": 29,
                "num_values_explored": 201,
                "num_values_kept": 86,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 201
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22767817368730903,
            "num_unique_values": 104,
            "solution": "fn_3(Cdr(x1), [])",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 72.9064039408867,
                "explored_percent_lambda": 20.689655172413794,
                "explored_percent_none": 6.403940886699507,
                "kept_percent_concrete": 60.638297872340424,
                "kept_percent_lambda": 39.361702127659576,
                "num_examples": 15,
                "num_explored_concrete": 148,
                "num_explored_lambda": 42,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 57,
                "num_kept_lambda": 37,
                "num_values_explored": 203,
                "num_values_kept": 94,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 203
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.5961538461538461
}