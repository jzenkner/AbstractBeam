{
    "num_operations": 53,
    "num_tasks": 109,
    "num_tasks_solved": 82,
    "results": [
        {
            "elapsed_time": 1.7012372580356896,
            "num_unique_values": 127,
            "solution": "Map((lambda u1: ((lambda v1: Add(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 31.004366812227076,
                "explored_percent_lambda": 19.35953420669578,
                "explored_percent_none": 49.63609898107715,
                "kept_percent_concrete": 29.914529914529915,
                "kept_percent_lambda": 70.08547008547009,
                "num_examples": 15,
                "num_explored_concrete": 213,
                "num_explored_lambda": 133,
                "num_explored_none": 341,
                "num_inputs": 1,
                "num_kept_concrete": 35,
                "num_kept_lambda": 82,
                "num_values_explored": 687,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 687
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=1',\n    inputs_dict={'x1': [[3, 4, 4, 13, 6], [], [0, 2, 12, 2, 11, 0], [4, 12, 15], [15, 2, 16, 2, 5, 15, 6], [8, 13, 6], [0, 11, 7, 9, 3], [9, 10, 4], [9, 1, 13, 10, 13], [9, 6], [], [7, 9, 8, 1, 12, 3], [4, 14, 1], [6, 2, 13], [14]]},\n    outputs=[[4, 5, 5, 14, 7], [], [1, 3, 13, 3, 12, 1], [5, 13, 16], [16, 3, 17, 3, 6, 16, 7], [9, 14, 7], [1, 12, 8, 10, 4], [10, 11, 5], [10, 2, 14, 11, 14], [10, 7], [], [8, 10, 9, 2, 13, 4], [5, 15, 2], [7, 3, 14], [15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.202810369897634,
            "num_unique_values": 357,
            "solution": "fn_23(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 40.76433121019108,
                "explored_percent_lambda": 14.585987261146498,
                "explored_percent_none": 44.64968152866242,
                "kept_percent_concrete": 59.36599423631124,
                "kept_percent_lambda": 40.63400576368876,
                "num_examples": 15,
                "num_explored_concrete": 640,
                "num_explored_lambda": 229,
                "num_explored_none": 701,
                "num_inputs": 1,
                "num_kept_concrete": 206,
                "num_kept_lambda": 141,
                "num_values_explored": 1570,
                "num_values_kept": 347,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1570
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=3',\n    inputs_dict={'x1': [[], [3], [9, 14, 9], [7, 11, 6, 14, 4], [12, 11, 1, 7, 8, 4, 5], [8, 6, 10], [1, 9, 7, 8], [], [7, 14, 1], [11, 14, 7], [2, 14, 15], [9, 2, 11, 4, 13, 11], [], [8, 8], [2, 4, 6, 9, 13]]},\n    outputs=[[], [6], [12, 17, 12], [10, 14, 9, 17, 7], [15, 14, 4, 10, 11, 7, 8], [11, 9, 13], [4, 12, 10, 11], [], [10, 17, 4], [14, 17, 10], [5, 17, 18], [12, 5, 14, 7, 16, 14], [], [11, 11], [5, 7, 9, 12, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.776856838259846,
            "num_unique_values": 136,
            "solution": "Map((lambda u1: ((lambda v1: Add(4, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 32.72727272727273,
                "explored_percent_lambda": 20.83916083916084,
                "explored_percent_none": 46.43356643356643,
                "kept_percent_concrete": 30.952380952380953,
                "kept_percent_lambda": 69.04761904761905,
                "num_examples": 15,
                "num_explored_concrete": 234,
                "num_explored_lambda": 149,
                "num_explored_none": 332,
                "num_inputs": 1,
                "num_kept_concrete": 39,
                "num_kept_lambda": 87,
                "num_values_explored": 715,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 715
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=4',\n    inputs_dict={'x1': [[16, 10, 7, 12, 13, 3], [3, 2, 8, 8, 7, 0, 9], [3], [9, 3, 7, 14], [14, 12, 9, 15, 7], [15, 7, 9], [], [0, 3, 8, 15, 3, 3, 0], [9, 10, 10], [], [11, 11, 1, 7, 3, 2], [0], [10, 8], [4, 7, 15, 3, 2], []]},\n    outputs=[[20, 14, 11, 16, 17, 7], [7, 6, 12, 12, 11, 4, 13], [7], [13, 7, 11, 18], [18, 16, 13, 19, 11], [19, 11, 13], [], [4, 7, 12, 19, 7, 7, 4], [13, 14, 14], [], [15, 15, 5, 11, 7, 6], [4], [14, 12], [8, 11, 19, 7, 6], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.196948881726712,
            "num_unique_values": 233,
            "solution": "fn_10(x1, fn_3(x1, []))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 49.91694352159468,
                "explored_percent_lambda": 13.870431893687707,
                "explored_percent_none": 36.21262458471761,
                "kept_percent_concrete": 58.29596412556054,
                "kept_percent_lambda": 41.70403587443946,
                "num_examples": 15,
                "num_explored_concrete": 601,
                "num_explored_lambda": 167,
                "num_explored_none": 436,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 93,
                "num_values_explored": 1204,
                "num_values_kept": 223,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1204
            },
            "success": true,
            "task": "Task(\n    name='append-index-k with k=2',\n    inputs_dict={'x1': [[11, 5, 15, 11], [3, 15], [0, 6, 13, 5], [6, 2, 7, 12, 8, 14, 16, 4, 12], [4, 6, 10, 13], [5, 1, 1, 13, 5, 0, 1], [14, 12, 12, 15, 5, 12, 2, 8, 2], [11, 4], [1, 7, 8, 8, 1, 5, 15, 6], [7, 12, 7, 8, 13, 11, 8, 4], [15, 0, 11, 14], [13, 12, 1, 2, 5, 1, 14], [1, 3, 1, 4, 15], [4, 11, 8, 4, 10, 11, 4], [12, 14, 9]]},\n    outputs=[[11, 5, 15, 11, 5], [3, 15, 15], [0, 6, 13, 5, 6], [6, 2, 7, 12, 8, 14, 16, 4, 12, 2], [4, 6, 10, 13, 6], [5, 1, 1, 13, 5, 0, 1, 1], [14, 12, 12, 15, 5, 12, 2, 8, 2, 12], [11, 4, 4], [1, 7, 8, 8, 1, 5, 15, 6, 7], [7, 12, 7, 8, 13, 11, 8, 4, 12], [15, 0, 11, 14, 0], [13, 12, 1, 2, 5, 1, 14, 12], [1, 3, 1, 4, 15, 3], [4, 11, 8, 4, 10, 11, 4, 11], [12, 14, 9, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.962090458255261,
            "num_unique_values": 231,
            "solution": "fn_10(x1, fn_4(fn_0(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 53.73406193078324,
                "explored_percent_lambda": 13.66120218579235,
                "explored_percent_none": 32.60473588342441,
                "kept_percent_concrete": 60.633484162895925,
                "kept_percent_lambda": 39.366515837104075,
                "num_examples": 15,
                "num_explored_concrete": 590,
                "num_explored_lambda": 150,
                "num_explored_none": 358,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 87,
                "num_values_explored": 1098,
                "num_values_kept": 221,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1098
            },
            "success": true,
            "task": "Task(\n    name='append-index-k with k=3',\n    inputs_dict={'x1': [[0, 13, 12, 12], [6, 8, 2, 6, 7, 14, 9], [6, 15, 6, 15, 5, 13], [15, 13, 7, 2, 4, 10], [1, 2, 1, 7, 12, 15, 12, 13, 11, 4], [9, 5, 2, 15, 8, 1], [3, 13, 5, 7, 4, 3, 3], [6, 14, 12, 4, 4, 15, 3, 1, 4], [14, 2, 10, 6, 7, 9, 14, 2], [11, 11, 2, 9], [8, 6, 13, 11, 15, 2], [15, 0, 13, 10, 7, 1, 14, 5, 10, 10], [11, 0, 12, 10, 15, 13], [14, 10, 10, 14, 14, 2, 9], [12, 7, 16, 14]]},\n    outputs=[[0, 13, 12, 12, 12], [6, 8, 2, 6, 7, 14, 9, 2], [6, 15, 6, 15, 5, 13, 6], [15, 13, 7, 2, 4, 10, 7], [1, 2, 1, 7, 12, 15, 12, 13, 11, 4, 1], [9, 5, 2, 15, 8, 1, 2], [3, 13, 5, 7, 4, 3, 3, 5], [6, 14, 12, 4, 4, 15, 3, 1, 4, 12], [14, 2, 10, 6, 7, 9, 14, 2, 10], [11, 11, 2, 9, 2], [8, 6, 13, 11, 15, 2, 13], [15, 0, 13, 10, 7, 1, 14, 5, 10, 10, 13], [11, 0, 12, 10, 15, 13, 12], [14, 10, 10, 14, 14, 2, 9, 10], [12, 7, 16, 14, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6309100380167365,
            "num_unique_values": 309,
            "solution": "fn_17(x1, Index(3, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 57.62170790103751,
                "explored_percent_lambda": 11.811652035115722,
                "explored_percent_none": 30.56664006384677,
                "kept_percent_concrete": 68.22742474916387,
                "kept_percent_lambda": 31.77257525083612,
                "num_examples": 15,
                "num_explored_concrete": 722,
                "num_explored_lambda": 148,
                "num_explored_none": 383,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 95,
                "num_values_explored": 1253,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1253
            },
            "success": true,
            "task": "Task(\n    name='append-index-k with k=4',\n    inputs_dict={'x1': [[2, 3, 13, 14, 11, 14, 14, 0, 5], [12, 14, 1, 8, 0, 5, 7, 3], [2, 4, 8, 9, 3], [5, 2, 13, 3, 0, 8], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7], [8, 1, 16, 6, 16], [5, 11, 8, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7], [14, 7, 10, 3, 1, 4], [3, 5, 4, 4, 2, 0, 1, 8], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7], [8, 13, 11, 9, 0, 13, 6, 16, 12], [5, 3, 7, 1, 14, 0, 0, 2], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16]]},\n    outputs=[[2, 3, 13, 14, 11, 14, 14, 0, 5, 14], [12, 14, 1, 8, 0, 5, 7, 3, 8], [2, 4, 8, 9, 3, 9], [5, 2, 13, 3, 0, 8, 3], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7, 9], [8, 1, 16, 6, 16, 6], [5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7, 9], [14, 7, 10, 3, 1, 4, 3], [3, 5, 4, 4, 2, 0, 1, 8, 4], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7, 14], [8, 13, 11, 9, 0, 13, 6, 16, 12, 9], [5, 3, 7, 1, 14, 0, 0, 2, 1], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4, 15], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.9110564086586237,
            "num_unique_values": 291,
            "solution": "fn_17(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 35.5800388852884,
                "explored_percent_lambda": 11.600777705767985,
                "explored_percent_none": 52.819183408943616,
                "kept_percent_concrete": 61.56583629893238,
                "kept_percent_lambda": 38.43416370106762,
                "num_examples": 15,
                "num_explored_concrete": 549,
                "num_explored_lambda": 179,
                "num_explored_none": 815,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 108,
                "num_values_explored": 1543,
                "num_values_kept": 281,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1543
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=0',\n    inputs_dict={'x1': [[0, 14], [4, 0], [], [7, 7, 5], [3, 16, 10, 0, 8, 6, 4], [7, 7, 13, 12], [2, 2, 9], [14, 1, 4, 15, 11], [6, 4, 9], [15, 16], [3, 5], [], [], [5, 15, 4, 3], [8, 10, 0]]},\n    outputs=[[0, 14, 0], [4, 0, 0], [0], [7, 7, 5, 0], [3, 16, 10, 0, 8, 6, 4, 0], [7, 7, 13, 12, 0], [2, 2, 9, 0], [14, 1, 4, 15, 11, 0], [6, 4, 9, 0], [15, 16, 0], [3, 5, 0], [0], [0], [5, 15, 4, 3, 0], [8, 10, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.9116918300278485,
            "num_unique_values": 293,
            "solution": "fn_17(x1, 3)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 38.218205293737896,
                "explored_percent_lambda": 10.78114912846998,
                "explored_percent_none": 51.00064557779213,
                "kept_percent_concrete": 61.130742049469966,
                "kept_percent_lambda": 38.869257950530034,
                "num_examples": 15,
                "num_explored_concrete": 592,
                "num_explored_lambda": 167,
                "num_explored_none": 790,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 110,
                "num_values_explored": 1549,
                "num_values_kept": 283,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1549
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=3',\n    inputs_dict={'x1': [[7, 14, 9], [6, 15, 6], [5, 13, 8, 15, 13, 7, 2], [10, 16], [], [1], [12, 15, 12], [11, 4, 7, 9, 5, 2], [8, 1, 9, 3, 13, 5, 7], [3, 3], [6, 14, 12, 4, 4, 15], [1], [12, 14], [], [6, 7, 9, 14]]},\n    outputs=[[7, 14, 9, 3], [6, 15, 6, 3], [5, 13, 8, 15, 13, 7, 2, 3], [10, 16, 3], [3], [1, 3], [12, 15, 12, 3], [11, 4, 7, 9, 5, 2, 3], [8, 1, 9, 3, 13, 5, 7, 3], [3, 3, 3], [6, 14, 12, 4, 4, 15, 3], [1, 3], [12, 14, 3], [3], [6, 7, 9, 14, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.9585135970264673,
            "num_unique_values": 295,
            "solution": "fn_17(x1, 4)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 36.61971830985915,
                "explored_percent_lambda": 11.331626120358514,
                "explored_percent_none": 52.04865556978233,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 15,
                "num_explored_concrete": 572,
                "num_explored_lambda": 177,
                "num_explored_none": 813,
                "num_inputs": 1,
                "num_kept_concrete": 171,
                "num_kept_lambda": 114,
                "num_values_explored": 1562,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1562
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=4',\n    inputs_dict={'x1': [[3], [11, 2, 9, 8, 8], [13, 11], [2, 16, 15, 0, 13, 10, 7], [], [5, 10, 10, 6, 11, 0], [10, 15, 13, 8, 14, 10], [14, 14, 2, 9, 2], [7, 16, 14, 12, 2], [13], [11, 14, 14, 0, 5, 10], [14, 1, 8, 0, 5, 7], [3], [], [8, 9]]},\n    outputs=[[3, 4], [11, 2, 9, 8, 8, 4], [13, 11, 4], [2, 16, 15, 0, 13, 10, 7, 4], [4], [5, 10, 10, 6, 11, 0, 4], [10, 15, 13, 8, 14, 10, 4], [14, 14, 2, 9, 2, 4], [7, 16, 14, 12, 2, 4], [13, 4], [11, 14, 14, 0, 5, 10, 4], [14, 1, 8, 0, 5, 7, 4], [3, 4], [4], [8, 9, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6821494130417705,
            "num_unique_values": 214,
            "solution": "fn_10(x1, fn_6(5))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 33.88594164456234,
                "explored_percent_lambda": 12.0026525198939,
                "explored_percent_none": 54.11140583554376,
                "kept_percent_concrete": 51.96078431372549,
                "kept_percent_lambda": 48.03921568627451,
                "num_examples": 15,
                "num_explored_concrete": 511,
                "num_explored_lambda": 181,
                "num_explored_none": 816,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 98,
                "num_values_explored": 1508,
                "num_values_kept": 204,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1508
            },
            "success": true,
            "task": "Task(\n    name='append-k with k=5',\n    inputs_dict={'x1': [[5], [2, 13], [0], [15, 0, 13], [9], [2, 1, 16, 7, 11, 7], [8], [], [6, 16, 1, 5, 11, 8, 5], [9, 14, 6, 9, 8, 2], [13, 3], [5, 14, 7], [3, 1, 4, 9], [5], [4, 2]]},\n    outputs=[[5, 5], [2, 13, 5], [0, 5], [15, 0, 13, 5], [9, 5], [2, 1, 16, 7, 11, 7, 5], [8, 5], [5], [6, 16, 1, 5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5], [13, 3, 5], [5, 14, 7, 5], [3, 1, 4, 9, 5], [5, 5], [4, 2, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.774717607069761,
            "num_unique_values": 608,
            "solution": "Map((lambda u1: ((lambda v1: fn_29(v1, 1)))(u1)), fn_24(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.55533199195171,
                "explored_percent_lambda": 11.569416498993963,
                "explored_percent_none": 45.87525150905432,
                "kept_percent_concrete": 60.03344481605351,
                "kept_percent_lambda": 39.96655518394649,
                "num_examples": 15,
                "num_explored_concrete": 1269,
                "num_explored_lambda": 345,
                "num_explored_none": 1368,
                "num_inputs": 1,
                "num_kept_concrete": 359,
                "num_kept_lambda": 239,
                "num_values_explored": 2982,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2982
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=0',\n    inputs_dict={'x1': [[11, 11], [10, 6, 8, 4, 6, 6, 7], [1, 14, 0, 12, 14], [], [3, 3, 3, 3, 13, 14, 9], [3, 10, 8, 13, 11, 15], [10, 15, 5, 16, 9, 7, 9], [12, 2, 7, 1, 6], [0, 5, 6, 15, 0, 13], [1, 14, 12, 8, 4, 3, 12], [-1, -1, 13], [0, 0, 0], [5, 2, 5, 8, 2, 2], [12], [10, 16]]},\n    outputs=[[1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [0, 0, 1], [1, 1, 1], [1, 1, 1, 1, 1, 1], [1], [1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.056230154354125,
            "num_unique_values": 738,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.489720611491826,
                "explored_percent_lambda": 12.783342119135478,
                "explored_percent_none": 43.72693726937269,
                "kept_percent_concrete": 60.989010989010985,
                "kept_percent_lambda": 39.010989010989015,
                "num_examples": 15,
                "num_explored_concrete": 1650,
                "num_explored_lambda": 485,
                "num_explored_none": 1659,
                "num_inputs": 1,
                "num_kept_concrete": 444,
                "num_kept_lambda": 284,
                "num_values_explored": 3794,
                "num_values_kept": 728,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11394
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=1',\n    inputs_dict={'x1': [[], [2, 5, 11], [], [6, 1, 3, 4, 15, 3], [12, 5, 7, 7, 2], [3, 3, 3, 3], [3, 3, 3, 3], [], [4, 4, 4, 0, 7, 4], [4], [6, 0, 1], [-3, -3], [1, 5, 1, 5, 6], [1, 2, 15, 11, 14, 1], [4, 15, 1, 15, 13, 10]]},\n    outputs=[[], [1, 1, 1], [], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [], [1, 1, 1, 0, 1, 1], [1], [1, 0, 1], [0, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.059319763910025,
            "num_unique_values": 760,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.27814569536424,
                "explored_percent_lambda": 12.71523178807947,
                "explored_percent_none": 41.00662251655629,
                "kept_percent_concrete": 63.2,
                "kept_percent_lambda": 36.8,
                "num_examples": 15,
                "num_explored_concrete": 1747,
                "num_explored_lambda": 480,
                "num_explored_none": 1548,
                "num_inputs": 1,
                "num_kept_concrete": 474,
                "num_kept_lambda": 276,
                "num_values_explored": 3775,
                "num_values_kept": 750,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11220
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=4',\n    inputs_dict={'x1': [[], [7, 14, 7, 0], [7, 10, 16], [16, 16, 15, 13, 8], [7], [5, 15, 2, 15, 1, 10, 5], [], [12, 6, 15, 6, 14, 8, 6], [12, 13], [3], [], [15, 3, 3, 1, 3], [4], [2, 0, 1, 15, 2, 4, 0], [2, 15]]},\n    outputs=[[], [1, 1, 1, 0], [1, 1, 1], [1, 1, 1, 1, 1], [1], [1, 1, 0, 1, 0, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1], [0], [], [1, 0, 0, 0, 0], [1], [0, 0, 0, 1, 0, 1, 0], [0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.059573608916253,
            "num_unique_values": 758,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.862360316162444,
                "explored_percent_lambda": 13.545925320250749,
                "explored_percent_none": 41.59171436358681,
                "kept_percent_concrete": 61.898395721925134,
                "kept_percent_lambda": 38.101604278074866,
                "num_examples": 15,
                "num_explored_concrete": 1646,
                "num_explored_lambda": 497,
                "num_explored_none": 1526,
                "num_inputs": 1,
                "num_kept_concrete": 463,
                "num_kept_lambda": 285,
                "num_values_explored": 3669,
                "num_values_kept": 748,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11012
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=3',\n    inputs_dict={'x1': [[5, 8, 8, 9, 4, 4], [11, 0, 1], [3, 3, 7, 3, 14], [1, 12, 8], [3, 3, 3, 5, 14], [3, 3], [], [12], [3], [2, 3, 16], [], [1, 6], [3, 3, 3, 3, 3], [3, 16, 11, 3], [16]]},\n    outputs=[[0, 0, 0, 1, 0, 0], [0, 1, 0], [1, 1, 0, 1, 0], [0, 1, 0], [1, 1, 1, 0, 0], [1, 1], [], [1], [1], [0, 1, 0], [], [0, 1], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.06022670213133,
            "num_unique_values": 815,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.38884375846195,
                "explored_percent_lambda": 12.293528296777687,
                "explored_percent_none": 39.31762794476036,
                "kept_percent_concrete": 66.33540372670808,
                "kept_percent_lambda": 33.66459627329193,
                "num_examples": 15,
                "num_explored_concrete": 1787,
                "num_explored_lambda": 454,
                "num_explored_none": 1452,
                "num_inputs": 1,
                "num_kept_concrete": 534,
                "num_kept_lambda": 271,
                "num_values_explored": 3693,
                "num_values_kept": 805,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11202
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=4',\n    inputs_dict={'x1': [[], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [4, 4, 2, 4, 4, 4], [11, 12, 7], [14], [4, 0], [9, 1, 16], [13, 2], [2, 4], [9, 4, 5], [10, 4, 4], [1]]},\n    outputs=[[], [1, 0], [1, 1, 0, 0, 0, 0], [1], [1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1], [0, 1, 0], [0], [1, 1], [0, 0, 1], [0, 0], [0, 1], [0, 1, 0], [0, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.565988495014608,
            "num_unique_values": 613,
            "solution": "Map((lambda u1: ((lambda v1: fn_13(fn_6(3), v1)))(u1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 44.52479338842975,
                "explored_percent_lambda": 15.22038567493113,
                "explored_percent_none": 40.25482093663912,
                "kept_percent_concrete": 57.04809286898839,
                "kept_percent_lambda": 42.95190713101161,
                "num_examples": 15,
                "num_explored_concrete": 1293,
                "num_explored_lambda": 442,
                "num_explored_none": 1169,
                "num_inputs": 1,
                "num_kept_concrete": 344,
                "num_kept_lambda": 259,
                "num_values_explored": 2904,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2904
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=3',\n    inputs_dict={'x1': [[2, 13], [3, 3, 3, 3, 3, 6, 3], [11, 0, 3, 3, 3, 3, 3], [13, 7, 9, 10], [], [12], [3, 3, 3], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10], [3, 3, 3, 4], [5, 16, 12]]},\n    outputs=[[0, 0], [1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0], [], [0], [1, 1, 1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [], [0, 1, 0], [], [0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05959168402478,
            "num_unique_values": 781,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.09592861126603,
                "explored_percent_lambda": 12.60457334076966,
                "explored_percent_none": 41.299498047964306,
                "kept_percent_concrete": 64.07263294422827,
                "kept_percent_lambda": 35.927367055771725,
                "num_examples": 15,
                "num_explored_concrete": 1653,
                "num_explored_lambda": 452,
                "num_explored_none": 1481,
                "num_inputs": 1,
                "num_kept_concrete": 494,
                "num_kept_lambda": 277,
                "num_values_explored": 3586,
                "num_values_kept": 771,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10979
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[[1, 1, 0, 1, 0], [0, 1, 1, 0], [], [1, 1, 1, 0], [1, 0, 0, 1, 1, 1], [1, 0, 0], [0, 1, 0, 0, 1], [1], [0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0], [], [0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7923098201863468,
            "num_unique_values": 125,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 31.541725601131542,
                "explored_percent_lambda": 20.226308345120227,
                "explored_percent_none": 48.23196605374823,
                "kept_percent_concrete": 29.565217391304348,
                "kept_percent_lambda": 70.43478260869566,
                "num_examples": 15,
                "num_explored_concrete": 223,
                "num_explored_lambda": 143,
                "num_explored_none": 341,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 81,
                "num_values_explored": 707,
                "num_values_kept": 115,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 707
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 1, 0], [], [0, 0, 1, 0, 1, 0], [0, 1, 1], [1, 0, 1, 0, 0, 1, 0], [1, 1, 0], [0, 1, 0, 1, 0], [1, 1, 0], [1, 0, 1, 1, 1], [1, 0], [], [0, 1, 0, 0, 1, 0], [0, 1, 0], [0, 0, 1], [1]]},\n    outputs=[[1, 1, 1, 0, 1], [], [1, 1, 0, 1, 0, 1], [1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [0, 0, 1], [1, 0, 1, 0, 1], [0, 0, 1], [0, 1, 0, 0, 0], [0, 1], [], [1, 0, 1, 1, 0, 1], [1, 0, 1], [1, 1, 0], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.688230256084353,
            "num_unique_values": 603,
            "solution": "Map((lambda u1: ((lambda v1: fn_21(v1, 3)))(u1)), fn_23(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.81282495667244,
                "explored_percent_lambda": 13.483535528596187,
                "explored_percent_none": 42.70363951473137,
                "kept_percent_concrete": 57.67284991568297,
                "kept_percent_lambda": 42.32715008431703,
                "num_examples": 15,
                "num_explored_concrete": 1264,
                "num_explored_lambda": 389,
                "num_explored_none": 1232,
                "num_inputs": 1,
                "num_kept_concrete": 342,
                "num_kept_lambda": 251,
                "num_values_explored": 2885,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2885
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[0, 0, 0, 2], [2, 2, 0, 2, 0, 0, 0], [2, 1, 1, 0, 1, 2], [], [], [2, 1, 2, 2], [1, 1, 1, 0, 0], [2, 1, 2, 2, 2], [1], [2, 0, 0, 2], [2, 0, 2], [1, 1], [2, 2, 1, 1], [2, 2, 1, 1, 2, 1, 1], [0, 0, 2, 2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.234369014855474,
            "num_unique_values": 611,
            "solution": "Map((lambda u1: ((lambda v1: fn_21(v1, 5)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.54305606449249,
                "explored_percent_lambda": 14.694027116159765,
                "explored_percent_none": 42.762916819347744,
                "kept_percent_concrete": 58.23627287853577,
                "kept_percent_lambda": 41.76372712146423,
                "num_examples": 15,
                "num_explored_concrete": 1161,
                "num_explored_lambda": 401,
                "num_explored_none": 1167,
                "num_inputs": 1,
                "num_kept_concrete": 350,
                "num_kept_lambda": 251,
                "num_values_explored": 2729,
                "num_values_kept": 601,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2729
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[0, 4, 3, 4, 4, 2], [2, 1, 3, 3, 3, 1, 3], [2], [3, 2, 3, 0], [0, 4, 3, 0, 3], [0, 3, 3], [], [1, 1, 3, 0, 1, 2, 1], [3, 4, 4], [], [4, 4, 1, 3, 2, 1], [1], [3, 3], [2, 3, 0, 2, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.346226510591805,
            "num_unique_values": 601,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 4)))(u1)), fn_23(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 41.67257264351524,
                "explored_percent_lambda": 14.17434443656981,
                "explored_percent_none": 44.15308291991495,
                "kept_percent_concrete": 57.1912013536379,
                "kept_percent_lambda": 42.8087986463621,
                "num_examples": 15,
                "num_explored_concrete": 1176,
                "num_explored_lambda": 400,
                "num_explored_none": 1246,
                "num_inputs": 1,
                "num_kept_concrete": 338,
                "num_kept_lambda": 253,
                "num_values_explored": 2822,
                "num_values_kept": 591,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6425
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=4',\n    inputs_dict={'x1': [[2, 0], [0, 1, 1, 1, 1, 2], [1, 1], [0, 3, 1, 2, 3, 0, 0], [3, 0, 3, 3, 3], [3, 2, 2, 1, 2, 1], [], [0, 3, 1], [0], [1, 3, 2, 3, 2], [1, 2, 3, 3, 0, 1], [1, 1, 3, 1], [0], [], [2, 3, 0, 1, 2]]},\n    outputs=[[1, 3], [3, 0, 0, 0, 0, 1], [0, 0], [3, 2, 0, 1, 2, 3, 3], [2, 3, 2, 2, 2], [2, 1, 1, 0, 1, 0], [], [3, 2, 0], [3], [0, 2, 1, 2, 1], [0, 1, 2, 2, 3, 0], [0, 0, 2, 0], [3], [], [1, 2, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.500508935190737,
            "num_unique_values": 607,
            "solution": "Map((lambda u1: ((lambda v1: fn_21(v1, 3)))(u1)), fn_23(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.377258235919236,
                "explored_percent_lambda": 13.425433935529579,
                "explored_percent_none": 41.19730782855119,
                "kept_percent_concrete": 59.12897822445561,
                "kept_percent_lambda": 40.87102177554439,
                "num_examples": 15,
                "num_explored_concrete": 1281,
                "num_explored_lambda": 379,
                "num_explored_none": 1163,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 244,
                "num_values_explored": 2823,
                "num_values_kept": 597,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2823
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[0, 0, 0, 2], [2, 2, 0, 2, 0, 0, 0], [2, 1, 1, 0, 1, 2], [], [], [2, 1, 2, 2], [1, 1, 1, 0, 0], [2, 1, 2, 2, 2], [1], [2, 0, 0, 2], [2, 0, 2], [1, 1], [2, 2, 1, 1], [2, 2, 1, 1, 2, 1, 1], [0, 0, 2, 2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8213288048282266,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 37.16216216216216,
                "explored_percent_lambda": 21.62162162162162,
                "explored_percent_none": 41.21621621621622,
                "kept_percent_concrete": 32.78688524590164,
                "kept_percent_lambda": 67.21311475409836,
                "num_examples": 15,
                "num_explored_concrete": 275,
                "num_explored_lambda": 160,
                "num_explored_none": 305,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 82,
                "num_values_explored": 740,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 740
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=2',\n    inputs_dict={'x1': [[1, 1, 0, 0, 1], [1, 1, 1, 1, 0], [1], [1, 1, 0, 1, 1, 0, 0], [0], [], [0, 1, 0], [1, 0, 1, 1], [0, 0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [], [], [1, 1, 1, 0, 1, 1, 0]]},\n    outputs=[[0, 0, 1, 1, 0], [0, 0, 0, 0, 1], [0], [0, 0, 1, 0, 0, 1, 1], [1], [], [1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0], [], [], [0, 0, 0, 1, 0, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.041714074090123,
            "num_unique_values": 773,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.76430401366353,
                "explored_percent_lambda": 11.61400512382579,
                "explored_percent_none": 32.621690862510675,
                "kept_percent_concrete": 69.59370904325033,
                "kept_percent_lambda": 30.40629095674967,
                "num_examples": 15,
                "num_explored_concrete": 1959,
                "num_explored_lambda": 408,
                "num_explored_none": 1146,
                "num_inputs": 1,
                "num_kept_concrete": 531,
                "num_kept_lambda": 232,
                "num_values_explored": 3513,
                "num_values_kept": 763,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10542
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=3',\n    inputs_dict={'x1': [[1, 2, 0], [1, 1, 0, 2], [1, 2, 0, 2, 1], [1, 2, 1, 2], [2, 1, 1, 0, 0, 2, 2], [1, 0, 1, 1], [2, 0], [2], [2], [0, 0, 2, 1, 0, 2, 2], [2, 0, 0], [2], [2, 2, 1, 0, 0], [2], [0, 0, 0, 1, 1, 1]]},\n    outputs=[[0, 1, 2], [0, 0, 2, 1], [0, 1, 2, 1, 0], [0, 1, 0, 1], [1, 0, 0, 2, 2, 1, 1], [0, 2, 0, 0], [1, 2], [1], [1], [2, 2, 1, 0, 2, 1, 1], [1, 2, 2], [1], [1, 1, 0, 2, 2], [1], [2, 2, 2, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.479110429063439,
            "num_unique_values": 608,
            "solution": "Map((lambda u1: ((lambda v1: fn_32(v1, 4)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.562277580071175,
                "explored_percent_lambda": 14.234875444839858,
                "explored_percent_none": 43.20284697508897,
                "kept_percent_concrete": 57.357859531772576,
                "kept_percent_lambda": 42.642140468227424,
                "num_examples": 15,
                "num_explored_concrete": 1196,
                "num_explored_lambda": 400,
                "num_explored_none": 1214,
                "num_inputs": 1,
                "num_kept_concrete": 343,
                "num_kept_lambda": 255,
                "num_values_explored": 2810,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2810
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=4',\n    inputs_dict={'x1': [[3, 2, 1, 3, 3], [2, 0, 1, 1], [2, 2, 0, 1, 2, 3, 3], [0, 3, 1, 1, 0], [3, 0, 0], [], [0, 0], [1, 0, 1, 2, 1, 2], [0, 3, 2, 2, 2], [], [3, 1, 2, 1, 1], [3, 1, 3], [3, 3], [0, 0, 0, 0, 2, 2], [2, 0, 0, 2, 1, 0]]},\n    outputs=[[0, 3, 2, 0, 0], [3, 1, 2, 2], [3, 3, 1, 2, 3, 0, 0], [1, 0, 2, 2, 1], [0, 1, 1], [], [1, 1], [2, 1, 2, 3, 2, 3], [1, 0, 3, 3, 3], [], [0, 2, 3, 2, 2], [0, 2, 0], [0, 0], [1, 1, 1, 1, 3, 3], [3, 1, 1, 3, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.162258360069245,
            "num_unique_values": 731,
            "solution": "fn_13(Cdr(x1), Car(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.19620253164557,
                "explored_percent_lambda": 7.5,
                "explored_percent_none": 34.30379746835443,
                "kept_percent_concrete": 83.21775312066575,
                "kept_percent_lambda": 16.78224687933426,
                "num_examples": 15,
                "num_explored_concrete": 1839,
                "num_explored_lambda": 237,
                "num_explored_none": 1084,
                "num_inputs": 1,
                "num_kept_concrete": 600,
                "num_kept_lambda": 121,
                "num_values_explored": 3160,
                "num_values_kept": 721,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 7061
            },
            "success": true,
            "task": "Task(\n    name='count-head-in-tail',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [0, 5, 4, 0, 2], [3, 1, 3, 3, 2], [4, 2, 6, 10, 8, 12], [12], [7], [10], [4], [14, 14], [9, 14, 15, 7, 2, 6, 2], [10, 12, 1, 6, 9, 3, 11], [11]]},\n    outputs=[1, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6654505492188036,
            "num_unique_values": 254,
            "solution": "fn_13(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 36.754507628294036,
                "explored_percent_lambda": 13.800277392510402,
                "explored_percent_none": 49.44521497919556,
                "kept_percent_concrete": 54.91803278688525,
                "kept_percent_lambda": 45.08196721311475,
                "num_examples": 15,
                "num_explored_concrete": 530,
                "num_explored_lambda": 199,
                "num_explored_none": 713,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 110,
                "num_values_explored": 1442,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1442
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[1, 0, 1, 0, 0, 0, 2, 3, 0, 1, 1, 3, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.670916012953967,
            "num_unique_values": 250,
            "solution": "fn_13(x1, 3)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.52476669059584,
                "explored_percent_lambda": 14.142139267767408,
                "explored_percent_none": 52.333094041636755,
                "kept_percent_concrete": 52.5,
                "kept_percent_lambda": 47.5,
                "num_examples": 15,
                "num_explored_concrete": 467,
                "num_explored_lambda": 197,
                "num_explored_none": 729,
                "num_inputs": 1,
                "num_kept_concrete": 126,
                "num_kept_lambda": 114,
                "num_values_explored": 1393,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1393
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=3',\n    inputs_dict={'x1': [[2, 13], [3, 3, 3, 3, 3, 6, 3], [11, 0, 3, 3, 3, 3, 3], [13, 7, 9, 10], [], [12], [3, 3, 3], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10], [3, 3, 3, 4], [5, 16, 12]]},\n    outputs=[0, 6, 5, 0, 0, 0, 3, 0, 1, 0, 1, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6281495857983828,
            "num_unique_values": 251,
            "solution": "fn_13(x1, 5)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 35.77405857740586,
                "explored_percent_lambda": 13.668061366806137,
                "explored_percent_none": 50.557880055788004,
                "kept_percent_concrete": 55.601659751037346,
                "kept_percent_lambda": 44.398340248962654,
                "num_examples": 15,
                "num_explored_concrete": 513,
                "num_explored_lambda": 196,
                "num_explored_none": 725,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 107,
                "num_values_explored": 1434,
                "num_values_kept": 241,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1434
            },
            "success": true,
            "task": "Task(\n    name='count-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[1, 0, 5, 2, 0, 0, 0, 2, 0, 0, 5, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3744950937107205,
            "num_unique_values": 179,
            "solution": "fn_4(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 48.01362088535755,
                "explored_percent_lambda": 14.074914869466514,
                "explored_percent_none": 37.911464245175935,
                "kept_percent_concrete": 53.25443786982248,
                "kept_percent_lambda": 46.74556213017752,
                "num_examples": 15,
                "num_explored_concrete": 423,
                "num_explored_lambda": 124,
                "num_explored_none": 334,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 79,
                "num_values_explored": 881,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 881
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=3',\n    inputs_dict={'x1': [[16, 3, 9, 1, 7, 12, 5, 12, 4, 14], [10, 6, 5, 4, 15, 11, 8, 8], [13, 0, 5, 14, 1, 12, 1, 12, 5, 4], [10, 15, 13, 9, 13, 15, 7, 12, 3, 14], [4, 1, 11, 2, 3, 15, 2, 0, 12], [1, 5, 8, 16, 15, 10, 14, 11], [11, 12, 13, 4, 0, 13, 6, 9, 1, 9], [8, 5, 1, 4, 15, 4, 9, 11, 1], [9, 15, 11, 10, 4, 13], [7, 11, 12, 8, 15, 1, 9, 2], [9, 0, 5, 8, 5, 8, 13], [2, 5, 14, 8, 8], [14, 0, 7, 11, 10, 0, 5, 2], [16, 9, 15, 4], [14, 16, 4, 13, 11, 6, 13, 16, 1, 5]]},\n    outputs=[[1, 7, 12, 5, 12, 4, 14], [4, 15, 11, 8, 8], [14, 1, 12, 1, 12, 5, 4], [9, 13, 15, 7, 12, 3, 14], [2, 3, 15, 2, 0, 12], [16, 15, 10, 14, 11], [4, 0, 13, 6, 9, 1, 9], [4, 15, 4, 9, 11, 1], [10, 4, 13], [8, 15, 1, 9, 2], [8, 5, 8, 13], [8, 8], [11, 10, 0, 5, 2], [4], [13, 11, 6, 13, 16, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3581819981336594,
            "num_unique_values": 331,
            "solution": "fn_19(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.0869939707149,
                "explored_percent_lambda": 14.900947459086995,
                "explored_percent_none": 26.012058570198104,
                "kept_percent_concrete": 67.91277258566979,
                "kept_percent_lambda": 32.087227414330215,
                "num_examples": 15,
                "num_explored_concrete": 686,
                "num_explored_lambda": 173,
                "num_explored_none": 302,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 103,
                "num_values_explored": 1161,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1161
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=5',\n    inputs_dict={'x1': [[15, 6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11], [13, 1, 12, 11, 6, 11, 15, 11, 2, 7, 8], [5, 10, 1, 4, 3, 5, 6, 0, 6, 3, 16], [5, 10, 1, 5, 6, 16, 12, 9, 2, 7, 13], [1, 8, 14, 3, 14, 3, 15, 11, 11, 14], [14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9], [7, 15, 3, 15, 7, 7, 11]]},\n    outputs=[[7, 2, 11, 14, 6, 7, 11], [11, 15, 11, 2, 7, 8], [5, 6, 0, 6, 3, 16], [16, 12, 9, 2, 7, 13], [3, 15, 11, 11, 14], [9, 9, 4], [], [12], [3, 8, 0, 13], [6, 2, 11, 4, 11], [0, 4, 7], [9, 1, 13, 4, 8, 6], [5], [11, 9], [7, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7803058340214193,
            "num_unique_values": 96,
            "solution": "If(IsEmpty(x1), 1, 0)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 54.20289855072464,
                "explored_percent_lambda": 26.956521739130434,
                "explored_percent_none": 18.840579710144926,
                "kept_percent_concrete": 27.906976744186046,
                "kept_percent_lambda": 72.09302325581395,
                "num_examples": 15,
                "num_explored_concrete": 187,
                "num_explored_lambda": 93,
                "num_explored_none": 65,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 62,
                "num_values_explored": 345,
                "num_values_kept": 86,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 345
            },
            "success": true,
            "task": "Task(\n    name='empty',\n    inputs_dict={'x1': [[1, 2, 3], [], [0], [1, 1, 2, 1], [], [7, 7, 3, 2], [], [10, 10, 6, 13, 4], [4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [], [], [12, 15], [2, 16, 2, 5, 15, 6, 7]]},\n    outputs=[0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.040798330213875,
            "num_unique_values": 889,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.630034808552956,
                "explored_percent_lambda": 9.696668324216807,
                "explored_percent_none": 36.673296867230235,
                "kept_percent_concrete": 71.67235494880546,
                "kept_percent_lambda": 28.32764505119454,
                "num_examples": 15,
                "num_explored_concrete": 2157,
                "num_explored_lambda": 390,
                "num_explored_none": 1475,
                "num_inputs": 1,
                "num_kept_concrete": 630,
                "num_kept_lambda": 249,
                "num_values_explored": 4022,
                "num_values_kept": 879,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12042
            },
            "success": false,
            "task": "Task(\n    name='evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [12, 13], [4], [1], [], [14, 7, 3, 1, 9, 9, 5], [6, 4, 7], [7, 0, 12, 7], [15], [], [2, 2, 8, 7], [10, 11, 8, 16], [5, 5, 8, 7, 4, 16], [14]]},\n    outputs=[[2, 0, 4], [2, 4, 2, 0], [12], [4], [], [], [14], [6, 4], [0, 12], [], [], [2, 2, 8], [10, 8, 16], [8, 4, 16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.048993898089975,
            "num_unique_values": 640,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.62799616490892,
                "explored_percent_lambda": 10.282837967401726,
                "explored_percent_none": 24.089165867689356,
                "kept_percent_concrete": 73.80952380952381,
                "kept_percent_lambda": 26.19047619047619,
                "num_examples": 15,
                "num_explored_concrete": 2738,
                "num_explored_lambda": 429,
                "num_explored_none": 1005,
                "num_inputs": 1,
                "num_kept_concrete": 465,
                "num_kept_lambda": 165,
                "num_values_explored": 4172,
                "num_values_kept": 630,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12485
            },
            "success": false,
            "task": "Task(\n    name='fibonacci',\n    inputs_dict={'x1': [2, 4, 6, 9, 9, 9, 9, 8, 2, 6, 2, 1, 6, 13, 8]},\n    outputs=[1, 3, 8, 34, 34, 34, 34, 21, 1, 8, 1, 1, 8, 233, 21],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.136890132911503,
            "num_unique_values": 809,
            "solution": "fn_21(0, fn_13(x1, Car(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.47947351927296,
                "explored_percent_lambda": 5.797555625195863,
                "explored_percent_none": 23.72297085553118,
                "kept_percent_concrete": 88.23529411764706,
                "kept_percent_lambda": 11.764705882352942,
                "num_examples": 15,
                "num_explored_concrete": 2249,
                "num_explored_lambda": 185,
                "num_explored_none": 757,
                "num_inputs": 1,
                "num_kept_concrete": 705,
                "num_kept_lambda": 94,
                "num_values_explored": 3191,
                "num_values_kept": 799,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 3191
            },
            "success": true,
            "task": "Task(\n    name='has-head-in-tail',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [11, 11, 11], [7, 7, 7], [2, 15, 2, 2, 2, 2], [6, 6, 16, 6, 2], [15, 13, 10], [5, 14, 14, 1, 7, 9, 4], [14, 3, 14, 11], [2, 2, 13, 2, 2, 2, 4], [0, 0, 0, 5, 0]]},\n    outputs=[1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.174669340252876,
            "num_unique_values": 340,
            "solution": "fn_21(fn_15(fn_12(x1, 0)), 2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 41.162079510703364,
                "explored_percent_lambda": 12.35474006116208,
                "explored_percent_none": 46.48318042813456,
                "kept_percent_concrete": 66.96969696969697,
                "kept_percent_lambda": 33.03030303030303,
                "num_examples": 15,
                "num_explored_concrete": 673,
                "num_explored_lambda": 202,
                "num_explored_none": 760,
                "num_inputs": 1,
                "num_kept_concrete": 221,
                "num_kept_lambda": 109,
                "num_values_explored": 1635,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1635
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=0',\n    inputs_dict={'x1': [[6, 11, 0, 11], [3, 8, 9], [9, 0, 0, 0], [0, 0, 0], [1, 8], [0, 0, 0], [], [], [], [4, 9, 6, 11], [], [13], [5, 7, 6, 8, 3], [9, 12], [6, 9, 11, 7, 5, 5, 0]]},\n    outputs=[1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.056898830924183,
            "num_unique_values": 343,
            "solution": "fn_21(0, fn_15(fn_12(x1, 3)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.57125530624621,
                "explored_percent_lambda": 12.007277137659187,
                "explored_percent_none": 45.421467556094605,
                "kept_percent_concrete": 68.16816816816817,
                "kept_percent_lambda": 31.83183183183183,
                "num_examples": 15,
                "num_explored_concrete": 702,
                "num_explored_lambda": 198,
                "num_explored_none": 749,
                "num_inputs": 1,
                "num_kept_concrete": 227,
                "num_kept_lambda": 106,
                "num_values_explored": 1649,
                "num_values_kept": 333,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1649
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=3',\n    inputs_dict={'x1': [[3, 3, 3, 3], [], [3], [13, 3, 5, 5, 13], [3, 16, 3], [16, 6, 8, 13, 14], [3, 3, 3, 4, 3, 3], [6, 3, 3, 3], [8, 7], [3, 15], [3], [3, 2, 3, 3], [], [3, 15], [3, 6]]},\n    outputs=[1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.014507040847093,
            "num_unique_values": 509,
            "solution": "Mod(fn_32(5, fn_20(fn_13(x1, 5))), 5)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 46.33529907329402,
                "explored_percent_lambda": 9.561920808761585,
                "explored_percent_none": 44.1027801179444,
                "kept_percent_concrete": 73.74749498997996,
                "kept_percent_lambda": 26.25250501002004,
                "num_examples": 15,
                "num_explored_concrete": 1100,
                "num_explored_lambda": 227,
                "num_explored_none": 1047,
                "num_inputs": 1,
                "num_kept_concrete": 368,
                "num_kept_lambda": 131,
                "num_values_explored": 2374,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6492
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=5',\n    inputs_dict={'x1': [[3, 8, 1], [5, 5, 5, 5, 5, 5], [2, 13], [5, 5, 5, 5, 5, 6, 5], [11, 0, 5, 5, 5, 5, 5], [13, 7, 9, 10], [], [12], [5, 5, 5], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10]]},\n    outputs=[0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2586231953464448,
            "num_unique_values": 94,
            "solution": "Car(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 57.19626168224299,
                "explored_percent_lambda": 19.065420560747665,
                "explored_percent_none": 23.738317757009344,
                "kept_percent_concrete": 23.80952380952381,
                "kept_percent_lambda": 76.19047619047619,
                "num_examples": 15,
                "num_explored_concrete": 306,
                "num_explored_lambda": 102,
                "num_explored_none": 127,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 64,
                "num_values_explored": 535,
                "num_values_kept": 84,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 535
            },
            "success": true,
            "task": "Task(\n    name='head',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [8, 13, 8, 0, 14, 0, 5], [9, 3], [16], [14, 8, 2, 12, 10], [0, 5], [7, 11], [11, 10, 12, 13, 2, 15], [5, 6, 2, 8, 9], [2], [8, 7], [11, 13, 15, 15, 0, 1, 3], [9, 7, 8, 1, 9, 14, 16]]},\n    outputs=[1, 0, 1, 8, 9, 16, 14, 0, 7, 11, 5, 2, 8, 11, 9],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2324493136256933,
            "num_unique_values": 94,
            "solution": "Car(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 55.0,
                "explored_percent_lambda": 20.576923076923077,
                "explored_percent_none": 24.423076923076923,
                "kept_percent_concrete": 22.61904761904762,
                "kept_percent_lambda": 77.38095238095238,
                "num_examples": 15,
                "num_explored_concrete": 286,
                "num_explored_lambda": 107,
                "num_explored_none": 127,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 65,
                "num_values_explored": 520,
                "num_values_kept": 84,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 520
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=1',\n    inputs_dict={'x1': [[1, 12, 4, 0, 0, 14, 14, 14], [0, 7, 3, 15, 11, 1, 16], [2, 12, 11, 14, 15, 9, 8], [4, 3, 13, 1], [6, 4, 6, 12, 0, 8, 1, 16], [6, 1, 4, 12, 12, 0], [15, 16, 9, 12, 15, 0, 2, 7], [13, 14, 7, 10, 9, 7], [8, 1, 10, 4, 3], [10, 4, 16, 1], [5, 15, 8, 10, 13, 12, 7, 0], [12, 12], [5, 16, 10, 16, 8, 7, 2], [4, 1, 12, 0, 9, 12], [0, 3, 1, 6]]},\n    outputs=[1, 0, 2, 4, 6, 6, 15, 13, 8, 10, 5, 12, 5, 4, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6934915888123214,
            "num_unique_values": 110,
            "solution": "Index(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 49.794801641586865,
                "explored_percent_lambda": 14.500683994528044,
                "explored_percent_none": 35.70451436388509,
                "kept_percent_concrete": 34.0,
                "kept_percent_lambda": 66.0,
                "num_examples": 15,
                "num_explored_concrete": 364,
                "num_explored_lambda": 106,
                "num_explored_none": 261,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 66,
                "num_values_explored": 731,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 731
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=3',\n    inputs_dict={'x1': [[12, 14, 15, 4, 8, 1, 0, 10, 8, 0], [4, 11, 14, 0, 13, 1, 10, 5], [8, 12, 0, 1], [12, 15, 10, 10, 3, 8, 1, 11, 6], [8, 14, 2, 12, 3, 6, 0], [16, 1, 14], [13, 0, 3, 2, 9, 14, 4, 12], [5, 12, 14, 13, 2, 3, 14, 5, 3], [12, 4, 1, 1], [8, 2, 15, 3, 10, 0], [5, 6, 0, 9, 6, 7, 15], [3, 11, 3], [3, 7, 16, 2, 2, 13, 0, 13, 5], [6, 2, 6, 12], [0, 10, 11, 7, 4]]},\n    outputs=[15, 14, 0, 10, 2, 14, 3, 14, 1, 15, 0, 3, 16, 6, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6915724594146013,
            "num_unique_values": 112,
            "solution": "Index(3, Cdr(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.59284731774415,
                "explored_percent_lambda": 14.030261348005501,
                "explored_percent_none": 38.376891334250345,
                "kept_percent_concrete": 33.333333333333336,
                "kept_percent_lambda": 66.66666666666667,
                "num_examples": 15,
                "num_explored_concrete": 346,
                "num_explored_lambda": 102,
                "num_explored_none": 279,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 68,
                "num_values_explored": 727,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 727
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=5',\n    inputs_dict={'x1': [[0, 15, 1, 4, 12, 10, 8, 7, 4, 2, 3, 12], [13, 15, 6, 5, 2, 13, 14, 5, 12], [16, 11, 8, 8, 5, 6, 2], [9, 1, 6, 0, 4, 14, 15, 6, 6, 14, 4, 7], [4, 3, 1, 4, 0, 6, 0, 14, 13, 12], [1, 7, 3, 16, 10, 12, 14, 12, 16, 13, 8, 3], [0, 4, 2, 11, 6, 4, 9, 11, 5, 11, 1, 0], [1, 12, 15, 3, 7, 14], [15, 8, 9, 0, 11, 12, 9, 15], [0, 8, 9, 6, 7, 13, 8, 13, 16, 7, 10, 10], [9, 10, 2, 3, 5, 1, 8, 4, 3, 3, 16], [16, 4, 1, 12, 3, 12, 15], [1, 5, 15, 15, 2, 10, 13, 15, 3, 7], [4, 7, 13, 6, 12], [11, 11, 12, 5, 13, 11]]},\n    outputs=[12, 2, 5, 4, 0, 10, 6, 7, 11, 7, 5, 3, 2, 12, 13],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.306029689032584,
            "num_unique_values": 721,
            "solution": "fn_15(Map((lambda u1: ((lambda v1: fn_21(v1, 2)))(u1)), fn_11((lambda u1, u2: fn_33(x1)), x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 49.09326424870466,
                "explored_percent_lambda": 6.917098445595855,
                "explored_percent_none": 43.98963730569948,
                "kept_percent_concrete": 79.60618846694796,
                "kept_percent_lambda": 20.39381153305204,
                "num_examples": 15,
                "num_explored_concrete": 1895,
                "num_explored_lambda": 267,
                "num_explored_none": 1698,
                "num_inputs": 1,
                "num_kept_concrete": 566,
                "num_kept_lambda": 145,
                "num_values_explored": 3860,
                "num_values_kept": 711,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 8072
            },
            "success": true,
            "task": "Task(\n    name='is-mod-k with k=2',\n    inputs_dict={'x1': [[], [9, 4, 9, 6], [], [13], [22, 10, 14, 12, 16], [9, 9], [18, 12, 18, 22, 14, 10, 10], [11, 6, 0, 3], [22, 0, 0, 10], [14], [12, 16, 28, 16, 4, 2], [7], [18, 24, 14, 22, 12, 28], [24, 22, 2, 14, 16, 8, 10], [6, 10, 9, 1]]},\n    outputs=[1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04289151635021,
            "num_unique_values": 775,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.26998267755506,
                "explored_percent_lambda": 6.829992576095026,
                "explored_percent_none": 43.900024746349914,
                "kept_percent_concrete": 80.0,
                "kept_percent_lambda": 20.0,
                "num_examples": 15,
                "num_explored_concrete": 1991,
                "num_explored_lambda": 276,
                "num_explored_none": 1774,
                "num_inputs": 1,
                "num_kept_concrete": 612,
                "num_kept_lambda": 153,
                "num_values_explored": 4041,
                "num_values_kept": 765,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12107
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=3',\n    inputs_dict={'x1': [[24, 0, 21], [1, 6, 11, 14, 7, 6, 2], [39, 27, 6, 33, 12, 39, 33], [8, 8], [12], [39, 39, 48, 30], [39, 9, 45, 9, 6], [21, 0, 27, 6], [9, 3, 7, 14], [36, 27, 45, 21, 18, 45], [0, 16, 0, 3], [9, 9, 0, 21, 27, 30, 30], [33, 33, 3, 21, 9, 6], [], [8, 12, 4, 7]]},\n    outputs=[1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.043419777881354,
            "num_unique_values": 802,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.43988269794721,
                "explored_percent_lambda": 6.427174975562072,
                "explored_percent_none": 43.13294232649071,
                "kept_percent_concrete": 80.93434343434343,
                "kept_percent_lambda": 19.065656565656564,
                "num_examples": 15,
                "num_explored_concrete": 2064,
                "num_explored_lambda": 263,
                "num_explored_none": 1765,
                "num_inputs": 1,
                "num_kept_concrete": 641,
                "num_kept_lambda": 151,
                "num_values_explored": 4092,
                "num_values_kept": 792,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12146
            },
            "success": false,
            "task": "Task(\n    name='is-primes',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [13, 9, 13, 0, 3, 10, 12], [71, 13], [4, 13], [67, 179, 17, 163, 79], [13, 14], [17, 193, 149, 13, 3, 47], [0, 2, 6, 16], [4], [5], [5, 13, 7, 5], []]},\n    outputs=[1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.049024244304746,
            "num_unique_values": 860,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.28658847526772,
                "explored_percent_lambda": 5.940846506884243,
                "explored_percent_none": 35.77256501784804,
                "kept_percent_concrete": 85.05882352941177,
                "kept_percent_lambda": 14.941176470588236,
                "num_examples": 15,
                "num_explored_concrete": 2286,
                "num_explored_lambda": 233,
                "num_explored_none": 1403,
                "num_inputs": 1,
                "num_kept_concrete": 723,
                "num_kept_lambda": 127,
                "num_values_explored": 3922,
                "num_values_kept": 850,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11745
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=1',\n    inputs_dict={'x1': [[2, 15, 14, 6, 4, 5, 5], [3, 15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16]]},\n    outputs=[15, 15, 15, 9, 11, 13, 13, 12, 16, 16, 15, 15, 16, 8, 16],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.06538877496496,
            "num_unique_values": 1084,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.73354480570976,
                "explored_percent_lambda": 5.736188210415015,
                "explored_percent_none": 18.530266983875233,
                "kept_percent_concrete": 89.94413407821229,
                "kept_percent_lambda": 10.05586592178771,
                "num_examples": 15,
                "num_explored_concrete": 2865,
                "num_explored_lambda": 217,
                "num_explored_none": 701,
                "num_inputs": 1,
                "num_kept_concrete": 966,
                "num_kept_lambda": 108,
                "num_values_explored": 3783,
                "num_values_kept": 1074,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11308
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=3',\n    inputs_dict={'x1': [[2, 14, 6, 12, 15], [9, 12, 12, 2, 16, 1, 3, 4, 16], [3, 9, 1, 7, 12, 5, 12, 4, 14, 12], [6, 5, 4, 15, 11, 8, 8], [13, 0, 5, 14, 1, 12, 1, 12, 5, 4], [10, 15, 13, 9, 13, 15, 7, 12, 3, 14], [4, 1, 11, 2, 3, 15, 2, 0, 12], [1, 5, 8, 16, 15, 10, 14, 11], [11, 12, 13, 4, 0, 13, 6, 9, 1, 9], [8, 5, 1, 4, 15, 4, 9, 11, 1], [9, 15, 11, 10, 4, 13], [7, 11, 12, 8, 15, 1, 9, 2], [9, 0, 5, 8, 5, 8, 13], [2, 5, 14, 8, 8], [14, 0, 7, 11, 10, 0, 5, 2]]},\n    outputs=[12, 12, 12, 8, 12, 14, 11, 14, 12, 9, 11, 11, 8, 8, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05727958632633,
            "num_unique_values": 980,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.46680942184155,
                "explored_percent_lambda": 5.781584582441114,
                "explored_percent_none": 22.751605995717345,
                "kept_percent_concrete": 88.76288659793815,
                "kept_percent_lambda": 11.237113402061855,
                "num_examples": 15,
                "num_explored_concrete": 2670,
                "num_explored_lambda": 216,
                "num_explored_none": 850,
                "num_inputs": 1,
                "num_kept_concrete": 861,
                "num_kept_lambda": 109,
                "num_values_explored": 3736,
                "num_values_kept": 970,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11349
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=3',\n    inputs_dict={'x1': [[9, 5, 11, 2, 10, 13, 9], [16, 5, 4, 5, 2, 14, 6, 9, 15], [1, 7, 3], [16, 4, 10, 7, 5, 7, 1, 2], [10, 13, 9, 10, 8, 6, 7, 15, 2], [16, 16, 4, 0, 3, 4, 9], [15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16], [15, 1, 4], [10, 8, 7, 4, 2, 3, 12, 8], [15, 6, 5, 2, 13, 14, 5, 12, 6], [11, 8, 8, 5, 6, 2, 15, 9, 1, 6], [4, 14, 15]]},\n    outputs=[9, 5, 7, 4, 7, 4, 8, 6, 12, 9, 15, 4, 5, 5, 15],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.062120327260345,
            "num_unique_values": 1012,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.14710654407789,
                "explored_percent_lambda": 6.3547863710113575,
                "explored_percent_none": 21.498107084910764,
                "kept_percent_concrete": 87.12574850299401,
                "kept_percent_lambda": 12.874251497005988,
                "num_examples": 15,
                "num_explored_concrete": 2668,
                "num_explored_lambda": 235,
                "num_explored_none": 795,
                "num_inputs": 1,
                "num_kept_concrete": 873,
                "num_kept_lambda": 129,
                "num_values_explored": 3698,
                "num_values_kept": 1002,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11198
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=4',\n    inputs_dict={'x1': [[6, 14, 4, 7, 12, 4, 3], [4, 0, 6, 0], [13, 12, 15, 1, 7, 3, 16, 10, 12, 14], [16, 13, 8, 3, 15, 0, 4, 2, 11], [4, 9, 11, 5, 11, 1], [2, 1, 12, 15], [7, 14, 8, 15, 8], [0, 11, 12, 9, 15, 16, 0, 8], [6, 7, 13, 8, 13, 16, 7, 10], [12, 9, 10, 2, 3, 5, 1, 8], [3, 3, 16, 6, 16, 4], [12, 3, 12, 15], [1, 5, 15, 15, 2, 10, 13, 15, 3], [0, 4, 7, 13, 6, 12, 4], [11, 12, 5, 13, 11, 4, 16, 0, 8]]},\n    outputs=[6, 6, 10, 4, 9, 15, 14, 9, 8, 5, 6, 15, 5, 6, 8],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.059488012921065,
            "num_unique_values": 982,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.92964275974911,
                "explored_percent_lambda": 6.463048813744205,
                "explored_percent_none": 19.60730842650668,
                "kept_percent_concrete": 88.27160493827161,
                "kept_percent_lambda": 11.728395061728396,
                "num_examples": 15,
                "num_explored_concrete": 2711,
                "num_explored_lambda": 237,
                "num_explored_none": 719,
                "num_inputs": 1,
                "num_kept_concrete": 858,
                "num_kept_lambda": 114,
                "num_values_explored": 3667,
                "num_values_kept": 972,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10900
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=5',\n    inputs_dict={'x1': [[6, 7, 16, 16, 6, 6, 11, 5, 9], [9, 5, 0, 0, 13, 1, 16, 0, 9, 3, 1], [3, 11, 8, 10, 9, 8], [8, 4, 16, 7, 10, 5, 13, 1, 6, 11], [7, 11, 5, 11, 16, 6, 0, 0, 8], [10, 3, 8, 6, 6, 11, 3, 4, 1, 4, 8], [11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3], [14, 6, 15, 10, 7, 8, 16, 16, 14], [6, 2, 6, 9, 12, 3, 13, 5], [6, 3, 5, 7, 6, 5, 11], [14, 1, 15, 6, 0, 12, 11, 3, 15, 14], [13, 4, 9, 6, 7, 6, 12, 4, 8, 16, 4]]},\n    outputs=[7, 1, 10, 7, 7, 4, 11, 10, 5, 12, 14, 6, 6, 11, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7480287412181497,
            "num_unique_values": 110,
            "solution": "Index(Subtract(4, 5), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 50.863213811420984,
                "explored_percent_lambda": 13.678618857901727,
                "explored_percent_none": 35.45816733067729,
                "kept_percent_concrete": 34.0,
                "kept_percent_lambda": 66.0,
                "num_examples": 15,
                "num_explored_concrete": 383,
                "num_explored_lambda": 103,
                "num_explored_none": 267,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 66,
                "num_values_explored": 753,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 753
            },
            "success": true,
            "task": "Task(\n    name='last',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 0, 1, 3, 16, 9, 7], [1, 9, 14, 16], [1, 12, 4, 0, 0, 14, 14], [14, 0, 7, 3, 15, 11], [16], [2, 12, 11, 14, 15, 9], [8, 4, 3, 13], [16], [4, 6, 12], [8], [16], [6, 1, 4, 12, 12, 0]]},\n    outputs=[3, 0, 1, 7, 16, 14, 11, 16, 9, 13, 16, 12, 8, 16, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1529160141944885,
            "num_unique_values": 106,
            "solution": "Length(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 44.3159922928709,
                "explored_percent_lambda": 18.304431599229286,
                "explored_percent_none": 37.37957610789981,
                "kept_percent_concrete": 32.291666666666664,
                "kept_percent_lambda": 67.70833333333333,
                "num_examples": 15,
                "num_explored_concrete": 230,
                "num_explored_lambda": 95,
                "num_explored_none": 194,
                "num_inputs": 1,
                "num_kept_concrete": 31,
                "num_kept_lambda": 65,
                "num_values_explored": 519,
                "num_values_kept": 96,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 519
            },
            "success": true,
            "task": "Task(\n    name='len',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [2, 9], [0], [10, 14, 8, 2, 12, 10, 3], [], [2, 7], [13, 11, 10, 12, 13], [15], [5, 6, 2, 8, 9], [], [3], [7, 14, 11], [15, 15, 0, 1, 3, 16]]},\n    outputs=[3, 1, 4, 2, 1, 7, 0, 2, 5, 1, 5, 0, 1, 3, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.739632927812636,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: 0), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 46.401028277634964,
                "explored_percent_lambda": 18.637532133676093,
                "explored_percent_none": 34.96143958868895,
                "kept_percent_concrete": 41.07142857142857,
                "kept_percent_lambda": 58.92857142857143,
                "num_examples": 15,
                "num_explored_concrete": 361,
                "num_explored_lambda": 145,
                "num_explored_none": 272,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 66,
                "num_values_explored": 778,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 778
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=1',\n    inputs_dict={'x1': [[7, 8, 1, 9], [16, 15, 1, 12, 4, 0, 0], [14, 14, 14, 0, 7, 3], [11, 1, 16, 14, 2, 12, 11], [15, 9, 8, 8, 4, 3], [1, 16, 6, 4, 6, 12], [], [1, 16, 12], [1, 4, 12], [0, 15, 15, 16, 9], [15, 0, 2, 7, 11, 13], [7, 10, 9, 7, 8, 8], [], [4, 3, 7, 10, 4], [1, 16, 5, 15, 8, 10, 13]]},\n    outputs=[[0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [], [0, 0, 0], [0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.8047893662005663,
            "num_unique_values": 123,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 2)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 32.63009845288326,
                "explored_percent_lambda": 19.971870604781998,
                "explored_percent_none": 47.39803094233474,
                "kept_percent_concrete": 30.088495575221238,
                "kept_percent_lambda": 69.91150442477876,
                "num_examples": 15,
                "num_explored_concrete": 232,
                "num_explored_lambda": 142,
                "num_explored_none": 337,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 79,
                "num_values_explored": 711,
                "num_values_kept": 113,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 711
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=2',\n    inputs_dict={'x1': [[7, 0, 3, 12, 12], [5, 16, 10, 16, 8, 7], [12], [1], [0, 9, 12, 7, 0], [1], [12, 15], [9], [0, 2, 5, 4, 11, 7], [5, 11, 4, 14, 13], [14, 14, 16], [], [10], [], [2, 0, 1, 11, 11, 10]]},\n    outputs=[[1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1], [0], [1], [0, 1, 0, 1, 0], [1], [0, 1], [1], [0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1], [0, 0, 0], [], [0], [], [0, 0, 1, 1, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.730445300694555,
            "num_unique_values": 123,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 3)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 35.57422969187675,
                "explored_percent_lambda": 20.168067226890756,
                "explored_percent_none": 44.25770308123249,
                "kept_percent_concrete": 31.858407079646017,
                "kept_percent_lambda": 68.14159292035399,
                "num_examples": 15,
                "num_explored_concrete": 254,
                "num_explored_lambda": 144,
                "num_explored_none": 316,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 77,
                "num_values_explored": 714,
                "num_values_kept": 113,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 714
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=3',\n    inputs_dict={'x1': [[6, 8, 1, 3], [], [9], [1, 7, 11, 13], [6, 8, 2, 2], [14, 15], [9, 0, 3], [], [12, 4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0], [10, 8], [12, 11, 8, 8], [4, 4, 12, 7, 13, 9], [], [13, 4, 11, 10]]},\n    outputs=[[0, 2, 1, 0], [], [0], [1, 1, 2, 1], [0, 2, 2, 2], [2, 0], [0, 0, 0], [], [0, 1, 2, 2, 0, 2, 2], [2, 1, 2, 0, 2, 1, 0], [1, 2], [0, 2, 2, 2], [1, 1, 0, 1, 1, 0], [], [1, 1, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.707725241780281,
            "num_unique_values": 124,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 4)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 32.37410071942446,
                "explored_percent_lambda": 20.863309352517987,
                "explored_percent_none": 46.76258992805755,
                "kept_percent_concrete": 31.57894736842105,
                "kept_percent_lambda": 68.42105263157895,
                "num_examples": 15,
                "num_explored_concrete": 225,
                "num_explored_lambda": 145,
                "num_explored_none": 325,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 78,
                "num_values_explored": 695,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 695
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=4',\n    inputs_dict={'x1': [[16, 12], [15, 4, 8, 1, 0, 10], [0, 10, 4, 11], [0, 13, 1, 10, 5, 2, 8], [0, 1, 13, 12, 15, 10], [3, 8, 1, 11, 6], [8, 14, 2, 12], [6], [], [], [1, 14, 11, 13, 0, 3, 2], [14, 4, 12, 13], [12, 14], [2, 3, 14, 5, 3, 3], [4, 1, 1, 6, 8]]},\n    outputs=[[0, 0], [3, 0, 0, 1, 0, 2], [0, 2, 0, 3], [0, 1, 1, 2, 1, 2, 0], [0, 1, 1, 0, 3, 2], [3, 0, 1, 3, 2], [0, 2, 2, 0], [2], [], [], [1, 2, 3, 1, 0, 3, 2], [2, 0, 0, 1], [0, 2], [2, 3, 2, 1, 3, 3], [0, 1, 1, 2, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.713805144187063,
            "num_unique_values": 126,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 5)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.56614509246088,
                "explored_percent_lambda": 21.19487908961593,
                "explored_percent_none": 44.23897581792318,
                "kept_percent_concrete": 35.3448275862069,
                "kept_percent_lambda": 64.65517241379311,
                "num_examples": 15,
                "num_explored_concrete": 243,
                "num_explored_lambda": 149,
                "num_explored_none": 311,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 75,
                "num_values_explored": 703,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 703
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=5',\n    inputs_dict={'x1': [[15], [10], [], [5, 6, 0, 9], [7, 15], [], [11], [13], [7], [2, 2, 13, 0, 13, 5, 2], [2, 6, 12], [0, 10], [7, 4, 0, 1, 11], [], [11, 2, 16, 6, 4]]},\n    outputs=[[0], [0], [], [0, 1, 0, 4], [2, 0], [], [1], [3], [2], [2, 2, 3, 0, 3, 0, 2], [2, 1, 2], [0, 0], [2, 4, 0, 1, 1], [], [1, 2, 1, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7146412110887468,
            "num_unique_values": 123,
            "solution": "Map((lambda u1: 0), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.2838370565046,
                "explored_percent_lambda": 19.185282522996058,
                "explored_percent_none": 36.530880420499344,
                "kept_percent_concrete": 39.823008849557525,
                "kept_percent_lambda": 60.176991150442475,
                "num_examples": 15,
                "num_explored_concrete": 337,
                "num_explored_lambda": 146,
                "num_explored_none": 278,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 68,
                "num_values_explored": 761,
                "num_values_kept": 113,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 761
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=0',\n    inputs_dict={'x1': [[7, 11, 13, 15, 16, 16], [11, 11, 4, 14, 6, 14, 0], [8], [7], [3, 8, 1, 13, 5], [11, 13, 5, 14, 4, 2, 14], [5, 10, 15], [15, 5], [8], [3, 16], [9, 7], [5, 15, 8, 6], [], [15, 10], []]},\n    outputs=[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0], [0, 0], [0], [0, 0], [0, 0], [0, 0, 0, 0], [], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.655654211062938,
            "num_unique_values": 129,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 27.678571428571427,
                "explored_percent_lambda": 22.61904761904762,
                "explored_percent_none": 49.70238095238095,
                "kept_percent_concrete": 31.092436974789916,
                "kept_percent_lambda": 68.90756302521008,
                "num_examples": 15,
                "num_explored_concrete": 186,
                "num_explored_lambda": 152,
                "num_explored_none": 334,
                "num_inputs": 1,
                "num_kept_concrete": 37,
                "num_kept_lambda": 82,
                "num_values_explored": 672,
                "num_values_kept": 119,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 672
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=2',\n    inputs_dict={'x1': [[2, 0, 15, 0, 2], [11, 15, 10], [], [9, 13, 13, 15, 3, 6, 1], [12, 13, 2, 4, 7, 15, 12], [14], [], [13, 14, 2, 8, 0, 14, 3], [9, 5, 11, 4, 6], [4, 1, 5, 8], [8, 5, 16], [11, 2, 7, 10, 4], [4, 16, 1, 8, 4, 7], [0, 2, 0], [8, 2, 8]]},\n    outputs=[[4, 0, 30, 0, 4], [22, 30, 20], [], [18, 26, 26, 30, 6, 12, 2], [24, 26, 4, 8, 14, 30, 24], [28], [], [26, 28, 4, 16, 0, 28, 6], [18, 10, 22, 8, 12], [8, 2, 10, 16], [16, 10, 32], [22, 4, 14, 20, 8], [8, 32, 2, 16, 8, 14], [0, 4, 0], [16, 4, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7075106259435415,
            "num_unique_values": 127,
            "solution": "Map((lambda u1: ((lambda v1: Multiply(3, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 27.485380116959064,
                "explored_percent_lambda": 19.736842105263158,
                "explored_percent_none": 52.77777777777778,
                "kept_percent_concrete": 24.786324786324787,
                "kept_percent_lambda": 75.21367521367522,
                "num_examples": 15,
                "num_explored_concrete": 188,
                "num_explored_lambda": 135,
                "num_explored_none": 361,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 88,
                "num_values_explored": 684,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 684
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=3',\n    inputs_dict={'x1': [[7, 10, 8, 8], [12, 7, 7], [0, 13, 3, 9, 1], [10, 8, 2, 12, 9, 11], [0, 6, 9, 4, 16, 10, 12], [4], [10, 0, 1, 2, 6, 4], [2, 6, 10, 10, 8, 15, 16], [1, 2, 7, 5, 4, 0, 13], [15, 3], [12, 14, 13, 5, 8, 8, 9], [4], [9, 11, 0], [], [7, 8, 4, 3, 7]]},\n    outputs=[[21, 30, 24, 24], [36, 21, 21], [0, 39, 9, 27, 3], [30, 24, 6, 36, 27, 33], [0, 18, 27, 12, 48, 30, 36], [12], [30, 0, 3, 6, 18, 12], [6, 18, 30, 30, 24, 45, 48], [3, 6, 21, 15, 12, 0, 39], [45, 9], [36, 42, 39, 15, 24, 24, 27], [12], [27, 33, 0], [], [21, 24, 12, 9, 21]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6951204240322113,
            "num_unique_values": 126,
            "solution": "Map((lambda u1: ((lambda v1: Multiply(v1, 5)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 35.213204951856945,
                "explored_percent_lambda": 21.182943603851445,
                "explored_percent_none": 43.60385144429161,
                "kept_percent_concrete": 29.310344827586206,
                "kept_percent_lambda": 70.6896551724138,
                "num_examples": 15,
                "num_explored_concrete": 256,
                "num_explored_lambda": 154,
                "num_explored_none": 317,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 82,
                "num_values_explored": 727,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 727
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=5',\n    inputs_dict={'x1': [[12, 2, 8, 5], [8, 2, 14], [3, 6, 6, 16], [7, 3, 15, 2, 12], [0, 15, 5, 10, 8, 14, 12], [4, 12, 3, 15, 5, 5, 2], [8, 15, 9, 0, 1], [], [3, 9, 12, 12, 4, 12], [8], [12], [10, 11, 13, 1, 10], [16, 15, 1, 15], [8, 13], [12, 7, 3, 10, 14]]},\n    outputs=[[60, 10, 40, 25], [40, 10, 70], [15, 30, 30, 80], [35, 15, 75, 10, 60], [0, 75, 25, 50, 40, 70, 60], [20, 60, 15, 75, 25, 25, 10], [40, 75, 45, 0, 5], [], [15, 45, 60, 60, 20, 60], [40], [60], [50, 55, 65, 5, 50], [80, 75, 5, 75], [40, 65], [60, 35, 15, 50, 70]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.037432317156345,
            "num_unique_values": 885,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.385405960945526,
                "explored_percent_lambda": 11.33093525179856,
                "explored_percent_none": 38.28365878725591,
                "kept_percent_concrete": 67.88571428571429,
                "kept_percent_lambda": 32.114285714285714,
                "num_examples": 15,
                "num_explored_concrete": 1961,
                "num_explored_lambda": 441,
                "num_explored_none": 1490,
                "num_inputs": 1,
                "num_kept_concrete": 594,
                "num_kept_lambda": 281,
                "num_values_explored": 3892,
                "num_values_kept": 875,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11745
            },
            "success": false,
            "task": "Task(\n    name='odds',\n    inputs_dict={'x1': [[1, 1, 3], [2, 5, 4, 2, 0, 5, 1, 1], [6, 10], [14], [3, 8], [2, 12, 6, 9, 1, 12], [15], [1, 8, 13, 9, 6, 8], [3, 0], [4, 2], [6, 10, 15, 8, 14, 3], [16], [], [5], [5, 16, 4, 8]]},\n    outputs=[[1, 1, 3], [5, 5, 1, 1], [], [], [3], [9, 1], [15], [1, 13, 9], [3], [], [15, 3], [], [], [5], [5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.07493267673999,
            "num_unique_values": 931,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.421402969790066,
                "explored_percent_lambda": 10.931899641577061,
                "explored_percent_none": 29.646697388632873,
                "kept_percent_concrete": 71.8783930510315,
                "kept_percent_lambda": 28.121606948968513,
                "num_examples": 15,
                "num_explored_concrete": 2321,
                "num_explored_lambda": 427,
                "num_explored_none": 1158,
                "num_inputs": 1,
                "num_kept_concrete": 662,
                "num_kept_lambda": 259,
                "num_values_explored": 3906,
                "num_values_kept": 921,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11783
            },
            "success": false,
            "task": "Task(\n    name='pop',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [9, 14], [2], [4, 11, 7], [5, 11, 4, 14, 13, 8], [14, 16, 1, 3, 10, 0], [2, 0, 1, 11, 11, 10], [6, 8, 1, 3, 0], [9], [1, 7, 11, 13, 10], [8, 2, 2], [14, 15, 8], [0, 3, 2, 16]]},\n    outputs=[[1, 2], [], [1, 1, 2], [9], [], [4, 11], [5, 11, 4, 14, 13], [14, 16, 1, 3, 10], [2, 0, 1, 11, 11], [6, 8, 1, 3], [], [1, 7, 11, 13], [8, 2], [14, 15], [0, 3, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6790536362677813,
            "num_unique_values": 102,
            "solution": "Cons(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 37.16012084592145,
                "explored_percent_lambda": 17.522658610271904,
                "explored_percent_none": 45.31722054380665,
                "kept_percent_concrete": 16.304347826086957,
                "kept_percent_lambda": 83.69565217391305,
                "num_examples": 15,
                "num_explored_concrete": 246,
                "num_explored_lambda": 116,
                "num_explored_none": 300,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 77,
                "num_values_explored": 662,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 662
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=1',\n    inputs_dict={'x1': [[16, 0, 8], [6, 7, 16, 16, 6], [11, 5, 9, 14], [5, 0, 0, 13, 1], [0, 9, 3, 1, 2, 3, 11, 8], [9, 8, 10, 8, 4], [7, 10, 5, 13, 1, 6, 11, 10], [11, 5, 11, 16], [0, 0, 8, 12], [3, 8, 6, 6, 11], [4, 1], [8, 5, 11], [2, 1, 3, 2, 13, 7, 9], [7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8]]},\n    outputs=[[16, 16, 0, 8], [6, 6, 7, 16, 16, 6], [11, 11, 5, 9, 14], [5, 5, 0, 0, 13, 1], [0, 0, 9, 3, 1, 2, 3, 11, 8], [9, 9, 8, 10, 8, 4], [7, 7, 10, 5, 13, 1, 6, 11, 10], [11, 11, 5, 11, 16], [0, 0, 0, 8, 12], [3, 3, 8, 6, 6, 11], [4, 4, 1], [8, 8, 5, 11], [2, 2, 1, 3, 2, 13, 7, 9], [7, 7, 13, 15, 10, 10, 8], [1, 1, 3, 13, 12, 5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6814817069098353,
            "num_unique_values": 103,
            "solution": "Cons(Car(Cdr(x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 42.6917510853835,
                "explored_percent_lambda": 15.48480463096961,
                "explored_percent_none": 41.823444283646886,
                "kept_percent_concrete": 21.50537634408602,
                "kept_percent_lambda": 78.49462365591398,
                "num_examples": 15,
                "num_explored_concrete": 295,
                "num_explored_lambda": 107,
                "num_explored_none": 289,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 73,
                "num_values_explored": 691,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=2',\n    inputs_dict={'x1': [[0, 13, 3, 1, 12, 6, 11, 9], [9, 14, 6], [10, 7, 8, 16, 16, 14, 8, 6, 2], [9, 12, 3, 13], [6, 6, 3, 5], [6, 5, 11, 12, 14], [15, 6], [12, 11], [15, 14, 13], [4, 9, 6, 7, 6, 12, 4, 8], [4, 8, 15, 5, 8, 12, 7, 9, 9], [11, 6, 10], [2, 14, 3, 15, 14, 3, 5, 15], [1, 15], [7, 12]]},\n    outputs=[[13, 0, 13, 3, 1, 12, 6, 11, 9], [14, 9, 14, 6], [7, 10, 7, 8, 16, 16, 14, 8, 6, 2], [12, 9, 12, 3, 13], [6, 6, 6, 3, 5], [5, 6, 5, 11, 12, 14], [6, 15, 6], [11, 12, 11], [14, 15, 14, 13], [9, 4, 9, 6, 7, 6, 12, 4, 8], [8, 4, 8, 15, 5, 8, 12, 7, 9, 9], [6, 11, 6, 10], [14, 2, 14, 3, 15, 14, 3, 5, 15], [15, 1, 15], [12, 7, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7914251321926713,
            "num_unique_values": 188,
            "solution": "fn_5(fn_4(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 48.795180722891565,
                "explored_percent_lambda": 12.048192771084338,
                "explored_percent_none": 39.1566265060241,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 15,
                "num_explored_concrete": 486,
                "num_explored_lambda": 120,
                "num_explored_none": 390,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 996,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 996
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=4',\n    inputs_dict={'x1': [[16, 13, 9, 8, 8, 0, 2, 15, 9], [14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [0, 2, 8, 7, 6, 14, 0, 0, 12], [10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [16, 11, 3, 0, 8, 13], [3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [1, 10, 1, 10, 5, 16], [7, 2, 8, 11, 5, 9, 8, 9, 7], [2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [4, 8, 5, 3, 1, 7, 5, 6, 13], [11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [13, 1, 3, 2, 14, 16, 8, 4], [8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [13, 12, 8, 7, 11, 1, 15]]},\n    outputs=[[8, 16, 13, 9, 8, 8, 0, 2, 15, 9], [16, 14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [7, 0, 2, 8, 7, 6, 14, 0, 0, 12], [3, 10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [0, 16, 11, 3, 0, 8, 13], [16, 3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [10, 1, 10, 1, 10, 5, 16], [11, 7, 2, 8, 11, 5, 9, 8, 9, 7], [0, 2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [3, 4, 8, 5, 3, 1, 7, 5, 6, 13], [13, 11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [2, 13, 1, 3, 2, 14, 16, 8, 4], [13, 8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [7, 13, 12, 8, 7, 11, 1, 15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4672441012226045,
            "num_unique_values": 118,
            "solution": "Cons(0, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.30434782608695,
                "explored_percent_lambda": 13.975155279503106,
                "explored_percent_none": 44.72049689440994,
                "kept_percent_concrete": 35.18518518518518,
                "kept_percent_lambda": 64.81481481481481,
                "num_examples": 15,
                "num_explored_concrete": 266,
                "num_explored_lambda": 90,
                "num_explored_none": 288,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 70,
                "num_values_explored": 644,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 644
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=0',\n    inputs_dict={'x1': [[12, 0, 1, 9, 4], [9, 10, 8], [], [5, 11, 9, 0, 7, 1, 7], [14, 0, 3], [6, 9, 8, 16, 1, 2], [16, 11], [8, 0, 16, 10, 7, 12, 10], [12, 4], [1], [1, 2, 5, 13, 1, 3], [6, 8, 0, 11], [16], [4, 14, 11, 0], [5]]},\n    outputs=[[0, 12, 0, 1, 9, 4], [0, 9, 10, 8], [0], [0, 5, 11, 9, 0, 7, 1, 7], [0, 14, 0, 3], [0, 6, 9, 8, 16, 1, 2], [0, 16, 11], [0, 8, 0, 16, 10, 7, 12, 10], [0, 12, 4], [0, 1], [0, 1, 2, 5, 13, 1, 3], [0, 6, 8, 0, 11], [0, 16], [0, 4, 14, 11, 0], [0, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.037318240385503,
            "num_unique_values": 852,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.06539157405014,
                "explored_percent_lambda": 8.064099250452314,
                "explored_percent_none": 28.870509175497546,
                "kept_percent_concrete": 81.94774346793349,
                "kept_percent_lambda": 18.052256532066508,
                "num_examples": 15,
                "num_explored_concrete": 2440,
                "num_explored_lambda": 312,
                "num_explored_none": 1117,
                "num_inputs": 1,
                "num_kept_concrete": 690,
                "num_kept_lambda": 152,
                "num_values_explored": 3869,
                "num_values_kept": 842,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11543
            },
            "success": false,
            "task": "Task(\n    name='product',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [7, 15], [15, 7], [11, 9, 9], [7, 1, 6, 2], [6], [8, 6, 8, 11, 11, 16], [10, 6, 8, 4, 6, 6, 7], [16, 1, 14, 0, 12], [0, 4, 11, 12, 15, 5, 2], [9, 5, 6, 11, 6, 13, 14], [3, 1, 5, 9, 13], [3, 10, 8, 13, 11]]},\n    outputs=[6, 0, 2, 105, 105, 891, 84, 6, 743424, 483840, 0, 0, 3243240, 1755, 34320],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.375810807105154,
            "num_unique_values": 149,
            "solution": "fn_1((lambda u1: ((lambda v1: Cdr(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.84549356223176,
                "explored_percent_lambda": 15.236051502145923,
                "explored_percent_none": 42.918454935622314,
                "kept_percent_concrete": 39.568345323741006,
                "kept_percent_lambda": 60.431654676258994,
                "num_examples": 15,
                "num_explored_concrete": 390,
                "num_explored_lambda": 142,
                "num_explored_none": 400,
                "num_inputs": 1,
                "num_kept_concrete": 55,
                "num_kept_lambda": 84,
                "num_values_explored": 932,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 932
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=2',\n    inputs_dict={'x1': [[14, 11], [0, 3, 2, 9, 14, 4, 12, 13], [12, 14, 13, 2], [14, 5, 3], [12, 4, 1], [6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5]]},\n    outputs=[[14], [0, 2, 9, 14, 4, 12, 13], [12, 13, 2], [14, 3], [12, 1], [6], [15, 10], [9], [0, 6, 7, 15], [3], [13, 7], [2, 13, 0, 13, 5, 2, 6, 2], [12, 0, 10], [7, 0, 1, 11, 0, 11], [2, 6, 4, 4, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.045060108881444,
            "num_unique_values": 719,
            "solution": "fn_9(x1, fn_5(Cdr(x1), fn_19(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.84037558685446,
                "explored_percent_lambda": 11.932707355242567,
                "explored_percent_none": 20.226917057902973,
                "kept_percent_concrete": 72.63751763046544,
                "kept_percent_lambda": 27.362482369534554,
                "num_examples": 15,
                "num_explored_concrete": 1734,
                "num_explored_lambda": 305,
                "num_explored_none": 517,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 194,
                "num_values_explored": 2556,
                "num_values_kept": 709,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9881
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=4',\n    inputs_dict={'x1': [[15, 1, 4, 12], [8, 7, 4, 2, 3, 12, 8, 13], [6, 5, 2, 13, 14, 5, 12, 6, 16, 11, 8], [5, 6, 2, 15, 9, 1, 6], [4, 14, 15, 6], [14, 4, 7, 12, 4, 3], [4, 0, 6, 0], [13, 12, 15, 1, 7, 3, 16, 10, 12, 14], [16, 13, 8, 3, 15, 0, 4, 2, 11], [4, 9, 11, 5, 11, 1], [2, 1, 12, 15], [7, 14, 8, 15, 8], [0, 11, 12, 9, 15, 16, 0, 8], [6, 7, 13, 8, 13, 16, 7, 10], [12, 9, 10, 2, 3, 5, 1, 8]]},\n    outputs=[[15, 1, 4], [8, 7, 4, 3, 12, 8, 13], [6, 5, 2, 14, 5, 12, 6, 16, 11, 8], [5, 6, 2, 9, 1, 6], [4, 14, 15], [14, 4, 7, 4, 3], [4, 0, 6], [13, 12, 15, 7, 3, 16, 10, 12, 14], [16, 13, 8, 15, 0, 4, 2, 11], [4, 9, 11, 11, 1], [2, 1, 12], [7, 14, 8, 8], [0, 11, 12, 15, 16, 0, 8], [6, 7, 13, 13, 16, 7, 10], [12, 9, 10, 3, 5, 1, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.053671019617468,
            "num_unique_values": 887,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.72991187143598,
                "explored_percent_lambda": 11.793675479523069,
                "explored_percent_none": 39.47641264904095,
                "kept_percent_concrete": 67.04675028506271,
                "kept_percent_lambda": 32.953249714937286,
                "num_examples": 15,
                "num_explored_concrete": 1880,
                "num_explored_lambda": 455,
                "num_explored_none": 1523,
                "num_inputs": 1,
                "num_kept_concrete": 588,
                "num_kept_lambda": 289,
                "num_values_explored": 3858,
                "num_values_kept": 877,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11739
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=2',\n    inputs_dict={'x1': [[10, 10, 16, 7, 2], [5, 3, 1, 13, 7, 7, 4], [6, 0], [0], [13, 1, 3, 2, 14], [15, 7, 15, 10, 13, 3, 12], [7, 10], [1, 15, 5], [2, 7, 6, 8], [3, 7, 1, 14], [15, 2, 6], [10, 11, 7], [10], [], [7, 0, 4, 12]]},\n    outputs=[[7], [5, 3, 1, 13, 7, 7], [], [], [13, 1, 3], [15, 7, 15, 13, 3], [7], [1, 15, 5], [7], [3, 7, 1], [15], [11, 7], [], [], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.06111195962876,
            "num_unique_values": 899,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.40384615384615,
                "explored_percent_lambda": 11.816801619433198,
                "explored_percent_none": 35.77935222672065,
                "kept_percent_concrete": 67.49156355455568,
                "kept_percent_lambda": 32.50843644544432,
                "num_examples": 15,
                "num_explored_concrete": 2071,
                "num_explored_lambda": 467,
                "num_explored_none": 1414,
                "num_inputs": 1,
                "num_kept_concrete": 600,
                "num_kept_lambda": 289,
                "num_values_explored": 3952,
                "num_values_kept": 889,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11918
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=3',\n    inputs_dict={'x1': [[6], [3], [6, 3, 11, 12], [], [0, 0, 7, 11, 27, 24, 7], [12], [13, 9, 6, 15, 14, 11, 13], [11, 9, 10, 15, 0, 1, 13], [10, 5, 6], [3], [7, 15, 6], [7], [5, 3, 11], [1, 1], [4, 15, 1, 6]]},\n    outputs=[[], [], [11], [], [7, 11, 7], [], [13, 14, 11, 13], [11, 10, 1, 13], [10, 5], [], [7], [7], [5, 11], [1, 1], [4, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3246903377585113,
            "num_unique_values": 233,
            "solution": "fn_10(x1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 32.12913143735588,
                "explored_percent_lambda": 18.0630284396618,
                "explored_percent_none": 49.80784012298232,
                "kept_percent_concrete": 44.39461883408072,
                "kept_percent_lambda": 55.60538116591928,
                "num_examples": 15,
                "num_explored_concrete": 418,
                "num_explored_lambda": 235,
                "num_explored_none": 648,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 124,
                "num_values_explored": 1301,
                "num_values_kept": 223,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1301
            },
            "success": true,
            "task": "Task(\n    name='repeat-k with k=2',\n    inputs_dict={'x1': [[3, 12, 15, 12], [], [15], [2, 10, 13, 15, 3], [0, 4], [13, 6], [4, 11, 11, 12], [13], [4, 16, 0, 8], [6, 7, 16], [6, 6, 11, 5, 9], [9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2], [11]]},\n    outputs=[[3, 12, 15, 12, 3, 12, 15, 12], [], [15, 15], [2, 10, 13, 15, 3, 2, 10, 13, 15, 3], [0, 4, 0, 4], [13, 6, 13, 6], [4, 11, 11, 12, 4, 11, 11, 12], [13, 13], [4, 16, 0, 8, 4, 16, 0, 8], [6, 7, 16, 6, 7, 16], [6, 6, 11, 5, 9, 6, 6, 11, 5, 9], [9, 5, 0, 0, 13, 9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2, 0, 9, 3, 1, 2], [11, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.063680701889098,
            "num_unique_values": 1005,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.19507023588656,
                "explored_percent_lambda": 9.96554465942221,
                "explored_percent_none": 21.839385104691228,
                "kept_percent_concrete": 77.38693467336684,
                "kept_percent_lambda": 22.613065326633166,
                "num_examples": 15,
                "num_explored_concrete": 2573,
                "num_explored_lambda": 376,
                "num_explored_none": 824,
                "num_inputs": 1,
                "num_kept_concrete": 770,
                "num_kept_lambda": 225,
                "num_values_explored": 3773,
                "num_values_kept": 995,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11270
            },
            "success": false,
            "task": "Task(\n    name='repeat-many',\n    inputs_dict={'x1': [[1, 1, 2, 3], [2, 1, 2, 3], [4, 1, 2], [5, 7, 0], [3, 3, 2, 5], [5, 1], [2, 15, 1], [4, 3], [1, 7, 16, 2, 2], [0, 13, 5, 2, 6], [2, 12], [0, 10, 11], [1, 0, 1], [0, 11, 11, 2], [2, 4, 4, 1, 5]]},\n    outputs=[[1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 1, 2, 1, 2, 1, 2], [7, 0, 7, 0, 7, 0, 7, 0, 7, 0], [3, 2, 5, 3, 2, 5, 3, 2, 5], [1, 1, 1, 1, 1], [15, 1, 15, 1], [3, 3, 3, 3], [7, 16, 2, 2], [], [12, 12], [], [0, 1], [], [4, 4, 1, 5, 4, 4, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9665910680778325,
            "num_unique_values": 114,
            "solution": "Map((lambda u1: Car(x1)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 45.08599508599509,
                "explored_percent_lambda": 21.25307125307125,
                "explored_percent_none": 33.66093366093366,
                "kept_percent_concrete": 31.73076923076923,
                "kept_percent_lambda": 68.26923076923077,
                "num_examples": 15,
                "num_explored_concrete": 367,
                "num_explored_lambda": 173,
                "num_explored_none": 274,
                "num_inputs": 1,
                "num_kept_concrete": 33,
                "num_kept_lambda": 71,
                "num_values_explored": 814,
                "num_values_kept": 104,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 814
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=1',\n    inputs_dict={'x1': [[6], [4, 2, 6], [16, 15, 10, 14, 4, 15, 10, 14], [7, 6], [10, 8, 1, 12], [14, 10], [3, 9, 14, 11, 13, 7, 1, 10], [1, 11, 15, 14, 15], [16], [8, 1, 0, 8, 16, 11, 7], [11, 11, 6, 0, 10], [14, 14], [15, 7, 0, 9, 9, 7, 10], [0, 16, 6, 10], [0, 15]]},\n    outputs=[[6], [4, 4, 4], [16, 16, 16, 16, 16, 16, 16, 16], [7, 7], [10, 10, 10, 10], [14, 14], [3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1], [16], [8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11, 11], [14, 14], [15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0], [0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9796503400430083,
            "num_unique_values": 119,
            "solution": "Map((lambda u1: Index(3, x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 49.58382877526754,
                "explored_percent_lambda": 19.85731272294887,
                "explored_percent_none": 30.55885850178359,
                "kept_percent_concrete": 35.77981651376147,
                "kept_percent_lambda": 64.22018348623853,
                "num_examples": 15,
                "num_explored_concrete": 417,
                "num_explored_lambda": 167,
                "num_explored_none": 257,
                "num_inputs": 1,
                "num_kept_concrete": 39,
                "num_kept_lambda": 70,
                "num_values_explored": 841,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 841
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=4',\n    inputs_dict={'x1': [[12, 11, 1, 13, 14, 2, 11, 6, 6, 5, 6], [16, 7, 6, 13, 1, 0, 1, 15, 10, 14], [10, 1, 3, 13, 10, 14], [16, 4, 3, 7, 13, 13, 0, 6, 4], [10, 10, 0, 5, 7, 16, 2, 7, 8, 16], [0, 10, 8, 9, 8, 1, 9, 3], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7], [4, 14, 0, 9, 15, 3, 7, 5, 14, 7], [0, 4, 2, 5], [9, 11, 5, 6, 10, 0, 15, 6], [0, 15, 16, 5], [10, 5, 4, 3, 7, 1, 5, 10, 3, 15], [0, 9, 16, 3, 3, 11, 16, 0], [1, 4, 13, 3], [10, 15, 6, 9, 2]]},\n    outputs=[[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 7, 7, 7], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 6, 6], [5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3], [9, 9, 9, 9, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 28.405267235822976,
            "num_unique_values": 729,
            "solution": "fn_11((lambda u1, u2: ((lambda v1, v2: fn_17(v1, v2)))(u1, u2)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.51495016611295,
                "explored_percent_lambda": 11.929930534581697,
                "explored_percent_none": 42.555119299305346,
                "kept_percent_concrete": 61.33518776077886,
                "kept_percent_lambda": 38.66481223922114,
                "num_examples": 15,
                "num_explored_concrete": 1507,
                "num_explored_lambda": 395,
                "num_explored_none": 1409,
                "num_inputs": 1,
                "num_kept_concrete": 441,
                "num_kept_lambda": 278,
                "num_values_explored": 3311,
                "num_values_kept": 719,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11023
            },
            "success": true,
            "task": "Task(\n    name='reverse',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 12], [], [7, 13, 5, 7, 6], [15, 7, 11], [8, 7, 11, 7, 15, 11], [9, 10, 5, 8, 3], [2], [8, 6, 9], [4, 11], [], [], [15, 15, 11, 5, 3], [11, 5, 5, 6]]},\n    outputs=[[4, 0, 2], [1, 1, 5, 0, 2, 4, 5, 2], [12, 14], [], [6, 7, 5, 13, 7], [11, 7, 15], [11, 15, 7, 11, 7, 8], [3, 8, 5, 10, 9], [2], [9, 6, 8], [11, 4], [], [], [3, 5, 11, 15, 15], [6, 5, 5, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.054854823742062,
            "num_unique_values": 928,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.08843537414965,
                "explored_percent_lambda": 7.426303854875283,
                "explored_percent_none": 21.485260770975056,
                "kept_percent_concrete": 81.37254901960785,
                "kept_percent_lambda": 18.627450980392158,
                "num_examples": 15,
                "num_explored_concrete": 2508,
                "num_explored_lambda": 262,
                "num_explored_none": 758,
                "num_inputs": 1,
                "num_kept_concrete": 747,
                "num_kept_lambda": 171,
                "num_values_explored": 3528,
                "num_values_kept": 918,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10549
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=4',\n    inputs_dict={'x1': [[2, 6, 10, 10, 8, 15, 16, 15, 1, 2, 7, 5, 4, 0, 13], [0, 9, 15, 3, 7], [7, 7, 2, 1, 10, 7, 2, 4, 3, 4, 10, 3, 12, 0, 15, 14], [12, 6, 15, 12, 9, 14, 7, 9, 7, 7, 8, 1], [7, 9, 13, 6, 10, 10, 14, 4, 11, 3, 0, 3, 12, 13, 13, 16], [15, 8, 14, 3, 4, 16, 1, 2, 5, 10, 5, 16, 4, 8], [5, 2, 5, 8, 2, 2, 2, 10, 12, 5, 13], [10, 8, 6, 7, 15, 2, 9, 16, 16, 4, 0, 3, 4, 9, 2], [15, 3, 16, 12, 14, 13, 5, 8, 8, 9], [14, 7, 0, 0, 4, 2, 5, 8, 9, 11, 5, 6, 10, 0, 15, 6, 0], [11, 2, 8, 16, 9, 8, 11, 10, 14, 11, 16, 5, 15, 2, 5, 13], [16, 11, 13, 11, 3, 1, 8, 15, 7, 7], [8, 0, 13, 13, 1, 8, 8, 4, 5], [3, 5, 11, 7, 11, 10, 3, 14, 0], [16, 0, 11, 7, 9, 2, 5, 11]]},\n    outputs=[[5, 4, 0, 13, 2, 6, 10, 10, 8, 15, 16, 15, 1, 2, 7], [9, 15, 3, 7, 0], [12, 0, 15, 14, 7, 7, 2, 1, 10, 7, 2, 4, 3, 4, 10, 3], [7, 7, 8, 1, 12, 6, 15, 12, 9, 14, 7, 9], [12, 13, 13, 16, 7, 9, 13, 6, 10, 10, 14, 4, 11, 3, 0, 3], [5, 16, 4, 8, 15, 8, 14, 3, 4, 16, 1, 2, 5, 10], [10, 12, 5, 13, 5, 2, 5, 8, 2, 2, 2], [3, 4, 9, 2, 10, 8, 6, 7, 15, 2, 9, 16, 16, 4, 0], [5, 8, 8, 9, 15, 3, 16, 12, 14, 13], [0, 15, 6, 0, 14, 7, 0, 0, 4, 2, 5, 8, 9, 11, 5, 6, 10], [15, 2, 5, 13, 11, 2, 8, 16, 9, 8, 11, 10, 14, 11, 16, 5], [8, 15, 7, 7, 16, 11, 13, 11, 3, 1], [8, 8, 4, 5, 8, 0, 13, 13, 1], [10, 3, 14, 0, 3, 5, 11, 7, 11], [9, 2, 5, 11, 16, 0, 11, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.054806237109005,
            "num_unique_values": 918,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.72789896670494,
                "explored_percent_lambda": 7.520091848450058,
                "explored_percent_none": 20.752009184845004,
                "kept_percent_concrete": 81.71806167400881,
                "kept_percent_lambda": 18.281938325991188,
                "num_examples": 15,
                "num_explored_concrete": 2499,
                "num_explored_lambda": 262,
                "num_explored_none": 723,
                "num_inputs": 1,
                "num_kept_concrete": 742,
                "num_kept_lambda": 166,
                "num_values_explored": 3484,
                "num_values_kept": 908,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10545
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=5',\n    inputs_dict={'x1': [[4, 12, 6, 13, 11, 6, 1, 3, 4], [4, 8, 5, 8, 6, 4, 16, 5, 11, 11, 14, 0, 4, 6], [4, 6, 9, 11, 0, 1, 11, 7, 8, 4, 3, 7], [15, 16, 5, 13, 10, 5, 4, 3, 7, 1, 5, 10], [4, 14, 0, 5, 2, 1, 1, 7, 1, 1, 1, 3, 13, 16, 0], [1, 3, 9, 11, 15, 2], [6, 9, 9, 0, 15, 12, 1, 8, 5, 14, 8, 2, 0], [10, 15, 6, 14, 4, 12, 0, 15, 8, 13, 16, 6, 9, 16], [3, 12, 13, 12, 5, 7, 7, 2], [8, 1, 14, 9, 7, 11, 16, 0, 15, 1, 4, 12, 10], [14, 6, 10, 2, 7, 12, 1, 12, 8, 11, 2, 7, 3], [15, 10, 0, 9, 16, 3, 3, 11, 16, 0, 1, 1, 4, 13], [6, 0, 7, 8, 15, 14, 0, 8, 16, 15, 9, 3, 7, 3, 9], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8, 13], [7, 3, 14, 15, 8, 10, 9, 15, 9, 11, 13]]},\n    outputs=[[11, 6, 1, 3, 4, 4, 12, 6, 13], [11, 14, 0, 4, 6, 4, 8, 5, 8, 6, 4, 16, 5, 11], [7, 8, 4, 3, 7, 4, 6, 9, 11, 0, 1, 11], [3, 7, 1, 5, 10, 15, 16, 5, 13, 10, 5, 4], [1, 3, 13, 16, 0, 4, 14, 0, 5, 2, 1, 1, 7, 1, 1], [3, 9, 11, 15, 2, 1], [5, 14, 8, 2, 0, 6, 9, 9, 0, 15, 12, 1, 8], [13, 16, 6, 9, 16, 10, 15, 6, 14, 4, 12, 0, 15, 8], [12, 5, 7, 7, 2, 3, 12, 13], [15, 1, 4, 12, 10, 8, 1, 14, 9, 7, 11, 16, 0], [8, 11, 2, 7, 3, 14, 6, 10, 2, 7, 12, 1, 12], [0, 1, 1, 4, 13, 15, 10, 0, 9, 16, 3, 3, 11, 16], [9, 3, 7, 3, 9, 6, 0, 7, 8, 15, 14, 0, 8, 16, 15], [14, 4, 3, 8, 13, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3], [9, 15, 9, 11, 13, 7, 3, 14, 15, 8, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.346697769127786,
            "num_unique_values": 157,
            "solution": "fn_1((lambda u1: []), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 49.944629014396455,
                "explored_percent_lambda": 14.728682170542635,
                "explored_percent_none": 35.326688815060905,
                "kept_percent_concrete": 48.29931972789116,
                "kept_percent_lambda": 51.70068027210884,
                "num_examples": 15,
                "num_explored_concrete": 451,
                "num_explored_lambda": 133,
                "num_explored_none": 319,
                "num_inputs": 1,
                "num_kept_concrete": 71,
                "num_kept_lambda": 76,
                "num_values_explored": 903,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 903
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=1',\n    inputs_dict={'x1': [[5, 14, 5, 2, 13, 1, 7, 13, 1, 1], [15, 0, 1, 9, 3, 14, 6, 10, 12, 5], [16, 14, 0, 6, 8, 4, 0, 0, 11], [8, 6, 15, 14], [4, 9, 0, 9, 13], [0, 11, 13, 1, 16, 11, 3, 4, 11, 4], [12, 0, 13, 16, 10], [9, 9, 14, 10], [9, 2, 11, 7], [8, 5, 0], [16, 4, 9, 6, 6, 1], [10, 3, 10, 11, 4, 16, 7], [15, 13, 8], [14, 1, 5, 9, 0, 15, 14, 9, 12, 13], [15, 11, 7, 8, 10, 16]]},\n    outputs=[[5], [15], [16], [8], [4], [0], [12], [9], [9], [8], [16], [10], [15], [14], [15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.136600140016526,
            "num_unique_values": 150,
            "solution": "fn_1((lambda u1: fn_0(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 47.08798017348203,
                "explored_percent_lambda": 15.241635687732343,
                "explored_percent_none": 37.67038413878563,
                "kept_percent_concrete": 38.57142857142857,
                "kept_percent_lambda": 61.42857142857143,
                "num_examples": 15,
                "num_explored_concrete": 380,
                "num_explored_lambda": 123,
                "num_explored_none": 304,
                "num_inputs": 1,
                "num_kept_concrete": 54,
                "num_kept_lambda": 86,
                "num_values_explored": 807,
                "num_values_kept": 140,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 807
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=4',\n    inputs_dict={'x1': [[12, 3, 1, 10, 12, 2, 13, 5, 5], [5, 8, 11, 0, 0, 13, 3, 11, 1, 2, 12, 15, 5], [12, 12, 2, 1, 10, 15, 3, 13, 9, 9, 16, 1, 5], [15, 13, 11, 10, 5, 14, 11, 13, 6, 5], [3, 8, 9, 15, 11, 10, 0, 15, 16, 8, 15, 1], [14, 3, 5, 6, 0, 14, 6, 4, 11, 8, 11, 11, 10], [12, 1, 8, 14, 0, 15, 6, 16, 1], [5, 6, 8, 1, 11, 12, 12, 6, 5, 6], [15, 10, 11, 14, 12, 12, 14], [0, 7, 13, 15, 0, 9, 4, 7, 12, 7, 6], [14, 4, 5, 8, 14, 12, 15, 2, 14, 0, 8, 12, 11], [2, 13, 1, 16, 9, 5, 16, 16, 4, 1, 8], [9, 6, 11, 4, 14, 7, 16, 7, 3], [6, 7, 15, 2, 2, 16, 15, 12, 6, 3, 3, 14, 5], [8, 10, 14, 0, 14, 0, 16]]},\n    outputs=[[12, 3, 1, 10], [5, 8, 11, 0], [12, 12, 2, 1], [15, 13, 11, 10], [3, 8, 9, 15], [14, 3, 5, 6], [12, 1, 8, 14], [5, 6, 8, 1], [15, 10, 11, 14], [0, 7, 13, 15], [14, 4, 5, 8], [2, 13, 1, 16], [9, 6, 11, 4], [6, 7, 15, 2], [8, 10, 14, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.3760741809383035,
            "num_unique_values": 184,
            "solution": "fn_4(fn_1((lambda u1: fn_0(x1)), x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 53.820598006644516,
                "explored_percent_lambda": 15.503875968992247,
                "explored_percent_none": 30.675526024363233,
                "kept_percent_concrete": 51.724137931034484,
                "kept_percent_lambda": 48.275862068965516,
                "num_examples": 15,
                "num_explored_concrete": 486,
                "num_explored_lambda": 140,
                "num_explored_none": 277,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 84,
                "num_values_explored": 903,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 903
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=2',\n    inputs_dict={'x1': [[2, 13, 7, 10, 15], [12, 2, 10, 14, 4, 0, 4], [6, 1, 7, 11, 9, 4], [2, 14, 5, 16, 3, 7, 15, 3], [14, 11, 16, 5, 0, 0, 5], [12, 6, 14, 6, 7, 8, 6, 6, 13, 7, 6, 10], [13, 12, 8, 12, 8], [9, 5, 16, 1, 15, 12, 6, 7], [0, 9, 16, 10, 16], [8, 1, 15, 13, 12, 15, 14, 11, 13, 2, 5], [2, 7, 11, 0, 2, 7, 2, 2, 10, 6, 0], [6, 16, 14, 2, 4, 13, 11, 11, 12, 4], [8, 7, 10, 6, 9], [11, 7, 5, 13, 0, 4, 14, 8, 3, 10], [8, 3, 9, 11, 15, 7, 13, 4]]},\n    outputs=[[13, 7], [2, 10], [1, 7], [14, 5], [11, 16], [6, 14], [12, 8], [5, 16], [9, 16], [1, 15], [7, 11], [16, 14], [7, 10], [7, 5], [3, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.073186493013054,
            "num_unique_values": 140,
            "solution": "fn_0(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.672955974842765,
                "explored_percent_lambda": 14.842767295597485,
                "explored_percent_none": 37.484276729559745,
                "kept_percent_concrete": 40.76923076923077,
                "kept_percent_lambda": 59.23076923076923,
                "num_examples": 15,
                "num_explored_concrete": 379,
                "num_explored_lambda": 118,
                "num_explored_none": 298,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 77,
                "num_values_explored": 795,
                "num_values_kept": 130,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 795
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=3',\n    inputs_dict={'x1': [[7, 0, 2, 0, 3, 8, 2, 0, 5, 2], [2, 13, 8, 6, 3, 9, 0, 11, 6, 7, 4], [5, 11, 2, 6, 5, 15, 7, 0, 10, 16], [4, 11, 16, 11, 10, 9, 5, 12, 6, 0, 5], [14, 11, 0, 1, 0, 12, 14, 10, 7], [7, 15, 11, 10, 13, 6, 9, 7, 2, 9, 4, 6, 4], [5, 11, 9, 0, 10, 16, 9, 5, 11], [14, 12, 8, 6, 15, 15, 11, 13, 16, 16, 11, 2, 7], [16, 8, 13, 3, 9, 1, 16, 9, 3, 4], [7, 4, 11, 13, 11, 16, 9, 4, 14, 13, 1, 2, 15], [13, 5, 3, 16, 8, 12], [16, 11, 10, 0, 7, 14], [11, 5, 2, 9, 12, 0, 3, 11, 9, 15], [1, 5, 3, 6, 16, 9], [2, 15, 1, 6, 7, 10, 1, 8, 8, 7, 8]]},\n    outputs=[[0, 2, 0], [13, 8, 6], [11, 2, 6], [11, 16, 11], [11, 0, 1], [15, 11, 10], [11, 9, 0], [12, 8, 6], [8, 13, 3], [4, 11, 13], [5, 3, 16], [11, 10, 0], [5, 2, 9], [5, 3, 6], [15, 1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.575057182926685,
            "num_unique_values": 741,
            "solution": "fn_10(fn_3(x1, fn_0(fn_4(x1))), fn_6(Index(5, x1)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 72.05175600739372,
                "explored_percent_lambda": 10.351201478743068,
                "explored_percent_none": 17.597042513863215,
                "kept_percent_concrete": 73.59781121751026,
                "kept_percent_lambda": 26.40218878248974,
                "num_examples": 15,
                "num_explored_concrete": 1949,
                "num_explored_lambda": 280,
                "num_explored_none": 476,
                "num_inputs": 1,
                "num_kept_concrete": 538,
                "num_kept_lambda": 193,
                "num_values_explored": 2705,
                "num_values_kept": 731,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2705
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=5',\n    inputs_dict={'x1': [[9, 15, 11, 12, 12, 14, 9, 2, 0, 9, 15, 13, 7, 16], [8, 10, 0, 3, 8, 5, 1, 7, 4, 2, 7, 14, 16], [11, 10, 12, 11, 11, 0, 5, 1, 8, 0], [10, 14, 14, 0, 16, 0, 9, 15, 1, 15, 10], [14, 6, 8, 15, 15, 14, 12, 3], [15, 5, 3, 3, 12, 2, 11, 16, 6, 6, 12, 9, 13, 15, 0], [15, 4, 13, 9, 10, 2, 9, 14, 4, 16], [4, 14, 6, 13, 10, 6, 12, 8, 11, 14], [11, 15, 3, 9, 0, 16, 1, 0, 8, 15, 8], [11, 3, 7, 16, 4, 8, 6, 7, 9, 3, 0, 5, 6], [15, 10, 2, 15, 16, 11, 16, 9, 13, 10, 1, 8, 14, 5], [14, 1, 7, 10, 5, 11, 16, 8, 1, 1, 14, 16, 0, 14, 14], [14, 4, 13, 11, 12, 10, 12, 3, 1, 10, 15, 7], [12, 12, 10, 16, 5, 6, 9, 4, 1, 0, 13, 4, 15, 7], [9, 7, 2, 5, 0, 11, 10, 2, 1, 15, 16, 8]]},\n    outputs=[[15, 11, 12, 12, 14], [10, 0, 3, 8, 5], [10, 12, 11, 11, 0], [14, 14, 0, 16, 0], [6, 8, 15, 15, 14], [5, 3, 3, 12, 2], [4, 13, 9, 10, 2], [14, 6, 13, 10, 6], [15, 3, 9, 0, 16], [3, 7, 16, 4, 8], [10, 2, 15, 16, 11], [1, 7, 10, 5, 11], [4, 13, 11, 12, 10], [12, 10, 16, 5, 6], [7, 2, 5, 0, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.52585308579728,
            "num_unique_values": 230,
            "solution": "fn_9(fn_4(x1), fn_6(Index(4, x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.95020746887967,
                "explored_percent_lambda": 14.004149377593361,
                "explored_percent_none": 29.04564315352697,
                "kept_percent_concrete": 58.63636363636363,
                "kept_percent_lambda": 41.36363636363637,
                "num_examples": 15,
                "num_explored_concrete": 549,
                "num_explored_lambda": 135,
                "num_explored_none": 280,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 91,
                "num_values_explored": 964,
                "num_values_kept": 220,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 964
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=3',\n    inputs_dict={'x1': [[9, 5, 7, 11, 0, 7, 16], [16, 16, 12, 7, 5, 4, 15, 1, 11, 1], [5, 3, 4, 11, 12, 2, 8, 12], [3, 9, 3, 2, 14, 6, 2, 8, 14], [7, 13, 9, 7, 8, 15, 9, 15, 7, 4, 9], [3, 3, 16, 13, 4, 15, 14], [8, 13, 13, 11, 6, 15, 7, 8, 5, 10, 1], [4, 6, 3, 11, 8, 0, 13, 2, 12, 10, 12, 12, 15], [3, 10, 15, 15, 6, 3, 4, 10, 12, 11, 7, 15], [15, 5, 13, 13, 16, 11, 3, 7], [16, 10, 5, 13, 10, 7, 5], [9, 6, 3, 12, 2, 3, 11, 6, 2, 7, 11, 2, 13, 8], [4, 3, 2, 1, 10, 0, 14, 0, 14], [1, 15, 7, 4, 2, 15, 1, 7, 10, 3], [6, 1, 1, 7, 1, 12, 3, 5, 1, 12, 11]]},\n    outputs=[[7, 11, 0], [12, 7, 5], [4, 11, 12], [3, 2, 14], [9, 7, 8], [16, 13, 4], [13, 11, 6], [3, 11, 8], [15, 15, 6], [13, 13, 16], [5, 13, 10], [3, 12, 2], [2, 1, 10], [7, 4, 2], [1, 7, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.255534762050956,
            "num_unique_values": 806,
            "solution": "fn_17(fn_0(fn_4(x1)), Index(5, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.43609022556392,
                "explored_percent_lambda": 9.881847475832439,
                "explored_percent_none": 15.682062298603652,
                "kept_percent_concrete": 76.88442211055276,
                "kept_percent_lambda": 23.115577889447238,
                "num_examples": 15,
                "num_explored_concrete": 2079,
                "num_explored_lambda": 276,
                "num_explored_none": 438,
                "num_inputs": 1,
                "num_kept_concrete": 612,
                "num_kept_lambda": 184,
                "num_values_explored": 2793,
                "num_values_kept": 796,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2793
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=4',\n    inputs_dict={'x1': [[15, 10, 1, 10, 15, 13, 5, 4, 3, 12, 0, 5, 1, 9, 4], [13, 11, 15, 0, 16, 16, 1, 2, 16, 11, 2, 13, 14], [4, 11, 16, 9, 3, 9, 3, 5, 8, 8, 12, 11, 0, 6], [2, 10, 13, 10, 15, 1, 0, 11, 0, 15, 3, 7, 4, 11], [9, 8, 16, 9, 14, 9, 12, 1, 1, 0, 13, 0], [15, 11, 1, 3, 16, 2, 15, 2, 16, 5], [0, 5, 15, 2, 7, 11, 8, 4, 12, 2, 4], [10, 9, 3, 3, 4, 8, 9, 6, 6], [16, 4, 13, 12, 3, 14, 12, 16], [6, 9, 12, 0, 0, 3, 13, 11, 13], [8, 7, 16, 2, 13, 8, 14, 14, 15, 9, 8, 9, 1], [9, 1, 10, 0, 14, 12, 5, 1, 12], [0, 9, 14, 0, 7, 12, 14, 4, 7, 0, 12, 10], [9, 0, 6, 6, 12, 7, 3, 13, 8], [8, 10, 5, 12, 3, 8, 0, 16, 8, 2]]},\n    outputs=[[1, 10, 15, 13], [15, 0, 16, 16], [16, 9, 3, 9], [13, 10, 15, 1], [16, 9, 14, 9], [1, 3, 16, 2], [15, 2, 7, 11], [3, 3, 4, 8], [13, 12, 3, 14], [12, 0, 0, 3], [16, 2, 13, 8], [10, 0, 14, 12], [14, 0, 7, 12], [6, 6, 12, 7], [5, 12, 3, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.2942498959600925,
            "num_unique_values": 733,
            "solution": "fn_9(fn_4(x1), fn_0(fn_19(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 69.09722222222223,
                "explored_percent_lambda": 12.307098765432098,
                "explored_percent_none": 18.59567901234568,
                "kept_percent_concrete": 71.23098201936376,
                "kept_percent_lambda": 28.76901798063624,
                "num_examples": 15,
                "num_explored_concrete": 1791,
                "num_explored_lambda": 319,
                "num_explored_none": 482,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 208,
                "num_values_explored": 2592,
                "num_values_kept": 723,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2592
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=5',\n    inputs_dict={'x1': [[8, 5, 10, 10, 13, 4, 5, 1, 4, 5], [2, 8, 14, 13, 9, 7, 3, 1, 8, 3], [9, 3, 15, 15, 11, 1, 0, 3, 6, 14, 12, 3, 8, 4], [1, 0, 5, 5, 13, 10, 14, 4, 11], [5, 11, 10, 6, 5, 14, 1, 2, 4, 1, 2, 5, 6, 15], [14, 1, 6, 4, 10, 10, 13, 9, 1, 10, 4, 3, 12, 8, 14, 13], [13, 0, 15, 4, 12, 16, 4, 3, 2, 7, 5, 6, 0, 0, 14], [12, 13, 2, 11, 3, 1, 16, 11, 4, 12, 2, 1, 1], [0, 1, 4, 1, 7, 8, 12, 15, 14, 12, 9, 2, 15, 5], [3, 15, 15, 7, 15, 7, 11, 15, 14, 5, 4, 7, 10, 6, 4, 2], [14, 7, 14, 14, 0, 8, 10, 4, 1, 9, 0, 9, 4], [11, 1, 2, 6, 9, 7, 13, 2, 3, 16, 8], [5, 0, 14, 1, 3, 6, 0, 6, 16, 3, 2, 14, 8, 7, 8, 16], [2, 11, 6, 1, 16, 9, 12, 12, 9, 5, 6, 4, 13, 16, 14, 6], [16, 11, 0, 8, 5, 11, 15, 6, 12]]},\n    outputs=[[10, 10, 13, 4, 5], [14, 13, 9, 7, 3], [15, 15, 11, 1, 0], [5, 5, 13, 10, 14], [10, 6, 5, 14, 1], [6, 4, 10, 10, 13], [15, 4, 12, 16, 4], [2, 11, 3, 1, 16], [4, 1, 7, 8, 12], [15, 7, 15, 7, 11], [14, 14, 0, 8, 10], [2, 6, 9, 7, 13], [14, 1, 3, 6, 0], [6, 1, 16, 9, 12], [0, 8, 5, 11, 15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5487350169569254,
            "num_unique_values": 174,
            "solution": "fn_3(Map((lambda u1: Index(3, x1)), x1), [])",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.11764705882353,
                "explored_percent_lambda": 16.363636363636363,
                "explored_percent_none": 29.518716577540108,
                "kept_percent_concrete": 55.48780487804878,
                "kept_percent_lambda": 44.51219512195122,
                "num_examples": 15,
                "num_explored_concrete": 506,
                "num_explored_lambda": 153,
                "num_explored_none": 276,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 73,
                "num_values_explored": 935,
                "num_values_kept": 164,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 935
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=1',\n    inputs_dict={'x1': [[4, 14, 2, 9, 2, 14, 16], [0, 0, 3, 2, 15, 14, 2], [13, 13, 12, 9, 14, 1, 12, 4, 14, 8, 8, 0, 1], [10, 3, 6, 1, 10, 12, 5], [10, 5, 5, 12, 14, 10, 3, 6, 7, 15, 0], [13, 16, 7, 9, 12, 14, 2, 9], [4, 8, 10, 12, 12, 3, 13, 4, 7, 10, 10], [10, 10, 14, 13, 9, 8, 7, 13, 10, 12, 11, 4, 16], [7, 8, 3, 14, 10, 10], [0, 6, 2, 7, 9, 8, 11, 4, 9, 11, 2], [2, 8, 12, 12, 3, 7, 5, 12, 3, 13], [9, 16, 10, 5, 14, 0, 1, 4], [8, 13, 9, 1, 16, 0, 7, 5, 7, 11, 3, 2, 8], [15, 12, 4, 9, 16, 11, 8], [16, 10, 10, 2, 9, 6, 10, 4, 1, 7, 14, 8]]},\n    outputs=[[9], [2], [9], [1], [12], [9], [12], [13], [14], [7], [12], [5], [1], [9], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.4544212352484465,
            "num_unique_values": 230,
            "solution": "fn_9(fn_4(Cdr(x1)), fn_6(Index(5, x1)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.989384288747345,
                "explored_percent_lambda": 16.24203821656051,
                "explored_percent_none": 28.768577494692146,
                "kept_percent_concrete": 57.72727272727273,
                "kept_percent_lambda": 42.27272727272727,
                "num_examples": 15,
                "num_explored_concrete": 518,
                "num_explored_lambda": 153,
                "num_explored_none": 271,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 93,
                "num_values_explored": 942,
                "num_values_kept": 220,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 942
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=3',\n    inputs_dict={'x1': [[12, 12, 13, 16, 8, 14, 6, 13], [1, 8, 7, 8, 4, 3, 6, 1, 10, 8, 5, 0, 4, 12, 15], [8, 15, 12, 16, 13, 5, 6, 2], [0, 8, 0, 13, 14, 11, 6, 7, 13, 11, 1, 3], [6, 1, 15, 0, 10, 9, 3, 13, 1, 12, 15, 3, 14, 1, 6], [8, 4, 3, 7, 1, 10, 14, 7], [14, 8, 11, 16, 15, 11, 5, 5, 10, 0, 12, 8, 3, 9], [1, 6, 5, 2, 6, 7, 15, 5, 5, 7], [0, 5, 13, 3, 15, 5, 12, 5, 4, 2, 2, 3, 16], [0, 1, 7, 16, 12, 13, 12, 1, 2], [3, 14, 1, 4, 1, 16, 6, 3, 1, 7, 9], [14, 15, 0, 16, 4, 11, 2, 13, 7, 5, 8], [13, 5, 14, 11, 1, 3, 12, 7, 14, 10, 15, 10, 2], [9, 7, 14, 3, 6, 10, 6, 8, 1], [1, 9, 0, 13, 8, 10, 14, 8, 15, 10, 10, 6, 14]]},\n    outputs=[[16, 8, 14], [8, 4, 3], [16, 13, 5], [13, 14, 11], [0, 10, 9], [7, 1, 10], [16, 15, 11], [2, 6, 7], [3, 15, 5], [16, 12, 13], [4, 1, 16], [16, 4, 11], [11, 1, 3], [3, 6, 10], [13, 8, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.37919705081731,
            "num_unique_values": 809,
            "solution": "fn_17(fn_3(fn_4(x1), fn_0(fn_19(x1))), Index(fn_7(5), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 71.08938547486034,
                "explored_percent_lambda": 11.766759776536313,
                "explored_percent_none": 17.143854748603353,
                "kept_percent_concrete": 72.59073842302878,
                "kept_percent_lambda": 27.409261576971215,
                "num_examples": 15,
                "num_explored_concrete": 2036,
                "num_explored_lambda": 337,
                "num_explored_none": 491,
                "num_inputs": 1,
                "num_kept_concrete": 580,
                "num_kept_lambda": 219,
                "num_values_explored": 2864,
                "num_values_kept": 799,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2864
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=5',\n    inputs_dict={'x1': [[13, 8, 8, 16, 2, 3, 13, 1, 9, 9, 1, 16, 7, 11], [13, 11, 11, 9, 11, 2, 7, 2, 7, 2, 0, 12, 10, 4, 14, 11, 15], [8, 4, 13, 6, 7, 13, 7, 5, 15, 11, 8, 13, 6, 1, 0], [2, 8, 6, 13, 2, 0, 0, 8, 8, 7, 8, 15, 12, 12, 13], [1, 15, 7, 1, 16, 16, 6, 8, 9, 15, 14, 1, 12], [6, 5, 16, 5, 5, 12, 12, 9, 9, 16, 14, 14], [1, 6, 1, 5, 16, 14, 0, 9, 9, 13, 4, 9, 14], [7, 8, 2, 2, 13, 15, 0, 9, 8, 8, 13, 13, 10, 11, 7], [7, 4, 12, 1, 11, 13, 14, 11, 11, 2, 2, 0, 14, 15], [12, 11, 15, 8, 8, 10, 5, 5, 5, 14, 16], [1, 12, 7, 12, 0, 14, 12, 14, 5, 12, 15, 12, 1, 12, 6], [14, 8, 12, 8, 2, 14, 1, 2, 15, 2, 14, 0, 0], [3, 0, 1, 14, 6, 10, 10, 12, 6, 0, 1, 9, 6, 7], [5, 14, 2, 6, 12, 5, 6, 10, 4, 8, 14, 12], [14, 14, 8, 2, 4, 8, 10, 9, 12, 11, 10]]},\n    outputs=[[16, 2, 3, 13, 1], [9, 11, 2, 7, 2], [6, 7, 13, 7, 5], [13, 2, 0, 0, 8], [1, 16, 16, 6, 8], [5, 5, 12, 12, 9], [5, 16, 14, 0, 9], [2, 13, 15, 0, 9], [1, 11, 13, 14, 11], [8, 8, 10, 5, 5], [12, 0, 14, 12, 14], [8, 2, 14, 1, 2], [14, 6, 10, 10, 12], [6, 12, 5, 6, 10], [2, 4, 8, 10, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.226542310323566,
            "num_unique_values": 314,
            "solution": "fn_18(fn_6(Index(4, x1)), (lambda u1: fn_6(Index(5, x1))))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 57.332155477031804,
                "explored_percent_lambda": 18.81625441696113,
                "explored_percent_none": 23.851590106007066,
                "kept_percent_concrete": 67.76315789473684,
                "kept_percent_lambda": 32.23684210526316,
                "num_examples": 15,
                "num_explored_concrete": 649,
                "num_explored_lambda": 213,
                "num_explored_none": 270,
                "num_inputs": 1,
                "num_kept_concrete": 206,
                "num_kept_lambda": 98,
                "num_values_explored": 1132,
                "num_values_kept": 304,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1132
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=2',\n    inputs_dict={'x1': [[4, 6, 13, 1, 3, 8, 5, 4, 16, 8, 6, 15], [9, 4, 5, 8, 0, 4, 2, 11], [4, 15, 6, 1, 4, 4, 11, 5, 15, 12], [5, 3, 5, 12, 1, 7, 15, 12, 6, 1, 8, 15, 5, 2, 16], [13, 13, 3, 6, 5, 1, 1, 7], [2, 15, 5, 13, 14, 10, 2, 2, 15, 16, 1, 13, 15, 4], [9, 9, 11, 10, 14, 11, 13, 12, 10, 16], [15, 10, 14, 9, 4, 7, 1, 7, 1, 1, 5, 8], [5, 12, 16, 6, 2, 14, 9, 15, 6], [1, 12, 11, 6, 4, 4, 16, 9, 10, 0, 4], [9, 12, 12, 15, 15, 7, 5, 0, 1, 13, 11, 0], [6, 13, 14, 5, 13, 15, 16, 5, 8, 3, 15, 2, 0, 12, 6], [7, 15, 9, 9, 2, 2, 3, 8, 14, 6, 5, 6], [9, 7, 1, 9, 14, 0, 9, 4, 14, 16, 8, 0, 4], [0, 11, 16, 14, 7, 7, 11, 11, 4, 5, 15, 6]]},\n    outputs=[[3, 8], [0, 4], [4, 4], [1, 7], [5, 1], [14, 10], [14, 11], [4, 7], [2, 14], [4, 4], [15, 7], [13, 15], [2, 2], [14, 0], [7, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.294180777389556,
            "num_unique_values": 748,
            "solution": "fn_10(fn_0(fn_19(x1)), fn_6(Index(fn_7(5), x1)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 72.19607843137256,
                "explored_percent_lambda": 11.686274509803921,
                "explored_percent_none": 16.11764705882353,
                "kept_percent_concrete": 74.25474254742548,
                "kept_percent_lambda": 25.745257452574524,
                "num_examples": 15,
                "num_explored_concrete": 1841,
                "num_explored_lambda": 298,
                "num_explored_none": 411,
                "num_inputs": 1,
                "num_kept_concrete": 548,
                "num_kept_lambda": 190,
                "num_values_explored": 2550,
                "num_values_kept": 738,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2550
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=4',\n    inputs_dict={'x1': [[7, 6, 5, 7, 13, 8, 11, 13, 3, 16, 12, 10, 6, 15, 11, 3, 4], [8, 3, 6, 2, 1, 10, 1, 13, 7, 6, 3, 8, 11, 11, 8, 10, 8], [12, 4, 7, 1, 8, 1, 2, 3, 7, 5], [12, 4, 14, 10, 8, 12, 12, 9, 1, 0, 4, 0, 15, 13, 1, 11], [8, 1, 8, 16, 7, 10, 9, 3, 9, 9, 10, 3, 15, 16, 5, 5], [11, 13, 13, 3, 4, 15, 1, 7, 10, 13, 7], [11, 4, 5, 14, 3, 13, 3, 0, 8, 6, 11, 0, 0], [16, 3, 10, 5, 6, 16, 1, 11, 7, 13, 13, 13, 4], [11, 15, 13, 3, 10, 16, 13, 3, 11, 5, 15, 6, 6, 14, 6, 10, 9], [5, 12, 3, 12, 15, 2, 6, 6, 15, 11, 16, 2], [2, 3, 9, 15, 1, 14, 7, 13, 10, 12, 14, 1, 11, 5, 12], [0, 8, 1, 11, 12, 14, 12, 5, 7, 4, 10, 13, 6, 4], [0, 9, 12, 15, 16, 4, 2, 7, 8, 2, 0, 2], [1, 4, 15, 3, 15, 8, 14, 5, 9, 4, 4, 2, 15, 7, 8], [13, 2, 16, 15, 14, 4, 10, 0, 10, 0, 3]]},\n    outputs=[[13, 8, 11, 13], [1, 10, 1, 13], [8, 1, 2, 3], [8, 12, 12, 9], [7, 10, 9, 3], [4, 15, 1, 7], [3, 13, 3, 0], [6, 16, 1, 11], [10, 16, 13, 3], [15, 2, 6, 6], [1, 14, 7, 13], [12, 14, 12, 5], [16, 4, 2, 7], [15, 8, 14, 5], [14, 4, 10, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.051368943881243,
            "num_unique_values": 831,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.31115660184238,
                "explored_percent_lambda": 11.258955987717503,
                "explored_percent_none": 40.429887410440124,
                "kept_percent_concrete": 65.28623629719854,
                "kept_percent_lambda": 34.713763702801465,
                "num_examples": 15,
                "num_explored_concrete": 1888,
                "num_explored_lambda": 440,
                "num_explored_none": 1580,
                "num_inputs": 1,
                "num_kept_concrete": 536,
                "num_kept_lambda": 285,
                "num_values_explored": 3908,
                "num_values_kept": 821,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11825
            },
            "success": false,
            "task": "Task(\n    name='sort',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [7, 2, 10, 13], [9], [0, 14], [], [8, 2, 10, 14], [], [11, 8, 14, 7, 8], [8], [12, 2, 8, 5, 15], [9, 3, 8], [16, 0], [15], [13]]},\n    outputs=[[0, 2, 4], [0, 1, 1, 2, 2, 4, 5, 5], [2, 7, 10, 13], [9], [0, 14], [], [2, 8, 10, 14], [], [7, 8, 8, 11, 14], [8], [2, 5, 8, 12, 15], [3, 8, 9], [0, 16], [15], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9407025841064751,
            "num_unique_values": 92,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 54.80225988700565,
                "explored_percent_lambda": 29.661016949152543,
                "explored_percent_none": 15.536723163841808,
                "kept_percent_concrete": 13.414634146341463,
                "kept_percent_lambda": 86.58536585365853,
                "num_examples": 15,
                "num_explored_concrete": 194,
                "num_explored_lambda": 105,
                "num_explored_none": 55,
                "num_inputs": 1,
                "num_kept_concrete": 11,
                "num_kept_lambda": 71,
                "num_values_explored": 354,
                "num_values_kept": 82,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 354
            },
            "success": true,
            "task": "Task(\n    name='tail',\n    inputs_dict={'x1': [[5, 9, 1], [12, 4], [2, 3, 6, 7], [5], [13, 2, 2, 13, 4, 3], [0, 1, 4], [9, 5, 7, 5, 4, 1], [13, 0, 4, 12], [6, 6, 3, 14], [11, 12, 14, 1, 2, 15, 9], [0, 1, 0, 2, 11, 0], [2, 10, 3, 12], [5, 9, 14], [6, 8, 2, 7, 6, 9, 8], [1, 7, 4, 5, 3]]},\n    outputs=[[9, 1], [4], [3, 6, 7], [], [2, 2, 13, 4, 3], [1, 4], [5, 7, 5, 4, 1], [0, 4, 12], [6, 3, 14], [12, 14, 1, 2, 15, 9], [1, 0, 2, 11, 0], [10, 3, 12], [9, 14], [8, 2, 7, 6, 9, 8], [7, 4, 5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.382432567887008,
            "num_unique_values": 146,
            "solution": "fn_1((lambda u1: []), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.411167512690355,
                "explored_percent_lambda": 13.197969543147208,
                "explored_percent_none": 39.390862944162436,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 15,
                "num_explored_concrete": 467,
                "num_explored_lambda": 130,
                "num_explored_none": 388,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 985,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 985
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=1',\n    inputs_dict={'x1': [[1, 16, 3, 16, 0], [4, 9, 4], [14, 12, 5, 12, 2, 10], [11, 16], [15, 0, 4, 1], [10, 9, 0, 12], [8, 0], [12, 5, 4, 11, 4, 4], [4, 3, 14], [10, 13, 10, 5], [6, 7, 12, 16], [15, 8, 10, 14, 15, 5, 11], [15, 12], [2, 0, 7], [2, 10, 15, 3, 11]]},\n    outputs=[[1], [4], [14], [11], [15], [10], [8], [12], [4], [10], [6], [15], [15], [2], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.811800244729966,
            "num_unique_values": 164,
            "solution": "fn_4(fn_1((lambda u1: fn_0(fn_1((lambda u1: x1), x1))), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 18.674136321195146,
                "explored_percent_none": 37.62838468720822,
                "kept_percent_concrete": 44.8051948051948,
                "kept_percent_lambda": 55.1948051948052,
                "num_examples": 15,
                "num_explored_concrete": 468,
                "num_explored_lambda": 200,
                "num_explored_none": 403,
                "num_inputs": 1,
                "num_kept_concrete": 69,
                "num_kept_lambda": 85,
                "num_values_explored": 1071,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1071
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=2',\n    inputs_dict={'x1': [[7, 10, 3, 0, 7, 7], [3, 6, 2, 14], [7, 4, 4, 16], [15, 0, 14, 12, 16, 15, 1, 14], [5, 2, 13, 4, 15, 6, 14, 8], [13, 14, 1], [14, 2, 11, 4, 1, 6, 11, 4, 1], [14, 14], [7, 6], [3, 5, 1, 15, 2, 14, 14, 1, 11], [11, 2, 1, 14, 8, 6, 9], [7, 16, 11, 2, 2, 5, 12, 2], [15, 0, 16, 1, 2, 5], [1, 9, 12, 12, 2, 3, 5, 15], [14, 7, 1, 11]]},\n    outputs=[[7, 10], [3, 6], [7, 4], [15, 0], [5, 2], [13, 14], [14, 2], [14, 14], [7, 6], [3, 5], [11, 2], [7, 16], [15, 0], [1, 9], [14, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.043464852962643,
            "num_unique_values": 138,
            "solution": "fn_0(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 45.2760736196319,
                "explored_percent_lambda": 17.300613496932517,
                "explored_percent_none": 37.423312883435585,
                "kept_percent_concrete": 38.28125,
                "kept_percent_lambda": 61.71875,
                "num_examples": 15,
                "num_explored_concrete": 369,
                "num_explored_lambda": 141,
                "num_explored_none": 305,
                "num_inputs": 1,
                "num_kept_concrete": 49,
                "num_kept_lambda": 79,
                "num_values_explored": 815,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 815
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=3',\n    inputs_dict={'x1': [[7, 3, 11, 12, 6, 7, 13, 9, 9], [1, 7, 9, 2, 2, 6, 6, 15, 1], [2, 13, 16, 16, 1], [0, 2, 15], [6, 5, 11, 7], [7, 7, 15, 15], [2, 13, 8, 1, 9], [1, 10, 10], [14, 6, 0, 9, 4, 13], [11, 2, 16, 13, 6, 16, 8, 2, 11, 8], [15, 7, 11, 10, 10, 9, 8], [7, 4, 16, 15, 16, 3, 10, 11, 3], [1, 2, 0, 13, 7, 10, 12, 4], [10, 7, 14], [8, 15, 6, 6, 1, 5]]},\n    outputs=[[7, 3, 11], [1, 7, 9], [2, 13, 16], [0, 2, 15], [6, 5, 11], [7, 7, 15], [2, 13, 8], [1, 10, 10], [14, 6, 0], [11, 2, 16], [15, 7, 11], [7, 4, 16], [1, 2, 0], [10, 7, 14], [8, 15, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.1977936821058393,
            "num_unique_values": 148,
            "solution": "fn_1((lambda u1: fn_0(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.42253521126761,
                "explored_percent_lambda": 15.727699530516432,
                "explored_percent_none": 38.84976525821596,
                "kept_percent_concrete": 41.30434782608695,
                "kept_percent_lambda": 58.69565217391305,
                "num_examples": 15,
                "num_explored_concrete": 387,
                "num_explored_lambda": 134,
                "num_explored_none": 331,
                "num_inputs": 1,
                "num_kept_concrete": 57,
                "num_kept_lambda": 81,
                "num_values_explored": 852,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 852
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=4',\n    inputs_dict={'x1': [[12, 3, 13, 16, 6, 4, 12, 2, 16, 12], [14, 15, 3, 1, 3, 1, 8, 2, 1, 8], [7, 13, 13, 8], [8, 9, 9, 11, 0], [12, 2, 6, 8, 3, 14, 12, 7, 16, 16, 5], [9, 1, 6, 11], [3, 9, 9, 10, 3, 3], [8, 9, 3, 11, 1], [14, 12, 6, 14, 16, 4], [5, 2, 4, 3], [10, 15, 5, 3, 4, 9, 6, 14, 6], [1, 11, 15, 7, 12], [3, 10, 3, 15], [7, 7, 12, 5], [0, 6, 11, 0, 7, 6, 0, 10, 9, 6, 6]]},\n    outputs=[[12, 3, 13, 16], [14, 15, 3, 1], [7, 13, 13, 8], [8, 9, 9, 11], [12, 2, 6, 8], [9, 1, 6, 11], [3, 9, 9, 10], [8, 9, 3, 11], [14, 12, 6, 14], [5, 2, 4, 3], [10, 15, 5, 3], [1, 11, 15, 7], [3, 10, 3, 15], [7, 7, 12, 5], [0, 6, 11, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.041472340002656,
            "num_unique_values": 911,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.60757131431619,
                "explored_percent_lambda": 8.131165022660625,
                "explored_percent_none": 20.261263663023193,
                "kept_percent_concrete": 79.57824639289679,
                "kept_percent_lambda": 20.42175360710322,
                "num_examples": 15,
                "num_explored_concrete": 2686,
                "num_explored_lambda": 305,
                "num_explored_none": 760,
                "num_inputs": 1,
                "num_kept_concrete": 717,
                "num_kept_lambda": 184,
                "num_values_explored": 3751,
                "num_values_kept": 901,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11202
            },
            "success": false,
            "task": "Task(\n    name='sort-and-deduplicate',\n    inputs_dict={'x1': [[7, 0, 1, 6], [9, 10, 2, 1], [7, 6, 8, 0], [7, 3, 9, 0, 1], [4, 5], [2, 10, 9], [6, 1, 4], [3, 4, 2], [8, 10, 2], [1, 10, 7], [10, 8, 6], [9, 3, 8], [4, 6], [2, 3, 9, 6], [3, 4, 0]]},\n    outputs=[[0, 1, 6, 7], [1, 2, 9, 10], [0, 6, 7, 8], [0, 1, 3, 7, 9], [4, 5], [2, 9, 10], [1, 4, 6], [2, 3, 4], [2, 8, 10], [1, 7, 10], [6, 8, 10], [3, 8, 9], [4, 6], [2, 3, 6, 9], [0, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.06109177786857,
            "num_unique_values": 979,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.20374220374221,
                "explored_percent_lambda": 6.237006237006237,
                "explored_percent_none": 26.55925155925156,
                "kept_percent_concrete": 88.23529411764706,
                "kept_percent_lambda": 11.764705882352942,
                "num_examples": 15,
                "num_explored_concrete": 2586,
                "num_explored_lambda": 240,
                "num_explored_none": 1022,
                "num_inputs": 1,
                "num_kept_concrete": 855,
                "num_kept_lambda": 114,
                "num_values_explored": 3848,
                "num_values_kept": 969,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11723
            },
            "success": false,
            "task": "Task(\n    name='+1 maximum list',\n    inputs_dict={'x1': [[8, 5, 10, 4], [5, 6, 8, 6, 4], [3, 0, 9], [9, 9, 6, 5], [2, 5, 8], [0, 3, 2, 3, 10], [1, 1, 8], [5, 10, 0, 3, 2], [5, 4, 0], [5, 6, 9], [4, 5], [6, 5], [3, 3, 5, 2], [6, 0, 0, 2, 6], [0, 9]]},\n    outputs=[11, 9, 10, 10, 9, 11, 9, 11, 6, 10, 6, 7, 6, 7, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04979930911213,
            "num_unique_values": 880,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.56041131105398,
                "explored_percent_lambda": 5.938303341902314,
                "explored_percent_none": 25.5012853470437,
                "kept_percent_concrete": 84.25287356321839,
                "kept_percent_lambda": 15.74712643678161,
                "num_examples": 15,
                "num_explored_concrete": 2667,
                "num_explored_lambda": 231,
                "num_explored_none": 992,
                "num_inputs": 1,
                "num_kept_concrete": 733,
                "num_kept_lambda": 137,
                "num_values_explored": 3890,
                "num_values_kept": 870,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11634
            },
            "success": false,
            "task": "Task(\n    name='range +1 maximum list',\n    inputs_dict={'x1': [[5, 8], [2, 9, 9, 5, 5], [0, 0, 6, 7], [0, 10, 5], [2, 9, 1], [10, 8, 0], [7, 9, 3, 0, 5], [3, 0], [10, 0], [9, 1, 5], [5, 8, 0], [7, 9], [2, 2, 6], [8, 0], [3, 5, 3, 4]]},\n    outputs=[[0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.4437813707627356,
            "num_unique_values": 298,
            "solution": "fn_16(x1, (lambda u1: ((lambda v1: IsSquare(v1)))(u1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.59312549960032,
                "explored_percent_lambda": 15.347721822541967,
                "explored_percent_none": 26.059152677857714,
                "kept_percent_concrete": 65.97222222222223,
                "kept_percent_lambda": 34.02777777777778,
                "num_examples": 15,
                "num_explored_concrete": 733,
                "num_explored_lambda": 192,
                "num_explored_none": 326,
                "num_inputs": 1,
                "num_kept_concrete": 190,
                "num_kept_lambda": 98,
                "num_values_explored": 1251,
                "num_values_kept": 288,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1251
            },
            "success": true,
            "task": "Task(\n    name='keep squares',\n    inputs_dict={'x1': [[4, 4, 3, 16, 25, 25, 3], [6, 4, 0, 25, 0, 4, 9], [0, 2, 0, 4, 9, 9, 4], [9, 4, 0, 4, 9, 0, 4], [8, 0, 9, 6, 25, 1, 16], [16, 5, 8, 7, 4, 1, 25], [6, 16, 4, 4, 1, 4, 0], [5, 3, 16, 16, 0, 8, 6], [7, 0, 1, 0, 25, 1, 25], [4, 9, 25, 7, 7, 1, 25], [9, 16, 25, 16, 6, 0, 7], [1, 0, 0, 16, 6, 9, 6], [4, 0, 16, 0, 0, 7, 9], [4, 0, 6, 9, 1, 5, 4], [1, 9, 1, 16, 3, 9, 2]]},\n    outputs=[[4, 4, 16, 25, 25], [4, 0, 25, 0, 4, 9], [0, 0, 4, 9, 9, 4], [9, 4, 0, 4, 9, 0, 4], [0, 9, 25, 1, 16], [16, 4, 1, 25], [16, 4, 4, 1, 4, 0], [16, 16, 0], [0, 1, 0, 25, 1, 25], [4, 9, 25, 1, 25], [9, 16, 25, 16, 0], [1, 0, 0, 16, 9], [4, 0, 16, 0, 0, 9], [4, 0, 9, 1, 4], [1, 9, 1, 16, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.353028593119234,
            "num_unique_values": 298,
            "solution": "fn_16(x1, (lambda u1: ((lambda v1: IsPrime(v1)))(u1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 55.79831932773109,
                "explored_percent_lambda": 12.352941176470589,
                "explored_percent_none": 31.84873949579832,
                "kept_percent_concrete": 62.84722222222222,
                "kept_percent_lambda": 37.15277777777778,
                "num_examples": 15,
                "num_explored_concrete": 664,
                "num_explored_lambda": 147,
                "num_explored_none": 379,
                "num_inputs": 1,
                "num_kept_concrete": 181,
                "num_kept_lambda": 107,
                "num_values_explored": 1190,
                "num_values_kept": 288,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1190
            },
            "success": true,
            "task": "Task(\n    name='keep primes',\n    inputs_dict={'x1': [[13, 31, 4, 8, 2, 17, 2], [31, 5, 9, 9, 3, 1, 5], [37, 11, 2, 5, 7, 29, 7], [6, 6, 3, 3, 5, 3, 7], [0, 23, 13, 8, 9, 6, 7], [2, 17, 2, 11, 17, 5, 23], [5, 11, 6, 31, 17, 8, 17], [2, 2, 0, 13, 4, 4, 6], [9, 11, 5, 37, 17, 5, 1], [4, 1, 19, 1, 23, 19, 2], [4, 5, 31, 31, 7, 3, 2], [2, 2, 3, 23, 5, 7, 8], [13, 13, 7, 29, 37, 7, 29], [7, 3, 29, 5, 11, 23, 5], [11, 2, 7, 7, 0, 7, 6]]},\n    outputs=[[13, 31, 2, 17, 2], [31, 5, 3, 5], [37, 11, 2, 5, 7, 29, 7], [3, 3, 5, 3, 7], [23, 13, 7], [2, 17, 2, 11, 17, 5, 23], [5, 11, 31, 17, 17], [2, 2, 13], [11, 5, 37, 17, 5], [19, 23, 19, 2], [5, 31, 31, 7, 3, 2], [2, 2, 3, 23, 5, 7], [13, 13, 7, 29, 37, 7, 29], [7, 3, 29, 5, 11, 23, 5], [11, 2, 7, 7, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.508543455041945,
            "num_unique_values": 265,
            "solution": "fn_14(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 54.146341463414636,
                "explored_percent_lambda": 13.902439024390244,
                "explored_percent_none": 31.951219512195124,
                "kept_percent_concrete": 61.1764705882353,
                "kept_percent_lambda": 38.8235294117647,
                "num_examples": 15,
                "num_explored_concrete": 666,
                "num_explored_lambda": 171,
                "num_explored_none": 393,
                "num_inputs": 1,
                "num_kept_concrete": 156,
                "num_kept_lambda": 99,
                "num_values_explored": 1230,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1230
            },
            "success": true,
            "task": "Task(\n    name='remove eq 0',\n    inputs_dict={'x1': [[4, 5, 5, 0, 4], [6, 1, 2, 0, 1], [0, 5, 5, 0, 1], [3, 4, 6, 5, 0], [1, 3, 5, 6, 6], [1, 6, 2, 6, 4], [6, 5, 0, 2, 2], [5, 2, 5, 3, 3], [1, 4, 3, 0, 2], [0, 3, 1, 5, 0], [0, 3, 3, 3, 1], [4, 2, 0, 4, 5], [5, 3, 4, 1, 0], [4, 6, 6, 5, 1], [5, 6, 1, 3, 1]]},\n    outputs=[[4, 5, 5, 4], [6, 1, 2, 1], [5, 5, 1], [3, 4, 6, 5], [1, 3, 5, 6, 6], [1, 6, 2, 6, 4], [6, 5, 2, 2], [5, 2, 5, 3, 3], [1, 4, 3, 2], [3, 1, 5], [3, 3, 3, 1], [4, 2, 4, 5], [5, 3, 4, 1], [4, 6, 6, 5, 1], [5, 6, 1, 3, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2326548947021365,
            "num_unique_values": 248,
            "solution": "fn_12(x1, 0)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.054530874097836,
                "explored_percent_lambda": 16.840417000801924,
                "explored_percent_none": 27.10505212510024,
                "kept_percent_concrete": 65.12605042016807,
                "kept_percent_lambda": 34.87394957983193,
                "num_examples": 15,
                "num_explored_concrete": 699,
                "num_explored_lambda": 210,
                "num_explored_none": 338,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 83,
                "num_values_explored": 1247,
                "num_values_kept": 238,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1247
            },
            "success": true,
            "task": "Task(\n    name='remove gt 0',\n    inputs_dict={'x1': [[6, 1, 1, 5, 3], [3, 3, 5, 0, 2], [5, 3, 1, 0, 6], [1, 5, 3, 0, 5], [3, 0, 3, 5, 4], [5, 3, 6, 2, 0], [2, 6, 5, 5, 5], [6, 1, 3, 2, 5], [4, 3, 6, 3, 4], [3, 4, 0, 5, 2], [6, 0, 3, 3, 0], [3, 6, 1, 0, 2], [0, 3, 1, 4, 4], [1, 0, 4, 5, 4], [1, 2, 3, 3, 6]]},\n    outputs=[[], [0], [0], [0], [0], [0], [], [], [], [0], [0, 0], [0], [0], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.343691725283861,
            "num_unique_values": 241,
            "solution": "fn_12(x1, 1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.64423076923077,
                "explored_percent_lambda": 12.900641025641026,
                "explored_percent_none": 34.455128205128204,
                "kept_percent_concrete": 63.2034632034632,
                "kept_percent_lambda": 36.7965367965368,
                "num_examples": 15,
                "num_explored_concrete": 657,
                "num_explored_lambda": 161,
                "num_explored_none": 430,
                "num_inputs": 1,
                "num_kept_concrete": 146,
                "num_kept_lambda": 85,
                "num_values_explored": 1248,
                "num_values_kept": 231,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1248
            },
            "success": true,
            "task": "Task(\n    name='keep eq 1',\n    inputs_dict={'x1': [[6, 5, 3, 4, 3], [4, 0, 4, 6, 0], [1, 3, 0, 0, 4], [5, 5, 2, 3, 5], [3, 0, 6, 5, 2], [1, 5, 0, 5, 3], [1, 2, 1, 4, 5], [4, 6, 3, 4, 3], [1, 1, 2, 1, 4], [6, 6, 1, 0, 1], [2, 3, 5, 6, 2], [5, 2, 1, 5, 0], [1, 2, 2, 5, 1], [0, 1, 5, 6, 3], [2, 3, 2, 2, 0]]},\n    outputs=[[], [], [1], [], [], [1], [1, 1], [], [1, 1, 1], [1, 1], [], [1], [1, 1], [1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.541404366027564,
            "num_unique_values": 265,
            "solution": "fn_14(x1, 1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 55.248618784530386,
                "explored_percent_lambda": 13.654301499605367,
                "explored_percent_none": 31.097079715864247,
                "kept_percent_concrete": 60.3921568627451,
                "kept_percent_lambda": 39.6078431372549,
                "num_examples": 15,
                "num_explored_concrete": 700,
                "num_explored_lambda": 173,
                "num_explored_none": 394,
                "num_inputs": 1,
                "num_kept_concrete": 154,
                "num_kept_lambda": 101,
                "num_values_explored": 1267,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1267
            },
            "success": true,
            "task": "Task(\n    name='keep gt 1',\n    inputs_dict={'x1': [[0, 0, 5, 1, 0], [2, 3, 4, 6, 4], [1, 3, 1, 6, 0], [1, 5, 5, 5, 5], [1, 6, 1, 0, 4], [3, 3, 4, 2, 6], [0, 5, 0, 5, 6], [4, 2, 1, 3, 3], [0, 4, 0, 2, 5], [3, 6, 2, 0, 4], [2, 6, 6, 0, 0], [2, 6, 4, 6, 5], [1, 1, 1, 2, 6], [0, 0, 6, 2, 6], [1, 6, 6, 0, 0]]},\n    outputs=[[5], [2, 3, 4, 6, 4], [3, 6], [5, 5, 5, 5], [6, 4], [3, 3, 4, 2, 6], [5, 5, 6], [4, 2, 3, 3], [4, 2, 5], [3, 6, 2, 4], [2, 6, 6], [2, 6, 4, 6, 5], [2, 6], [6, 2, 6], [6, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5313903433270752,
            "num_unique_values": 290,
            "solution": "fn_16(x1, (lambda u1: ((lambda v1: Greater(3, v1)))(u1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 54.249404289118345,
                "explored_percent_lambda": 10.563939634630659,
                "explored_percent_none": 35.18665607625099,
                "kept_percent_concrete": 64.28571428571429,
                "kept_percent_lambda": 35.714285714285715,
                "num_examples": 15,
                "num_explored_concrete": 683,
                "num_explored_lambda": 133,
                "num_explored_none": 443,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 100,
                "num_values_explored": 1259,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1259
            },
            "success": true,
            "task": "Task(\n    name='remove gt 2',\n    inputs_dict={'x1': [[2, 3, 3, 4, 3], [4, 2, 6, 6, 5], [1, 4, 0, 4, 4], [4, 3, 0, 6, 0], [2, 4, 2, 5, 0], [5, 1, 5, 1, 6], [6, 2, 4, 1, 5], [0, 4, 0, 6, 0], [4, 5, 1, 2, 0], [4, 4, 5, 2, 4], [4, 3, 2, 3, 5], [0, 5, 4, 2, 2], [6, 2, 3, 5, 6], [0, 2, 3, 3, 3], [6, 0, 5, 4, 2]]},\n    outputs=[[2], [2], [1, 0], [0, 0], [2, 2, 0], [1, 1], [2, 1], [0, 0, 0], [1, 2, 0], [2], [2], [0, 2, 2], [2], [0, 2], [0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.5962805123999715,
            "num_unique_values": 267,
            "solution": "fn_14(x1, 3)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 55.599060297572436,
                "explored_percent_lambda": 10.5716523101018,
                "explored_percent_none": 33.82928739232576,
                "kept_percent_concrete": 63.81322957198444,
                "kept_percent_lambda": 36.18677042801556,
                "num_examples": 15,
                "num_explored_concrete": 710,
                "num_explored_lambda": 135,
                "num_explored_none": 432,
                "num_inputs": 1,
                "num_kept_concrete": 164,
                "num_kept_lambda": 93,
                "num_values_explored": 1277,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1277
            },
            "success": true,
            "task": "Task(\n    name='keep gt 3',\n    inputs_dict={'x1': [[1, 2, 3, 2, 2], [1, 0, 0, 6, 0], [6, 0, 0, 6, 3], [5, 2, 0, 5, 4], [3, 5, 0, 0, 0], [3, 1, 6, 0, 5], [3, 3, 6, 4, 4], [2, 5, 5, 3, 5], [3, 6, 2, 3, 5], [4, 5, 6, 2, 1], [0, 0, 6, 4, 0], [3, 1, 0, 4, 4], [5, 6, 5, 2, 3], [0, 6, 3, 3, 0], [6, 2, 5, 3, 2]]},\n    outputs=[[], [6], [6, 6], [5, 5, 4], [5], [6, 5], [6, 4, 4], [5, 5, 5], [6, 5], [4, 5, 6], [6, 4], [4, 4], [5, 6, 5], [6], [6, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.7522935779816514
}