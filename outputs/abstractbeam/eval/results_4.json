{
    "num_tasks": 104,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 9.035310472128913,
            "num_unique_values": 95,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Add(5, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 69.36170212765957,
                "explored_percent_lambda": 22.97872340425532,
                "explored_percent_none": 7.659574468085107,
                "kept_percent_concrete": 57.64705882352941,
                "kept_percent_lambda": 42.35294117647059,
                "num_examples": 15,
                "num_explored_concrete": 163,
                "num_explored_lambda": 54,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 49,
                "num_kept_lambda": 36,
                "num_values_explored": 235,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 235
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.1665413121227,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.351481736733284,
                "explored_percent_lambda": 14.059269469331495,
                "explored_percent_none": 45.58924879393522,
                "kept_percent_concrete": 61.666666666666664,
                "kept_percent_lambda": 38.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 1171,
                "num_explored_lambda": 408,
                "num_explored_none": 1323,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 138,
                "num_values_explored": 2902,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89175
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.86803844897076,
            "num_unique_values": 368,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.20644216691069,
                "explored_percent_lambda": 11.969253294289897,
                "explored_percent_none": 39.82430453879942,
                "kept_percent_concrete": 73.74301675977654,
                "kept_percent_lambda": 26.256983240223462,
                "num_examples": 15,
                "num_explored_concrete": 1317,
                "num_explored_lambda": 327,
                "num_explored_none": 1088,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 94,
                "num_values_explored": 2732,
                "num_values_kept": 358,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86062
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.076809362974,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.05191256830601,
                "explored_percent_lambda": 13.729508196721312,
                "explored_percent_none": 45.21857923497268,
                "kept_percent_concrete": 61.0079575596817,
                "kept_percent_lambda": 38.9920424403183,
                "num_examples": 15,
                "num_explored_concrete": 1202,
                "num_explored_lambda": 402,
                "num_explored_none": 1324,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 147,
                "num_values_explored": 2928,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92189
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.0285294849891,
            "num_unique_values": 376,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.87813134732566,
                "explored_percent_lambda": 14.691943127962086,
                "explored_percent_none": 45.42992552471225,
                "kept_percent_concrete": 62.568306010928964,
                "kept_percent_lambda": 37.431693989071036,
                "num_examples": 15,
                "num_explored_concrete": 1178,
                "num_explored_lambda": 434,
                "num_explored_none": 1342,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 137,
                "num_values_explored": 2954,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92666
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3601880120113492,
            "num_unique_values": 165,
            "solution": "fn_67(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 50.53995680345572,
                "explored_percent_lambda": 20.302375809935207,
                "explored_percent_none": 29.15766738660907,
                "kept_percent_concrete": 65.80645161290323,
                "kept_percent_lambda": 34.193548387096776,
                "num_examples": 15,
                "num_explored_concrete": 234,
                "num_explored_lambda": 94,
                "num_explored_none": 135,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 53,
                "num_values_explored": 463,
                "num_values_kept": 155,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 463
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4166904629673809,
            "num_unique_values": 169,
            "solution": "fn_80(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 55.60081466395112,
                "explored_percent_lambda": 14.663951120162933,
                "explored_percent_none": 29.735234215885946,
                "kept_percent_concrete": 69.18238993710692,
                "kept_percent_lambda": 30.81761006289308,
                "num_examples": 15,
                "num_explored_concrete": 273,
                "num_explored_lambda": 72,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 49,
                "num_values_explored": 491,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 491
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5866685048677027,
            "num_unique_values": 209,
            "solution": "fn_134(fn_9(5, x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 53.724247226624406,
                "explored_percent_lambda": 12.202852614896988,
                "explored_percent_none": 34.0729001584786,
                "kept_percent_concrete": 75.37688442211055,
                "kept_percent_lambda": 24.623115577889447,
                "num_examples": 15,
                "num_explored_concrete": 339,
                "num_explored_lambda": 77,
                "num_explored_none": 215,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 49,
                "num_values_explored": 631,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 631
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4470819451380521,
            "num_unique_values": 195,
            "solution": "fn_84(5, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.88270377733598,
                "explored_percent_lambda": 19.08548707753479,
                "explored_percent_none": 28.031809145129223,
                "kept_percent_concrete": 69.1891891891892,
                "kept_percent_lambda": 30.81081081081081,
                "num_examples": 15,
                "num_explored_concrete": 266,
                "num_explored_lambda": 96,
                "num_explored_none": 141,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 57,
                "num_values_explored": 503,
                "num_values_kept": 185,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 503
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4485181130003184,
            "num_unique_values": 171,
            "solution": "fn_80(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 51.323828920570264,
                "explored_percent_lambda": 20.570264765784113,
                "explored_percent_none": 28.105906313645622,
                "kept_percent_concrete": 62.732919254658384,
                "kept_percent_lambda": 37.267080745341616,
                "num_examples": 15,
                "num_explored_concrete": 252,
                "num_explored_lambda": 101,
                "num_explored_none": 138,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 60,
                "num_values_explored": 491,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 491
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4630553990136832,
            "num_unique_values": 176,
            "solution": "fn_89(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.5390625,
                "explored_percent_lambda": 19.7265625,
                "explored_percent_none": 27.734375,
                "kept_percent_concrete": 63.25301204819277,
                "kept_percent_lambda": 36.74698795180723,
                "num_examples": 15,
                "num_explored_concrete": 269,
                "num_explored_lambda": 101,
                "num_explored_none": 142,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 61,
                "num_values_explored": 512,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 512
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9355063948314637,
            "num_unique_values": 280,
            "solution": "fn_80(4, fn_80(5, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 56.96757230499562,
                "explored_percent_lambda": 12.445223488168274,
                "explored_percent_none": 30.58720420683611,
                "kept_percent_concrete": 77.4074074074074,
                "kept_percent_lambda": 22.59259259259259,
                "num_examples": 15,
                "num_explored_concrete": 650,
                "num_explored_lambda": 142,
                "num_explored_none": 349,
                "num_inputs": 1,
                "num_kept_concrete": 209,
                "num_kept_lambda": 61,
                "num_values_explored": 1141,
                "num_values_kept": 270,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1141
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9930020340252668,
            "num_unique_values": 307,
            "solution": "fn_80(5, fn_80(5, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 55.65293602103418,
                "explored_percent_lambda": 14.110429447852761,
                "explored_percent_none": 30.236634531113058,
                "kept_percent_concrete": 73.73737373737374,
                "kept_percent_lambda": 26.262626262626263,
                "num_examples": 15,
                "num_explored_concrete": 635,
                "num_explored_lambda": 161,
                "num_explored_none": 345,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 78,
                "num_values_explored": 1141,
                "num_values_kept": 297,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1141
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.0076888478361,
            "num_unique_values": 349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.59162663006177,
                "explored_percent_lambda": 19.42347288949897,
                "explored_percent_none": 45.98490048043926,
                "kept_percent_concrete": 56.932153392330385,
                "kept_percent_lambda": 43.067846607669615,
                "num_examples": 15,
                "num_explored_concrete": 1008,
                "num_explored_lambda": 566,
                "num_explored_none": 1340,
                "num_inputs": 1,
                "num_kept_concrete": 193,
                "num_kept_lambda": 146,
                "num_values_explored": 2914,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90683
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8148903788533062,
            "num_unique_values": 274,
            "solution": "fn_9(5, fn_11((lambda u1, u2: ((lambda v1: Subtract(v1, 1)))(u2)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.456647398843934,
                "explored_percent_lambda": 15.491329479768787,
                "explored_percent_none": 27.052023121387283,
                "kept_percent_concrete": 73.10606060606061,
                "kept_percent_lambda": 26.893939393939394,
                "num_examples": 15,
                "num_explored_concrete": 497,
                "num_explored_lambda": 134,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 193,
                "num_kept_lambda": 71,
                "num_values_explored": 865,
                "num_values_kept": 264,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 865
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6854472239502,
            "num_unique_values": 350,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.71733966745843,
                "explored_percent_lambda": 19.104173736002714,
                "explored_percent_none": 42.17848659653885,
                "kept_percent_concrete": 59.705882352941174,
                "kept_percent_lambda": 40.294117647058826,
                "num_examples": 15,
                "num_explored_concrete": 1141,
                "num_explored_lambda": 563,
                "num_explored_none": 1243,
                "num_inputs": 1,
                "num_kept_concrete": 203,
                "num_kept_lambda": 137,
                "num_values_explored": 2947,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93384
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.4159625340253,
            "num_unique_values": 323,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.103508162556444,
                "explored_percent_lambda": 17.749218478638415,
                "explored_percent_none": 44.147273358805144,
                "kept_percent_concrete": 61.022364217252395,
                "kept_percent_lambda": 38.977635782747605,
                "num_examples": 15,
                "num_explored_concrete": 1097,
                "num_explored_lambda": 511,
                "num_explored_none": 1271,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 122,
                "num_values_explored": 2879,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90211
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.30766666610725,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.17635270541082,
                "explored_percent_lambda": 17.23446893787575,
                "explored_percent_none": 44.589178356713425,
                "kept_percent_concrete": 63.270777479892764,
                "kept_percent_lambda": 36.729222520107236,
                "num_examples": 15,
                "num_explored_concrete": 1143,
                "num_explored_lambda": 516,
                "num_explored_none": 1335,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 137,
                "num_values_explored": 2994,
                "num_values_kept": 373,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92136
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.1922903840896,
            "num_unique_values": 352,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.627237627237626,
                "explored_percent_lambda": 24.78062478062478,
                "explored_percent_none": 37.59213759213759,
                "kept_percent_concrete": 47.66081871345029,
                "kept_percent_lambda": 52.33918128654971,
                "num_examples": 15,
                "num_explored_concrete": 1072,
                "num_explored_lambda": 706,
                "num_explored_none": 1071,
                "num_inputs": 1,
                "num_kept_concrete": 163,
                "num_kept_lambda": 179,
                "num_values_explored": 2849,
                "num_values_kept": 342,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89702
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.56768665486015,
            "num_unique_values": 368,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.34560112162636,
                "explored_percent_lambda": 17.770767613038906,
                "explored_percent_none": 43.883631265334735,
                "kept_percent_concrete": 65.08379888268156,
                "kept_percent_lambda": 34.91620111731844,
                "num_examples": 15,
                "num_explored_concrete": 1094,
                "num_explored_lambda": 507,
                "num_explored_none": 1252,
                "num_inputs": 1,
                "num_kept_concrete": 233,
                "num_kept_lambda": 125,
                "num_values_explored": 2853,
                "num_values_kept": 358,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90663
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.34646185906604,
            "num_unique_values": 358,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.96358732299393,
                "explored_percent_lambda": 16.520566419420096,
                "explored_percent_none": 45.51584625758598,
                "kept_percent_concrete": 64.65517241379311,
                "kept_percent_lambda": 35.3448275862069,
                "num_examples": 15,
                "num_explored_concrete": 1126,
                "num_explored_lambda": 490,
                "num_explored_none": 1350,
                "num_inputs": 1,
                "num_kept_concrete": 225,
                "num_kept_lambda": 123,
                "num_values_explored": 2966,
                "num_values_kept": 348,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92959
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.32375251990743,
            "num_unique_values": 307,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.72874493927125,
                "explored_percent_lambda": 19.23076923076923,
                "explored_percent_none": 45.040485829959515,
                "kept_percent_concrete": 57.57575757575758,
                "kept_percent_lambda": 42.42424242424242,
                "num_examples": 15,
                "num_explored_concrete": 1059,
                "num_explored_lambda": 570,
                "num_explored_none": 1335,
                "num_inputs": 1,
                "num_kept_concrete": 171,
                "num_kept_lambda": 126,
                "num_values_explored": 2964,
                "num_values_kept": 297,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92370
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3807105659507215,
            "num_unique_values": 181,
            "solution": "fn_63(x1, (lambda u1: fn_57(x1)), 1, 0)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.73913043478261,
                "explored_percent_lambda": 19.565217391304348,
                "explored_percent_none": 28.695652173913043,
                "kept_percent_concrete": 68.42105263157895,
                "kept_percent_lambda": 31.57894736842105,
                "num_examples": 15,
                "num_explored_concrete": 238,
                "num_explored_lambda": 90,
                "num_explored_none": 132,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 54,
                "num_values_explored": 460,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 460
            },
            "success": true,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7154317190870643,
            "num_unique_values": 264,
            "solution": "If(fn_90(x1, (lambda u1: fn_57(x1))), 0, 1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 60.91644204851752,
                "explored_percent_lambda": 11.455525606469003,
                "explored_percent_none": 27.628032345013477,
                "kept_percent_concrete": 80.70866141732283,
                "kept_percent_lambda": 19.291338582677167,
                "num_examples": 15,
                "num_explored_concrete": 452,
                "num_explored_lambda": 85,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 205,
                "num_kept_lambda": 49,
                "num_values_explored": 742,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 742
            },
            "success": true,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.34336570999585,
            "num_unique_values": 306,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.03333333333333,
                "explored_percent_lambda": 19.433333333333334,
                "explored_percent_none": 44.53333333333333,
                "kept_percent_concrete": 58.445945945945944,
                "kept_percent_lambda": 41.554054054054056,
                "num_examples": 15,
                "num_explored_concrete": 1081,
                "num_explored_lambda": 583,
                "num_explored_none": 1336,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 123,
                "num_values_explored": 3000,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92934
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.9478056090884,
            "num_unique_values": 426,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.375178316690445,
                "explored_percent_lambda": 23.75178316690442,
                "explored_percent_none": 38.87303851640514,
                "kept_percent_concrete": 57.21153846153846,
                "kept_percent_lambda": 42.78846153846154,
                "num_examples": 15,
                "num_explored_concrete": 1048,
                "num_explored_lambda": 666,
                "num_explored_none": 1090,
                "num_inputs": 1,
                "num_kept_concrete": 238,
                "num_kept_lambda": 178,
                "num_values_explored": 2804,
                "num_values_kept": 416,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88085
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.9108344260603,
            "num_unique_values": 408,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.17843343870741,
                "explored_percent_lambda": 27.186512118018967,
                "explored_percent_none": 36.635054443273624,
                "kept_percent_concrete": 55.27638190954774,
                "kept_percent_lambda": 44.72361809045226,
                "num_examples": 15,
                "num_explored_concrete": 1030,
                "num_explored_lambda": 774,
                "num_explored_none": 1043,
                "num_inputs": 1,
                "num_kept_concrete": 220,
                "num_kept_lambda": 178,
                "num_values_explored": 2847,
                "num_values_kept": 398,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89182
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.4019110619556,
            "num_unique_values": 395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.78091872791519,
                "explored_percent_lambda": 29.151943462897528,
                "explored_percent_none": 37.06713780918728,
                "kept_percent_concrete": 52.20779220779221,
                "kept_percent_lambda": 47.79220779220779,
                "num_examples": 15,
                "num_explored_concrete": 956,
                "num_explored_lambda": 825,
                "num_explored_none": 1049,
                "num_inputs": 1,
                "num_kept_concrete": 201,
                "num_kept_lambda": 184,
                "num_values_explored": 2830,
                "num_values_kept": 385,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87907
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.87963810609654,
            "num_unique_values": 381,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.95616241466044,
                "explored_percent_lambda": 29.967660797700322,
                "explored_percent_none": 36.07617678763924,
                "kept_percent_concrete": 52.83018867924528,
                "kept_percent_lambda": 47.16981132075472,
                "num_examples": 15,
                "num_explored_concrete": 945,
                "num_explored_lambda": 834,
                "num_explored_none": 1004,
                "num_inputs": 1,
                "num_kept_concrete": 196,
                "num_kept_lambda": 175,
                "num_values_explored": 2783,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88783
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.4428933649324,
            "num_unique_values": 361,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.8559381588194,
                "explored_percent_lambda": 28.98805340829234,
                "explored_percent_none": 36.156008432888264,
                "kept_percent_concrete": 50.997150997150996,
                "kept_percent_lambda": 49.002849002849004,
                "num_examples": 15,
                "num_explored_concrete": 992,
                "num_explored_lambda": 825,
                "num_explored_none": 1029,
                "num_inputs": 1,
                "num_kept_concrete": 179,
                "num_kept_lambda": 172,
                "num_values_explored": 2846,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90867
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.1406579159666,
            "num_unique_values": 397,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.64462809917355,
                "explored_percent_lambda": 10.909090909090908,
                "explored_percent_none": 42.446280991735534,
                "kept_percent_concrete": 68.47545219638243,
                "kept_percent_lambda": 31.524547803617573,
                "num_examples": 15,
                "num_explored_concrete": 1411,
                "num_explored_lambda": 330,
                "num_explored_none": 1284,
                "num_inputs": 1,
                "num_kept_concrete": 265,
                "num_kept_lambda": 122,
                "num_values_explored": 3025,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96132
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6723727679346,
            "num_unique_values": 432,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.716814159292035,
                "explored_percent_lambda": 13.20353982300885,
                "explored_percent_none": 35.07964601769911,
                "kept_percent_concrete": 70.85308056872037,
                "kept_percent_lambda": 29.14691943127962,
                "num_examples": 15,
                "num_explored_concrete": 1461,
                "num_explored_lambda": 373,
                "num_explored_none": 991,
                "num_inputs": 1,
                "num_kept_concrete": 299,
                "num_kept_lambda": 123,
                "num_values_explored": 2825,
                "num_values_kept": 422,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89431
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.37344508385286,
            "num_unique_values": 438,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.23696682464455,
                "explored_percent_lambda": 13.270142180094787,
                "explored_percent_none": 36.492890995260666,
                "kept_percent_concrete": 69.85981308411215,
                "kept_percent_lambda": 30.14018691588785,
                "num_examples": 15,
                "num_explored_concrete": 1378,
                "num_explored_lambda": 364,
                "num_explored_none": 1001,
                "num_inputs": 1,
                "num_kept_concrete": 299,
                "num_kept_lambda": 129,
                "num_values_explored": 2743,
                "num_values_kept": 428,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86613
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8395184800029,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.31032125768968,
                "explored_percent_lambda": 15.82365003417635,
                "explored_percent_none": 41.866028708133975,
                "kept_percent_concrete": 67.67123287671232,
                "kept_percent_lambda": 32.32876712328767,
                "num_examples": 15,
                "num_explored_concrete": 1238,
                "num_explored_lambda": 463,
                "num_explored_none": 1225,
                "num_inputs": 1,
                "num_kept_concrete": 247,
                "num_kept_lambda": 118,
                "num_values_explored": 2926,
                "num_values_kept": 365,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92073
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.5601928620599,
            "num_unique_values": 397,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.29126899964652,
                "explored_percent_lambda": 14.669494521032167,
                "explored_percent_none": 41.03923647932132,
                "kept_percent_concrete": 68.9922480620155,
                "kept_percent_lambda": 31.007751937984494,
                "num_examples": 15,
                "num_explored_concrete": 1253,
                "num_explored_lambda": 415,
                "num_explored_none": 1161,
                "num_inputs": 1,
                "num_kept_concrete": 267,
                "num_kept_lambda": 120,
                "num_values_explored": 2829,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89179
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.1829275540076,
            "num_unique_values": 368,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.76237623762376,
                "explored_percent_lambda": 10.033003300330034,
                "explored_percent_none": 46.20462046204621,
                "kept_percent_concrete": 67.59776536312849,
                "kept_percent_lambda": 32.402234636871505,
                "num_examples": 15,
                "num_explored_concrete": 1326,
                "num_explored_lambda": 304,
                "num_explored_none": 1400,
                "num_inputs": 1,
                "num_kept_concrete": 242,
                "num_kept_lambda": 116,
                "num_values_explored": 3030,
                "num_values_kept": 358,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94351
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.432307200972,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.51085084395453,
                "explored_percent_lambda": 16.155700998966587,
                "explored_percent_none": 44.333448157078884,
                "kept_percent_concrete": 66.4819944598338,
                "kept_percent_lambda": 33.51800554016621,
                "num_examples": 15,
                "num_explored_concrete": 1147,
                "num_explored_lambda": 469,
                "num_explored_none": 1287,
                "num_inputs": 1,
                "num_kept_concrete": 240,
                "num_kept_lambda": 121,
                "num_values_explored": 2903,
                "num_values_kept": 361,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92247
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20283036609180272,
            "num_unique_values": 118,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Multiply(v1, 4)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.340425531914896,
                "explored_percent_lambda": 35.319148936170215,
                "explored_percent_none": 12.340425531914894,
                "kept_percent_concrete": 50.925925925925924,
                "kept_percent_lambda": 49.074074074074076,
                "num_examples": 15,
                "num_explored_concrete": 123,
                "num_explored_lambda": 83,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 55,
                "num_kept_lambda": 53,
                "num_values_explored": 235,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 235
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07670727791264653,
            "num_unique_values": 54,
            "solution": "Cons(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 69.46564885496183,
                "explored_percent_lambda": 23.66412213740458,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 40.90909090909091,
                "kept_percent_lambda": 59.09090909090909,
                "num_examples": 15,
                "num_explored_concrete": 91,
                "num_explored_lambda": 31,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 26,
                "num_values_explored": 131,
                "num_values_kept": 44,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07284760288894176,
            "num_unique_values": 55,
            "solution": "Cons(5, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 73.2824427480916,
                "explored_percent_lambda": 18.3206106870229,
                "explored_percent_none": 8.396946564885496,
                "kept_percent_concrete": 55.55555555555556,
                "kept_percent_lambda": 44.44444444444444,
                "num_examples": 15,
                "num_explored_concrete": 96,
                "num_explored_lambda": 24,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 20,
                "num_values_explored": 131,
                "num_values_kept": 45,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.4703539998736,
            "num_unique_values": 240,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.83008356545961,
                "explored_percent_lambda": 26.357938718662954,
                "explored_percent_none": 19.811977715877436,
                "kept_percent_concrete": 51.73913043478261,
                "kept_percent_lambda": 48.26086956521739,
                "num_examples": 15,
                "num_explored_concrete": 1546,
                "num_explored_lambda": 757,
                "num_explored_none": 569,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 111,
                "num_values_explored": 2872,
                "num_values_kept": 230,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90585
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36706171417608857,
            "num_unique_values": 173,
            "solution": "fn_56(fn_6(x1), fn_22(x1, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98800959232614,
                "explored_percent_lambda": 15.347721822541967,
                "explored_percent_none": 19.664268585131893,
                "kept_percent_concrete": 70.5521472392638,
                "kept_percent_lambda": 29.447852760736197,
                "num_examples": 15,
                "num_explored_concrete": 271,
                "num_explored_lambda": 64,
                "num_explored_none": 82,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 48,
                "num_values_explored": 417,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 417
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.3006749590859,
            "num_unique_values": 421,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.17696629213483,
                "explored_percent_lambda": 13.342696629213483,
                "explored_percent_none": 34.48033707865169,
                "kept_percent_concrete": 69.09975669099757,
                "kept_percent_lambda": 30.900243309002434,
                "num_examples": 15,
                "num_explored_concrete": 1486,
                "num_explored_lambda": 380,
                "num_explored_none": 982,
                "num_inputs": 1,
                "num_kept_concrete": 284,
                "num_kept_lambda": 127,
                "num_values_explored": 2848,
                "num_values_kept": 411,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89811
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.5177797190845,
            "num_unique_values": 437,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.29971590909091,
                "explored_percent_lambda": 21.271306818181817,
                "explored_percent_none": 37.42897727272727,
                "kept_percent_concrete": 59.250585480093676,
                "kept_percent_lambda": 40.749414519906324,
                "num_examples": 15,
                "num_explored_concrete": 1163,
                "num_explored_lambda": 599,
                "num_explored_none": 1054,
                "num_inputs": 1,
                "num_kept_concrete": 253,
                "num_kept_lambda": 174,
                "num_values_explored": 2816,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89054
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.4802580899559,
            "num_unique_values": 395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.48951048951049,
                "explored_percent_lambda": 26.53846153846154,
                "explored_percent_none": 37.97202797202797,
                "kept_percent_concrete": 58.701298701298704,
                "kept_percent_lambda": 41.298701298701296,
                "num_examples": 15,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 759,
                "num_explored_none": 1086,
                "num_inputs": 1,
                "num_kept_concrete": 226,
                "num_kept_lambda": 159,
                "num_values_explored": 2860,
                "num_values_kept": 385,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89123
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.2807332710363,
            "num_unique_values": 354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.38733705772812,
                "explored_percent_lambda": 23.612662942271882,
                "explored_percent_none": 40.0,
                "kept_percent_concrete": 50.58139534883721,
                "kept_percent_lambda": 49.41860465116279,
                "num_examples": 15,
                "num_explored_concrete": 977,
                "num_explored_lambda": 634,
                "num_explored_none": 1074,
                "num_inputs": 1,
                "num_kept_concrete": 174,
                "num_kept_lambda": 170,
                "num_values_explored": 2685,
                "num_values_kept": 344,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85904
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6465179780498,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.524244553759665,
                "explored_percent_lambda": 27.512297962052003,
                "explored_percent_none": 23.963457484188336,
                "kept_percent_concrete": 43.80165289256198,
                "kept_percent_lambda": 56.19834710743802,
                "num_examples": 15,
                "num_explored_concrete": 1381,
                "num_explored_lambda": 783,
                "num_explored_none": 682,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 136,
                "num_values_explored": 2846,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89666
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.6434087920934,
            "num_unique_values": 295,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.79188900747065,
                "explored_percent_lambda": 24.261828530771968,
                "explored_percent_none": 40.946282461757384,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 15,
                "num_explored_concrete": 978,
                "num_explored_lambda": 682,
                "num_explored_none": 1151,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 153,
                "num_values_explored": 2811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89031
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.375087428838,
            "num_unique_values": 295,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.1585660117201,
                "explored_percent_lambda": 16.23578076525336,
                "explored_percent_none": 43.60565322302654,
                "kept_percent_concrete": 56.14035087719298,
                "kept_percent_lambda": 43.85964912280702,
                "num_examples": 15,
                "num_explored_concrete": 1165,
                "num_explored_lambda": 471,
                "num_explored_none": 1265,
                "num_inputs": 1,
                "num_kept_concrete": 160,
                "num_kept_lambda": 125,
                "num_values_explored": 2901,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92113
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.90112470206805,
            "num_unique_values": 282,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.75140125288493,
                "explored_percent_lambda": 23.475107154632376,
                "explored_percent_none": 38.77349159248269,
                "kept_percent_concrete": 47.794117647058826,
                "kept_percent_lambda": 52.205882352941174,
                "num_examples": 15,
                "num_explored_concrete": 1145,
                "num_explored_lambda": 712,
                "num_explored_none": 1176,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 142,
                "num_values_explored": 3033,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94066
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9166121331509203,
            "num_unique_values": 289,
            "solution": "Map((lambda u1: fn_15(fn_0(x1))), fn_134(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.40699126092385,
                "explored_percent_lambda": 7.49063670411985,
                "explored_percent_none": 18.102372034956304,
                "kept_percent_concrete": 88.5304659498208,
                "kept_percent_lambda": 11.469534050179211,
                "num_examples": 15,
                "num_explored_concrete": 596,
                "num_explored_lambda": 60,
                "num_explored_none": 145,
                "num_inputs": 1,
                "num_kept_concrete": 247,
                "num_kept_lambda": 32,
                "num_values_explored": 801,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 801
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.76444864389487,
            "num_unique_values": 353,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.18181818181818,
                "explored_percent_lambda": 11.058344640434193,
                "explored_percent_none": 45.75983717774763,
                "kept_percent_concrete": 67.34693877551021,
                "kept_percent_lambda": 32.6530612244898,
                "num_examples": 15,
                "num_explored_concrete": 1273,
                "num_explored_lambda": 326,
                "num_explored_none": 1349,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 112,
                "num_values_explored": 2948,
                "num_values_kept": 343,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92278
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.19749327516183,
            "num_unique_values": 427,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.017661603673616,
                "explored_percent_lambda": 10.56163899682091,
                "explored_percent_none": 39.42069939950547,
                "kept_percent_concrete": 69.7841726618705,
                "kept_percent_lambda": 30.215827338129497,
                "num_examples": 15,
                "num_explored_concrete": 1416,
                "num_explored_lambda": 299,
                "num_explored_none": 1116,
                "num_inputs": 1,
                "num_kept_concrete": 291,
                "num_kept_lambda": 126,
                "num_values_explored": 2831,
                "num_values_kept": 417,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89165
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.47824582480825,
            "num_unique_values": 397,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.82168330955778,
                "explored_percent_lambda": 10.627674750356633,
                "explored_percent_none": 39.55064194008559,
                "kept_percent_concrete": 73.64341085271317,
                "kept_percent_lambda": 26.356589147286822,
                "num_examples": 15,
                "num_explored_concrete": 1397,
                "num_explored_lambda": 298,
                "num_explored_none": 1109,
                "num_inputs": 1,
                "num_kept_concrete": 285,
                "num_kept_lambda": 102,
                "num_values_explored": 2804,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88526
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9658695969264954,
            "num_unique_values": 309,
            "solution": "Cons(Car(x1), fn_56([], x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.71611253196932,
                "explored_percent_lambda": 11.764705882352942,
                "explored_percent_none": 17.51918158567775,
                "kept_percent_concrete": 81.27090301003345,
                "kept_percent_lambda": 18.729096989966557,
                "num_examples": 15,
                "num_explored_concrete": 553,
                "num_explored_lambda": 92,
                "num_explored_none": 137,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 56,
                "num_values_explored": 782,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 782
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8386411839164793,
            "num_unique_values": 252,
            "solution": "fn_121(fn_22(x1, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.79099678456592,
                "explored_percent_lambda": 14.469453376205788,
                "explored_percent_none": 20.739549839228296,
                "kept_percent_concrete": 77.27272727272727,
                "kept_percent_lambda": 22.727272727272727,
                "num_examples": 15,
                "num_explored_concrete": 403,
                "num_explored_lambda": 90,
                "num_explored_none": 129,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 55,
                "num_values_explored": 622,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.1123823560774326,
            "num_unique_values": 344,
            "solution": "fn_3(fn_56([], x1), fn_145(fn_32(x1, x1)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 73.00832342449465,
                "explored_percent_lambda": 12.96076099881094,
                "explored_percent_none": 14.030915576694412,
                "kept_percent_concrete": 84.73053892215569,
                "kept_percent_lambda": 15.269461077844312,
                "num_examples": 15,
                "num_explored_concrete": 614,
                "num_explored_lambda": 109,
                "num_explored_none": 118,
                "num_inputs": 1,
                "num_kept_concrete": 283,
                "num_kept_lambda": 51,
                "num_values_explored": 841,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 841
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43108539702370763,
            "num_unique_values": 173,
            "solution": "fn_56([], Cdr(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.96350364963503,
                "explored_percent_lambda": 20.194647201946474,
                "explored_percent_none": 14.841849148418492,
                "kept_percent_concrete": 71.77914110429448,
                "kept_percent_lambda": 28.220858895705522,
                "num_examples": 15,
                "num_explored_concrete": 267,
                "num_explored_lambda": 83,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 46,
                "num_values_explored": 411,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3684228779748082,
            "num_unique_values": 178,
            "solution": "fn_56([], fn_0(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.23357664233576,
                "explored_percent_lambda": 21.65450121654501,
                "explored_percent_none": 14.111922141119221,
                "kept_percent_concrete": 70.83333333333333,
                "kept_percent_lambda": 29.166666666666668,
                "num_examples": 15,
                "num_explored_concrete": 264,
                "num_explored_lambda": 89,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 49,
                "num_values_explored": 411,
                "num_values_kept": 168,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0880116380285472,
            "num_unique_values": 324,
            "solution": "Cons(fn_15(Cdr(x1)), fn_145(Cdr(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.34314980793854,
                "explored_percent_lambda": 13.956466069142126,
                "explored_percent_none": 13.700384122919335,
                "kept_percent_concrete": 81.21019108280255,
                "kept_percent_lambda": 18.78980891719745,
                "num_examples": 15,
                "num_explored_concrete": 565,
                "num_explored_lambda": 109,
                "num_explored_none": 107,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 59,
                "num_values_explored": 781,
                "num_values_kept": 314,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 781
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2532180091366172,
            "num_unique_values": 138,
            "solution": "fn_22(fn_0(x1), [])",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.925170068027214,
                "explored_percent_lambda": 26.53061224489796,
                "explored_percent_none": 10.54421768707483,
                "kept_percent_concrete": 64.84375,
                "kept_percent_lambda": 35.15625,
                "num_examples": 15,
                "num_explored_concrete": 185,
                "num_explored_lambda": 78,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 45,
                "num_values_explored": 294,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 294
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9746309260372072,
            "num_unique_values": 271,
            "solution": "fn_145(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.89580093312597,
                "explored_percent_lambda": 12.752721617418352,
                "explored_percent_none": 18.351477449455675,
                "kept_percent_concrete": 81.60919540229885,
                "kept_percent_lambda": 18.39080459770115,
                "num_examples": 15,
                "num_explored_concrete": 443,
                "num_explored_lambda": 82,
                "num_explored_none": 118,
                "num_inputs": 1,
                "num_kept_concrete": 213,
                "num_kept_lambda": 48,
                "num_values_explored": 643,
                "num_values_kept": 261,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 643
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3703951791394502,
            "num_unique_values": 381,
            "solution": "fn_56(fn_145(fn_6(x1)), fn_6(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 72.78719397363466,
                "explored_percent_lambda": 11.67608286252354,
                "explored_percent_none": 15.536723163841808,
                "kept_percent_concrete": 85.98382749326146,
                "kept_percent_lambda": 14.016172506738544,
                "num_examples": 15,
                "num_explored_concrete": 773,
                "num_explored_lambda": 124,
                "num_explored_none": 165,
                "num_inputs": 1,
                "num_kept_concrete": 319,
                "num_kept_lambda": 52,
                "num_values_explored": 1062,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1062
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.63670870591886,
            "num_unique_values": 274,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.29647910496874,
                "explored_percent_lambda": 18.591641987495887,
                "explored_percent_none": 40.11187890753537,
                "kept_percent_concrete": 56.06060606060606,
                "kept_percent_lambda": 43.93939393939394,
                "num_examples": 15,
                "num_explored_concrete": 1255,
                "num_explored_lambda": 565,
                "num_explored_none": 1219,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 116,
                "num_values_explored": 3039,
                "num_values_kept": 264,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95306
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8259851890616119,
            "num_unique_values": 250,
            "solution": "fn_121(fn_22(x1, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.09017713365539,
                "explored_percent_lambda": 14.492753623188406,
                "explored_percent_none": 21.4170692431562,
                "kept_percent_concrete": 77.5,
                "kept_percent_lambda": 22.5,
                "num_examples": 15,
                "num_explored_concrete": 398,
                "num_explored_lambda": 90,
                "num_explored_none": 133,
                "num_inputs": 1,
                "num_kept_concrete": 186,
                "num_kept_lambda": 54,
                "num_values_explored": 621,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 621
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.4535496230237,
            "num_unique_values": 418,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.10803324099723,
                "explored_percent_lambda": 16.966759002770083,
                "explored_percent_none": 31.925207756232687,
                "kept_percent_concrete": 61.76470588235294,
                "kept_percent_lambda": 38.23529411764706,
                "num_examples": 15,
                "num_explored_concrete": 1476,
                "num_explored_lambda": 490,
                "num_explored_none": 922,
                "num_inputs": 1,
                "num_kept_concrete": 252,
                "num_kept_lambda": 156,
                "num_values_explored": 2888,
                "num_values_kept": 408,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92298
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.8195876099635,
            "num_unique_values": 400,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.69151138716356,
                "explored_percent_lambda": 19.392684610075914,
                "explored_percent_none": 27.915804002760524,
                "kept_percent_concrete": 65.8974358974359,
                "kept_percent_lambda": 34.1025641025641,
                "num_examples": 15,
                "num_explored_concrete": 1527,
                "num_explored_lambda": 562,
                "num_explored_none": 809,
                "num_inputs": 1,
                "num_kept_concrete": 257,
                "num_kept_lambda": 133,
                "num_values_explored": 2898,
                "num_values_kept": 390,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91092
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.8980523380451,
            "num_unique_values": 405,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.627167630057805,
                "explored_percent_lambda": 19.61705202312139,
                "explored_percent_none": 31.75578034682081,
                "kept_percent_concrete": 65.82278481012658,
                "kept_percent_lambda": 34.177215189873415,
                "num_examples": 15,
                "num_explored_concrete": 1346,
                "num_explored_lambda": 543,
                "num_explored_none": 879,
                "num_inputs": 1,
                "num_kept_concrete": 260,
                "num_kept_lambda": 135,
                "num_values_explored": 2768,
                "num_values_kept": 395,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87926
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.65234259516,
            "num_unique_values": 401,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.78831076265146,
                "explored_percent_lambda": 16.25089094796864,
                "explored_percent_none": 34.9607982893799,
                "kept_percent_concrete": 65.9846547314578,
                "kept_percent_lambda": 34.0153452685422,
                "num_examples": 15,
                "num_explored_concrete": 1369,
                "num_explored_lambda": 456,
                "num_explored_none": 981,
                "num_inputs": 1,
                "num_kept_concrete": 258,
                "num_kept_lambda": 133,
                "num_values_explored": 2806,
                "num_values_kept": 391,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88808
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8986031480599,
            "num_unique_values": 424,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.54608938547486,
                "explored_percent_lambda": 16.585195530726256,
                "explored_percent_none": 33.86871508379888,
                "kept_percent_concrete": 63.04347826086956,
                "kept_percent_lambda": 36.95652173913044,
                "num_examples": 15,
                "num_explored_concrete": 1419,
                "num_explored_lambda": 475,
                "num_explored_none": 970,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 153,
                "num_values_explored": 2864,
                "num_values_kept": 414,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88841
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.189213024918,
            "num_unique_values": 413,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.50615114235501,
                "explored_percent_lambda": 19.75395430579965,
                "explored_percent_none": 31.739894551845342,
                "kept_percent_concrete": 67.24565756823822,
                "kept_percent_lambda": 32.754342431761785,
                "num_examples": 15,
                "num_explored_concrete": 1380,
                "num_explored_lambda": 562,
                "num_explored_none": 903,
                "num_inputs": 1,
                "num_kept_concrete": 271,
                "num_kept_lambda": 132,
                "num_values_explored": 2845,
                "num_values_kept": 403,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88114
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.375202530995,
            "num_unique_values": 413,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.739085596424886,
                "explored_percent_lambda": 16.431763492609143,
                "explored_percent_none": 32.829150910965964,
                "kept_percent_concrete": 66.00496277915633,
                "kept_percent_lambda": 33.99503722084367,
                "num_examples": 15,
                "num_explored_concrete": 1476,
                "num_explored_lambda": 478,
                "num_explored_none": 955,
                "num_inputs": 1,
                "num_kept_concrete": 266,
                "num_kept_lambda": 137,
                "num_values_explored": 2909,
                "num_values_kept": 403,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90969
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.58654142403975,
            "num_unique_values": 425,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.80694143167028,
                "explored_percent_lambda": 17.49819233550253,
                "explored_percent_none": 33.69486623282719,
                "kept_percent_concrete": 64.57831325301204,
                "kept_percent_lambda": 35.42168674698795,
                "num_examples": 15,
                "num_explored_concrete": 1350,
                "num_explored_lambda": 484,
                "num_explored_none": 932,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 147,
                "num_values_explored": 2766,
                "num_values_kept": 415,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88097
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.2559070950374,
            "num_unique_values": 380,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.694502435629786,
                "explored_percent_lambda": 19.693806541405706,
                "explored_percent_none": 33.61169102296451,
                "kept_percent_concrete": 64.5945945945946,
                "kept_percent_lambda": 35.4054054054054,
                "num_examples": 15,
                "num_explored_concrete": 1342,
                "num_explored_lambda": 566,
                "num_explored_none": 966,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 131,
                "num_values_explored": 2874,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90517
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.8198627498932,
            "num_unique_values": 392,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.928212491026564,
                "explored_percent_lambda": 19.526202440775304,
                "explored_percent_none": 30.545585068198132,
                "kept_percent_concrete": 65.44502617801047,
                "kept_percent_lambda": 34.55497382198953,
                "num_examples": 15,
                "num_explored_concrete": 1391,
                "num_explored_lambda": 544,
                "num_explored_none": 851,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 132,
                "num_values_explored": 2786,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88713
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8005382639821619,
            "num_unique_values": 255,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: fn_45(v1)))(u2)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.31460674157304,
                "explored_percent_lambda": 14.831460674157304,
                "explored_percent_none": 26.853932584269664,
                "kept_percent_concrete": 74.28571428571429,
                "kept_percent_lambda": 25.714285714285715,
                "num_examples": 15,
                "num_explored_concrete": 519,
                "num_explored_lambda": 132,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 63,
                "num_values_explored": 890,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 890
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39490238996222615,
            "num_unique_values": 170,
            "solution": "fn_67(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 49.0238611713666,
                "explored_percent_lambda": 21.0412147505423,
                "explored_percent_none": 29.934924078091107,
                "kept_percent_concrete": 65.625,
                "kept_percent_lambda": 34.375,
                "num_examples": 15,
                "num_explored_concrete": 226,
                "num_explored_lambda": 97,
                "num_explored_none": 138,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 55,
                "num_values_explored": 461,
                "num_values_kept": 160,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 461
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39593683695420623,
            "num_unique_values": 164,
            "solution": "fn_67(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 53.87931034482759,
                "explored_percent_lambda": 18.53448275862069,
                "explored_percent_none": 27.586206896551722,
                "kept_percent_concrete": 65.58441558441558,
                "kept_percent_lambda": 34.41558441558441,
                "num_examples": 15,
                "num_explored_concrete": 250,
                "num_explored_lambda": 86,
                "num_explored_none": 128,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 53,
                "num_values_explored": 464,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 464
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10129514383152127,
            "num_unique_values": 73,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.62745098039215,
                "explored_percent_lambda": 23.529411764705884,
                "explored_percent_none": 7.8431372549019605,
                "kept_percent_concrete": 57.142857142857146,
                "kept_percent_lambda": 42.857142857142854,
                "num_examples": 15,
                "num_explored_concrete": 105,
                "num_explored_lambda": 36,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 27,
                "num_values_explored": 153,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8143739348743111,
            "num_unique_values": 321,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: fn_52(((lambda v1: IsPrime(v1)))(v1))))(u2)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 64.96598639455782,
                "explored_percent_lambda": 11.45124716553288,
                "explored_percent_none": 23.582766439909296,
                "kept_percent_concrete": 82.31511254019293,
                "kept_percent_lambda": 17.684887459807072,
                "num_examples": 15,
                "num_explored_concrete": 573,
                "num_explored_lambda": 101,
                "num_explored_none": 208,
                "num_inputs": 1,
                "num_kept_concrete": 256,
                "num_kept_lambda": 55,
                "num_values_explored": 882,
                "num_values_kept": 311,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5290081789717078,
            "num_unique_values": 188,
            "solution": "fn_84(0, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.37154150197628,
                "explored_percent_lambda": 18.57707509881423,
                "explored_percent_none": 29.051383399209485,
                "kept_percent_concrete": 70.2247191011236,
                "kept_percent_lambda": 29.775280898876403,
                "num_examples": 15,
                "num_explored_concrete": 265,
                "num_explored_lambda": 94,
                "num_explored_none": 147,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 53,
                "num_values_explored": 506,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 506
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.457123686093837,
            "num_unique_values": 178,
            "solution": "fn_80(2, fn_67(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 54.618473895582326,
                "explored_percent_lambda": 17.269076305220885,
                "explored_percent_none": 28.11244979919679,
                "kept_percent_concrete": 70.83333333333333,
                "kept_percent_lambda": 29.166666666666668,
                "num_examples": 15,
                "num_explored_concrete": 272,
                "num_explored_lambda": 86,
                "num_explored_none": 140,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 49,
                "num_values_explored": 498,
                "num_values_kept": 168,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 498
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.46982896816916764,
            "num_unique_values": 179,
            "solution": "fn_84(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 54.67196819085487,
                "explored_percent_lambda": 16.302186878727635,
                "explored_percent_none": 29.025844930417495,
                "kept_percent_concrete": 72.18934911242603,
                "kept_percent_lambda": 27.810650887573964,
                "num_examples": 15,
                "num_explored_concrete": 275,
                "num_explored_lambda": 82,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 47,
                "num_values_explored": 503,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 503
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2002975910436362,
            "num_unique_values": 125,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 56.72268907563025,
                "explored_percent_lambda": 31.932773109243698,
                "explored_percent_none": 11.344537815126051,
                "kept_percent_concrete": 56.52173913043478,
                "kept_percent_lambda": 43.47826086956522,
                "num_examples": 15,
                "num_explored_concrete": 135,
                "num_explored_lambda": 76,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 65,
                "num_kept_lambda": 50,
                "num_values_explored": 238,
                "num_values_kept": 115,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0709408251568675,
            "num_unique_values": 56,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 59.43396226415094,
                "explored_percent_lambda": 37.735849056603776,
                "explored_percent_none": 2.830188679245283,
                "kept_percent_concrete": 28.26086956521739,
                "kept_percent_lambda": 71.73913043478261,
                "num_examples": 15,
                "num_explored_concrete": 63,
                "num_explored_lambda": 40,
                "num_explored_none": 3,
                "num_inputs": 1,
                "num_kept_concrete": 13,
                "num_kept_lambda": 33,
                "num_values_explored": 106,
                "num_values_kept": 46,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 106
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11784930201247334,
            "num_unique_values": 85,
            "solution": "fn_0(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 61.98830409356725,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 15,
                "num_explored_concrete": 106,
                "num_explored_lambda": 49,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 39,
                "num_values_explored": 171,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13172987289726734,
            "num_unique_values": 94,
            "solution": "fn_2((lambda u1: ((lambda v1: fn_0(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 66.30434782608695,
                "explored_percent_lambda": 27.17391304347826,
                "explored_percent_none": 6.521739130434782,
                "kept_percent_concrete": 53.57142857142857,
                "kept_percent_lambda": 46.42857142857143,
                "num_examples": 15,
                "num_explored_concrete": 122,
                "num_explored_lambda": 50,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 39,
                "num_values_explored": 184,
                "num_values_kept": 84,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 184
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08358315704390407,
            "num_unique_values": 60,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 77.46478873239437,
                "explored_percent_lambda": 18.309859154929576,
                "explored_percent_none": 4.225352112676056,
                "kept_percent_concrete": 56.0,
                "kept_percent_lambda": 44.0,
                "num_examples": 15,
                "num_explored_concrete": 110,
                "num_explored_lambda": 26,
                "num_explored_none": 6,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 22,
                "num_values_explored": 142,
                "num_values_kept": 50,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 142
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.058348992140963674,
            "num_unique_values": 40,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.57142857142857,
                "explored_percent_lambda": 17.857142857142858,
                "explored_percent_none": 3.5714285714285716,
                "kept_percent_concrete": 46.666666666666664,
                "kept_percent_lambda": 53.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 88,
                "num_explored_lambda": 20,
                "num_explored_none": 4,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 16,
                "num_values_explored": 112,
                "num_values_kept": 30,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 112
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18217943492345512,
            "num_unique_values": 92,
            "solution": "fn_15(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.88446215139442,
                "explored_percent_lambda": 17.529880478087648,
                "explored_percent_none": 3.585657370517928,
                "kept_percent_concrete": 71.95121951219512,
                "kept_percent_lambda": 28.048780487804876,
                "num_examples": 15,
                "num_explored_concrete": 198,
                "num_explored_lambda": 44,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 23,
                "num_values_explored": 251,
                "num_values_kept": 82,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 251
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.75615419098176,
            "num_unique_values": 311,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.37075180226571,
                "explored_percent_lambda": 15.61963611397185,
                "explored_percent_none": 44.00961208376244,
                "kept_percent_concrete": 62.7906976744186,
                "kept_percent_lambda": 37.2093023255814,
                "num_examples": 15,
                "num_explored_concrete": 1176,
                "num_explored_lambda": 455,
                "num_explored_none": 1282,
                "num_inputs": 1,
                "num_kept_concrete": 189,
                "num_kept_lambda": 112,
                "num_values_explored": 2913,
                "num_values_kept": 301,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93014
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7536437690723687,
            "num_unique_values": 266,
            "solution": "Mod(Car(x1), 2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.7424023154848,
                "explored_percent_lambda": 12.590448625180898,
                "explored_percent_none": 29.6671490593343,
                "kept_percent_concrete": 78.515625,
                "kept_percent_lambda": 21.484375,
                "num_examples": 15,
                "num_explored_concrete": 399,
                "num_explored_lambda": 87,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 201,
                "num_kept_lambda": 55,
                "num_values_explored": 691,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.7216485161334,
            "num_unique_values": 573,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.099162011173185,
                "explored_percent_lambda": 13.84427374301676,
                "explored_percent_none": 42.05656424581006,
                "kept_percent_concrete": 70.33747779751332,
                "kept_percent_lambda": 29.662522202486677,
                "num_examples": 15,
                "num_explored_concrete": 2526,
                "num_explored_lambda": 793,
                "num_explored_none": 2409,
                "num_inputs": 1,
                "num_kept_concrete": 396,
                "num_kept_lambda": 167,
                "num_values_explored": 5728,
                "num_values_kept": 563,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 156445
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11901002004742622,
            "num_unique_values": 75,
            "solution": "fn_3(fn_0(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 68.75,
                "explored_percent_lambda": 23.958333333333332,
                "explored_percent_none": 7.291666666666667,
                "kept_percent_concrete": 49.23076923076923,
                "kept_percent_lambda": 50.76923076923077,
                "num_examples": 15,
                "num_explored_concrete": 132,
                "num_explored_lambda": 46,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 33,
                "num_values_explored": 192,
                "num_values_kept": 65,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 192
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20118402992375195,
            "num_unique_values": 120,
            "solution": "fn_22(fn_0(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 66.10169491525424,
                "explored_percent_lambda": 17.28813559322034,
                "explored_percent_none": 16.610169491525422,
                "kept_percent_concrete": 66.36363636363636,
                "kept_percent_lambda": 33.63636363636363,
                "num_examples": 15,
                "num_explored_concrete": 195,
                "num_explored_lambda": 51,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 73,
                "num_kept_lambda": 37,
                "num_values_explored": 295,
                "num_values_kept": 110,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 295
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.06368768494576216,
            "num_unique_values": 57,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.70229007633588,
                "explored_percent_lambda": 24.427480916030536,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 46.808510638297875,
                "kept_percent_lambda": 53.191489361702125,
                "num_examples": 15,
                "num_explored_concrete": 90,
                "num_explored_lambda": 32,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 25,
                "num_values_explored": 131,
                "num_values_kept": 47,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.06324890488758683,
            "num_unique_values": 58,
            "solution": "Cons(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 70.22900763358778,
                "explored_percent_lambda": 22.900763358778626,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 15,
                "num_explored_concrete": 92,
                "num_explored_lambda": 30,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 24,
                "num_values_explored": 131,
                "num_values_kept": 48,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.060093788895756006,
            "num_unique_values": 52,
            "solution": "Cons(3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 70.99236641221374,
                "explored_percent_lambda": 21.374045801526716,
                "explored_percent_none": 7.633587786259542,
                "kept_percent_concrete": 45.23809523809524,
                "kept_percent_lambda": 54.76190476190476,
                "num_examples": 15,
                "num_explored_concrete": 93,
                "num_explored_lambda": 28,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 23,
                "num_values_explored": 131,
                "num_values_kept": 42,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05702268402092159,
            "num_unique_values": 57,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 57.00934579439252,
                "explored_percent_lambda": 36.44859813084112,
                "explored_percent_none": 6.542056074766355,
                "kept_percent_concrete": 29.78723404255319,
                "kept_percent_lambda": 70.2127659574468,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 39,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 33,
                "num_values_explored": 107,
                "num_values_kept": 47,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 107
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07060748501680791,
            "num_unique_values": 61,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 75.97402597402598,
                "explored_percent_lambda": 19.48051948051948,
                "explored_percent_none": 4.545454545454546,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 15,
                "num_explored_concrete": 117,
                "num_explored_lambda": 30,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 24,
                "num_values_explored": 154,
                "num_values_kept": 51,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7672381920274347,
            "num_unique_values": 285,
            "solution": "Map((lambda u1: fn_15(x1)), fn_134(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.78277153558052,
                "explored_percent_lambda": 7.365792759051186,
                "explored_percent_none": 18.85143570536829,
                "kept_percent_concrete": 88.36363636363636,
                "kept_percent_lambda": 11.636363636363637,
                "num_examples": 15,
                "num_explored_concrete": 591,
                "num_explored_lambda": 59,
                "num_explored_none": 151,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 32,
                "num_values_explored": 801,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 801
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11078804195858538,
            "num_unique_values": 79,
            "solution": "fn_3(x1, Cons(Car(Cdr(x1)), []))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.1875,
                "explored_percent_lambda": 22.916666666666668,
                "explored_percent_none": 9.895833333333334,
                "kept_percent_concrete": 52.17391304347826,
                "kept_percent_lambda": 47.82608695652174,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 44,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 33,
                "num_values_explored": 192,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 192
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07076055509969592,
            "num_unique_values": 63,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 56.48854961832061,
                "explored_percent_lambda": 34.35114503816794,
                "explored_percent_none": 9.16030534351145,
                "kept_percent_concrete": 32.075471698113205,
                "kept_percent_lambda": 67.9245283018868,
                "num_examples": 15,
                "num_explored_concrete": 74,
                "num_explored_lambda": 45,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 36,
                "num_values_explored": 131,
                "num_values_kept": 53,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19860807294026017,
            "num_unique_values": 124,
            "solution": "fn_22(x1, [])",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.1340206185567,
                "explored_percent_lambda": 20.274914089347078,
                "explored_percent_none": 8.59106529209622,
                "kept_percent_concrete": 70.17543859649123,
                "kept_percent_lambda": 29.82456140350877,
                "num_examples": 15,
                "num_explored_concrete": 207,
                "num_explored_lambda": 59,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 34,
                "num_values_explored": 291,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.5192307692307693
}