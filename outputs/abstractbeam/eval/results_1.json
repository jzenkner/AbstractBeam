{
    "num_tasks": 104,
    "num_tasks_solved": 55,
    "results": [
        {
            "elapsed_time": 0.5667302729998482,
            "num_unique_values": 95,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Add(5, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 69.36170212765957,
                "explored_percent_lambda": 22.97872340425532,
                "explored_percent_none": 7.659574468085107,
                "kept_percent_concrete": 57.64705882352941,
                "kept_percent_lambda": 42.35294117647059,
                "num_examples": 15,
                "num_explored_concrete": 163,
                "num_explored_lambda": 54,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 49,
                "num_kept_lambda": 36,
                "num_values_explored": 235,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 235
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.9395838570001,
            "num_unique_values": 369,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.25850340136054,
                "explored_percent_lambda": 13.775510204081632,
                "explored_percent_none": 44.965986394557824,
                "kept_percent_concrete": 61.83844011142061,
                "kept_percent_lambda": 38.16155988857939,
                "num_examples": 15,
                "num_explored_concrete": 1213,
                "num_explored_lambda": 405,
                "num_explored_none": 1322,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 137,
                "num_values_explored": 2940,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96162
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.91262704999986,
            "num_unique_values": 410,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.389380530973455,
                "explored_percent_lambda": 11.752212389380531,
                "explored_percent_none": 39.85840707964602,
                "kept_percent_concrete": 72.25,
                "kept_percent_lambda": 27.75,
                "num_examples": 15,
                "num_explored_concrete": 1367,
                "num_explored_lambda": 332,
                "num_explored_none": 1126,
                "num_inputs": 1,
                "num_kept_concrete": 289,
                "num_kept_lambda": 111,
                "num_values_explored": 2825,
                "num_values_kept": 400,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89751
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.1572328740001,
            "num_unique_values": 390,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.37931034482759,
                "explored_percent_lambda": 13.362068965517242,
                "explored_percent_none": 45.258620689655174,
                "kept_percent_concrete": 61.578947368421055,
                "kept_percent_lambda": 38.421052631578945,
                "num_examples": 15,
                "num_explored_concrete": 1248,
                "num_explored_lambda": 403,
                "num_explored_none": 1365,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 146,
                "num_values_explored": 3016,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93761
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.1555826210001,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.04691689008043,
                "explored_percent_lambda": 13.73994638069705,
                "explored_percent_none": 46.21313672922252,
                "kept_percent_concrete": 62.4,
                "kept_percent_lambda": 37.6,
                "num_examples": 15,
                "num_explored_concrete": 1195,
                "num_explored_lambda": 410,
                "num_explored_none": 1379,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 141,
                "num_values_explored": 2984,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94673
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.388997044000007,
            "num_unique_values": 165,
            "solution": "fn_67(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 50.53995680345572,
                "explored_percent_lambda": 20.302375809935207,
                "explored_percent_none": 29.15766738660907,
                "kept_percent_concrete": 65.80645161290323,
                "kept_percent_lambda": 34.193548387096776,
                "num_examples": 15,
                "num_explored_concrete": 234,
                "num_explored_lambda": 94,
                "num_explored_none": 135,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 53,
                "num_values_explored": 463,
                "num_values_kept": 155,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 463
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.44807166200007487,
            "num_unique_values": 169,
            "solution": "fn_80(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 55.60081466395112,
                "explored_percent_lambda": 14.663951120162933,
                "explored_percent_none": 29.735234215885946,
                "kept_percent_concrete": 69.18238993710692,
                "kept_percent_lambda": 30.81761006289308,
                "num_examples": 15,
                "num_explored_concrete": 273,
                "num_explored_lambda": 72,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 49,
                "num_values_explored": 491,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 491
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.612070575999951,
            "num_unique_values": 209,
            "solution": "fn_134(fn_9(5, x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 53.724247226624406,
                "explored_percent_lambda": 12.202852614896988,
                "explored_percent_none": 34.0729001584786,
                "kept_percent_concrete": 75.37688442211055,
                "kept_percent_lambda": 24.623115577889447,
                "num_examples": 15,
                "num_explored_concrete": 339,
                "num_explored_lambda": 77,
                "num_explored_none": 215,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 49,
                "num_values_explored": 631,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 631
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4571199780002644,
            "num_unique_values": 195,
            "solution": "fn_84(5, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.88270377733598,
                "explored_percent_lambda": 19.08548707753479,
                "explored_percent_none": 28.031809145129223,
                "kept_percent_concrete": 69.1891891891892,
                "kept_percent_lambda": 30.81081081081081,
                "num_examples": 15,
                "num_explored_concrete": 266,
                "num_explored_lambda": 96,
                "num_explored_none": 141,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 57,
                "num_values_explored": 503,
                "num_values_kept": 185,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 503
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.47654619800005094,
            "num_unique_values": 171,
            "solution": "fn_80(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 51.323828920570264,
                "explored_percent_lambda": 20.570264765784113,
                "explored_percent_none": 28.105906313645622,
                "kept_percent_concrete": 62.732919254658384,
                "kept_percent_lambda": 37.267080745341616,
                "num_examples": 15,
                "num_explored_concrete": 252,
                "num_explored_lambda": 101,
                "num_explored_none": 138,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 60,
                "num_values_explored": 491,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 491
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4788039029999709,
            "num_unique_values": 176,
            "solution": "fn_89(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.5390625,
                "explored_percent_lambda": 19.7265625,
                "explored_percent_none": 27.734375,
                "kept_percent_concrete": 63.25301204819277,
                "kept_percent_lambda": 36.74698795180723,
                "num_examples": 15,
                "num_explored_concrete": 269,
                "num_explored_lambda": 101,
                "num_explored_none": 142,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 61,
                "num_values_explored": 512,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 512
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9623914660000992,
            "num_unique_values": 280,
            "solution": "fn_80(4, fn_80(5, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 56.96757230499562,
                "explored_percent_lambda": 12.445223488168274,
                "explored_percent_none": 30.58720420683611,
                "kept_percent_concrete": 77.4074074074074,
                "kept_percent_lambda": 22.59259259259259,
                "num_examples": 15,
                "num_explored_concrete": 650,
                "num_explored_lambda": 142,
                "num_explored_none": 349,
                "num_inputs": 1,
                "num_kept_concrete": 209,
                "num_kept_lambda": 61,
                "num_values_explored": 1141,
                "num_values_kept": 270,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1141
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.036171491999994,
            "num_unique_values": 307,
            "solution": "fn_80(5, fn_80(5, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 55.65293602103418,
                "explored_percent_lambda": 14.110429447852761,
                "explored_percent_none": 30.236634531113058,
                "kept_percent_concrete": 73.73737373737374,
                "kept_percent_lambda": 26.262626262626263,
                "num_examples": 15,
                "num_explored_concrete": 635,
                "num_explored_lambda": 161,
                "num_explored_none": 345,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 78,
                "num_values_explored": 1141,
                "num_values_kept": 297,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1141
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.853714653000225,
            "num_unique_values": 192,
            "solution": "fn_9(5, Map((lambda u1: ((lambda v1: Add(3, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 47.63343403826787,
                "explored_percent_lambda": 26.08257804632427,
                "explored_percent_none": 26.283987915407856,
                "kept_percent_concrete": 51.64835164835165,
                "kept_percent_lambda": 48.35164835164835,
                "num_examples": 15,
                "num_explored_concrete": 473,
                "num_explored_lambda": 259,
                "num_explored_none": 261,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 88,
                "num_values_explored": 993,
                "num_values_kept": 182,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 7158
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7908005260001119,
            "num_unique_values": 274,
            "solution": "fn_9(5, fn_11((lambda u1, u2: ((lambda v1: Subtract(v1, 1)))(u2)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.456647398843934,
                "explored_percent_lambda": 15.491329479768787,
                "explored_percent_none": 27.052023121387283,
                "kept_percent_concrete": 73.10606060606061,
                "kept_percent_lambda": 26.893939393939394,
                "num_examples": 15,
                "num_explored_concrete": 497,
                "num_explored_lambda": 134,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 193,
                "num_kept_lambda": 71,
                "num_values_explored": 865,
                "num_values_kept": 264,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 865
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.5740643289996,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.31080628972901,
                "explored_percent_lambda": 18.802275008364003,
                "explored_percent_none": 41.88691870190699,
                "kept_percent_concrete": 62.46418338108882,
                "kept_percent_lambda": 37.53581661891118,
                "num_examples": 15,
                "num_explored_concrete": 1175,
                "num_explored_lambda": 562,
                "num_explored_none": 1252,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 131,
                "num_values_explored": 2989,
                "num_values_kept": 349,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95183
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.2578603420002,
            "num_unique_values": 354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.02281368821293,
                "explored_percent_lambda": 17.9398548219841,
                "explored_percent_none": 44.03733148980297,
                "kept_percent_concrete": 63.372093023255815,
                "kept_percent_lambda": 36.627906976744185,
                "num_examples": 15,
                "num_explored_concrete": 1100,
                "num_explored_lambda": 519,
                "num_explored_none": 1274,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 126,
                "num_values_explored": 2893,
                "num_values_kept": 344,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91322
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.2259454959999,
            "num_unique_values": 366,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.74788494077834,
                "explored_percent_lambda": 16.683587140439933,
                "explored_percent_none": 44.568527918781726,
                "kept_percent_concrete": 66.01123595505618,
                "kept_percent_lambda": 33.98876404494382,
                "num_examples": 15,
                "num_explored_concrete": 1145,
                "num_explored_lambda": 493,
                "num_explored_none": 1317,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 121,
                "num_values_explored": 2955,
                "num_values_kept": 356,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92287
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.21488176,
            "num_unique_values": 326,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.49562784190276,
                "explored_percent_lambda": 25.008744316194473,
                "explored_percent_none": 37.49562784190276,
                "kept_percent_concrete": 45.56962025316456,
                "kept_percent_lambda": 54.43037974683544,
                "num_examples": 15,
                "num_explored_concrete": 1072,
                "num_explored_lambda": 715,
                "num_explored_none": 1072,
                "num_inputs": 1,
                "num_kept_concrete": 144,
                "num_kept_lambda": 172,
                "num_values_explored": 2859,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89314
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.5082769210003,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.84998271690287,
                "explored_percent_lambda": 17.628759073625993,
                "explored_percent_none": 44.521258209471135,
                "kept_percent_concrete": 63.988919667590025,
                "kept_percent_lambda": 36.011080332409975,
                "num_examples": 15,
                "num_explored_concrete": 1095,
                "num_explored_lambda": 510,
                "num_explored_none": 1288,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 130,
                "num_values_explored": 2893,
                "num_values_kept": 361,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90320
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.38297457,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.91374122367101,
                "explored_percent_lambda": 16.750250752256772,
                "explored_percent_none": 45.336008024072214,
                "kept_percent_concrete": 62.994350282485875,
                "kept_percent_lambda": 37.005649717514125,
                "num_examples": 15,
                "num_explored_concrete": 1134,
                "num_explored_lambda": 501,
                "num_explored_none": 1356,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 131,
                "num_values_explored": 2991,
                "num_values_kept": 354,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93706
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.32922408800005,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.61969439728353,
                "explored_percent_lambda": 18.913412563667233,
                "explored_percent_none": 45.46689303904924,
                "kept_percent_concrete": 59.67213114754098,
                "kept_percent_lambda": 40.32786885245902,
                "num_examples": 15,
                "num_explored_concrete": 1049,
                "num_explored_lambda": 557,
                "num_explored_none": 1339,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 123,
                "num_values_explored": 2945,
                "num_values_kept": 305,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91856
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39798778099975607,
            "num_unique_values": 181,
            "solution": "fn_63(x1, (lambda u1: fn_57(x1)), 1, 0)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.73913043478261,
                "explored_percent_lambda": 19.565217391304348,
                "explored_percent_none": 28.695652173913043,
                "kept_percent_concrete": 68.42105263157895,
                "kept_percent_lambda": 31.57894736842105,
                "num_examples": 15,
                "num_explored_concrete": 238,
                "num_explored_lambda": 90,
                "num_explored_none": 132,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 54,
                "num_values_explored": 460,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 460
            },
            "success": true,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7755862280000656,
            "num_unique_values": 264,
            "solution": "If(fn_90(x1, (lambda u1: fn_57(x1))), 0, 1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 60.91644204851752,
                "explored_percent_lambda": 11.455525606469003,
                "explored_percent_none": 27.628032345013477,
                "kept_percent_concrete": 80.70866141732283,
                "kept_percent_lambda": 19.291338582677167,
                "num_examples": 15,
                "num_explored_concrete": 452,
                "num_explored_lambda": 85,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 205,
                "num_kept_lambda": 49,
                "num_values_explored": 742,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 742
            },
            "success": true,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.33483411699945,
            "num_unique_values": 321,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.41045032657271,
                "explored_percent_lambda": 20.59126847713991,
                "explored_percent_none": 44.99828119628739,
                "kept_percent_concrete": 60.450160771704184,
                "kept_percent_lambda": 39.549839228295816,
                "num_examples": 15,
                "num_explored_concrete": 1001,
                "num_explored_lambda": 599,
                "num_explored_none": 1309,
                "num_inputs": 1,
                "num_kept_concrete": 188,
                "num_kept_lambda": 123,
                "num_values_explored": 2909,
                "num_values_kept": 311,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91292
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.86173051900005,
            "num_unique_values": 400,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.15526802218115,
                "explored_percent_lambda": 24.25138632162662,
                "explored_percent_none": 39.593345656192234,
                "kept_percent_concrete": 54.35897435897436,
                "kept_percent_lambda": 45.64102564102564,
                "num_examples": 15,
                "num_explored_concrete": 978,
                "num_explored_lambda": 656,
                "num_explored_none": 1071,
                "num_inputs": 1,
                "num_kept_concrete": 212,
                "num_kept_lambda": 178,
                "num_values_explored": 2705,
                "num_values_kept": 390,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86315
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.0099070289998,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.77313974591652,
                "explored_percent_lambda": 28.82032667876588,
                "explored_percent_none": 36.4065335753176,
                "kept_percent_concrete": 51.8716577540107,
                "kept_percent_lambda": 48.1283422459893,
                "num_examples": 15,
                "num_explored_concrete": 958,
                "num_explored_lambda": 794,
                "num_explored_none": 1003,
                "num_inputs": 1,
                "num_kept_concrete": 194,
                "num_kept_lambda": 180,
                "num_values_explored": 2755,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88518
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.60999966799955,
            "num_unique_values": 348,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.1031976744186,
                "explored_percent_lambda": 29.723837209302324,
                "explored_percent_none": 37.17296511627907,
                "kept_percent_concrete": 49.112426035502956,
                "kept_percent_lambda": 50.887573964497044,
                "num_examples": 15,
                "num_explored_concrete": 911,
                "num_explored_lambda": 818,
                "num_explored_none": 1023,
                "num_inputs": 1,
                "num_kept_concrete": 166,
                "num_kept_lambda": 172,
                "num_values_explored": 2752,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86088
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.06575437799984,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.44155844155844,
                "explored_percent_lambda": 28.86002886002886,
                "explored_percent_none": 37.698412698412696,
                "kept_percent_concrete": 49.570200573065904,
                "kept_percent_lambda": 50.429799426934096,
                "num_examples": 15,
                "num_explored_concrete": 927,
                "num_explored_lambda": 800,
                "num_explored_none": 1045,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 176,
                "num_values_explored": 2772,
                "num_values_kept": 349,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87356
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.54503355699944,
            "num_unique_values": 337,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.04195804195804,
                "explored_percent_lambda": 30.244755244755243,
                "explored_percent_none": 36.71328671328671,
                "kept_percent_concrete": 49.84709480122324,
                "kept_percent_lambda": 50.15290519877676,
                "num_examples": 15,
                "num_explored_concrete": 945,
                "num_explored_lambda": 865,
                "num_explored_none": 1050,
                "num_inputs": 1,
                "num_kept_concrete": 163,
                "num_kept_lambda": 164,
                "num_values_explored": 2860,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90253
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.1625797300003,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.816326530612244,
                "explored_percent_lambda": 10.918367346938776,
                "explored_percent_none": 43.265306122448976,
                "kept_percent_concrete": 68.18181818181819,
                "kept_percent_lambda": 31.818181818181817,
                "num_examples": 15,
                "num_explored_concrete": 1347,
                "num_explored_lambda": 321,
                "num_explored_none": 1272,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 119,
                "num_values_explored": 2940,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93478
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6973220380005,
            "num_unique_values": 420,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.600870827285924,
                "explored_percent_lambda": 13.86066763425254,
                "explored_percent_none": 36.53846153846154,
                "kept_percent_concrete": 70.0,
                "kept_percent_lambda": 30.0,
                "num_examples": 15,
                "num_explored_concrete": 1367,
                "num_explored_lambda": 382,
                "num_explored_none": 1007,
                "num_inputs": 1,
                "num_kept_concrete": 287,
                "num_kept_lambda": 123,
                "num_values_explored": 2756,
                "num_values_kept": 410,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87055
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.5260628240003,
            "num_unique_values": 437,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.34072220235967,
                "explored_percent_lambda": 13.47872720772256,
                "explored_percent_none": 35.18055058991777,
                "kept_percent_concrete": 71.42857142857143,
                "kept_percent_lambda": 28.571428571428573,
                "num_examples": 15,
                "num_explored_concrete": 1436,
                "num_explored_lambda": 377,
                "num_explored_none": 984,
                "num_inputs": 1,
                "num_kept_concrete": 305,
                "num_kept_lambda": 122,
                "num_values_explored": 2797,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86593
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8870863229995,
            "num_unique_values": 386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.85240464344942,
                "explored_percent_lambda": 15.522388059701493,
                "explored_percent_none": 41.62520729684909,
                "kept_percent_concrete": 65.95744680851064,
                "kept_percent_lambda": 34.04255319148936,
                "num_examples": 15,
                "num_explored_concrete": 1292,
                "num_explored_lambda": 468,
                "num_explored_none": 1255,
                "num_inputs": 1,
                "num_kept_concrete": 248,
                "num_kept_lambda": 128,
                "num_values_explored": 3015,
                "num_values_kept": 376,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93765
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6289256300006,
            "num_unique_values": 393,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.397905759162306,
                "explored_percent_lambda": 15.776614310645725,
                "explored_percent_none": 39.825479930191975,
                "kept_percent_concrete": 68.40731070496084,
                "kept_percent_lambda": 31.592689295039165,
                "num_examples": 15,
                "num_explored_concrete": 1272,
                "num_explored_lambda": 452,
                "num_explored_none": 1141,
                "num_inputs": 1,
                "num_kept_concrete": 262,
                "num_kept_lambda": 121,
                "num_values_explored": 2865,
                "num_values_kept": 383,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88937
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.19035394799903,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.21723097552799,
                "explored_percent_lambda": 10.090512906469996,
                "explored_percent_none": 45.692256118002014,
                "kept_percent_concrete": 68.05555555555556,
                "kept_percent_lambda": 31.944444444444443,
                "num_examples": 15,
                "num_explored_concrete": 1319,
                "num_explored_lambda": 301,
                "num_explored_none": 1363,
                "num_inputs": 1,
                "num_kept_concrete": 245,
                "num_kept_lambda": 115,
                "num_values_explored": 2983,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94154
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.4499518800003,
            "num_unique_values": 374,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.426399447132,
                "explored_percent_lambda": 15.964063579820317,
                "explored_percent_none": 44.60953697304768,
                "kept_percent_concrete": 65.10989010989012,
                "kept_percent_lambda": 34.89010989010989,
                "num_examples": 15,
                "num_explored_concrete": 1141,
                "num_explored_lambda": 462,
                "num_explored_none": 1291,
                "num_inputs": 1,
                "num_kept_concrete": 237,
                "num_kept_lambda": 127,
                "num_values_explored": 2894,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91232
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20807172199965862,
            "num_unique_values": 118,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Multiply(v1, 4)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.340425531914896,
                "explored_percent_lambda": 35.319148936170215,
                "explored_percent_none": 12.340425531914894,
                "kept_percent_concrete": 50.925925925925924,
                "kept_percent_lambda": 49.074074074074076,
                "num_examples": 15,
                "num_explored_concrete": 123,
                "num_explored_lambda": 83,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 55,
                "num_kept_lambda": 53,
                "num_values_explored": 235,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 235
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0818375160015421,
            "num_unique_values": 54,
            "solution": "Cons(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 69.46564885496183,
                "explored_percent_lambda": 23.66412213740458,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 40.90909090909091,
                "kept_percent_lambda": 59.09090909090909,
                "num_examples": 15,
                "num_explored_concrete": 91,
                "num_explored_lambda": 31,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 26,
                "num_values_explored": 131,
                "num_values_kept": 44,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0779199909993622,
            "num_unique_values": 55,
            "solution": "Cons(5, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 73.2824427480916,
                "explored_percent_lambda": 18.3206106870229,
                "explored_percent_none": 8.396946564885496,
                "kept_percent_concrete": 55.55555555555556,
                "kept_percent_lambda": 44.44444444444444,
                "num_examples": 15,
                "num_explored_concrete": 96,
                "num_explored_lambda": 24,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 20,
                "num_values_explored": 131,
                "num_values_kept": 45,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.4765996120004,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.97896213183731,
                "explored_percent_lambda": 24.68443197755961,
                "explored_percent_none": 20.336605890603085,
                "kept_percent_concrete": 53.94736842105263,
                "kept_percent_lambda": 46.05263157894737,
                "num_examples": 15,
                "num_explored_concrete": 1568,
                "num_explored_lambda": 704,
                "num_explored_none": 580,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 105,
                "num_values_explored": 2852,
                "num_values_kept": 228,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87223
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39769535399864253,
            "num_unique_values": 173,
            "solution": "fn_56(fn_6(x1), fn_22(x1, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98800959232614,
                "explored_percent_lambda": 15.347721822541967,
                "explored_percent_none": 19.664268585131893,
                "kept_percent_concrete": 70.5521472392638,
                "kept_percent_lambda": 29.447852760736197,
                "num_examples": 15,
                "num_explored_concrete": 271,
                "num_explored_lambda": 64,
                "num_explored_none": 82,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 48,
                "num_values_explored": 417,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 417
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.45008319299995,
            "num_unique_values": 424,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.69347277316985,
                "explored_percent_lambda": 14.028128380815001,
                "explored_percent_none": 36.27839884601514,
                "kept_percent_concrete": 69.32367149758454,
                "kept_percent_lambda": 30.67632850241546,
                "num_examples": 15,
                "num_explored_concrete": 1378,
                "num_explored_lambda": 389,
                "num_explored_none": 1006,
                "num_inputs": 1,
                "num_kept_concrete": 287,
                "num_kept_lambda": 127,
                "num_values_explored": 2773,
                "num_values_kept": 414,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87837
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.58418539500053,
            "num_unique_values": 436,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.47366560622128,
                "explored_percent_lambda": 22.26935312831389,
                "explored_percent_none": 37.25698126546483,
                "kept_percent_concrete": 58.92018779342723,
                "kept_percent_lambda": 41.07981220657277,
                "num_examples": 15,
                "num_explored_concrete": 1145,
                "num_explored_lambda": 630,
                "num_explored_none": 1054,
                "num_inputs": 1,
                "num_kept_concrete": 251,
                "num_kept_lambda": 175,
                "num_values_explored": 2829,
                "num_values_kept": 426,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89299
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.4062832899999,
            "num_unique_values": 334,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.03909026297086,
                "explored_percent_lambda": 25.764036958066807,
                "explored_percent_none": 39.19687277896233,
                "kept_percent_concrete": 53.39506172839506,
                "kept_percent_lambda": 46.60493827160494,
                "num_examples": 15,
                "num_explored_concrete": 986,
                "num_explored_lambda": 725,
                "num_explored_none": 1103,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 151,
                "num_values_explored": 2814,
                "num_values_kept": 324,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88265
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.10948160299995,
            "num_unique_values": 398,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.7536231884058,
                "explored_percent_lambda": 24.130434782608695,
                "explored_percent_none": 38.11594202898551,
                "kept_percent_concrete": 56.95876288659794,
                "kept_percent_lambda": 43.04123711340206,
                "num_examples": 15,
                "num_explored_concrete": 1042,
                "num_explored_lambda": 666,
                "num_explored_none": 1052,
                "num_inputs": 1,
                "num_kept_concrete": 221,
                "num_kept_lambda": 167,
                "num_values_explored": 2760,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86596
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.68856119299926,
            "num_unique_values": 250,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.94499294781382,
                "explored_percent_lambda": 29.760225669957688,
                "explored_percent_none": 24.29478138222849,
                "kept_percent_concrete": 39.583333333333336,
                "kept_percent_lambda": 60.416666666666664,
                "num_examples": 15,
                "num_explored_concrete": 1303,
                "num_explored_lambda": 844,
                "num_explored_none": 689,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 145,
                "num_values_explored": 2836,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89677
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.73248409199914,
            "num_unique_values": 301,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.23093447905478,
                "explored_percent_lambda": 26.387397064088795,
                "explored_percent_none": 38.381668456856424,
                "kept_percent_concrete": 42.61168384879725,
                "kept_percent_lambda": 57.38831615120275,
                "num_examples": 15,
                "num_explored_concrete": 984,
                "num_explored_lambda": 737,
                "num_explored_none": 1072,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 167,
                "num_values_explored": 2793,
                "num_values_kept": 291,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87536
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.3585376030005,
            "num_unique_values": 283,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.93567251461988,
                "explored_percent_lambda": 17.406260749914,
                "explored_percent_none": 41.658066735466114,
                "kept_percent_concrete": 54.94505494505494,
                "kept_percent_lambda": 45.05494505494506,
                "num_examples": 15,
                "num_explored_concrete": 1190,
                "num_explored_lambda": 506,
                "num_explored_none": 1211,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 123,
                "num_values_explored": 2907,
                "num_values_kept": 273,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91110
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.97934320999957,
            "num_unique_values": 287,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.54382332643202,
                "explored_percent_lambda": 22.73982056590752,
                "explored_percent_none": 38.71635610766045,
                "kept_percent_concrete": 46.931407942238266,
                "kept_percent_lambda": 53.068592057761734,
                "num_examples": 15,
                "num_explored_concrete": 1117,
                "num_explored_lambda": 659,
                "num_explored_none": 1122,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 147,
                "num_values_explored": 2898,
                "num_values_kept": 277,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90874
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9470690079997439,
            "num_unique_values": 289,
            "solution": "Map((lambda u1: fn_15(fn_0(x1))), fn_134(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.40699126092385,
                "explored_percent_lambda": 7.49063670411985,
                "explored_percent_none": 18.102372034956304,
                "kept_percent_concrete": 88.5304659498208,
                "kept_percent_lambda": 11.469534050179211,
                "num_examples": 15,
                "num_explored_concrete": 596,
                "num_explored_lambda": 60,
                "num_explored_none": 145,
                "num_inputs": 1,
                "num_kept_concrete": 247,
                "num_kept_lambda": 32,
                "num_values_explored": 801,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 801
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.82118396499936,
            "num_unique_values": 303,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.1875,
                "explored_percent_lambda": 12.32638888888889,
                "explored_percent_none": 45.486111111111114,
                "kept_percent_concrete": 55.972696245733786,
                "kept_percent_lambda": 44.027303754266214,
                "num_examples": 15,
                "num_explored_concrete": 1215,
                "num_explored_lambda": 355,
                "num_explored_none": 1310,
                "num_inputs": 1,
                "num_kept_concrete": 164,
                "num_kept_lambda": 129,
                "num_values_explored": 2880,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90767
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.15679562400146,
            "num_unique_values": 411,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.6850944716585,
                "explored_percent_lambda": 10.041987403778867,
                "explored_percent_none": 40.27291812456263,
                "kept_percent_concrete": 70.32418952618454,
                "kept_percent_lambda": 29.67581047381546,
                "num_examples": 15,
                "num_explored_concrete": 1420,
                "num_explored_lambda": 287,
                "num_explored_none": 1151,
                "num_inputs": 1,
                "num_kept_concrete": 282,
                "num_kept_lambda": 119,
                "num_values_explored": 2858,
                "num_values_kept": 401,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88471
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.5231253139991,
            "num_unique_values": 408,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.32239657631954,
                "explored_percent_lambda": 10.984308131241084,
                "explored_percent_none": 39.69329529243937,
                "kept_percent_concrete": 70.10050251256281,
                "kept_percent_lambda": 29.899497487437184,
                "num_examples": 15,
                "num_explored_concrete": 1383,
                "num_explored_lambda": 308,
                "num_explored_none": 1113,
                "num_inputs": 1,
                "num_kept_concrete": 279,
                "num_kept_lambda": 119,
                "num_values_explored": 2804,
                "num_values_kept": 398,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87613
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9863649100007024,
            "num_unique_values": 309,
            "solution": "Cons(Car(x1), fn_56([], x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.71611253196932,
                "explored_percent_lambda": 11.764705882352942,
                "explored_percent_none": 17.51918158567775,
                "kept_percent_concrete": 81.27090301003345,
                "kept_percent_lambda": 18.729096989966557,
                "num_examples": 15,
                "num_explored_concrete": 553,
                "num_explored_lambda": 92,
                "num_explored_none": 137,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 56,
                "num_values_explored": 782,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 782
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9031558070000756,
            "num_unique_values": 252,
            "solution": "fn_121(fn_22(x1, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.79099678456592,
                "explored_percent_lambda": 14.469453376205788,
                "explored_percent_none": 20.739549839228296,
                "kept_percent_concrete": 77.27272727272727,
                "kept_percent_lambda": 22.727272727272727,
                "num_examples": 15,
                "num_explored_concrete": 403,
                "num_explored_lambda": 90,
                "num_explored_none": 129,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 55,
                "num_values_explored": 622,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.182618064000053,
            "num_unique_values": 344,
            "solution": "fn_3(fn_56([], x1), fn_145(fn_32(x1, x1)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 73.00832342449465,
                "explored_percent_lambda": 12.96076099881094,
                "explored_percent_none": 14.030915576694412,
                "kept_percent_concrete": 84.73053892215569,
                "kept_percent_lambda": 15.269461077844312,
                "num_examples": 15,
                "num_explored_concrete": 614,
                "num_explored_lambda": 109,
                "num_explored_none": 118,
                "num_inputs": 1,
                "num_kept_concrete": 283,
                "num_kept_lambda": 51,
                "num_values_explored": 841,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 841
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3825087920013175,
            "num_unique_values": 173,
            "solution": "fn_56([], Cdr(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.96350364963503,
                "explored_percent_lambda": 20.194647201946474,
                "explored_percent_none": 14.841849148418492,
                "kept_percent_concrete": 71.77914110429448,
                "kept_percent_lambda": 28.220858895705522,
                "num_examples": 15,
                "num_explored_concrete": 267,
                "num_explored_lambda": 83,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 46,
                "num_values_explored": 411,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36361384299925703,
            "num_unique_values": 178,
            "solution": "fn_56([], fn_0(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.23357664233576,
                "explored_percent_lambda": 21.65450121654501,
                "explored_percent_none": 14.111922141119221,
                "kept_percent_concrete": 70.83333333333333,
                "kept_percent_lambda": 29.166666666666668,
                "num_examples": 15,
                "num_explored_concrete": 264,
                "num_explored_lambda": 89,
                "num_explored_none": 58,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 49,
                "num_values_explored": 411,
                "num_values_kept": 168,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0895283670015488,
            "num_unique_values": 324,
            "solution": "Cons(fn_15(Cdr(x1)), fn_145(Cdr(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.34314980793854,
                "explored_percent_lambda": 13.956466069142126,
                "explored_percent_none": 13.700384122919335,
                "kept_percent_concrete": 81.21019108280255,
                "kept_percent_lambda": 18.78980891719745,
                "num_examples": 15,
                "num_explored_concrete": 565,
                "num_explored_lambda": 109,
                "num_explored_none": 107,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 59,
                "num_values_explored": 781,
                "num_values_kept": 314,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 781
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24332119599966973,
            "num_unique_values": 138,
            "solution": "fn_22(fn_0(x1), [])",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.925170068027214,
                "explored_percent_lambda": 26.53061224489796,
                "explored_percent_none": 10.54421768707483,
                "kept_percent_concrete": 64.84375,
                "kept_percent_lambda": 35.15625,
                "num_examples": 15,
                "num_explored_concrete": 185,
                "num_explored_lambda": 78,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 45,
                "num_values_explored": 294,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 294
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.9786196419991029,
            "num_unique_values": 271,
            "solution": "fn_145(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.89580093312597,
                "explored_percent_lambda": 12.752721617418352,
                "explored_percent_none": 18.351477449455675,
                "kept_percent_concrete": 81.60919540229885,
                "kept_percent_lambda": 18.39080459770115,
                "num_examples": 15,
                "num_explored_concrete": 443,
                "num_explored_lambda": 82,
                "num_explored_none": 118,
                "num_inputs": 1,
                "num_kept_concrete": 213,
                "num_kept_lambda": 48,
                "num_values_explored": 643,
                "num_values_kept": 261,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 643
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.435631756001385,
            "num_unique_values": 381,
            "solution": "fn_56(fn_145(fn_6(x1)), fn_6(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 72.78719397363466,
                "explored_percent_lambda": 11.67608286252354,
                "explored_percent_none": 15.536723163841808,
                "kept_percent_concrete": 85.98382749326146,
                "kept_percent_lambda": 14.016172506738544,
                "num_examples": 15,
                "num_explored_concrete": 773,
                "num_explored_lambda": 124,
                "num_explored_none": 165,
                "num_inputs": 1,
                "num_kept_concrete": 319,
                "num_kept_lambda": 52,
                "num_values_explored": 1062,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1062
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.51228342000104,
            "num_unique_values": 291,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.320132013201324,
                "explored_percent_lambda": 18.151815181518153,
                "explored_percent_none": 40.52805280528053,
                "kept_percent_concrete": 54.804270462633454,
                "kept_percent_lambda": 45.195729537366546,
                "num_examples": 15,
                "num_explored_concrete": 1252,
                "num_explored_lambda": 550,
                "num_explored_none": 1228,
                "num_inputs": 1,
                "num_kept_concrete": 154,
                "num_kept_lambda": 127,
                "num_values_explored": 3030,
                "num_values_kept": 281,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93803
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8256957289995626,
            "num_unique_values": 250,
            "solution": "fn_121(fn_22(x1, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.09017713365539,
                "explored_percent_lambda": 14.492753623188406,
                "explored_percent_none": 21.4170692431562,
                "kept_percent_concrete": 77.5,
                "kept_percent_lambda": 22.5,
                "num_examples": 15,
                "num_explored_concrete": 398,
                "num_explored_lambda": 90,
                "num_explored_none": 133,
                "num_inputs": 1,
                "num_kept_concrete": 186,
                "num_kept_lambda": 54,
                "num_values_explored": 621,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 621
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.2954784699996,
            "num_unique_values": 396,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.3117816091954,
                "explored_percent_lambda": 17.24137931034483,
                "explored_percent_none": 34.44683908045977,
                "kept_percent_concrete": 64.24870466321244,
                "kept_percent_lambda": 35.751295336787564,
                "num_examples": 15,
                "num_explored_concrete": 1345,
                "num_explored_lambda": 480,
                "num_explored_none": 959,
                "num_inputs": 1,
                "num_kept_concrete": 248,
                "num_kept_lambda": 138,
                "num_values_explored": 2784,
                "num_values_kept": 386,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88680
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.04900859699956,
            "num_unique_values": 402,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.926481084939326,
                "explored_percent_lambda": 19.98572448251249,
                "explored_percent_none": 27.08779443254818,
                "kept_percent_concrete": 67.34693877551021,
                "kept_percent_lambda": 32.6530612244898,
                "num_examples": 15,
                "num_explored_concrete": 1483,
                "num_explored_lambda": 560,
                "num_explored_none": 759,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 128,
                "num_values_explored": 2802,
                "num_values_kept": 392,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89456
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.02646569600074,
            "num_unique_values": 411,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.846431146359045,
                "explored_percent_lambda": 20.94448449891853,
                "explored_percent_none": 30.20908435472242,
                "kept_percent_concrete": 65.5860349127182,
                "kept_percent_lambda": 34.413965087281795,
                "num_examples": 15,
                "num_explored_concrete": 1355,
                "num_explored_lambda": 581,
                "num_explored_none": 838,
                "num_inputs": 1,
                "num_kept_concrete": 263,
                "num_kept_lambda": 138,
                "num_values_explored": 2774,
                "num_values_kept": 401,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87535
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.7635904070012,
            "num_unique_values": 419,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.245269796776455,
                "explored_percent_lambda": 16.433076384022424,
                "explored_percent_none": 33.321653819201124,
                "kept_percent_concrete": 66.50366748166259,
                "kept_percent_lambda": 33.49633251833741,
                "num_examples": 15,
                "num_explored_concrete": 1434,
                "num_explored_lambda": 469,
                "num_explored_none": 951,
                "num_inputs": 1,
                "num_kept_concrete": 272,
                "num_kept_lambda": 137,
                "num_values_explored": 2854,
                "num_values_kept": 409,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89321
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.8596545060009,
            "num_unique_values": 429,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.76004191407615,
                "explored_percent_lambda": 17.394341599720573,
                "explored_percent_none": 33.845616486203284,
                "kept_percent_concrete": 62.29116945107398,
                "kept_percent_lambda": 37.70883054892602,
                "num_examples": 15,
                "num_explored_concrete": 1396,
                "num_explored_lambda": 498,
                "num_explored_none": 969,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 158,
                "num_values_explored": 2863,
                "num_values_kept": 419,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89023
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.2665074759989,
            "num_unique_values": 377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.04836415362731,
                "explored_percent_lambda": 21.94167852062589,
                "explored_percent_none": 31.0099573257468,
                "kept_percent_concrete": 64.30517711171662,
                "kept_percent_lambda": 35.694822888283376,
                "num_examples": 15,
                "num_explored_concrete": 1323,
                "num_explored_lambda": 617,
                "num_explored_none": 872,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 131,
                "num_values_explored": 2812,
                "num_values_kept": 367,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87134
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 305.40863045900005,
            "num_unique_values": 408,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.333919156414765,
                "explored_percent_lambda": 17.25834797891037,
                "explored_percent_none": 32.40773286467487,
                "kept_percent_concrete": 65.57788944723617,
                "kept_percent_lambda": 34.42211055276382,
                "num_examples": 15,
                "num_explored_concrete": 1432,
                "num_explored_lambda": 491,
                "num_explored_none": 922,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 137,
                "num_values_explored": 2845,
                "num_values_kept": 398,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89306
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.6669847939993,
            "num_unique_values": 424,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.15478323181655,
                "explored_percent_lambda": 18.70297384450018,
                "explored_percent_none": 33.14224292368327,
                "kept_percent_concrete": 61.594202898550726,
                "kept_percent_lambda": 38.405797101449274,
                "num_examples": 15,
                "num_explored_concrete": 1344,
                "num_explored_lambda": 522,
                "num_explored_none": 925,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 159,
                "num_values_explored": 2791,
                "num_values_kept": 414,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87505
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.34803234799983,
            "num_unique_values": 373,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.091412742382275,
                "explored_percent_lambda": 18.698060941828256,
                "explored_percent_none": 34.21052631578947,
                "kept_percent_concrete": 62.8099173553719,
                "kept_percent_lambda": 37.1900826446281,
                "num_examples": 15,
                "num_explored_concrete": 1360,
                "num_explored_lambda": 540,
                "num_explored_none": 988,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 135,
                "num_values_explored": 2888,
                "num_values_kept": 363,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90006
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 304.73283549699954,
            "num_unique_values": 407,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.67090395480226,
                "explored_percent_lambda": 19.032485875706215,
                "explored_percent_none": 30.296610169491526,
                "kept_percent_concrete": 65.4911838790932,
                "kept_percent_lambda": 34.5088161209068,
                "num_examples": 15,
                "num_explored_concrete": 1435,
                "num_explored_lambda": 539,
                "num_explored_none": 858,
                "num_inputs": 1,
                "num_kept_concrete": 260,
                "num_kept_lambda": 137,
                "num_values_explored": 2832,
                "num_values_kept": 397,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89440
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8217209799986449,
            "num_unique_values": 255,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: fn_45(v1)))(u2)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.31460674157304,
                "explored_percent_lambda": 14.831460674157304,
                "explored_percent_none": 26.853932584269664,
                "kept_percent_concrete": 74.28571428571429,
                "kept_percent_lambda": 25.714285714285715,
                "num_examples": 15,
                "num_explored_concrete": 519,
                "num_explored_lambda": 132,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 63,
                "num_values_explored": 890,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 890
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.389301772998806,
            "num_unique_values": 170,
            "solution": "fn_67(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 49.0238611713666,
                "explored_percent_lambda": 21.0412147505423,
                "explored_percent_none": 29.934924078091107,
                "kept_percent_concrete": 65.625,
                "kept_percent_lambda": 34.375,
                "num_examples": 15,
                "num_explored_concrete": 226,
                "num_explored_lambda": 97,
                "num_explored_none": 138,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 55,
                "num_values_explored": 461,
                "num_values_kept": 160,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 461
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3897419839995564,
            "num_unique_values": 164,
            "solution": "fn_67(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 53.87931034482759,
                "explored_percent_lambda": 18.53448275862069,
                "explored_percent_none": 27.586206896551722,
                "kept_percent_concrete": 65.58441558441558,
                "kept_percent_lambda": 34.41558441558441,
                "num_examples": 15,
                "num_explored_concrete": 250,
                "num_explored_lambda": 86,
                "num_explored_none": 128,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 53,
                "num_values_explored": 464,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 464
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0999720449999586,
            "num_unique_values": 73,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.62745098039215,
                "explored_percent_lambda": 23.529411764705884,
                "explored_percent_none": 7.8431372549019605,
                "kept_percent_concrete": 57.142857142857146,
                "kept_percent_lambda": 42.857142857142854,
                "num_examples": 15,
                "num_explored_concrete": 105,
                "num_explored_lambda": 36,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 27,
                "num_values_explored": 153,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8248922799994034,
            "num_unique_values": 321,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: fn_52(((lambda v1: IsPrime(v1)))(v1))))(u2)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 64.96598639455782,
                "explored_percent_lambda": 11.45124716553288,
                "explored_percent_none": 23.582766439909296,
                "kept_percent_concrete": 82.31511254019293,
                "kept_percent_lambda": 17.684887459807072,
                "num_examples": 15,
                "num_explored_concrete": 573,
                "num_explored_lambda": 101,
                "num_explored_none": 208,
                "num_inputs": 1,
                "num_kept_concrete": 256,
                "num_kept_lambda": 55,
                "num_values_explored": 882,
                "num_values_kept": 311,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4842310299991368,
            "num_unique_values": 188,
            "solution": "fn_84(0, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 52.37154150197628,
                "explored_percent_lambda": 18.57707509881423,
                "explored_percent_none": 29.051383399209485,
                "kept_percent_concrete": 70.2247191011236,
                "kept_percent_lambda": 29.775280898876403,
                "num_examples": 15,
                "num_explored_concrete": 265,
                "num_explored_lambda": 94,
                "num_explored_none": 147,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 53,
                "num_values_explored": 506,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 506
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.45595399600097153,
            "num_unique_values": 178,
            "solution": "fn_80(2, fn_67(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 54.618473895582326,
                "explored_percent_lambda": 17.269076305220885,
                "explored_percent_none": 28.11244979919679,
                "kept_percent_concrete": 70.83333333333333,
                "kept_percent_lambda": 29.166666666666668,
                "num_examples": 15,
                "num_explored_concrete": 272,
                "num_explored_lambda": 86,
                "num_explored_none": 140,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 49,
                "num_values_explored": 498,
                "num_values_kept": 168,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 498
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.47830410999995365,
            "num_unique_values": 179,
            "solution": "fn_84(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 54.67196819085487,
                "explored_percent_lambda": 16.302186878727635,
                "explored_percent_none": 29.025844930417495,
                "kept_percent_concrete": 72.18934911242603,
                "kept_percent_lambda": 27.810650887573964,
                "num_examples": 15,
                "num_explored_concrete": 275,
                "num_explored_lambda": 82,
                "num_explored_none": 146,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 47,
                "num_values_explored": 503,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 503
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20045588100038003,
            "num_unique_values": 125,
            "solution": "fn_11((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 56.72268907563025,
                "explored_percent_lambda": 31.932773109243698,
                "explored_percent_none": 11.344537815126051,
                "kept_percent_concrete": 56.52173913043478,
                "kept_percent_lambda": 43.47826086956522,
                "num_examples": 15,
                "num_explored_concrete": 135,
                "num_explored_lambda": 76,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 65,
                "num_kept_lambda": 50,
                "num_values_explored": 238,
                "num_values_kept": 115,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.06978908400014916,
            "num_unique_values": 56,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 59.43396226415094,
                "explored_percent_lambda": 37.735849056603776,
                "explored_percent_none": 2.830188679245283,
                "kept_percent_concrete": 28.26086956521739,
                "kept_percent_lambda": 71.73913043478261,
                "num_examples": 15,
                "num_explored_concrete": 63,
                "num_explored_lambda": 40,
                "num_explored_none": 3,
                "num_inputs": 1,
                "num_kept_concrete": 13,
                "num_kept_lambda": 33,
                "num_values_explored": 106,
                "num_values_kept": 46,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 106
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11861814700023388,
            "num_unique_values": 85,
            "solution": "fn_0(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 61.98830409356725,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 48.0,
                "kept_percent_lambda": 52.0,
                "num_examples": 15,
                "num_explored_concrete": 106,
                "num_explored_lambda": 49,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 39,
                "num_values_explored": 171,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12951022299967008,
            "num_unique_values": 94,
            "solution": "fn_2((lambda u1: ((lambda v1: fn_0(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 66.30434782608695,
                "explored_percent_lambda": 27.17391304347826,
                "explored_percent_none": 6.521739130434782,
                "kept_percent_concrete": 53.57142857142857,
                "kept_percent_lambda": 46.42857142857143,
                "num_examples": 15,
                "num_explored_concrete": 122,
                "num_explored_lambda": 50,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 39,
                "num_values_explored": 184,
                "num_values_kept": 84,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 184
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07686445699982869,
            "num_unique_values": 60,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 77.46478873239437,
                "explored_percent_lambda": 18.309859154929576,
                "explored_percent_none": 4.225352112676056,
                "kept_percent_concrete": 56.0,
                "kept_percent_lambda": 44.0,
                "num_examples": 15,
                "num_explored_concrete": 110,
                "num_explored_lambda": 26,
                "num_explored_none": 6,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 22,
                "num_values_explored": 142,
                "num_values_kept": 50,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 142
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05663721899873053,
            "num_unique_values": 40,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.57142857142857,
                "explored_percent_lambda": 17.857142857142858,
                "explored_percent_none": 3.5714285714285716,
                "kept_percent_concrete": 46.666666666666664,
                "kept_percent_lambda": 53.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 88,
                "num_explored_lambda": 20,
                "num_explored_none": 4,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 16,
                "num_values_explored": 112,
                "num_values_kept": 30,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 112
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17240469699936511,
            "num_unique_values": 92,
            "solution": "fn_15(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 78.88446215139442,
                "explored_percent_lambda": 17.529880478087648,
                "explored_percent_none": 3.585657370517928,
                "kept_percent_concrete": 71.95121951219512,
                "kept_percent_lambda": 28.048780487804876,
                "num_examples": 15,
                "num_explored_concrete": 198,
                "num_explored_lambda": 44,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 23,
                "num_values_explored": 251,
                "num_values_kept": 82,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 251
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6685805690013,
            "num_unique_values": 335,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.71108179419525,
                "explored_percent_lambda": 14.940633245382585,
                "explored_percent_none": 42.34828496042216,
                "kept_percent_concrete": 66.46153846153847,
                "kept_percent_lambda": 33.53846153846154,
                "num_examples": 15,
                "num_explored_concrete": 1295,
                "num_explored_lambda": 453,
                "num_explored_none": 1284,
                "num_inputs": 1,
                "num_kept_concrete": 216,
                "num_kept_lambda": 109,
                "num_values_explored": 3032,
                "num_values_kept": 325,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95297
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7593039589992259,
            "num_unique_values": 266,
            "solution": "Mod(Car(x1), 2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.7424023154848,
                "explored_percent_lambda": 12.590448625180898,
                "explored_percent_none": 29.6671490593343,
                "kept_percent_concrete": 78.515625,
                "kept_percent_lambda": 21.484375,
                "num_examples": 15,
                "num_explored_concrete": 399,
                "num_explored_lambda": 87,
                "num_explored_none": 205,
                "num_inputs": 1,
                "num_kept_concrete": 201,
                "num_kept_lambda": 55,
                "num_values_explored": 691,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.6239356140013,
            "num_unique_values": 268,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.50841750841751,
                "explored_percent_lambda": 19.023569023569024,
                "explored_percent_none": 43.46801346801347,
                "kept_percent_concrete": 51.55038759689923,
                "kept_percent_lambda": 48.44961240310077,
                "num_examples": 15,
                "num_explored_concrete": 1114,
                "num_explored_lambda": 565,
                "num_explored_none": 1291,
                "num_inputs": 1,
                "num_kept_concrete": 133,
                "num_kept_lambda": 125,
                "num_values_explored": 2970,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92877
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13881729999957315,
            "num_unique_values": 75,
            "solution": "fn_3(fn_0(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 68.75,
                "explored_percent_lambda": 23.958333333333332,
                "explored_percent_none": 7.291666666666667,
                "kept_percent_concrete": 49.23076923076923,
                "kept_percent_lambda": 50.76923076923077,
                "num_examples": 15,
                "num_explored_concrete": 132,
                "num_explored_lambda": 46,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 32,
                "num_kept_lambda": 33,
                "num_values_explored": 192,
                "num_values_kept": 65,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 192
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23893336599940085,
            "num_unique_values": 120,
            "solution": "fn_22(fn_0(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 66.10169491525424,
                "explored_percent_lambda": 17.28813559322034,
                "explored_percent_none": 16.610169491525422,
                "kept_percent_concrete": 66.36363636363636,
                "kept_percent_lambda": 33.63636363636363,
                "num_examples": 15,
                "num_explored_concrete": 195,
                "num_explored_lambda": 51,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 73,
                "num_kept_lambda": 37,
                "num_values_explored": 295,
                "num_values_kept": 110,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 295
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08307871299984981,
            "num_unique_values": 57,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 68.70229007633588,
                "explored_percent_lambda": 24.427480916030536,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 46.808510638297875,
                "kept_percent_lambda": 53.191489361702125,
                "num_examples": 15,
                "num_explored_concrete": 90,
                "num_explored_lambda": 32,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 25,
                "num_values_explored": 131,
                "num_values_kept": 47,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0813674879991595,
            "num_unique_values": 58,
            "solution": "Cons(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 70.22900763358778,
                "explored_percent_lambda": 22.900763358778626,
                "explored_percent_none": 6.870229007633588,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 15,
                "num_explored_concrete": 92,
                "num_explored_lambda": 30,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 24,
                "num_values_explored": 131,
                "num_values_kept": 48,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.078094657001202,
            "num_unique_values": 52,
            "solution": "Cons(3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 70.99236641221374,
                "explored_percent_lambda": 21.374045801526716,
                "explored_percent_none": 7.633587786259542,
                "kept_percent_concrete": 45.23809523809524,
                "kept_percent_lambda": 54.76190476190476,
                "num_examples": 15,
                "num_explored_concrete": 93,
                "num_explored_lambda": 28,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 23,
                "num_values_explored": 131,
                "num_values_kept": 42,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07189963800010446,
            "num_unique_values": 57,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 57.00934579439252,
                "explored_percent_lambda": 36.44859813084112,
                "explored_percent_none": 6.542056074766355,
                "kept_percent_concrete": 29.78723404255319,
                "kept_percent_lambda": 70.2127659574468,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 39,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 33,
                "num_values_explored": 107,
                "num_values_kept": 47,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 107
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09171271000013803,
            "num_unique_values": 61,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 75.97402597402598,
                "explored_percent_lambda": 19.48051948051948,
                "explored_percent_none": 4.545454545454546,
                "kept_percent_concrete": 52.94117647058823,
                "kept_percent_lambda": 47.05882352941177,
                "num_examples": 15,
                "num_explored_concrete": 117,
                "num_explored_lambda": 30,
                "num_explored_none": 7,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 24,
                "num_values_explored": 154,
                "num_values_kept": 51,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8834776080002484,
            "num_unique_values": 285,
            "solution": "Map((lambda u1: fn_15(x1)), fn_134(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.78277153558052,
                "explored_percent_lambda": 7.365792759051186,
                "explored_percent_none": 18.85143570536829,
                "kept_percent_concrete": 88.36363636363636,
                "kept_percent_lambda": 11.636363636363637,
                "num_examples": 15,
                "num_explored_concrete": 591,
                "num_explored_lambda": 59,
                "num_explored_none": 151,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 32,
                "num_values_explored": 801,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 801
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1338437350004824,
            "num_unique_values": 79,
            "solution": "fn_3(x1, Cons(Car(Cdr(x1)), []))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.1875,
                "explored_percent_lambda": 22.916666666666668,
                "explored_percent_none": 9.895833333333334,
                "kept_percent_concrete": 52.17391304347826,
                "kept_percent_lambda": 47.82608695652174,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 44,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 36,
                "num_kept_lambda": 33,
                "num_values_explored": 192,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 192
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09413402799873438,
            "num_unique_values": 63,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 56.48854961832061,
                "explored_percent_lambda": 34.35114503816794,
                "explored_percent_none": 9.16030534351145,
                "kept_percent_concrete": 32.075471698113205,
                "kept_percent_lambda": 67.9245283018868,
                "num_examples": 15,
                "num_explored_concrete": 74,
                "num_explored_lambda": 45,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 36,
                "num_values_explored": 131,
                "num_values_kept": 53,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2400882809997711,
            "num_unique_values": 124,
            "solution": "fn_22(x1, [])",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.1340206185567,
                "explored_percent_lambda": 20.274914089347078,
                "explored_percent_none": 8.59106529209622,
                "kept_percent_concrete": 70.17543859649123,
                "kept_percent_lambda": 29.82456140350877,
                "num_examples": 15,
                "num_explored_concrete": 207,
                "num_explored_lambda": 59,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 34,
                "num_values_explored": 291,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.5288461538461539
}