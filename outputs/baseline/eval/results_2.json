{
    "num_tasks": 104,
    "num_tasks_solved": 32,
    "results": [
        {
            "elapsed_time": 302.58442168700276,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.75735294117647,
                "explored_percent_lambda": 25.36764705882353,
                "explored_percent_none": 26.875,
                "kept_percent_concrete": 53.276955602537,
                "kept_percent_lambda": 46.723044397463,
                "num_examples": 15,
                "num_explored_concrete": 1299,
                "num_explored_lambda": 690,
                "num_explored_none": 731,
                "num_inputs": 1,
                "num_kept_concrete": 252,
                "num_kept_lambda": 221,
                "num_values_explored": 2720,
                "num_values_kept": 473,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85257
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4931903980032,
            "num_unique_values": 236,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.380610412926394,
                "explored_percent_lambda": 34.021543985637344,
                "explored_percent_none": 31.597845601436266,
                "kept_percent_concrete": 38.69565217391305,
                "kept_percent_lambda": 61.30434782608695,
                "num_examples": 15,
                "num_explored_concrete": 383,
                "num_explored_lambda": 379,
                "num_explored_none": 352,
                "num_inputs": 1,
                "num_kept_concrete": 89,
                "num_kept_lambda": 141,
                "num_values_explored": 1114,
                "num_values_kept": 230,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 50692
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.59916892601177,
            "num_unique_values": 251,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.53475440222428,
                "explored_percent_lambda": 32.15940685820204,
                "explored_percent_none": 30.30583873957368,
                "kept_percent_concrete": 42.04081632653061,
                "kept_percent_lambda": 57.95918367346939,
                "num_examples": 15,
                "num_explored_concrete": 405,
                "num_explored_lambda": 347,
                "num_explored_none": 327,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 142,
                "num_values_explored": 1079,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 35280
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.5268114770006,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.14442700156986,
                "explored_percent_lambda": 34.45839874411303,
                "explored_percent_none": 31.39717425431711,
                "kept_percent_concrete": 39.76833976833977,
                "kept_percent_lambda": 60.23166023166023,
                "num_examples": 15,
                "num_explored_concrete": 435,
                "num_explored_lambda": 439,
                "num_explored_none": 400,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 156,
                "num_values_explored": 1274,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 36008
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3654408900038,
            "num_unique_values": 261,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.50915750915751,
                "explored_percent_lambda": 33.42490842490842,
                "explored_percent_none": 34.065934065934066,
                "kept_percent_concrete": 34.509803921568626,
                "kept_percent_lambda": 65.49019607843137,
                "num_examples": 15,
                "num_explored_concrete": 355,
                "num_explored_lambda": 365,
                "num_explored_none": 372,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 167,
                "num_values_explored": 1092,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 35744
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.67388810100965,
            "num_unique_values": 248,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.13397129186603,
                "explored_percent_lambda": 38.18181818181818,
                "explored_percent_none": 33.68421052631579,
                "kept_percent_concrete": 34.710743801652896,
                "kept_percent_lambda": 65.2892561983471,
                "num_examples": 15,
                "num_explored_concrete": 294,
                "num_explored_lambda": 399,
                "num_explored_none": 352,
                "num_inputs": 1,
                "num_kept_concrete": 84,
                "num_kept_lambda": 158,
                "num_values_explored": 1045,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 33417
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.8878363269905,
            "num_unique_values": 204,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.990772779700116,
                "explored_percent_lambda": 40.94579008073818,
                "explored_percent_none": 35.06343713956171,
                "kept_percent_concrete": 22.727272727272727,
                "kept_percent_lambda": 77.27272727272727,
                "num_examples": 15,
                "num_explored_concrete": 208,
                "num_explored_lambda": 355,
                "num_explored_none": 304,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 153,
                "num_values_explored": 867,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 33725
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.507016929012,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.275657336726038,
                "explored_percent_lambda": 41.64546225614928,
                "explored_percent_none": 33.07888040712468,
                "kept_percent_concrete": 28.86178861788618,
                "kept_percent_lambda": 71.13821138211382,
                "num_examples": 15,
                "num_explored_concrete": 298,
                "num_explored_lambda": 491,
                "num_explored_none": 390,
                "num_inputs": 1,
                "num_kept_concrete": 71,
                "num_kept_lambda": 175,
                "num_values_explored": 1179,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 34653
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.65651611899375,
            "num_unique_values": 228,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.045908183632733,
                "explored_percent_lambda": 37.025948103792416,
                "explored_percent_none": 35.92814371257485,
                "kept_percent_concrete": 31.08108108108108,
                "kept_percent_lambda": 68.91891891891892,
                "num_examples": 15,
                "num_explored_concrete": 271,
                "num_explored_lambda": 371,
                "num_explored_none": 360,
                "num_inputs": 1,
                "num_kept_concrete": 69,
                "num_kept_lambda": 153,
                "num_values_explored": 1002,
                "num_values_kept": 222,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 34253
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2032937990007,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.833333333333336,
                "explored_percent_lambda": 29.533333333333335,
                "explored_percent_none": 26.633333333333333,
                "kept_percent_concrete": 46.62273476112026,
                "kept_percent_lambda": 53.37726523887974,
                "num_examples": 15,
                "num_explored_concrete": 1315,
                "num_explored_lambda": 886,
                "num_explored_none": 799,
                "num_inputs": 1,
                "num_kept_concrete": 283,
                "num_kept_lambda": 324,
                "num_values_explored": 3000,
                "num_values_kept": 607,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 67130
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.398591242003,
            "num_unique_values": 589,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.990033222591364,
                "explored_percent_lambda": 32.458471760797345,
                "explored_percent_none": 24.551495016611295,
                "kept_percent_concrete": 42.88164665523156,
                "kept_percent_lambda": 57.11835334476844,
                "num_examples": 15,
                "num_explored_concrete": 1294,
                "num_explored_lambda": 977,
                "num_explored_none": 739,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 333,
                "num_values_explored": 3010,
                "num_values_kept": 583,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91300
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3291474509897,
            "num_unique_values": 596,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.79474548440066,
                "explored_percent_lambda": 30.37766830870279,
                "explored_percent_none": 24.82758620689655,
                "kept_percent_concrete": 46.440677966101696,
                "kept_percent_lambda": 53.559322033898304,
                "num_examples": 15,
                "num_explored_concrete": 1364,
                "num_explored_lambda": 925,
                "num_explored_none": 756,
                "num_inputs": 1,
                "num_kept_concrete": 274,
                "num_kept_lambda": 316,
                "num_values_explored": 3045,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92314
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3486255280004,
            "num_unique_values": 618,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.616766467065865,
                "explored_percent_lambda": 32.23552894211577,
                "explored_percent_none": 26.147704590818364,
                "kept_percent_concrete": 43.13725490196079,
                "kept_percent_lambda": 56.86274509803921,
                "num_examples": 15,
                "num_explored_concrete": 1251,
                "num_explored_lambda": 969,
                "num_explored_none": 786,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 348,
                "num_values_explored": 3006,
                "num_values_kept": 612,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90953
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.29515280699707,
            "num_unique_values": 605,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.26692581794622,
                "explored_percent_lambda": 29.41367022999676,
                "explored_percent_none": 22.319403952057012,
                "kept_percent_concrete": 44.90818030050084,
                "kept_percent_lambda": 55.09181969949916,
                "num_examples": 15,
                "num_explored_concrete": 1490,
                "num_explored_lambda": 908,
                "num_explored_none": 689,
                "num_inputs": 1,
                "num_kept_concrete": 269,
                "num_kept_lambda": 330,
                "num_values_explored": 3087,
                "num_values_kept": 599,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94882
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.391854875008,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.68044988422097,
                "explored_percent_lambda": 33.50975851802845,
                "explored_percent_none": 24.80979159775058,
                "kept_percent_concrete": 41.710296684118674,
                "kept_percent_lambda": 58.289703315881326,
                "num_examples": 15,
                "num_explored_concrete": 1260,
                "num_explored_lambda": 1013,
                "num_explored_none": 750,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 334,
                "num_values_explored": 3023,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91176
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.09897578699747,
            "num_unique_values": 543,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.958050586057986,
                "explored_percent_lambda": 19.33991363355953,
                "explored_percent_none": 22.70203578038248,
                "kept_percent_concrete": 59.5903165735568,
                "kept_percent_lambda": 40.4096834264432,
                "num_examples": 15,
                "num_explored_concrete": 1879,
                "num_explored_lambda": 627,
                "num_explored_none": 736,
                "num_inputs": 1,
                "num_kept_concrete": 320,
                "num_kept_lambda": 217,
                "num_values_explored": 3242,
                "num_values_kept": 537,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 98142
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1064033739967,
            "num_unique_values": 534,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.29032258064516,
                "explored_percent_lambda": 17.10654936461388,
                "explored_percent_none": 21.603128054740957,
                "kept_percent_concrete": 64.39393939393939,
                "kept_percent_lambda": 35.60606060606061,
                "num_examples": 15,
                "num_explored_concrete": 1881,
                "num_explored_lambda": 525,
                "num_explored_none": 663,
                "num_inputs": 1,
                "num_kept_concrete": 340,
                "num_kept_lambda": 188,
                "num_values_explored": 3069,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90866
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.16992972700973,
            "num_unique_values": 508,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.908507223113965,
                "explored_percent_lambda": 19.646869983948637,
                "explored_percent_none": 21.4446227929374,
                "kept_percent_concrete": 55.37848605577689,
                "kept_percent_lambda": 44.62151394422311,
                "num_examples": 15,
                "num_explored_concrete": 1835,
                "num_explored_lambda": 612,
                "num_explored_none": 668,
                "num_inputs": 1,
                "num_kept_concrete": 278,
                "num_kept_lambda": 224,
                "num_values_explored": 3115,
                "num_values_kept": 502,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95883
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3721770510019,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.09184033910279,
                "explored_percent_lambda": 32.95655245496291,
                "explored_percent_none": 26.951607205934298,
                "kept_percent_concrete": 38.00738007380074,
                "kept_percent_lambda": 61.99261992619926,
                "num_examples": 15,
                "num_explored_concrete": 1135,
                "num_explored_lambda": 933,
                "num_explored_none": 763,
                "num_inputs": 1,
                "num_kept_concrete": 206,
                "num_kept_lambda": 336,
                "num_values_explored": 2831,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89440
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.40081101100077,
            "num_unique_values": 572,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.43827160493827,
                "explored_percent_lambda": 15.925925925925926,
                "explored_percent_none": 16.635802469135804,
                "kept_percent_concrete": 68.19787985865725,
                "kept_percent_lambda": 31.802120141342755,
                "num_examples": 15,
                "num_explored_concrete": 2185,
                "num_explored_lambda": 516,
                "num_explored_none": 539,
                "num_inputs": 1,
                "num_kept_concrete": 386,
                "num_kept_lambda": 180,
                "num_values_explored": 3240,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 98070
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1165859959874,
            "num_unique_values": 525,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.147828765013855,
                "explored_percent_lambda": 17.09270095472744,
                "explored_percent_none": 22.7594702802587,
                "kept_percent_concrete": 66.28131021194605,
                "kept_percent_lambda": 33.71868978805395,
                "num_examples": 15,
                "num_explored_concrete": 1953,
                "num_explored_lambda": 555,
                "num_explored_none": 739,
                "num_inputs": 1,
                "num_kept_concrete": 344,
                "num_kept_lambda": 175,
                "num_values_explored": 3247,
                "num_values_kept": 519,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95469
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1678871410113,
            "num_unique_values": 470,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.39415130324221,
                "explored_percent_lambda": 18.436109345200254,
                "explored_percent_none": 21.169739351557535,
                "kept_percent_concrete": 61.422413793103445,
                "kept_percent_lambda": 38.577586206896555,
                "num_examples": 15,
                "num_explored_concrete": 1900,
                "num_explored_lambda": 580,
                "num_explored_none": 666,
                "num_inputs": 1,
                "num_kept_concrete": 285,
                "num_kept_lambda": 179,
                "num_values_explored": 3146,
                "num_values_kept": 464,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93044
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.072137783005,
            "num_unique_values": 520,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.62337662337662,
                "explored_percent_lambda": 17.727272727272727,
                "explored_percent_none": 20.649350649350648,
                "kept_percent_concrete": 65.56420233463035,
                "kept_percent_lambda": 34.43579766536965,
                "num_examples": 15,
                "num_explored_concrete": 1898,
                "num_explored_lambda": 546,
                "num_explored_none": 636,
                "num_inputs": 1,
                "num_kept_concrete": 337,
                "num_kept_lambda": 177,
                "num_values_explored": 3080,
                "num_values_kept": 514,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93194
            },
            "success": false,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0665748350002,
            "num_unique_values": 499,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.056390977443606,
                "explored_percent_lambda": 18.796992481203006,
                "explored_percent_none": 21.146616541353385,
                "kept_percent_concrete": 56.59229208924949,
                "kept_percent_lambda": 43.40770791075051,
                "num_examples": 15,
                "num_explored_concrete": 1917,
                "num_explored_lambda": 600,
                "num_explored_none": 675,
                "num_inputs": 1,
                "num_kept_concrete": 279,
                "num_kept_lambda": 214,
                "num_values_explored": 3192,
                "num_values_kept": 493,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93893
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07981991001,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.70543615676359,
                "explored_percent_lambda": 18.394437420986094,
                "explored_percent_none": 18.900126422250317,
                "kept_percent_concrete": 57.92811839323467,
                "kept_percent_lambda": 42.07188160676533,
                "num_examples": 15,
                "num_explored_concrete": 1984,
                "num_explored_lambda": 582,
                "num_explored_none": 598,
                "num_inputs": 1,
                "num_kept_concrete": 274,
                "num_kept_lambda": 199,
                "num_values_explored": 3164,
                "num_values_kept": 473,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94638
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.18947891499556,
            "num_unique_values": 640,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.73790451778276,
                "explored_percent_lambda": 21.01890419737264,
                "explored_percent_none": 21.243191284844603,
                "kept_percent_concrete": 60.25236593059937,
                "kept_percent_lambda": 39.74763406940063,
                "num_examples": 15,
                "num_explored_concrete": 1802,
                "num_explored_lambda": 656,
                "num_explored_none": 663,
                "num_inputs": 1,
                "num_kept_concrete": 382,
                "num_kept_lambda": 252,
                "num_values_explored": 3121,
                "num_values_kept": 634,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93313
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.252001181012,
            "num_unique_values": 529,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.32,
                "explored_percent_lambda": 26.272,
                "explored_percent_none": 25.408,
                "kept_percent_concrete": 41.87380497131931,
                "kept_percent_lambda": 58.12619502868069,
                "num_examples": 15,
                "num_explored_concrete": 1510,
                "num_explored_lambda": 821,
                "num_explored_none": 794,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 304,
                "num_values_explored": 3125,
                "num_values_kept": 523,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95749
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13577645100304,
            "num_unique_values": 550,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.66907419566645,
                "explored_percent_lambda": 26.296782665791202,
                "explored_percent_none": 26.03414313854235,
                "kept_percent_concrete": 46.50735294117647,
                "kept_percent_lambda": 53.49264705882353,
                "num_examples": 15,
                "num_explored_concrete": 1452,
                "num_explored_lambda": 801,
                "num_explored_none": 793,
                "num_inputs": 1,
                "num_kept_concrete": 253,
                "num_kept_lambda": 291,
                "num_values_explored": 3046,
                "num_values_kept": 544,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91662
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.11928117400385,
            "num_unique_values": 524,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.27073337902673,
                "explored_percent_lambda": 28.23851953392735,
                "explored_percent_none": 26.49074708704592,
                "kept_percent_concrete": 41.6988416988417,
                "kept_percent_lambda": 58.3011583011583,
                "num_examples": 15,
                "num_explored_concrete": 1321,
                "num_explored_lambda": 824,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 216,
                "num_kept_lambda": 302,
                "num_values_explored": 2918,
                "num_values_kept": 518,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91674
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.9783990470023,
            "num_unique_values": 540,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.05174644243208,
                "explored_percent_lambda": 27.91073738680466,
                "explored_percent_none": 27.03751617076326,
                "kept_percent_concrete": 42.88389513108614,
                "kept_percent_lambda": 57.11610486891386,
                "num_examples": 15,
                "num_explored_concrete": 1393,
                "num_explored_lambda": 863,
                "num_explored_none": 836,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 305,
                "num_values_explored": 3092,
                "num_values_kept": 534,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92812
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13979924601153,
            "num_unique_values": 550,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.978529603122965,
                "explored_percent_lambda": 17.761873780091086,
                "explored_percent_none": 23.259596616785945,
                "kept_percent_concrete": 65.80882352941177,
                "kept_percent_lambda": 34.19117647058823,
                "num_examples": 15,
                "num_explored_concrete": 1813,
                "num_explored_lambda": 546,
                "num_explored_none": 715,
                "num_inputs": 1,
                "num_kept_concrete": 358,
                "num_kept_lambda": 186,
                "num_values_explored": 3074,
                "num_values_kept": 544,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94212
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1214493439911,
            "num_unique_values": 576,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.86264656616416,
                "explored_percent_lambda": 15.209380234505863,
                "explored_percent_none": 18.927973199329983,
                "kept_percent_concrete": 68.24561403508773,
                "kept_percent_lambda": 31.75438596491228,
                "num_examples": 15,
                "num_explored_concrete": 1966,
                "num_explored_lambda": 454,
                "num_explored_none": 565,
                "num_inputs": 1,
                "num_kept_concrete": 389,
                "num_kept_lambda": 181,
                "num_values_explored": 2985,
                "num_values_kept": 570,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92007
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05077867399086,
            "num_unique_values": 482,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.00869565217391,
                "explored_percent_lambda": 19.2,
                "explored_percent_none": 23.791304347826088,
                "kept_percent_concrete": 62.18487394957983,
                "kept_percent_lambda": 37.81512605042017,
                "num_examples": 15,
                "num_explored_concrete": 1639,
                "num_explored_lambda": 552,
                "num_explored_none": 684,
                "num_inputs": 1,
                "num_kept_concrete": 296,
                "num_kept_lambda": 180,
                "num_values_explored": 2875,
                "num_values_kept": 476,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88675
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07206913499977,
            "num_unique_values": 545,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.048,
                "explored_percent_lambda": 16.832,
                "explored_percent_none": 21.12,
                "kept_percent_concrete": 65.12059369202227,
                "kept_percent_lambda": 34.87940630797774,
                "num_examples": 15,
                "num_explored_concrete": 1939,
                "num_explored_lambda": 526,
                "num_explored_none": 660,
                "num_inputs": 1,
                "num_kept_concrete": 351,
                "num_kept_lambda": 188,
                "num_values_explored": 3125,
                "num_values_kept": 539,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96845
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13297107300605,
            "num_unique_values": 503,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.35492577597841,
                "explored_percent_lambda": 17.813765182186234,
                "explored_percent_none": 24.831309041835357,
                "kept_percent_concrete": 64.38631790744466,
                "kept_percent_lambda": 35.61368209255533,
                "num_examples": 15,
                "num_explored_concrete": 1700,
                "num_explored_lambda": 528,
                "num_explored_none": 736,
                "num_inputs": 1,
                "num_kept_concrete": 320,
                "num_kept_lambda": 177,
                "num_values_explored": 2964,
                "num_values_kept": 497,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90736
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07418767800846,
            "num_unique_values": 619,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.3963963963964,
                "explored_percent_lambda": 14.234234234234235,
                "explored_percent_none": 19.36936936936937,
                "kept_percent_concrete": 71.61500815660685,
                "kept_percent_lambda": 28.38499184339315,
                "num_examples": 15,
                "num_explored_concrete": 2211,
                "num_explored_lambda": 474,
                "num_explored_none": 645,
                "num_inputs": 1,
                "num_kept_concrete": 439,
                "num_kept_lambda": 174,
                "num_values_explored": 3330,
                "num_values_kept": 613,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 100245
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05455087499286,
            "num_unique_values": 539,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.563291139240505,
                "explored_percent_lambda": 17.5,
                "explored_percent_none": 19.936708860759495,
                "kept_percent_concrete": 66.22889305816135,
                "kept_percent_lambda": 33.771106941838646,
                "num_examples": 15,
                "num_explored_concrete": 1977,
                "num_explored_lambda": 553,
                "num_explored_none": 630,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 180,
                "num_values_explored": 3160,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94914
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.32411016999686,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.77625570776256,
                "explored_percent_lambda": 24.444444444444443,
                "explored_percent_none": 24.779299847793,
                "kept_percent_concrete": 49.738219895287955,
                "kept_percent_lambda": 50.261780104712045,
                "num_examples": 15,
                "num_explored_concrete": 1668,
                "num_explored_lambda": 803,
                "num_explored_none": 814,
                "num_inputs": 1,
                "num_kept_concrete": 285,
                "num_kept_lambda": 288,
                "num_values_explored": 3285,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 99598
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11613536700315308,
            "num_unique_values": 63,
            "solution": "Cons(Multiply(Add(1, 1), Add(1, 1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 50.38167938931298,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 24.56140350877193,
                "kept_percent_lambda": 75.43859649122807,
                "num_examples": 15,
                "num_explored_concrete": 66,
                "num_explored_lambda": 50,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 43,
                "num_values_explored": 131,
                "num_values_kept": 57,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20052753399068024,
            "num_unique_values": 123,
            "solution": "Cons(Add(1, Multiply(Add(1, 1), Add(1, 1))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.12956810631229,
                "explored_percent_lambda": 26.245847176079735,
                "explored_percent_none": 12.624584717607974,
                "kept_percent_concrete": 54.7008547008547,
                "kept_percent_lambda": 45.2991452991453,
                "num_examples": 15,
                "num_explored_concrete": 184,
                "num_explored_lambda": 79,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 53,
                "num_values_explored": 301,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.71839341199666,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.30994897959184,
                "explored_percent_lambda": 26.466836734693878,
                "explored_percent_none": 25.223214285714285,
                "kept_percent_concrete": 40.79320113314448,
                "kept_percent_lambda": 59.20679886685552,
                "num_examples": 15,
                "num_explored_concrete": 1515,
                "num_explored_lambda": 830,
                "num_explored_none": 791,
                "num_inputs": 1,
                "num_kept_concrete": 144,
                "num_kept_lambda": 209,
                "num_values_explored": 3136,
                "num_values_kept": 353,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92418
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39376786499633454,
            "num_unique_values": 187,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cdr(Cdr(Cdr(x1)))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.69767441860465,
                "explored_percent_lambda": 23.565891472868216,
                "explored_percent_none": 5.736434108527132,
                "kept_percent_concrete": 56.353591160220994,
                "kept_percent_lambda": 43.646408839779006,
                "num_examples": 15,
                "num_explored_concrete": 456,
                "num_explored_lambda": 152,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 79,
                "num_values_explored": 645,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 645
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4887444549968,
            "num_unique_values": 554,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.28666004634227,
                "explored_percent_lambda": 22.078781860311157,
                "explored_percent_none": 23.634558093346573,
                "kept_percent_concrete": 56.934306569343065,
                "kept_percent_lambda": 43.065693430656935,
                "num_examples": 15,
                "num_explored_concrete": 1640,
                "num_explored_lambda": 667,
                "num_explored_none": 714,
                "num_inputs": 1,
                "num_kept_concrete": 312,
                "num_kept_lambda": 236,
                "num_values_explored": 3021,
                "num_values_kept": 548,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89725
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.15154146100394,
            "num_unique_values": 612,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.41692360397396,
                "explored_percent_lambda": 21.99383350462487,
                "explored_percent_none": 20.589242891401163,
                "kept_percent_concrete": 59.73597359735974,
                "kept_percent_lambda": 40.26402640264026,
                "num_examples": 15,
                "num_explored_concrete": 1676,
                "num_explored_lambda": 642,
                "num_explored_none": 601,
                "num_inputs": 1,
                "num_kept_concrete": 362,
                "num_kept_lambda": 244,
                "num_values_explored": 2919,
                "num_values_kept": 606,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88369
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2049312050076,
            "num_unique_values": 549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.48736462093863,
                "explored_percent_lambda": 27.961929766983918,
                "explored_percent_none": 26.550705612077454,
                "kept_percent_concrete": 41.988950276243095,
                "kept_percent_lambda": 58.011049723756905,
                "num_examples": 15,
                "num_explored_concrete": 1386,
                "num_explored_lambda": 852,
                "num_explored_none": 809,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 315,
                "num_values_explored": 3047,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92403
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1517752590007,
            "num_unique_values": 599,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.04522780179581,
                "explored_percent_lambda": 24.210176255404058,
                "explored_percent_none": 23.74459594280013,
                "kept_percent_concrete": 57.33558178752108,
                "kept_percent_lambda": 42.66441821247892,
                "num_examples": 15,
                "num_explored_concrete": 1565,
                "num_explored_lambda": 728,
                "num_explored_none": 714,
                "num_inputs": 1,
                "num_kept_concrete": 340,
                "num_kept_lambda": 253,
                "num_values_explored": 3007,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92460
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.9000062080013,
            "num_unique_values": 431,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.02851253864651,
                "explored_percent_lambda": 29.027825489522503,
                "explored_percent_none": 23.943661971830984,
                "kept_percent_concrete": 44.0,
                "kept_percent_lambda": 56.0,
                "num_examples": 15,
                "num_explored_concrete": 1369,
                "num_explored_lambda": 845,
                "num_explored_none": 697,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 238,
                "num_values_explored": 2911,
                "num_values_kept": 425,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86976
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0637791350018,
            "num_unique_values": 497,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.16637960730279,
                "explored_percent_lambda": 32.65587323458491,
                "explored_percent_none": 28.177747158112297,
                "kept_percent_concrete": 35.64154786150713,
                "kept_percent_lambda": 64.35845213849286,
                "num_examples": 15,
                "num_explored_concrete": 1137,
                "num_explored_lambda": 948,
                "num_explored_none": 818,
                "num_inputs": 1,
                "num_kept_concrete": 175,
                "num_kept_lambda": 316,
                "num_values_explored": 2903,
                "num_values_kept": 491,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87776
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05979286199727,
            "num_unique_values": 500,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.31889081455806,
                "explored_percent_lambda": 25.92720970537262,
                "explored_percent_none": 25.753899480069325,
                "kept_percent_concrete": 50.607287449392715,
                "kept_percent_lambda": 49.392712550607285,
                "num_examples": 15,
                "num_explored_concrete": 1394,
                "num_explored_lambda": 748,
                "num_explored_none": 743,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 244,
                "num_values_explored": 2885,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88971
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1990664930054,
            "num_unique_values": 498,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.55223880597015,
                "explored_percent_lambda": 32.05401563610519,
                "explored_percent_none": 28.393745557924664,
                "kept_percent_concrete": 36.38211382113821,
                "kept_percent_lambda": 63.61788617886179,
                "num_examples": 15,
                "num_explored_concrete": 1113,
                "num_explored_lambda": 902,
                "num_explored_none": 799,
                "num_inputs": 1,
                "num_kept_concrete": 179,
                "num_kept_lambda": 313,
                "num_values_explored": 2814,
                "num_values_kept": 492,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85662
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3920217029954074,
            "num_unique_values": 172,
            "solution": "Map((lambda u1: Car(Cdr(Cdr(Cdr(Cdr(x1)))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 72.93233082706767,
                "explored_percent_lambda": 19.548872180451127,
                "explored_percent_none": 7.518796992481203,
                "kept_percent_concrete": 60.24096385542169,
                "kept_percent_lambda": 39.75903614457831,
                "num_examples": 15,
                "num_explored_concrete": 485,
                "num_explored_lambda": 130,
                "num_explored_none": 50,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 66,
                "num_values_explored": 665,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.076493347995,
            "num_unique_values": 558,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.996368438428526,
                "explored_percent_lambda": 20.204688015846813,
                "explored_percent_none": 20.79894354572466,
                "kept_percent_concrete": 58.69565217391305,
                "kept_percent_lambda": 41.30434782608695,
                "num_examples": 15,
                "num_explored_concrete": 1787,
                "num_explored_lambda": 612,
                "num_explored_none": 630,
                "num_inputs": 1,
                "num_kept_concrete": 324,
                "num_kept_lambda": 228,
                "num_values_explored": 3029,
                "num_values_kept": 552,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92552
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.03458964401216,
            "num_unique_values": 581,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.507977026164646,
                "explored_percent_lambda": 18.283343969368218,
                "explored_percent_none": 19.208679004467136,
                "kept_percent_concrete": 59.30434782608695,
                "kept_percent_lambda": 40.69565217391305,
                "num_examples": 15,
                "num_explored_concrete": 1959,
                "num_explored_lambda": 573,
                "num_explored_none": 602,
                "num_inputs": 1,
                "num_kept_concrete": 341,
                "num_kept_lambda": 234,
                "num_values_explored": 3134,
                "num_values_kept": 575,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94555
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13886354799615,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.0128990648178,
                "explored_percent_lambda": 17.574975814253467,
                "explored_percent_none": 22.41212512092873,
                "kept_percent_concrete": 62.478184991274,
                "kept_percent_lambda": 37.521815008726,
                "num_examples": 15,
                "num_explored_concrete": 1861,
                "num_explored_lambda": 545,
                "num_explored_none": 695,
                "num_inputs": 1,
                "num_kept_concrete": 358,
                "num_kept_lambda": 215,
                "num_values_explored": 3101,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94152
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 114.32987010700163,
            "num_unique_values": 703,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cons(Index(1, Cdr(x1)), [])))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 54.57627118644068,
                "explored_percent_lambda": 21.62227602905569,
                "explored_percent_none": 23.80145278450363,
                "kept_percent_concrete": 56.3845050215208,
                "kept_percent_lambda": 43.6154949784792,
                "num_examples": 15,
                "num_explored_concrete": 2254,
                "num_explored_lambda": 893,
                "num_explored_none": 983,
                "num_inputs": 1,
                "num_kept_concrete": 393,
                "num_kept_lambda": 304,
                "num_values_explored": 4130,
                "num_values_kept": 697,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 36047
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.14071154200064,
            "num_unique_values": 549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.504672897196265,
                "explored_percent_lambda": 23.931909212283045,
                "explored_percent_none": 22.563417890520693,
                "kept_percent_concrete": 54.14364640883978,
                "kept_percent_lambda": 45.85635359116022,
                "num_examples": 15,
                "num_explored_concrete": 1603,
                "num_explored_lambda": 717,
                "num_explored_none": 676,
                "num_inputs": 1,
                "num_kept_concrete": 294,
                "num_kept_lambda": 249,
                "num_values_explored": 2996,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 111691
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0683615599992,
            "num_unique_values": 572,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.193343898573694,
                "explored_percent_lambda": 21.584786053882727,
                "explored_percent_none": 20.221870047543582,
                "kept_percent_concrete": 54.946996466431095,
                "kept_percent_lambda": 45.053003533568905,
                "num_examples": 15,
                "num_explored_concrete": 1836,
                "num_explored_lambda": 681,
                "num_explored_none": 638,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 255,
                "num_values_explored": 3155,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93834
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3780922630103305,
            "num_unique_values": 190,
            "solution": "Cons(Index(1, Cdr(x1)), Cons(Index(1, Cdr(Cdr(x1))), []))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.45482866043614,
                "explored_percent_lambda": 19.781931464174455,
                "explored_percent_none": 5.7632398753894085,
                "kept_percent_concrete": 65.21739130434783,
                "kept_percent_lambda": 34.78260869565217,
                "num_examples": 15,
                "num_explored_concrete": 478,
                "num_explored_lambda": 127,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 120,
                "num_kept_lambda": 64,
                "num_values_explored": 642,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.602095781010576,
            "num_unique_values": 590,
            "solution": "Cons(Index(1, Cdr(Cdr(x1))), Cons(Index(1, Cdr(Cdr(Cdr(x1)))), []))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 55.064935064935064,
                "explored_percent_lambda": 21.96660482374768,
                "explored_percent_none": 22.968460111317253,
                "kept_percent_concrete": 60.445205479452056,
                "kept_percent_lambda": 39.554794520547944,
                "num_examples": 15,
                "num_explored_concrete": 1484,
                "num_explored_lambda": 592,
                "num_explored_none": 619,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 231,
                "num_values_explored": 2695,
                "num_values_kept": 584,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3715
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.11130151498946,
            "num_unique_values": 591,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.23722883135059,
                "explored_percent_lambda": 19.13925822253324,
                "explored_percent_none": 21.623512946116165,
                "kept_percent_concrete": 59.14529914529915,
                "kept_percent_lambda": 40.85470085470085,
                "num_examples": 15,
                "num_explored_concrete": 1693,
                "num_explored_lambda": 547,
                "num_explored_none": 618,
                "num_inputs": 1,
                "num_kept_concrete": 346,
                "num_kept_lambda": 239,
                "num_values_explored": 2858,
                "num_values_kept": 585,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88429
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.365525016997708,
            "num_unique_values": 173,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), [])",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 70.7165109034268,
                "explored_percent_lambda": 22.118380062305295,
                "explored_percent_none": 7.165109034267913,
                "kept_percent_concrete": 60.47904191616767,
                "kept_percent_lambda": 39.52095808383233,
                "num_examples": 15,
                "num_explored_concrete": 454,
                "num_explored_lambda": 142,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 66,
                "num_values_explored": 642,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.08212864000234,
            "num_unique_values": 611,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.28121757177447,
                "explored_percent_lambda": 22.621930127983397,
                "explored_percent_none": 20.09685230024213,
                "kept_percent_concrete": 57.02479338842975,
                "kept_percent_lambda": 42.97520661157025,
                "num_examples": 15,
                "num_explored_concrete": 1656,
                "num_explored_lambda": 654,
                "num_explored_none": 581,
                "num_inputs": 1,
                "num_kept_concrete": 345,
                "num_kept_lambda": 260,
                "num_values_explored": 2891,
                "num_values_kept": 605,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88071
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0863800599909,
            "num_unique_values": 589,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.08170155300473,
                "explored_percent_lambda": 21.066846725185684,
                "explored_percent_none": 19.85145172180959,
                "kept_percent_concrete": 55.917667238421956,
                "kept_percent_lambda": 44.082332761578044,
                "num_examples": 15,
                "num_explored_concrete": 1750,
                "num_explored_lambda": 624,
                "num_explored_none": 588,
                "num_inputs": 1,
                "num_kept_concrete": 326,
                "num_kept_lambda": 257,
                "num_values_explored": 2962,
                "num_values_kept": 583,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89618
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0801291969983,
            "num_unique_values": 460,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.10916442048517,
                "explored_percent_lambda": 19.339622641509433,
                "explored_percent_none": 23.551212938005392,
                "kept_percent_concrete": 61.45374449339207,
                "kept_percent_lambda": 38.54625550660793,
                "num_examples": 15,
                "num_explored_concrete": 1695,
                "num_explored_lambda": 574,
                "num_explored_none": 699,
                "num_inputs": 1,
                "num_kept_concrete": 279,
                "num_kept_lambda": 175,
                "num_values_explored": 2968,
                "num_values_kept": 454,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91636
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.96765415200207,
            "num_unique_values": 517,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.21450564488539,
                "explored_percent_lambda": 25.11118713650359,
                "explored_percent_none": 23.674307218611016,
                "kept_percent_concrete": 50.68493150684932,
                "kept_percent_lambda": 49.31506849315068,
                "num_examples": 15,
                "num_explored_concrete": 1497,
                "num_explored_lambda": 734,
                "num_explored_none": 692,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 252,
                "num_values_explored": 2923,
                "num_values_kept": 511,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87773
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.11806629899365,
            "num_unique_values": 522,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.374536881104746,
                "explored_percent_lambda": 18.659481306837318,
                "explored_percent_none": 28.965981812057933,
                "kept_percent_concrete": 55.81395348837209,
                "kept_percent_lambda": 44.18604651162791,
                "num_examples": 15,
                "num_explored_concrete": 1555,
                "num_explored_lambda": 554,
                "num_explored_none": 860,
                "num_inputs": 1,
                "num_kept_concrete": 288,
                "num_kept_lambda": 228,
                "num_values_explored": 2969,
                "num_values_kept": 516,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89617
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.02337409800384,
            "num_unique_values": 585,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.72857630590645,
                "explored_percent_lambda": 20.86036189825879,
                "explored_percent_none": 24.411061795834755,
                "kept_percent_concrete": 56.994818652849744,
                "kept_percent_lambda": 43.005181347150256,
                "num_examples": 15,
                "num_explored_concrete": 1603,
                "num_explored_lambda": 611,
                "num_explored_none": 715,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 249,
                "num_values_explored": 2929,
                "num_values_kept": 579,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88434
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1346418579924,
            "num_unique_values": 580,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.589539314166956,
                "explored_percent_lambda": 20.332525112573606,
                "explored_percent_none": 25.07793557325944,
                "kept_percent_concrete": 55.05226480836237,
                "kept_percent_lambda": 44.94773519163763,
                "num_examples": 15,
                "num_explored_concrete": 1576,
                "num_explored_lambda": 587,
                "num_explored_none": 724,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 258,
                "num_values_explored": 2887,
                "num_values_kept": 574,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87579
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0480255260045,
            "num_unique_values": 524,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.84661754855995,
                "explored_percent_lambda": 19.95981245813798,
                "explored_percent_none": 27.193569993302077,
                "kept_percent_concrete": 57.142857142857146,
                "kept_percent_lambda": 42.857142857142854,
                "num_examples": 15,
                "num_explored_concrete": 1578,
                "num_explored_lambda": 596,
                "num_explored_none": 812,
                "num_inputs": 1,
                "num_kept_concrete": 296,
                "num_kept_lambda": 222,
                "num_values_explored": 2986,
                "num_values_kept": 518,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91907
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07222330798686,
            "num_unique_values": 501,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.07962213225371,
                "explored_percent_lambda": 22.84075573549258,
                "explored_percent_none": 26.07962213225371,
                "kept_percent_concrete": 53.333333333333336,
                "kept_percent_lambda": 46.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 1514,
                "num_explored_lambda": 677,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 231,
                "num_values_explored": 2964,
                "num_values_kept": 495,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87907
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 307.08697887300514,
            "num_unique_values": 588,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.59233926128591,
                "explored_percent_lambda": 19.288645690834475,
                "explored_percent_none": 23.119015047879618,
                "kept_percent_concrete": 57.7319587628866,
                "kept_percent_lambda": 42.2680412371134,
                "num_examples": 15,
                "num_explored_concrete": 1684,
                "num_explored_lambda": 564,
                "num_explored_none": 676,
                "num_inputs": 1,
                "num_kept_concrete": 336,
                "num_kept_lambda": 246,
                "num_values_explored": 2924,
                "num_values_kept": 582,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 25899
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3085057170101,
            "num_unique_values": 587,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.24973840251133,
                "explored_percent_lambda": 24.799441925357517,
                "explored_percent_none": 22.950819672131146,
                "kept_percent_concrete": 50.94664371772806,
                "kept_percent_lambda": 49.05335628227194,
                "num_examples": 15,
                "num_explored_concrete": 1498,
                "num_explored_lambda": 711,
                "num_explored_none": 658,
                "num_inputs": 1,
                "num_kept_concrete": 296,
                "num_kept_lambda": 285,
                "num_values_explored": 2867,
                "num_values_kept": 581,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88696
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1566694330104,
            "num_unique_values": 508,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.46762589928058,
                "explored_percent_lambda": 20.971223021582734,
                "explored_percent_none": 28.56115107913669,
                "kept_percent_concrete": 55.97609561752988,
                "kept_percent_lambda": 44.02390438247012,
                "num_examples": 15,
                "num_explored_concrete": 1403,
                "num_explored_lambda": 583,
                "num_explored_none": 794,
                "num_inputs": 1,
                "num_kept_concrete": 281,
                "num_kept_lambda": 221,
                "num_values_explored": 2780,
                "num_values_kept": 502,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86581
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.23946405301103,
            "num_unique_values": 554,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.13485113835377,
                "explored_percent_lambda": 21.78633975481611,
                "explored_percent_none": 25.07880910683012,
                "kept_percent_concrete": 56.75182481751825,
                "kept_percent_lambda": 43.24817518248175,
                "num_examples": 15,
                "num_explored_concrete": 1517,
                "num_explored_lambda": 622,
                "num_explored_none": 716,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 237,
                "num_values_explored": 2855,
                "num_values_kept": 548,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88560
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.17673374398146,
            "num_unique_values": 539,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.835205992509366,
                "explored_percent_lambda": 23.670411985018728,
                "explored_percent_none": 24.49438202247191,
                "kept_percent_concrete": 48.592870544090054,
                "kept_percent_lambda": 51.407129455909946,
                "num_examples": 15,
                "num_explored_concrete": 1384,
                "num_explored_lambda": 632,
                "num_explored_none": 654,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 274,
                "num_values_explored": 2670,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 82474
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 55.544743315986125,
            "num_unique_values": 296,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 39.16786226685796,
                "explored_percent_lambda": 30.703012912482066,
                "explored_percent_none": 30.12912482065997,
                "kept_percent_concrete": 42.06896551724138,
                "kept_percent_lambda": 57.93103448275862,
                "num_examples": 15,
                "num_explored_concrete": 546,
                "num_explored_lambda": 428,
                "num_explored_none": 420,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 168,
                "num_values_explored": 1394,
                "num_values_kept": 290,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 18386
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3451203709992,
            "num_unique_values": 502,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.75240715268225,
                "explored_percent_lambda": 32.70288858321871,
                "explored_percent_none": 27.544704264099035,
                "kept_percent_concrete": 37.903225806451616,
                "kept_percent_lambda": 62.096774193548384,
                "num_examples": 15,
                "num_explored_concrete": 1156,
                "num_explored_lambda": 951,
                "num_explored_none": 801,
                "num_inputs": 1,
                "num_kept_concrete": 188,
                "num_kept_lambda": 308,
                "num_values_explored": 2908,
                "num_values_kept": 496,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88401
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1828744109953,
            "num_unique_values": 485,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.61049227452389,
                "explored_percent_lambda": 28.31476823571685,
                "explored_percent_none": 24.074739489759253,
                "kept_percent_concrete": 48.225469728601254,
                "kept_percent_lambda": 51.774530271398746,
                "num_examples": 15,
                "num_explored_concrete": 1325,
                "num_explored_lambda": 788,
                "num_explored_none": 670,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 248,
                "num_values_explored": 2783,
                "num_values_kept": 479,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87418
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1277290800062474,
            "num_unique_values": 74,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 45.22292993630573,
                "explored_percent_lambda": 38.853503184713375,
                "explored_percent_none": 15.92356687898089,
                "kept_percent_concrete": 29.41176470588235,
                "kept_percent_lambda": 70.58823529411765,
                "num_examples": 15,
                "num_explored_concrete": 71,
                "num_explored_lambda": 61,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 48,
                "num_values_explored": 157,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 157
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 273.33570651497575,
            "num_unique_values": 128,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsPrime(v1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 20.0,
                "explored_percent_lambda": 42.44274809160305,
                "explored_percent_none": 37.55725190839695,
                "kept_percent_concrete": 21.311475409836067,
                "kept_percent_lambda": 78.68852459016394,
                "num_examples": 15,
                "num_explored_concrete": 131,
                "num_explored_lambda": 278,
                "num_explored_none": 246,
                "num_inputs": 1,
                "num_kept_concrete": 26,
                "num_kept_lambda": 96,
                "num_values_explored": 655,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 29,
                "total_num_values_explored": 81334
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 12.700056961999508,
            "num_unique_values": 128,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 17.94453507340946,
                "explored_percent_lambda": 44.69820554649266,
                "explored_percent_none": 37.35725938009788,
                "kept_percent_concrete": 19.672131147540984,
                "kept_percent_lambda": 80.32786885245902,
                "num_examples": 15,
                "num_explored_concrete": 110,
                "num_explored_lambda": 274,
                "num_explored_none": 229,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 98,
                "num_values_explored": 613,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 4864
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1321114219899755,
            "num_unique_values": 77,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.875,
                "explored_percent_lambda": 44.375,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.760563380281692,
                "kept_percent_lambda": 73.2394366197183,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 71,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 52,
                "num_values_explored": 160,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 160
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2055368819856,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.84449244060475,
                "explored_percent_lambda": 29.841612670986322,
                "explored_percent_none": 26.313894888408928,
                "kept_percent_concrete": 43.47826086956522,
                "kept_percent_lambda": 56.52173913043478,
                "num_examples": 15,
                "num_explored_concrete": 1218,
                "num_explored_lambda": 829,
                "num_explored_none": 731,
                "num_inputs": 1,
                "num_kept_concrete": 210,
                "num_kept_lambda": 273,
                "num_values_explored": 2778,
                "num_values_kept": 483,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85475
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.334258099988801,
            "num_unique_values": 281,
            "solution": "Map((lambda u1: ((lambda v1: Index(v1, Cons(1, Cons(0, x1)))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 29.466357308584687,
                "explored_percent_lambda": 36.272235112142305,
                "explored_percent_none": 34.26140757927301,
                "kept_percent_concrete": 32.0,
                "kept_percent_lambda": 68.0,
                "num_examples": 15,
                "num_explored_concrete": 381,
                "num_explored_lambda": 469,
                "num_explored_none": 443,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 187,
                "num_values_explored": 1293,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2653
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11444115301128477,
            "num_unique_values": 67,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 32.35294117647059,
                "explored_percent_lambda": 56.86274509803921,
                "explored_percent_none": 10.784313725490197,
                "kept_percent_concrete": 11.475409836065573,
                "kept_percent_lambda": 88.52459016393442,
                "num_examples": 15,
                "num_explored_concrete": 33,
                "num_explored_lambda": 58,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 54,
                "num_values_explored": 102,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 102
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1993046650022734,
            "num_unique_values": 130,
            "solution": "Cdr(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.98529411764706,
                "explored_percent_lambda": 32.720588235294116,
                "explored_percent_none": 10.294117647058824,
                "kept_percent_concrete": 47.58064516129032,
                "kept_percent_lambda": 52.41935483870968,
                "num_examples": 15,
                "num_explored_concrete": 155,
                "num_explored_lambda": 89,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 65,
                "num_values_explored": 272,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3642894939985126,
            "num_unique_values": 186,
            "solution": "Cdr(Cdr(Cdr(Cdr(x1))))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.6078431372549,
                "explored_percent_lambda": 24.18300653594771,
                "explored_percent_none": 6.209150326797386,
                "kept_percent_concrete": 58.888888888888886,
                "kept_percent_lambda": 41.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 426,
                "num_explored_lambda": 148,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 74,
                "num_values_explored": 612,
                "num_values_kept": 180,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 612
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1147614439832978,
            "num_unique_values": 77,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 42.65734265734266,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 11.888111888111888,
                "kept_percent_concrete": 21.12676056338028,
                "kept_percent_lambda": 78.87323943661971,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 65,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 56,
                "num_values_explored": 143,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 143
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14465284600737505,
            "num_unique_values": 61,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.93103448275862,
                "explored_percent_lambda": 48.275862068965516,
                "explored_percent_none": 13.793103448275861,
                "kept_percent_concrete": 14.545454545454545,
                "kept_percent_lambda": 85.45454545454545,
                "num_examples": 15,
                "num_explored_concrete": 44,
                "num_explored_lambda": 56,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 8,
                "num_kept_lambda": 47,
                "num_values_explored": 116,
                "num_values_kept": 55,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 116
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19896087399683893,
            "num_unique_values": 139,
            "solution": "Index(1, Cdr(Cdr(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.74358974358974,
                "explored_percent_lambda": 25.32051282051282,
                "explored_percent_none": 9.935897435897436,
                "kept_percent_concrete": 57.89473684210526,
                "kept_percent_lambda": 42.10526315789474,
                "num_examples": 15,
                "num_explored_concrete": 202,
                "num_explored_lambda": 79,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 56,
                "num_values_explored": 312,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1356591270014,
            "num_unique_values": 551,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.995620894588676,
                "explored_percent_lambda": 16.077572724429153,
                "explored_percent_none": 21.92680638098217,
                "kept_percent_concrete": 64.03669724770643,
                "kept_percent_lambda": 35.96330275229358,
                "num_examples": 15,
                "num_explored_concrete": 1982,
                "num_explored_lambda": 514,
                "num_explored_none": 701,
                "num_inputs": 1,
                "num_kept_concrete": 349,
                "num_kept_lambda": 196,
                "num_values_explored": 3197,
                "num_values_kept": 545,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94456
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1794456240022555,
            "num_unique_values": 106,
            "solution": "Mod(Car(x1), Add(1, 1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.84905660377358,
                "explored_percent_lambda": 28.77358490566038,
                "explored_percent_none": 10.377358490566039,
                "kept_percent_concrete": 43.0,
                "kept_percent_lambda": 57.0,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 61,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 57,
                "num_values_explored": 212,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 212
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2307716680225,
            "num_unique_values": 671,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.55785837651123,
                "explored_percent_lambda": 23.126079447322972,
                "explored_percent_none": 23.316062176165804,
                "kept_percent_concrete": 34.58646616541353,
                "kept_percent_lambda": 65.41353383458646,
                "num_examples": 15,
                "num_explored_concrete": 3101,
                "num_explored_lambda": 1339,
                "num_explored_none": 1350,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 435,
                "num_values_explored": 5790,
                "num_values_kept": 665,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91987
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19549371700850315,
            "num_unique_values": 141,
            "solution": "Cons(Index(1, Cdr(x1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.800664451827245,
                "explored_percent_lambda": 31.229235880398672,
                "explored_percent_none": 8.970099667774086,
                "kept_percent_concrete": 53.333333333333336,
                "kept_percent_lambda": 46.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 180,
                "num_explored_lambda": 94,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 63,
                "num_values_explored": 301,
                "num_values_kept": 135,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3391000159899704,
            "num_unique_values": 160,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 76.28705148205928,
                "explored_percent_lambda": 17.784711388455538,
                "explored_percent_none": 5.928237129485179,
                "kept_percent_concrete": 59.74025974025974,
                "kept_percent_lambda": 40.25974025974026,
                "num_examples": 15,
                "num_explored_concrete": 489,
                "num_explored_lambda": 114,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 62,
                "num_values_explored": 641,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 641
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08046039901091717,
            "num_unique_values": 62,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 48.85496183206107,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 12.977099236641221,
                "kept_percent_concrete": 21.428571428571427,
                "kept_percent_lambda": 78.57142857142857,
                "num_examples": 15,
                "num_explored_concrete": 64,
                "num_explored_lambda": 50,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 56,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07802869999432005,
            "num_unique_values": 66,
            "solution": "Cons(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.038167938931295,
                "explored_percent_lambda": 40.458015267175576,
                "explored_percent_none": 14.50381679389313,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 53,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16341410600580275,
            "num_unique_values": 122,
            "solution": "Cons(Add(1, Add(1, 1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.475083056478404,
                "explored_percent_lambda": 29.235880398671096,
                "explored_percent_none": 13.289036544850498,
                "kept_percent_concrete": 48.275862068965516,
                "kept_percent_lambda": 51.724137931034484,
                "num_examples": 15,
                "num_explored_concrete": 173,
                "num_explored_lambda": 88,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 60,
                "num_values_explored": 301,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07516500097699463,
            "num_unique_values": 65,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 35.23809523809524,
                "explored_percent_lambda": 51.42857142857143,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 11.864406779661017,
                "kept_percent_lambda": 88.13559322033899,
                "num_examples": 15,
                "num_explored_concrete": 37,
                "num_explored_lambda": 54,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 52,
                "num_values_explored": 105,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 105
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08966688098735176,
            "num_unique_values": 67,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 50.64935064935065,
                "explored_percent_lambda": 36.36363636363637,
                "explored_percent_none": 12.987012987012987,
                "kept_percent_concrete": 24.59016393442623,
                "kept_percent_lambda": 75.40983606557377,
                "num_examples": 15,
                "num_explored_concrete": 78,
                "num_explored_lambda": 56,
                "num_explored_none": 20,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 46,
                "num_values_explored": 154,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09097341500455514,
            "num_unique_values": 72,
            "solution": "Map((lambda u1: Index(1, Cdr(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.830065359477125,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 24.242424242424242,
                "kept_percent_lambda": 75.75757575757575,
                "num_examples": 15,
                "num_explored_concrete": 72,
                "num_explored_lambda": 64,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 50,
                "num_values_explored": 153,
                "num_values_kept": 66,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16968868899857625,
            "num_unique_values": 135,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), []))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.47176079734219,
                "explored_percent_lambda": 30.564784053156146,
                "explored_percent_none": 10.96345514950166,
                "kept_percent_concrete": 54.263565891472865,
                "kept_percent_lambda": 45.736434108527135,
                "num_examples": 15,
                "num_explored_concrete": 176,
                "num_explored_lambda": 92,
                "num_explored_none": 33,
                "num_inputs": 1,
                "num_kept_concrete": 70,
                "num_kept_lambda": 59,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08401652102475055,
            "num_unique_values": 66,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.45454545454545,
                "explored_percent_lambda": 43.18181818181818,
                "explored_percent_none": 11.363636363636363,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 15,
                "num_explored_concrete": 60,
                "num_explored_lambda": 57,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 48,
                "num_values_explored": 132,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 132
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16788047199952416,
            "num_unique_values": 135,
            "solution": "Cons(Index(1, Cdr(x1)), [])",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 63.12292358803987,
                "explored_percent_lambda": 27.242524916943523,
                "explored_percent_none": 9.634551495016611,
                "kept_percent_concrete": 58.13953488372093,
                "kept_percent_lambda": 41.86046511627907,
                "num_examples": 15,
                "num_explored_concrete": 190,
                "num_explored_lambda": 82,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 54,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.3076923076923077
}