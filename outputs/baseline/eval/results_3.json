{
    "num_tasks": 104,
    "num_tasks_solved": 32,
    "results": [
        {
            "elapsed_time": 302.1090812589973,
            "num_unique_values": 269,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.33101045296167,
                "explored_percent_lambda": 33.03135888501742,
                "explored_percent_none": 31.637630662020907,
                "kept_percent_concrete": 45.247148288973385,
                "kept_percent_lambda": 54.752851711026615,
                "num_examples": 15,
                "num_explored_concrete": 507,
                "num_explored_lambda": 474,
                "num_explored_none": 454,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 144,
                "num_values_explored": 1435,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85005
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4813637509942,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.446519524618,
                "explored_percent_lambda": 34.63497453310696,
                "explored_percent_none": 31.918505942275043,
                "kept_percent_concrete": 39.43089430894309,
                "kept_percent_lambda": 60.56910569105691,
                "num_examples": 15,
                "num_explored_concrete": 394,
                "num_explored_lambda": 408,
                "num_explored_none": 376,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 149,
                "num_values_explored": 1178,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 50500
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.58352398900024,
            "num_unique_values": 209,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.77661795407098,
                "explored_percent_lambda": 35.07306889352818,
                "explored_percent_none": 32.150313152400834,
                "kept_percent_concrete": 33.004926108374384,
                "kept_percent_lambda": 66.99507389162562,
                "num_examples": 15,
                "num_explored_concrete": 314,
                "num_explored_lambda": 336,
                "num_explored_none": 308,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 136,
                "num_values_explored": 958,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 34271
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2587824660004,
            "num_unique_values": 274,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.38735818476499,
                "explored_percent_lambda": 33.79254457050243,
                "explored_percent_none": 32.82009724473258,
                "kept_percent_concrete": 38.43283582089552,
                "kept_percent_lambda": 61.56716417910448,
                "num_examples": 15,
                "num_explored_concrete": 412,
                "num_explored_lambda": 417,
                "num_explored_none": 405,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 165,
                "num_values_explored": 1234,
                "num_values_kept": 268,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 35536
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.5066830479918,
            "num_unique_values": 236,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.08108108108108,
                "explored_percent_lambda": 34.74903474903475,
                "explored_percent_none": 34.16988416988417,
                "kept_percent_concrete": 32.608695652173914,
                "kept_percent_lambda": 67.3913043478261,
                "num_examples": 15,
                "num_explored_concrete": 322,
                "num_explored_lambda": 360,
                "num_explored_none": 354,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 155,
                "num_values_explored": 1036,
                "num_values_kept": 230,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 35277
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.7719852339942,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.541729893778452,
                "explored_percent_lambda": 38.46737481031867,
                "explored_percent_none": 33.99089529590288,
                "kept_percent_concrete": 33.463035019455255,
                "kept_percent_lambda": 66.53696498054475,
                "num_examples": 15,
                "num_explored_concrete": 363,
                "num_explored_lambda": 507,
                "num_explored_none": 448,
                "num_inputs": 1,
                "num_kept_concrete": 86,
                "num_kept_lambda": 171,
                "num_values_explored": 1318,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 33990
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.7544379630126,
            "num_unique_values": 246,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.612403100775193,
                "explored_percent_lambda": 38.95348837209303,
                "explored_percent_none": 36.434108527131784,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 15,
                "num_explored_concrete": 254,
                "num_explored_lambda": 402,
                "num_explored_none": 376,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 176,
                "num_values_explored": 1032,
                "num_values_kept": 240,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 33759
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.0842415040097,
            "num_unique_values": 209,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.026624068157613,
                "explored_percent_lambda": 37.38019169329073,
                "explored_percent_none": 37.59318423855165,
                "kept_percent_concrete": 28.07881773399015,
                "kept_percent_lambda": 71.92118226600985,
                "num_examples": 15,
                "num_explored_concrete": 235,
                "num_explored_lambda": 351,
                "num_explored_none": 353,
                "num_inputs": 1,
                "num_kept_concrete": 57,
                "num_kept_lambda": 146,
                "num_values_explored": 939,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 34586
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.24094697099645,
            "num_unique_values": 249,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.76085031000886,
                "explored_percent_lambda": 35.075287865367585,
                "explored_percent_none": 35.16386182462356,
                "kept_percent_concrete": 38.68312757201646,
                "kept_percent_lambda": 61.31687242798354,
                "num_examples": 15,
                "num_explored_concrete": 336,
                "num_explored_lambda": 396,
                "num_explored_none": 397,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 149,
                "num_values_explored": 1129,
                "num_values_kept": 243,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 34224
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.692121058004,
            "num_unique_values": 620,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.99596367305752,
                "explored_percent_lambda": 29.835183316515305,
                "explored_percent_none": 26.168853010427178,
                "kept_percent_concrete": 45.11400651465798,
                "kept_percent_lambda": 54.88599348534202,
                "num_examples": 15,
                "num_explored_concrete": 1308,
                "num_explored_lambda": 887,
                "num_explored_none": 778,
                "num_inputs": 1,
                "num_kept_concrete": 277,
                "num_kept_lambda": 337,
                "num_values_explored": 2973,
                "num_values_kept": 614,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 71547
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.30722937699466,
            "num_unique_values": 587,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.390340721137946,
                "explored_percent_lambda": 34.03903407211379,
                "explored_percent_none": 25.570625206748264,
                "kept_percent_concrete": 40.61962134251291,
                "kept_percent_lambda": 59.38037865748709,
                "num_examples": 15,
                "num_explored_concrete": 1221,
                "num_explored_lambda": 1029,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 345,
                "num_values_explored": 3023,
                "num_values_kept": 581,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92128
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.27409780099697,
            "num_unique_values": 571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 31.335331335331336,
                "explored_percent_none": 25.807525807525806,
                "kept_percent_concrete": 44.24778761061947,
                "kept_percent_lambda": 55.75221238938053,
                "num_examples": 15,
                "num_explored_concrete": 1287,
                "num_explored_lambda": 941,
                "num_explored_none": 775,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 315,
                "num_values_explored": 3003,
                "num_values_kept": 565,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91622
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.33551531600824,
            "num_unique_values": 585,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.41902136457615,
                "explored_percent_lambda": 31.013094417643003,
                "explored_percent_none": 26.56788421778084,
                "kept_percent_concrete": 42.487046632124354,
                "kept_percent_lambda": 57.512953367875646,
                "num_examples": 15,
                "num_explored_concrete": 1231,
                "num_explored_lambda": 900,
                "num_explored_none": 771,
                "num_inputs": 1,
                "num_kept_concrete": 246,
                "num_kept_lambda": 333,
                "num_values_explored": 2902,
                "num_values_kept": 579,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90141
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.262470821006,
            "num_unique_values": 596,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.82026460148435,
                "explored_percent_lambda": 31.881252016779605,
                "explored_percent_none": 25.298483381736045,
                "kept_percent_concrete": 43.728813559322035,
                "kept_percent_lambda": 56.271186440677965,
                "num_examples": 15,
                "num_explored_concrete": 1327,
                "num_explored_lambda": 988,
                "num_explored_none": 784,
                "num_inputs": 1,
                "num_kept_concrete": 258,
                "num_kept_lambda": 332,
                "num_values_explored": 3099,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94886
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.5365661550022,
            "num_unique_values": 596,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.16172506738545,
                "explored_percent_lambda": 33.995956873315365,
                "explored_percent_none": 25.842318059299192,
                "kept_percent_concrete": 39.49152542372882,
                "kept_percent_lambda": 60.50847457627118,
                "num_examples": 15,
                "num_explored_concrete": 1192,
                "num_explored_lambda": 1009,
                "num_explored_none": 767,
                "num_inputs": 1,
                "num_kept_concrete": 233,
                "num_kept_lambda": 357,
                "num_values_explored": 2968,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91329
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1788102510036,
            "num_unique_values": 503,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.10661268556005,
                "explored_percent_lambda": 19.973009446693656,
                "explored_percent_none": 23.92037786774629,
                "kept_percent_concrete": 56.94164989939638,
                "kept_percent_lambda": 43.05835010060362,
                "num_examples": 15,
                "num_explored_concrete": 1663,
                "num_explored_lambda": 592,
                "num_explored_none": 709,
                "num_inputs": 1,
                "num_kept_concrete": 283,
                "num_kept_lambda": 214,
                "num_values_explored": 2964,
                "num_values_kept": 497,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96382
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2073035219946,
            "num_unique_values": 541,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.422976501305484,
                "explored_percent_lambda": 17.33028720626632,
                "explored_percent_none": 21.2467362924282,
                "kept_percent_concrete": 62.80373831775701,
                "kept_percent_lambda": 37.19626168224299,
                "num_examples": 15,
                "num_explored_concrete": 1882,
                "num_explored_lambda": 531,
                "num_explored_none": 651,
                "num_inputs": 1,
                "num_kept_concrete": 336,
                "num_kept_lambda": 199,
                "num_values_explored": 3064,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90859
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.11666013298964,
            "num_unique_values": 559,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.948793407886996,
                "explored_percent_lambda": 18.452030606238964,
                "explored_percent_none": 18.599175985874044,
                "kept_percent_concrete": 59.3128390596745,
                "kept_percent_lambda": 40.6871609403255,
                "num_examples": 15,
                "num_explored_concrete": 2139,
                "num_explored_lambda": 627,
                "num_explored_none": 632,
                "num_inputs": 1,
                "num_kept_concrete": 328,
                "num_kept_lambda": 225,
                "num_values_explored": 3398,
                "num_values_kept": 553,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 97752
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.60397914600617,
            "num_unique_values": 584,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.03711270003405,
                "explored_percent_lambda": 30.949948927477017,
                "explored_percent_none": 26.012938372488936,
                "kept_percent_concrete": 43.0795847750865,
                "kept_percent_lambda": 56.9204152249135,
                "num_examples": 15,
                "num_explored_concrete": 1264,
                "num_explored_lambda": 909,
                "num_explored_none": 764,
                "num_inputs": 1,
                "num_kept_concrete": 249,
                "num_kept_lambda": 329,
                "num_values_explored": 2937,
                "num_values_kept": 578,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90275
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3542868109944,
            "num_unique_values": 567,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.3151364764268,
                "explored_percent_lambda": 16.315136476426797,
                "explored_percent_none": 17.3697270471464,
                "kept_percent_concrete": 68.98395721925134,
                "kept_percent_lambda": 31.016042780748663,
                "num_examples": 15,
                "num_explored_concrete": 2138,
                "num_explored_lambda": 526,
                "num_explored_none": 560,
                "num_inputs": 1,
                "num_kept_concrete": 387,
                "num_kept_lambda": 174,
                "num_values_explored": 3224,
                "num_values_kept": 561,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 98471
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.09793903499667,
            "num_unique_values": 493,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.163987138263664,
                "explored_percent_lambda": 18.488745980707396,
                "explored_percent_none": 22.34726688102894,
                "kept_percent_concrete": 61.190965092402465,
                "kept_percent_lambda": 38.809034907597535,
                "num_examples": 15,
                "num_explored_concrete": 1840,
                "num_explored_lambda": 575,
                "num_explored_none": 695,
                "num_inputs": 1,
                "num_kept_concrete": 298,
                "num_kept_lambda": 189,
                "num_values_explored": 3110,
                "num_values_kept": 487,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95094
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2558708949946,
            "num_unique_values": 448,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.28782784129119,
                "explored_percent_lambda": 20.81371889710827,
                "explored_percent_none": 22.898453261600537,
                "kept_percent_concrete": 51.58371040723982,
                "kept_percent_lambda": 48.41628959276018,
                "num_examples": 15,
                "num_explored_concrete": 1674,
                "num_explored_lambda": 619,
                "num_explored_none": 681,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 214,
                "num_values_explored": 2974,
                "num_values_kept": 442,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93341
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.17650042899186,
            "num_unique_values": 536,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.00319488817891,
                "explored_percent_lambda": 16.996805111821086,
                "explored_percent_none": 20.0,
                "kept_percent_concrete": 67.9245283018868,
                "kept_percent_lambda": 32.075471698113205,
                "num_examples": 15,
                "num_explored_concrete": 1972,
                "num_explored_lambda": 532,
                "num_explored_none": 626,
                "num_inputs": 1,
                "num_kept_concrete": 360,
                "num_kept_lambda": 170,
                "num_values_explored": 3130,
                "num_values_kept": 530,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93718
            },
            "success": false,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.00945759000024,
            "num_unique_values": 490,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.78807106598985,
                "explored_percent_lambda": 18.559644670050762,
                "explored_percent_none": 22.65228426395939,
                "kept_percent_concrete": 57.02479338842975,
                "kept_percent_lambda": 42.97520661157025,
                "num_examples": 15,
                "num_explored_concrete": 1853,
                "num_explored_lambda": 585,
                "num_explored_none": 714,
                "num_inputs": 1,
                "num_kept_concrete": 276,
                "num_kept_lambda": 208,
                "num_values_explored": 3152,
                "num_values_kept": 484,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95333
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0259816360049,
            "num_unique_values": 503,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.960591133004925,
                "explored_percent_lambda": 19.027093596059114,
                "explored_percent_none": 20.01231527093596,
                "kept_percent_concrete": 55.53319919517103,
                "kept_percent_lambda": 44.46680080482897,
                "num_examples": 15,
                "num_explored_concrete": 1980,
                "num_explored_lambda": 618,
                "num_explored_none": 650,
                "num_inputs": 1,
                "num_kept_concrete": 276,
                "num_kept_lambda": 221,
                "num_values_explored": 3248,
                "num_values_kept": 497,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95544
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.19438586999604,
            "num_unique_values": 645,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.21487603305785,
                "explored_percent_lambda": 21.950413223140497,
                "explored_percent_none": 23.834710743801654,
                "kept_percent_concrete": 60.719874804381845,
                "kept_percent_lambda": 39.280125195618155,
                "num_examples": 15,
                "num_explored_concrete": 1640,
                "num_explored_lambda": 664,
                "num_explored_none": 721,
                "num_inputs": 1,
                "num_kept_concrete": 388,
                "num_kept_lambda": 251,
                "num_values_explored": 3025,
                "num_values_kept": 639,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93915
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2723639179894,
            "num_unique_values": 572,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.8180700676091,
                "explored_percent_lambda": 26.951444376152427,
                "explored_percent_none": 25.230485556238477,
                "kept_percent_concrete": 44.87632508833922,
                "kept_percent_lambda": 55.12367491166078,
                "num_examples": 15,
                "num_explored_concrete": 1556,
                "num_explored_lambda": 877,
                "num_explored_none": 821,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 312,
                "num_values_explored": 3254,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95741
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.22247077200154,
            "num_unique_values": 512,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.39973172367539,
                "explored_percent_lambda": 28.06841046277666,
                "explored_percent_none": 27.531857813547955,
                "kept_percent_concrete": 44.07114624505929,
                "kept_percent_lambda": 55.92885375494071,
                "num_examples": 15,
                "num_explored_concrete": 1324,
                "num_explored_lambda": 837,
                "num_explored_none": 821,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 283,
                "num_values_explored": 2982,
                "num_values_kept": 506,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91403
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1267945859872,
            "num_unique_values": 521,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.62068965517241,
                "explored_percent_lambda": 29.655172413793103,
                "explored_percent_none": 26.724137931034484,
                "kept_percent_concrete": 41.55339805825243,
                "kept_percent_lambda": 58.44660194174757,
                "num_examples": 15,
                "num_explored_concrete": 1265,
                "num_explored_lambda": 860,
                "num_explored_none": 775,
                "num_inputs": 1,
                "num_kept_concrete": 214,
                "num_kept_lambda": 301,
                "num_values_explored": 2900,
                "num_values_kept": 515,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91681
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.98521948400594,
            "num_unique_values": 514,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.95035924232528,
                "explored_percent_lambda": 26.485956890920967,
                "explored_percent_none": 27.563683866753756,
                "kept_percent_concrete": 46.45669291338583,
                "kept_percent_lambda": 53.54330708661417,
                "num_examples": 15,
                "num_explored_concrete": 1407,
                "num_explored_lambda": 811,
                "num_explored_none": 844,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 272,
                "num_values_explored": 3062,
                "num_values_kept": 508,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91442
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1832992439886,
            "num_unique_values": 551,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.28786391887471,
                "explored_percent_lambda": 16.584887144259078,
                "explored_percent_none": 23.12724893686621,
                "kept_percent_concrete": 66.78899082568807,
                "kept_percent_lambda": 33.211009174311926,
                "num_examples": 15,
                "num_explored_concrete": 1843,
                "num_explored_lambda": 507,
                "num_explored_none": 707,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 181,
                "num_values_explored": 3057,
                "num_values_kept": 545,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94522
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.14644747099373,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.40189356839699,
                "explored_percent_lambda": 15.801501795625205,
                "explored_percent_none": 20.7966046359778,
                "kept_percent_concrete": 65.86715867158672,
                "kept_percent_lambda": 34.132841328413285,
                "num_examples": 15,
                "num_explored_concrete": 1942,
                "num_explored_lambda": 484,
                "num_explored_none": 637,
                "num_inputs": 1,
                "num_kept_concrete": 357,
                "num_kept_lambda": 185,
                "num_values_explored": 3063,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93390
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05878781698993,
            "num_unique_values": 506,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.90725126475548,
                "explored_percent_lambda": 19.6964586846543,
                "explored_percent_none": 25.39629005059022,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 15,
                "num_explored_concrete": 1628,
                "num_explored_lambda": 584,
                "num_explored_none": 753,
                "num_inputs": 1,
                "num_kept_concrete": 318,
                "num_kept_lambda": 182,
                "num_values_explored": 2965,
                "num_values_kept": 500,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89643
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0860356940102,
            "num_unique_values": 556,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.1875,
                "explored_percent_lambda": 14.368872549019608,
                "explored_percent_none": 18.443627450980394,
                "kept_percent_concrete": 67.63636363636364,
                "kept_percent_lambda": 32.36363636363637,
                "num_examples": 15,
                "num_explored_concrete": 2193,
                "num_explored_lambda": 469,
                "num_explored_none": 602,
                "num_inputs": 1,
                "num_kept_concrete": 372,
                "num_kept_lambda": 178,
                "num_values_explored": 3264,
                "num_values_kept": 550,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 97848
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1351752460032,
            "num_unique_values": 530,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.63214166388239,
                "explored_percent_lambda": 17.674574006014034,
                "explored_percent_none": 25.693284330103577,
                "kept_percent_concrete": 64.69465648854961,
                "kept_percent_lambda": 35.30534351145038,
                "num_examples": 15,
                "num_explored_concrete": 1695,
                "num_explored_lambda": 529,
                "num_explored_none": 769,
                "num_inputs": 1,
                "num_kept_concrete": 339,
                "num_kept_lambda": 185,
                "num_values_explored": 2993,
                "num_values_kept": 524,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92728
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0807160849945,
            "num_unique_values": 562,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.84384384384384,
                "explored_percent_lambda": 16.606606606606608,
                "explored_percent_none": 19.54954954954955,
                "kept_percent_concrete": 68.5251798561151,
                "kept_percent_lambda": 31.47482014388489,
                "num_examples": 15,
                "num_explored_concrete": 2126,
                "num_explored_lambda": 553,
                "num_explored_none": 651,
                "num_inputs": 1,
                "num_kept_concrete": 381,
                "num_kept_lambda": 175,
                "num_values_explored": 3330,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 101111
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0537874909933,
            "num_unique_values": 549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.29132875857767,
                "explored_percent_lambda": 18.43418590143481,
                "explored_percent_none": 20.274485339987525,
                "kept_percent_concrete": 63.53591160220994,
                "kept_percent_lambda": 36.46408839779006,
                "num_examples": 15,
                "num_explored_concrete": 1965,
                "num_explored_lambda": 591,
                "num_explored_none": 650,
                "num_inputs": 1,
                "num_kept_concrete": 345,
                "num_kept_lambda": 198,
                "num_values_explored": 3206,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 95698
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 293.62322367800516,
            "num_unique_values": 143,
            "solution": "Map((lambda u1: ((lambda v1: Multiply(((lambda v1: Add(v1, v1)))(v1), Add(1, 1))))(u1)), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 24.64589235127479,
                "explored_percent_lambda": 39.23512747875354,
                "explored_percent_none": 36.11898016997167,
                "kept_percent_concrete": 21.16788321167883,
                "kept_percent_lambda": 78.83211678832117,
                "num_examples": 15,
                "num_explored_concrete": 174,
                "num_explored_lambda": 277,
                "num_explored_none": 255,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 108,
                "num_values_explored": 706,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 98619
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0971881739969831,
            "num_unique_values": 63,
            "solution": "Cons(Multiply(Add(1, 1), Add(1, 1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 50.38167938931298,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 24.56140350877193,
                "kept_percent_lambda": 75.43859649122807,
                "num_examples": 15,
                "num_explored_concrete": 66,
                "num_explored_lambda": 50,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 43,
                "num_values_explored": 131,
                "num_values_kept": 57,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19797795799968299,
            "num_unique_values": 123,
            "solution": "Cons(Add(1, Multiply(Add(1, 1), Add(1, 1))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.12956810631229,
                "explored_percent_lambda": 26.245847176079735,
                "explored_percent_none": 12.624584717607974,
                "kept_percent_concrete": 54.7008547008547,
                "kept_percent_lambda": 45.2991452991453,
                "num_examples": 15,
                "num_explored_concrete": 184,
                "num_explored_lambda": 79,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 53,
                "num_values_explored": 301,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.69917738699587,
            "num_unique_values": 363,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.932907348242814,
                "explored_percent_lambda": 27.635782747603834,
                "explored_percent_none": 25.431309904153355,
                "kept_percent_concrete": 35.85434173669468,
                "kept_percent_lambda": 64.14565826330532,
                "num_examples": 15,
                "num_explored_concrete": 1469,
                "num_explored_lambda": 865,
                "num_explored_none": 796,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 229,
                "num_values_explored": 3130,
                "num_values_kept": 357,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93630
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37725469599536154,
            "num_unique_values": 187,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cdr(Cdr(Cdr(x1)))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.69767441860465,
                "explored_percent_lambda": 23.565891472868216,
                "explored_percent_none": 5.736434108527132,
                "kept_percent_concrete": 56.353591160220994,
                "kept_percent_lambda": 43.646408839779006,
                "num_examples": 15,
                "num_explored_concrete": 456,
                "num_explored_lambda": 152,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 79,
                "num_values_explored": 645,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 645
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07897620300355,
            "num_unique_values": 562,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.69700953006901,
                "explored_percent_lambda": 21.360499507065395,
                "explored_percent_none": 24.942490962865595,
                "kept_percent_concrete": 56.115107913669064,
                "kept_percent_lambda": 43.884892086330936,
                "num_examples": 15,
                "num_explored_concrete": 1634,
                "num_explored_lambda": 650,
                "num_explored_none": 759,
                "num_inputs": 1,
                "num_kept_concrete": 312,
                "num_kept_lambda": 244,
                "num_values_explored": 3043,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91805
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1540159319993,
            "num_unique_values": 609,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.573913043478264,
                "explored_percent_lambda": 20.591304347826085,
                "explored_percent_none": 20.83478260869565,
                "kept_percent_concrete": 57.711442786069654,
                "kept_percent_lambda": 42.288557213930346,
                "num_examples": 15,
                "num_explored_concrete": 1684,
                "num_explored_lambda": 592,
                "num_explored_none": 599,
                "num_inputs": 1,
                "num_kept_concrete": 348,
                "num_kept_lambda": 255,
                "num_values_explored": 2875,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89001
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.24999025098805,
            "num_unique_values": 541,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.03070761014686,
                "explored_percent_lambda": 27.93724966622163,
                "explored_percent_none": 24.03204272363151,
                "kept_percent_concrete": 42.61682242990654,
                "kept_percent_lambda": 57.38317757009346,
                "num_examples": 15,
                "num_explored_concrete": 1439,
                "num_explored_lambda": 837,
                "num_explored_none": 720,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 307,
                "num_values_explored": 2996,
                "num_values_kept": 535,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94417
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1630760669941,
            "num_unique_values": 600,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.031714568880076,
                "explored_percent_lambda": 23.587710604558968,
                "explored_percent_none": 24.380574826560952,
                "kept_percent_concrete": 55.387205387205384,
                "kept_percent_lambda": 44.612794612794616,
                "num_examples": 15,
                "num_explored_concrete": 1575,
                "num_explored_lambda": 714,
                "num_explored_none": 738,
                "num_inputs": 1,
                "num_kept_concrete": 329,
                "num_kept_lambda": 265,
                "num_values_explored": 3027,
                "num_values_kept": 594,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93482
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.92602808399533,
            "num_unique_values": 412,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.08686659772492,
                "explored_percent_lambda": 28.300586004825924,
                "explored_percent_none": 23.612547397449156,
                "kept_percent_concrete": 45.566502463054185,
                "kept_percent_lambda": 54.433497536945815,
                "num_examples": 15,
                "num_explored_concrete": 1395,
                "num_explored_lambda": 821,
                "num_explored_none": 685,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 221,
                "num_values_explored": 2901,
                "num_values_kept": 406,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87913
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05283747300564,
            "num_unique_values": 500,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.74046869534802,
                "explored_percent_lambda": 33.193424274221755,
                "explored_percent_none": 29.06610703043022,
                "kept_percent_concrete": 35.62753036437247,
                "kept_percent_lambda": 64.37246963562752,
                "num_examples": 15,
                "num_explored_concrete": 1079,
                "num_explored_lambda": 949,
                "num_explored_none": 831,
                "num_inputs": 1,
                "num_kept_concrete": 176,
                "num_kept_lambda": 318,
                "num_values_explored": 2859,
                "num_values_kept": 494,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88352
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.049128018989,
            "num_unique_values": 525,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.06475057813016,
                "explored_percent_lambda": 23.95110670630988,
                "explored_percent_none": 23.984142715559962,
                "kept_percent_concrete": 57.03275529865125,
                "kept_percent_lambda": 42.96724470134875,
                "num_examples": 15,
                "num_explored_concrete": 1576,
                "num_explored_lambda": 725,
                "num_explored_none": 726,
                "num_inputs": 1,
                "num_kept_concrete": 296,
                "num_kept_lambda": 223,
                "num_values_explored": 3027,
                "num_values_kept": 519,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90427
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.19289986499643,
            "num_unique_values": 511,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.85535465924896,
                "explored_percent_lambda": 31.39777468706537,
                "explored_percent_none": 27.746870653685676,
                "kept_percent_concrete": 36.039603960396036,
                "kept_percent_lambda": 63.960396039603964,
                "num_examples": 15,
                "num_explored_concrete": 1175,
                "num_explored_lambda": 903,
                "num_explored_none": 798,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 323,
                "num_values_explored": 2876,
                "num_values_kept": 505,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85723
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37832111200259533,
            "num_unique_values": 172,
            "solution": "Map((lambda u1: Car(Cdr(Cdr(Cdr(Cdr(x1)))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 72.93233082706767,
                "explored_percent_lambda": 19.548872180451127,
                "explored_percent_none": 7.518796992481203,
                "kept_percent_concrete": 60.24096385542169,
                "kept_percent_lambda": 39.75903614457831,
                "num_examples": 15,
                "num_explored_concrete": 485,
                "num_explored_lambda": 130,
                "num_explored_none": 50,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 66,
                "num_values_explored": 665,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0784207569959,
            "num_unique_values": 588,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.72893533638145,
                "explored_percent_lambda": 16.851730894839974,
                "explored_percent_none": 18.419333768778575,
                "kept_percent_concrete": 62.7147766323024,
                "kept_percent_lambda": 37.2852233676976,
                "num_examples": 15,
                "num_explored_concrete": 1982,
                "num_explored_lambda": 516,
                "num_explored_none": 564,
                "num_inputs": 1,
                "num_kept_concrete": 365,
                "num_kept_lambda": 217,
                "num_values_explored": 3062,
                "num_values_kept": 582,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93747
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0640046720073,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.903072537218875,
                "explored_percent_lambda": 19.987329743427303,
                "explored_percent_none": 22.10959771935382,
                "kept_percent_concrete": 58.48708487084871,
                "kept_percent_lambda": 41.51291512915129,
                "num_examples": 15,
                "num_explored_concrete": 1828,
                "num_explored_lambda": 631,
                "num_explored_none": 698,
                "num_inputs": 1,
                "num_kept_concrete": 317,
                "num_kept_lambda": 225,
                "num_values_explored": 3157,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94722
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1379818090063,
            "num_unique_values": 570,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.690744920993225,
                "explored_percent_lambda": 18.02644308287649,
                "explored_percent_none": 23.28281199613028,
                "kept_percent_concrete": 63.12056737588652,
                "kept_percent_lambda": 36.87943262411348,
                "num_examples": 15,
                "num_explored_concrete": 1820,
                "num_explored_lambda": 559,
                "num_explored_none": 722,
                "num_inputs": 1,
                "num_kept_concrete": 356,
                "num_kept_lambda": 208,
                "num_values_explored": 3101,
                "num_values_kept": 564,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94978
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 303.6172134709923,
            "num_unique_values": 547,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.949341438703144,
                "explored_percent_lambda": 22.830124957784534,
                "explored_percent_none": 27.220533603512326,
                "kept_percent_concrete": 52.865064695009245,
                "kept_percent_lambda": 47.134935304990755,
                "num_examples": 15,
                "num_explored_concrete": 1479,
                "num_explored_lambda": 676,
                "num_explored_none": 806,
                "num_inputs": 1,
                "num_kept_concrete": 286,
                "num_kept_lambda": 255,
                "num_values_explored": 2961,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 21,
                "total_num_values_explored": 58438
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0050866870006,
            "num_unique_values": 543,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.540983606557376,
                "explored_percent_lambda": 24.983606557377048,
                "explored_percent_none": 21.475409836065573,
                "kept_percent_concrete": 51.95530726256983,
                "kept_percent_lambda": 48.04469273743017,
                "num_examples": 15,
                "num_explored_concrete": 1633,
                "num_explored_lambda": 762,
                "num_explored_none": 655,
                "num_inputs": 1,
                "num_kept_concrete": 279,
                "num_kept_lambda": 258,
                "num_values_explored": 3050,
                "num_values_kept": 537,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92440
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.04736309000873,
            "num_unique_values": 593,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.23401493021746,
                "explored_percent_lambda": 20.675105485232066,
                "explored_percent_none": 20.09087958455047,
                "kept_percent_concrete": 56.218057921635435,
                "kept_percent_lambda": 43.781942078364565,
                "num_examples": 15,
                "num_explored_concrete": 1825,
                "num_explored_lambda": 637,
                "num_explored_none": 619,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 257,
                "num_values_explored": 3081,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94113
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36186802700103726,
            "num_unique_values": 190,
            "solution": "Cons(Index(1, Cdr(x1)), Cons(Index(1, Cdr(Cdr(x1))), []))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.45482866043614,
                "explored_percent_lambda": 19.781931464174455,
                "explored_percent_none": 5.7632398753894085,
                "kept_percent_concrete": 65.21739130434783,
                "kept_percent_lambda": 34.78260869565217,
                "num_examples": 15,
                "num_explored_concrete": 478,
                "num_explored_lambda": 127,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 120,
                "num_kept_lambda": 64,
                "num_values_explored": 642,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.105078822001815,
            "num_unique_values": 587,
            "solution": "Cons(Index(1, Cdr(Cdr(x1))), Cons(Index(1, Cdr(Cdr(Cdr(x1)))), []))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 54.285714285714285,
                "explored_percent_lambda": 21.75,
                "explored_percent_none": 23.964285714285715,
                "kept_percent_concrete": 58.17555938037866,
                "kept_percent_lambda": 41.82444061962134,
                "num_examples": 15,
                "num_explored_concrete": 1520,
                "num_explored_lambda": 609,
                "num_explored_none": 671,
                "num_inputs": 1,
                "num_kept_concrete": 338,
                "num_kept_lambda": 243,
                "num_values_explored": 2800,
                "num_values_kept": 581,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 6828
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1657365120045,
            "num_unique_values": 604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.46511627906977,
                "explored_percent_lambda": 18.946648426812587,
                "explored_percent_none": 20.58823529411765,
                "kept_percent_concrete": 60.53511705685619,
                "kept_percent_lambda": 39.46488294314381,
                "num_examples": 15,
                "num_explored_concrete": 1768,
                "num_explored_lambda": 554,
                "num_explored_none": 602,
                "num_inputs": 1,
                "num_kept_concrete": 362,
                "num_kept_lambda": 236,
                "num_values_explored": 2924,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88479
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35694808200059924,
            "num_unique_values": 173,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), [])",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 70.7165109034268,
                "explored_percent_lambda": 22.118380062305295,
                "explored_percent_none": 7.165109034267913,
                "kept_percent_concrete": 60.47904191616767,
                "kept_percent_lambda": 39.52095808383233,
                "num_examples": 15,
                "num_explored_concrete": 454,
                "num_explored_lambda": 142,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 66,
                "num_values_explored": 642,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.06053191899264,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.21446121446122,
                "explored_percent_lambda": 20.463320463320464,
                "explored_percent_none": 18.322218322218323,
                "kept_percent_concrete": 59.14332784184514,
                "kept_percent_lambda": 40.85667215815486,
                "num_examples": 15,
                "num_explored_concrete": 1744,
                "num_explored_lambda": 583,
                "num_explored_none": 522,
                "num_inputs": 1,
                "num_kept_concrete": 359,
                "num_kept_lambda": 248,
                "num_values_explored": 2849,
                "num_values_kept": 607,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87728
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0846218249935,
            "num_unique_values": 592,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.72366148531952,
                "explored_percent_lambda": 21.139896373056995,
                "explored_percent_none": 19.13644214162349,
                "kept_percent_concrete": 57.33788395904437,
                "kept_percent_lambda": 42.66211604095563,
                "num_examples": 15,
                "num_explored_concrete": 1729,
                "num_explored_lambda": 612,
                "num_explored_none": 554,
                "num_inputs": 1,
                "num_kept_concrete": 336,
                "num_kept_lambda": 250,
                "num_values_explored": 2895,
                "num_values_kept": 586,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88609
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1300211589987,
            "num_unique_values": 452,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.553559547571524,
                "explored_percent_lambda": 18.695941450432468,
                "explored_percent_none": 24.75049900199601,
                "kept_percent_concrete": 61.65919282511211,
                "kept_percent_lambda": 38.34080717488789,
                "num_examples": 15,
                "num_explored_concrete": 1700,
                "num_explored_lambda": 562,
                "num_explored_none": 744,
                "num_inputs": 1,
                "num_kept_concrete": 275,
                "num_kept_lambda": 171,
                "num_values_explored": 3006,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90662
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.96683289000066,
            "num_unique_values": 486,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.22423398328691,
                "explored_percent_lambda": 26.775766016713092,
                "explored_percent_none": 25.0,
                "kept_percent_concrete": 46.666666666666664,
                "kept_percent_lambda": 53.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 1385,
                "num_explored_lambda": 769,
                "num_explored_none": 718,
                "num_inputs": 1,
                "num_kept_concrete": 224,
                "num_kept_lambda": 256,
                "num_values_explored": 2872,
                "num_values_kept": 480,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87849
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0944960889901,
            "num_unique_values": 526,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.95473251028807,
                "explored_percent_lambda": 17.45541838134431,
                "explored_percent_none": 30.589849108367627,
                "kept_percent_concrete": 57.11538461538461,
                "kept_percent_lambda": 42.88461538461539,
                "num_examples": 15,
                "num_explored_concrete": 1515,
                "num_explored_lambda": 509,
                "num_explored_none": 892,
                "num_inputs": 1,
                "num_kept_concrete": 297,
                "num_kept_lambda": 223,
                "num_values_explored": 2916,
                "num_values_kept": 520,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90398
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.02803381800186,
            "num_unique_values": 512,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.26829268292683,
                "explored_percent_lambda": 24.285714285714285,
                "explored_percent_none": 26.445993031358885,
                "kept_percent_concrete": 50.19762845849802,
                "kept_percent_lambda": 49.80237154150198,
                "num_examples": 15,
                "num_explored_concrete": 1414,
                "num_explored_lambda": 697,
                "num_explored_none": 759,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 252,
                "num_values_explored": 2870,
                "num_values_kept": 506,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88020
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1376942210045,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.521262002743484,
                "explored_percent_lambda": 20.541838134430726,
                "explored_percent_none": 23.93689986282579,
                "kept_percent_concrete": 53.57766143106457,
                "kept_percent_lambda": 46.42233856893543,
                "num_examples": 15,
                "num_explored_concrete": 1619,
                "num_explored_lambda": 599,
                "num_explored_none": 698,
                "num_inputs": 1,
                "num_kept_concrete": 307,
                "num_kept_lambda": 266,
                "num_values_explored": 2916,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87648
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.05182665400207,
            "num_unique_values": 537,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.30953926022064,
                "explored_percent_lambda": 20.53861129136924,
                "explored_percent_none": 26.151849448410122,
                "kept_percent_concrete": 58.94538606403013,
                "kept_percent_lambda": 41.05461393596987,
                "num_examples": 15,
                "num_explored_concrete": 1643,
                "num_explored_lambda": 633,
                "num_explored_none": 806,
                "num_inputs": 1,
                "num_kept_concrete": 313,
                "num_kept_lambda": 218,
                "num_values_explored": 3082,
                "num_values_kept": 531,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91439
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.10067692399025,
            "num_unique_values": 852,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.567183054062596,
                "explored_percent_lambda": 17.072399620613343,
                "explored_percent_none": 20.36041732532406,
                "kept_percent_concrete": 62.29314420803782,
                "kept_percent_lambda": 37.70685579196218,
                "num_examples": 15,
                "num_explored_concrete": 3958,
                "num_explored_lambda": 1080,
                "num_explored_none": 1288,
                "num_inputs": 1,
                "num_kept_concrete": 527,
                "num_kept_lambda": 319,
                "num_values_explored": 6326,
                "num_values_kept": 846,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 137709
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0811708429974,
            "num_unique_values": 518,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.356916578669484,
                "explored_percent_lambda": 25.237592397043294,
                "explored_percent_none": 28.405491024287223,
                "kept_percent_concrete": 50.1953125,
                "kept_percent_lambda": 49.8046875,
                "num_examples": 15,
                "num_explored_concrete": 1317,
                "num_explored_lambda": 717,
                "num_explored_none": 807,
                "num_inputs": 1,
                "num_kept_concrete": 257,
                "num_kept_lambda": 255,
                "num_values_explored": 2841,
                "num_values_kept": 512,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 109945
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.25764141099353,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.11955385151621,
                "explored_percent_lambda": 23.597072150575112,
                "explored_percent_none": 23.28337399790868,
                "kept_percent_concrete": 55.14834205933683,
                "kept_percent_lambda": 44.85165794066317,
                "num_examples": 15,
                "num_explored_concrete": 1524,
                "num_explored_lambda": 677,
                "num_explored_none": 668,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 257,
                "num_values_explored": 2869,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88034
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.21339511999395,
            "num_unique_values": 513,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.92987377279103,
                "explored_percent_lambda": 20.687237026647967,
                "explored_percent_none": 29.38288920056101,
                "kept_percent_concrete": 52.85996055226825,
                "kept_percent_lambda": 47.14003944773175,
                "num_examples": 15,
                "num_explored_concrete": 1424,
                "num_explored_lambda": 590,
                "num_explored_none": 838,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 239,
                "num_values_explored": 2852,
                "num_values_kept": 507,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86771
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2423661859939,
            "num_unique_values": 582,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.210420841683366,
                "explored_percent_lambda": 20.207080828323313,
                "explored_percent_none": 24.58249832999332,
                "kept_percent_concrete": 57.8125,
                "kept_percent_lambda": 42.1875,
                "num_examples": 15,
                "num_explored_concrete": 1653,
                "num_explored_lambda": 605,
                "num_explored_none": 736,
                "num_inputs": 1,
                "num_kept_concrete": 333,
                "num_kept_lambda": 243,
                "num_values_explored": 2994,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90731
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.23131911898963,
            "num_unique_values": 560,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.13005272407733,
                "explored_percent_lambda": 22.671353251318102,
                "explored_percent_none": 23.19859402460457,
                "kept_percent_concrete": 48.375451263537904,
                "kept_percent_lambda": 51.624548736462096,
                "num_examples": 15,
                "num_explored_concrete": 1540,
                "num_explored_lambda": 645,
                "num_explored_none": 660,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 286,
                "num_values_explored": 2845,
                "num_values_kept": 554,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86181
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 108.28030313900672,
            "num_unique_values": 446,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 47.59636206149848,
                "explored_percent_lambda": 25.552187093980077,
                "explored_percent_none": 26.851450844521437,
                "kept_percent_concrete": 50.45454545454545,
                "kept_percent_lambda": 49.54545454545455,
                "num_examples": 15,
                "num_explored_concrete": 1099,
                "num_explored_lambda": 590,
                "num_explored_none": 620,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 218,
                "num_values_explored": 2309,
                "num_values_kept": 440,
                "temperature": 1.0,
                "total_num_restarts": 12,
                "total_num_values_explored": 36145
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6535202270024456,
            "num_unique_values": 124,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 16.721311475409838,
                "explored_percent_lambda": 46.885245901639344,
                "explored_percent_none": 36.39344262295082,
                "kept_percent_concrete": 17.796610169491526,
                "kept_percent_lambda": 82.20338983050847,
                "num_examples": 15,
                "num_explored_concrete": 102,
                "num_explored_lambda": 286,
                "num_explored_none": 222,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 97,
                "num_values_explored": 610,
                "num_values_kept": 118,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 1970
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0801435460162,
            "num_unique_values": 487,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.67688022284123,
                "explored_percent_lambda": 27.750696378830085,
                "explored_percent_none": 23.57242339832869,
                "kept_percent_concrete": 49.688149688149686,
                "kept_percent_lambda": 50.311850311850314,
                "num_examples": 15,
                "num_explored_concrete": 1398,
                "num_explored_lambda": 797,
                "num_explored_none": 677,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 242,
                "num_values_explored": 2872,
                "num_values_kept": 481,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89666
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1143931389960926,
            "num_unique_values": 74,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 45.22292993630573,
                "explored_percent_lambda": 38.853503184713375,
                "explored_percent_none": 15.92356687898089,
                "kept_percent_concrete": 29.41176470588235,
                "kept_percent_lambda": 70.58823529411765,
                "num_examples": 15,
                "num_explored_concrete": 71,
                "num_explored_lambda": 61,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 48,
                "num_values_explored": 157,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 157
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2978555900045,
            "num_unique_values": 539,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.47043010752688,
                "explored_percent_lambda": 25.268817204301076,
                "explored_percent_none": 24.260752688172044,
                "kept_percent_concrete": 55.15947467166979,
                "kept_percent_lambda": 44.84052532833021,
                "num_examples": 15,
                "num_explored_concrete": 1502,
                "num_explored_lambda": 752,
                "num_explored_none": 722,
                "num_inputs": 1,
                "num_kept_concrete": 294,
                "num_kept_lambda": 239,
                "num_values_explored": 2976,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90559
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.890030916023534,
            "num_unique_values": 129,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 19.87281399046105,
                "explored_percent_lambda": 44.51510333863275,
                "explored_percent_none": 35.6120826709062,
                "kept_percent_concrete": 20.32520325203252,
                "kept_percent_lambda": 79.67479674796748,
                "num_examples": 15,
                "num_explored_concrete": 125,
                "num_explored_lambda": 280,
                "num_explored_none": 224,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 98,
                "num_values_explored": 629,
                "num_values_kept": 123,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 1989
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1241828270140104,
            "num_unique_values": 77,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.875,
                "explored_percent_lambda": 44.375,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.760563380281692,
                "kept_percent_lambda": 73.2394366197183,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 71,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 52,
                "num_values_explored": 160,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 160
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1526712149789,
            "num_unique_values": 496,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.59927797833935,
                "explored_percent_lambda": 32.52707581227437,
                "explored_percent_none": 24.873646209386283,
                "kept_percent_concrete": 40.816326530612244,
                "kept_percent_lambda": 59.183673469387756,
                "num_examples": 15,
                "num_explored_concrete": 1180,
                "num_explored_lambda": 901,
                "num_explored_none": 689,
                "num_inputs": 1,
                "num_kept_concrete": 200,
                "num_kept_lambda": 290,
                "num_values_explored": 2770,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87378
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.22833803400863,
            "num_unique_values": 281,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(If(IsEmpty(x1), 0, 1), v1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 31.41559424678274,
                "explored_percent_lambda": 36.941710825132475,
                "explored_percent_none": 31.642694928084783,
                "kept_percent_concrete": 32.0,
                "kept_percent_lambda": 68.0,
                "num_examples": 15,
                "num_explored_concrete": 415,
                "num_explored_lambda": 488,
                "num_explored_none": 418,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 187,
                "num_values_explored": 1321,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2681
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11586596799315885,
            "num_unique_values": 67,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 32.35294117647059,
                "explored_percent_lambda": 56.86274509803921,
                "explored_percent_none": 10.784313725490197,
                "kept_percent_concrete": 11.475409836065573,
                "kept_percent_lambda": 88.52459016393442,
                "num_examples": 15,
                "num_explored_concrete": 33,
                "num_explored_lambda": 58,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 54,
                "num_values_explored": 102,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 102
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23244066798361018,
            "num_unique_values": 130,
            "solution": "Cdr(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.98529411764706,
                "explored_percent_lambda": 32.720588235294116,
                "explored_percent_none": 10.294117647058824,
                "kept_percent_concrete": 47.58064516129032,
                "kept_percent_lambda": 52.41935483870968,
                "num_examples": 15,
                "num_explored_concrete": 155,
                "num_explored_lambda": 89,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 65,
                "num_values_explored": 272,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4328072859789245,
            "num_unique_values": 186,
            "solution": "Cdr(Cdr(Cdr(Cdr(x1))))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.6078431372549,
                "explored_percent_lambda": 24.18300653594771,
                "explored_percent_none": 6.209150326797386,
                "kept_percent_concrete": 58.888888888888886,
                "kept_percent_lambda": 41.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 426,
                "num_explored_lambda": 148,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 74,
                "num_values_explored": 612,
                "num_values_kept": 180,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 612
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12722824199590832,
            "num_unique_values": 77,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 42.65734265734266,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 11.888111888111888,
                "kept_percent_concrete": 21.12676056338028,
                "kept_percent_lambda": 78.87323943661971,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 65,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 56,
                "num_values_explored": 143,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 143
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09338199900230393,
            "num_unique_values": 61,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.93103448275862,
                "explored_percent_lambda": 48.275862068965516,
                "explored_percent_none": 13.793103448275861,
                "kept_percent_concrete": 14.545454545454545,
                "kept_percent_lambda": 85.45454545454545,
                "num_examples": 15,
                "num_explored_concrete": 44,
                "num_explored_lambda": 56,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 8,
                "num_kept_lambda": 47,
                "num_values_explored": 116,
                "num_values_kept": 55,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 116
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2218731849861797,
            "num_unique_values": 139,
            "solution": "Index(1, Cdr(Cdr(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.74358974358974,
                "explored_percent_lambda": 25.32051282051282,
                "explored_percent_none": 9.935897435897436,
                "kept_percent_concrete": 57.89473684210526,
                "kept_percent_lambda": 42.10526315789474,
                "num_examples": 15,
                "num_explored_concrete": 202,
                "num_explored_lambda": 79,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 56,
                "num_values_explored": 312,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1561320290202,
            "num_unique_values": 533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.88023180940116,
                "explored_percent_lambda": 15.808113329040566,
                "explored_percent_none": 22.311654861558274,
                "kept_percent_concrete": 65.65464895635674,
                "kept_percent_lambda": 34.34535104364326,
                "num_examples": 15,
                "num_explored_concrete": 1922,
                "num_explored_lambda": 491,
                "num_explored_none": 693,
                "num_inputs": 1,
                "num_kept_concrete": 346,
                "num_kept_lambda": 181,
                "num_values_explored": 3106,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96814
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1854079219920095,
            "num_unique_values": 106,
            "solution": "Mod(Car(x1), Add(1, 1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.84905660377358,
                "explored_percent_lambda": 28.77358490566038,
                "explored_percent_none": 10.377358490566039,
                "kept_percent_concrete": 43.0,
                "kept_percent_lambda": 57.0,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 61,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 57,
                "num_values_explored": 212,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 212
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.26600596500793,
            "num_unique_values": 415,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.86215538847118,
                "explored_percent_lambda": 26.02935911206588,
                "explored_percent_none": 29.108485499462944,
                "kept_percent_concrete": 34.71882640586797,
                "kept_percent_lambda": 65.28117359413203,
                "num_examples": 15,
                "num_explored_concrete": 1253,
                "num_explored_lambda": 727,
                "num_explored_none": 813,
                "num_inputs": 1,
                "num_kept_concrete": 142,
                "num_kept_lambda": 267,
                "num_values_explored": 2793,
                "num_values_kept": 409,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86243
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2666345860052388,
            "num_unique_values": 141,
            "solution": "Cons(Index(1, Cdr(x1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.800664451827245,
                "explored_percent_lambda": 31.229235880398672,
                "explored_percent_none": 8.970099667774086,
                "kept_percent_concrete": 53.333333333333336,
                "kept_percent_lambda": 46.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 180,
                "num_explored_lambda": 94,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 63,
                "num_values_explored": 301,
                "num_values_kept": 135,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35518019198207185,
            "num_unique_values": 160,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 76.28705148205928,
                "explored_percent_lambda": 17.784711388455538,
                "explored_percent_none": 5.928237129485179,
                "kept_percent_concrete": 59.74025974025974,
                "kept_percent_lambda": 40.25974025974026,
                "num_examples": 15,
                "num_explored_concrete": 489,
                "num_explored_lambda": 114,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 62,
                "num_values_explored": 641,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 641
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10857363700051792,
            "num_unique_values": 62,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 48.85496183206107,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 12.977099236641221,
                "kept_percent_concrete": 21.428571428571427,
                "kept_percent_lambda": 78.57142857142857,
                "num_examples": 15,
                "num_explored_concrete": 64,
                "num_explored_lambda": 50,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 56,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09763126901816577,
            "num_unique_values": 66,
            "solution": "Cons(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.038167938931295,
                "explored_percent_lambda": 40.458015267175576,
                "explored_percent_none": 14.50381679389313,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 53,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.220116282987874,
            "num_unique_values": 122,
            "solution": "Cons(Add(1, Add(1, 1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.475083056478404,
                "explored_percent_lambda": 29.235880398671096,
                "explored_percent_none": 13.289036544850498,
                "kept_percent_concrete": 48.275862068965516,
                "kept_percent_lambda": 51.724137931034484,
                "num_examples": 15,
                "num_explored_concrete": 173,
                "num_explored_lambda": 88,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 60,
                "num_values_explored": 301,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09439899699646048,
            "num_unique_values": 65,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 35.23809523809524,
                "explored_percent_lambda": 51.42857142857143,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 11.864406779661017,
                "kept_percent_lambda": 88.13559322033899,
                "num_examples": 15,
                "num_explored_concrete": 37,
                "num_explored_lambda": 54,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 52,
                "num_values_explored": 105,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 105
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11227814000449143,
            "num_unique_values": 67,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 50.64935064935065,
                "explored_percent_lambda": 36.36363636363637,
                "explored_percent_none": 12.987012987012987,
                "kept_percent_concrete": 24.59016393442623,
                "kept_percent_lambda": 75.40983606557377,
                "num_examples": 15,
                "num_explored_concrete": 78,
                "num_explored_lambda": 56,
                "num_explored_none": 20,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 46,
                "num_values_explored": 154,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11345136299496517,
            "num_unique_values": 72,
            "solution": "Map((lambda u1: Index(1, Cdr(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.830065359477125,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 24.242424242424242,
                "kept_percent_lambda": 75.75757575757575,
                "num_examples": 15,
                "num_explored_concrete": 72,
                "num_explored_lambda": 64,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 50,
                "num_values_explored": 153,
                "num_values_kept": 66,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21942016101093031,
            "num_unique_values": 135,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), []))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.47176079734219,
                "explored_percent_lambda": 30.564784053156146,
                "explored_percent_none": 10.96345514950166,
                "kept_percent_concrete": 54.263565891472865,
                "kept_percent_lambda": 45.736434108527135,
                "num_examples": 15,
                "num_explored_concrete": 176,
                "num_explored_lambda": 92,
                "num_explored_none": 33,
                "num_inputs": 1,
                "num_kept_concrete": 70,
                "num_kept_lambda": 59,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11025989300105721,
            "num_unique_values": 66,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.45454545454545,
                "explored_percent_lambda": 43.18181818181818,
                "explored_percent_none": 11.363636363636363,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 15,
                "num_explored_concrete": 60,
                "num_explored_lambda": 57,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 48,
                "num_values_explored": 132,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 132
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.215193537005689,
            "num_unique_values": 135,
            "solution": "Cons(Index(1, Cdr(x1)), [])",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 63.12292358803987,
                "explored_percent_lambda": 27.242524916943523,
                "explored_percent_none": 9.634551495016611,
                "kept_percent_concrete": 58.13953488372093,
                "kept_percent_lambda": 41.86046511627907,
                "num_examples": 15,
                "num_explored_concrete": 190,
                "num_explored_lambda": 82,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 54,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.3076923076923077
}