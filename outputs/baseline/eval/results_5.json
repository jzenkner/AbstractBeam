{
    "num_tasks": 104,
    "num_tasks_solved": 33,
    "results": [
        {
            "elapsed_time": 301.46768086298835,
            "num_unique_values": 509,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.00684931506849,
                "explored_percent_lambda": 23.86986301369863,
                "explored_percent_none": 27.123287671232877,
                "kept_percent_concrete": 56.858846918489064,
                "kept_percent_lambda": 43.141153081510936,
                "num_examples": 15,
                "num_explored_concrete": 1431,
                "num_explored_lambda": 697,
                "num_explored_none": 792,
                "num_inputs": 1,
                "num_kept_concrete": 286,
                "num_kept_lambda": 217,
                "num_values_explored": 2920,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87593
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.071633612999,
            "num_unique_values": 549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.868489583333336,
                "explored_percent_lambda": 22.493489583333332,
                "explored_percent_none": 20.638020833333332,
                "kept_percent_concrete": 57.2744014732965,
                "kept_percent_lambda": 42.7255985267035,
                "num_examples": 15,
                "num_explored_concrete": 1747,
                "num_explored_lambda": 691,
                "num_explored_none": 634,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 232,
                "num_values_explored": 3072,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90052
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2704144379968,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.890358510268015,
                "explored_percent_lambda": 22.65924121127741,
                "explored_percent_none": 22.450400278454577,
                "kept_percent_concrete": 58.799171842650104,
                "kept_percent_lambda": 41.200828157349896,
                "num_examples": 15,
                "num_explored_concrete": 1577,
                "num_explored_lambda": 651,
                "num_explored_none": 645,
                "num_inputs": 1,
                "num_kept_concrete": 284,
                "num_kept_lambda": 199,
                "num_values_explored": 2873,
                "num_values_kept": 483,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91532
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1725525330112,
            "num_unique_values": 535,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.535405318808074,
                "explored_percent_lambda": 26.594040371675746,
                "explored_percent_none": 23.87055430951618,
                "kept_percent_concrete": 46.69187145557656,
                "kept_percent_lambda": 53.30812854442344,
                "num_examples": 15,
                "num_explored_concrete": 1546,
                "num_explored_lambda": 830,
                "num_explored_none": 745,
                "num_inputs": 1,
                "num_kept_concrete": 247,
                "num_kept_lambda": 282,
                "num_values_explored": 3121,
                "num_values_kept": 529,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96050
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.15428062200954,
            "num_unique_values": 544,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.69638862256312,
                "explored_percent_lambda": 26.014701182486416,
                "explored_percent_none": 24.288910194950464,
                "kept_percent_concrete": 48.88475836431227,
                "kept_percent_lambda": 51.11524163568773,
                "num_examples": 15,
                "num_explored_concrete": 1555,
                "num_explored_lambda": 814,
                "num_explored_none": 760,
                "num_inputs": 1,
                "num_kept_concrete": 263,
                "num_kept_lambda": 275,
                "num_values_explored": 3129,
                "num_values_kept": 538,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93850
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3402032740123,
            "num_unique_values": 505,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.91908293998652,
                "explored_percent_lambda": 33.648010788941335,
                "explored_percent_none": 26.432906271072152,
                "kept_percent_concrete": 38.276553106212425,
                "kept_percent_lambda": 61.723446893787575,
                "num_examples": 15,
                "num_explored_concrete": 1184,
                "num_explored_lambda": 998,
                "num_explored_none": 784,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 308,
                "num_values_explored": 2966,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91539
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4380628490035,
            "num_unique_values": 486,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.48275862068966,
                "explored_percent_lambda": 37.17672413793103,
                "explored_percent_none": 28.34051724137931,
                "kept_percent_concrete": 32.708333333333336,
                "kept_percent_lambda": 67.29166666666667,
                "num_examples": 15,
                "num_explored_concrete": 960,
                "num_explored_lambda": 1035,
                "num_explored_none": 789,
                "num_inputs": 1,
                "num_kept_concrete": 157,
                "num_kept_lambda": 323,
                "num_values_explored": 2784,
                "num_values_kept": 480,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87200
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.61560447899683,
            "num_unique_values": 505,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.07178043631246,
                "explored_percent_lambda": 35.327234342012666,
                "explored_percent_none": 26.600985221674875,
                "kept_percent_concrete": 33.86773547094188,
                "kept_percent_lambda": 66.13226452905812,
                "num_examples": 15,
                "num_explored_concrete": 1082,
                "num_explored_lambda": 1004,
                "num_explored_none": 756,
                "num_inputs": 1,
                "num_kept_concrete": 169,
                "num_kept_lambda": 330,
                "num_values_explored": 2842,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88685
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3439844550012,
            "num_unique_values": 528,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.071041733036,
                "explored_percent_lambda": 30.232558139534884,
                "explored_percent_none": 26.69640012742912,
                "kept_percent_concrete": 44.252873563218394,
                "kept_percent_lambda": 55.747126436781606,
                "num_examples": 15,
                "num_explored_concrete": 1352,
                "num_explored_lambda": 949,
                "num_explored_none": 838,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 291,
                "num_values_explored": 3139,
                "num_values_kept": 522,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93617
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.42258198399213,
            "num_unique_values": 578,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.386243386243386,
                "explored_percent_lambda": 30.787037037037038,
                "explored_percent_none": 25.826719576719576,
                "kept_percent_concrete": 44.58041958041958,
                "kept_percent_lambda": 55.41958041958042,
                "num_examples": 15,
                "num_explored_concrete": 1312,
                "num_explored_lambda": 931,
                "num_explored_none": 781,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 317,
                "num_values_explored": 3024,
                "num_values_kept": 572,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90747
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.43481779099966,
            "num_unique_values": 565,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.528328119569,
                "explored_percent_lambda": 33.71567605144247,
                "explored_percent_none": 25.755995828988528,
                "kept_percent_concrete": 42.039355992844364,
                "kept_percent_lambda": 57.960644007155636,
                "num_examples": 15,
                "num_explored_concrete": 1166,
                "num_explored_lambda": 970,
                "num_explored_none": 741,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 324,
                "num_values_explored": 2877,
                "num_values_kept": 559,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89625
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.50099917000625,
            "num_unique_values": 573,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.55592766242465,
                "explored_percent_lambda": 32.38446081714668,
                "explored_percent_none": 27.059611520428668,
                "kept_percent_concrete": 42.151675485008816,
                "kept_percent_lambda": 57.848324514991184,
                "num_examples": 15,
                "num_explored_concrete": 1211,
                "num_explored_lambda": 967,
                "num_explored_none": 808,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 328,
                "num_values_explored": 2986,
                "num_values_kept": 567,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88418
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.63896295797895,
            "num_unique_values": 611,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.889985895627646,
                "explored_percent_lambda": 31.45275035260931,
                "explored_percent_none": 26.657263751763047,
                "kept_percent_concrete": 42.8099173553719,
                "kept_percent_lambda": 57.1900826446281,
                "num_examples": 15,
                "num_explored_concrete": 1188,
                "num_explored_lambda": 892,
                "num_explored_none": 756,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 346,
                "num_values_explored": 2836,
                "num_values_kept": 605,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87804
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.57379167099134,
            "num_unique_values": 609,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.5016501650165,
                "explored_percent_lambda": 30.165016501650165,
                "explored_percent_none": 23.333333333333332,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 15,
                "num_explored_concrete": 1409,
                "num_explored_lambda": 914,
                "num_explored_none": 707,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 335,
                "num_values_explored": 3030,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92106
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.68193486199016,
            "num_unique_values": 567,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.59802538787024,
                "explored_percent_lambda": 34.30888575458392,
                "explored_percent_none": 26.09308885754584,
                "kept_percent_concrete": 41.35472370766488,
                "kept_percent_lambda": 58.64527629233512,
                "num_examples": 15,
                "num_explored_concrete": 1123,
                "num_explored_lambda": 973,
                "num_explored_none": 740,
                "num_inputs": 1,
                "num_kept_concrete": 232,
                "num_kept_lambda": 329,
                "num_values_explored": 2836,
                "num_values_kept": 561,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88046
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.31206214998383,
            "num_unique_values": 510,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.7216871471272,
                "explored_percent_lambda": 18.63168382597144,
                "explored_percent_none": 23.646629026901362,
                "kept_percent_concrete": 57.93650793650794,
                "kept_percent_lambda": 42.06349206349206,
                "num_examples": 15,
                "num_explored_concrete": 1738,
                "num_explored_lambda": 561,
                "num_explored_none": 712,
                "num_inputs": 1,
                "num_kept_concrete": 292,
                "num_kept_lambda": 212,
                "num_values_explored": 3011,
                "num_values_kept": 504,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94195
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.28164706600364,
            "num_unique_values": 508,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.53280659567159,
                "explored_percent_lambda": 17.107523187907937,
                "explored_percent_none": 23.359670216420476,
                "kept_percent_concrete": 61.155378486055774,
                "kept_percent_lambda": 38.844621513944226,
                "num_examples": 15,
                "num_explored_concrete": 1733,
                "num_explored_lambda": 498,
                "num_explored_none": 680,
                "num_inputs": 1,
                "num_kept_concrete": 307,
                "num_kept_lambda": 195,
                "num_values_explored": 2911,
                "num_values_kept": 502,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87699
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3428363179846,
            "num_unique_values": 516,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.50726468730259,
                "explored_percent_lambda": 19.48831332912192,
                "explored_percent_none": 21.00442198357549,
                "kept_percent_concrete": 53.13725490196079,
                "kept_percent_lambda": 46.86274509803921,
                "num_examples": 15,
                "num_explored_concrete": 1884,
                "num_explored_lambda": 617,
                "num_explored_none": 665,
                "num_inputs": 1,
                "num_kept_concrete": 271,
                "num_kept_lambda": 239,
                "num_values_explored": 3166,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93827
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.57681700598914,
            "num_unique_values": 566,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.41316526610644,
                "explored_percent_lambda": 30.357142857142858,
                "explored_percent_none": 24.2296918767507,
                "kept_percent_concrete": 42.142857142857146,
                "kept_percent_lambda": 57.857142857142854,
                "num_examples": 15,
                "num_explored_concrete": 1297,
                "num_explored_lambda": 867,
                "num_explored_none": 692,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 324,
                "num_values_explored": 2856,
                "num_values_kept": 560,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86217
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.45129339699633,
            "num_unique_values": 557,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.88082235785416,
                "explored_percent_lambda": 16.80051397365885,
                "explored_percent_none": 16.31866366848699,
                "kept_percent_concrete": 68.60254083484574,
                "kept_percent_lambda": 31.397459165154267,
                "num_examples": 15,
                "num_explored_concrete": 2082,
                "num_explored_lambda": 523,
                "num_explored_none": 508,
                "num_inputs": 1,
                "num_kept_concrete": 378,
                "num_kept_lambda": 173,
                "num_values_explored": 3113,
                "num_values_kept": 551,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96788
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2465188319911,
            "num_unique_values": 488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.90243902439025,
                "explored_percent_lambda": 17.43089430894309,
                "explored_percent_none": 22.666666666666668,
                "kept_percent_concrete": 64.10788381742739,
                "kept_percent_lambda": 35.892116182572614,
                "num_examples": 15,
                "num_explored_concrete": 1842,
                "num_explored_lambda": 536,
                "num_explored_none": 697,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 173,
                "num_values_explored": 3075,
                "num_values_kept": 482,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92847
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3525000330119,
            "num_unique_values": 452,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.14093959731544,
                "explored_percent_lambda": 19.899328859060404,
                "explored_percent_none": 23.959731543624162,
                "kept_percent_concrete": 54.48430493273543,
                "kept_percent_lambda": 45.51569506726457,
                "num_examples": 15,
                "num_explored_concrete": 1673,
                "num_explored_lambda": 593,
                "num_explored_none": 714,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 203,
                "num_values_explored": 2980,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90987
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1609041230113,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.08391608391609,
                "explored_percent_lambda": 18.111888111888113,
                "explored_percent_none": 20.804195804195803,
                "kept_percent_concrete": 66.38477801268499,
                "kept_percent_lambda": 33.61522198731501,
                "num_examples": 15,
                "num_explored_concrete": 1747,
                "num_explored_lambda": 518,
                "num_explored_none": 595,
                "num_inputs": 1,
                "num_kept_concrete": 314,
                "num_kept_lambda": 159,
                "num_values_explored": 2860,
                "num_values_kept": 473,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90339
            },
            "success": false,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3072428650048,
            "num_unique_values": 466,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.22184300341297,
                "explored_percent_lambda": 20.887372013651877,
                "explored_percent_none": 23.890784982935152,
                "kept_percent_concrete": 55.21739130434783,
                "kept_percent_lambda": 44.78260869565217,
                "num_examples": 15,
                "num_explored_concrete": 1618,
                "num_explored_lambda": 612,
                "num_explored_none": 700,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 206,
                "num_values_explored": 2930,
                "num_values_kept": 460,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91517
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.25215790601214,
            "num_unique_values": 490,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.60091593065096,
                "explored_percent_lambda": 20.215897939156037,
                "explored_percent_none": 20.183186130193,
                "kept_percent_concrete": 52.47933884297521,
                "kept_percent_lambda": 47.52066115702479,
                "num_examples": 15,
                "num_explored_concrete": 1822,
                "num_explored_lambda": 618,
                "num_explored_none": 617,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 230,
                "num_values_explored": 3057,
                "num_values_kept": 484,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92307
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.48574061199906,
            "num_unique_values": 634,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.277495769881554,
                "explored_percent_lambda": 21.455160744500844,
                "explored_percent_none": 22.267343485617598,
                "kept_percent_concrete": 60.6687898089172,
                "kept_percent_lambda": 39.3312101910828,
                "num_examples": 15,
                "num_explored_concrete": 1663,
                "num_explored_lambda": 634,
                "num_explored_none": 658,
                "num_inputs": 1,
                "num_kept_concrete": 381,
                "num_kept_lambda": 247,
                "num_values_explored": 2955,
                "num_values_kept": 628,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92002
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.5230969230179,
            "num_unique_values": 519,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.38923737206999,
                "explored_percent_lambda": 26.246285902938265,
                "explored_percent_none": 24.364476724991746,
                "kept_percent_concrete": 42.10526315789474,
                "kept_percent_lambda": 57.89473684210526,
                "num_examples": 15,
                "num_explored_concrete": 1496,
                "num_explored_lambda": 795,
                "num_explored_none": 738,
                "num_inputs": 1,
                "num_kept_concrete": 216,
                "num_kept_lambda": 297,
                "num_values_explored": 3029,
                "num_values_kept": 513,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91868
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.43268338701455,
            "num_unique_values": 549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.596543702226654,
                "explored_percent_lambda": 27.318045862412763,
                "explored_percent_none": 27.085410435360586,
                "kept_percent_concrete": 45.67219152854512,
                "kept_percent_lambda": 54.32780847145488,
                "num_examples": 15,
                "num_explored_concrete": 1372,
                "num_explored_lambda": 822,
                "num_explored_none": 815,
                "num_inputs": 1,
                "num_kept_concrete": 248,
                "num_kept_lambda": 295,
                "num_values_explored": 3009,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88104
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2899005250074,
            "num_unique_values": 509,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.01225061253063,
                "explored_percent_lambda": 29.6114805740287,
                "explored_percent_none": 25.37626881344067,
                "kept_percent_concrete": 42.34592445328032,
                "kept_percent_lambda": 57.65407554671968,
                "num_examples": 15,
                "num_explored_concrete": 1286,
                "num_explored_lambda": 846,
                "num_explored_none": 725,
                "num_inputs": 1,
                "num_kept_concrete": 213,
                "num_kept_lambda": 290,
                "num_values_explored": 2857,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88679
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.187489361997,
            "num_unique_values": 518,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.55746140651801,
                "explored_percent_lambda": 27.92452830188679,
                "explored_percent_none": 26.518010291595196,
                "kept_percent_concrete": 43.5546875,
                "kept_percent_lambda": 56.4453125,
                "num_examples": 15,
                "num_explored_concrete": 1328,
                "num_explored_lambda": 814,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 289,
                "num_values_explored": 2915,
                "num_values_kept": 512,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89202
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2225077179901,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.55497382198953,
                "explored_percent_lambda": 18.357329842931936,
                "explored_percent_none": 22.087696335078533,
                "kept_percent_concrete": 67.15867158671587,
                "kept_percent_lambda": 32.84132841328413,
                "num_examples": 15,
                "num_explored_concrete": 1820,
                "num_explored_lambda": 561,
                "num_explored_none": 675,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 178,
                "num_values_explored": 3056,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93385
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0983096869895,
            "num_unique_values": 520,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.061543692621555,
                "explored_percent_lambda": 18.021081264875892,
                "explored_percent_none": 22.91737504250255,
                "kept_percent_concrete": 64.98054474708171,
                "kept_percent_lambda": 35.01945525291829,
                "num_examples": 15,
                "num_explored_concrete": 1737,
                "num_explored_lambda": 530,
                "num_explored_none": 674,
                "num_inputs": 1,
                "num_kept_concrete": 334,
                "num_kept_lambda": 180,
                "num_values_explored": 2941,
                "num_values_kept": 514,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92123
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.09666268501314,
            "num_unique_values": 505,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.79054054054054,
                "explored_percent_lambda": 19.12162162162162,
                "explored_percent_none": 24.08783783783784,
                "kept_percent_concrete": 67.13426853707415,
                "kept_percent_lambda": 32.86573146292585,
                "num_examples": 15,
                "num_explored_concrete": 1681,
                "num_explored_lambda": 566,
                "num_explored_none": 713,
                "num_inputs": 1,
                "num_kept_concrete": 335,
                "num_kept_lambda": 164,
                "num_values_explored": 2960,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88237
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13065522600664,
            "num_unique_values": 535,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.994891443167305,
                "explored_percent_lambda": 16.44316730523627,
                "explored_percent_none": 20.561941251596423,
                "kept_percent_concrete": 64.27221172022685,
                "kept_percent_lambda": 35.72778827977316,
                "num_examples": 15,
                "num_explored_concrete": 1973,
                "num_explored_lambda": 515,
                "num_explored_none": 644,
                "num_inputs": 1,
                "num_kept_concrete": 340,
                "num_kept_lambda": 189,
                "num_values_explored": 3132,
                "num_values_kept": 529,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96850
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2265562939865,
            "num_unique_values": 517,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.70895770895771,
                "explored_percent_lambda": 17.649017649017647,
                "explored_percent_none": 24.64202464202464,
                "kept_percent_concrete": 63.992172211350294,
                "kept_percent_lambda": 36.007827788649706,
                "num_examples": 15,
                "num_explored_concrete": 1733,
                "num_explored_lambda": 530,
                "num_explored_none": 740,
                "num_inputs": 1,
                "num_kept_concrete": 327,
                "num_kept_lambda": 184,
                "num_values_explored": 3003,
                "num_values_kept": 511,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91322
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0678991280147,
            "num_unique_values": 578,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.910681955340976,
                "explored_percent_lambda": 16.053108026554014,
                "explored_percent_none": 20.03621001810501,
                "kept_percent_concrete": 68.88111888111888,
                "kept_percent_lambda": 31.11888111888112,
                "num_examples": 15,
                "num_explored_concrete": 2118,
                "num_explored_lambda": 532,
                "num_explored_none": 664,
                "num_inputs": 1,
                "num_kept_concrete": 394,
                "num_kept_lambda": 178,
                "num_values_explored": 3314,
                "num_values_kept": 572,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 100609
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1099464969884,
            "num_unique_values": 544,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.12143742255267,
                "explored_percent_lambda": 17.75092936802974,
                "explored_percent_none": 21.127633209417596,
                "kept_percent_concrete": 64.68401486988847,
                "kept_percent_lambda": 35.31598513011152,
                "num_examples": 15,
                "num_explored_concrete": 1973,
                "num_explored_lambda": 573,
                "num_explored_none": 682,
                "num_inputs": 1,
                "num_kept_concrete": 348,
                "num_kept_lambda": 190,
                "num_values_explored": 3228,
                "num_values_kept": 538,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96110
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.40487231800216,
            "num_unique_values": 584,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.45565006075334,
                "explored_percent_lambda": 25.48602673147023,
                "explored_percent_none": 24.05832320777643,
                "kept_percent_concrete": 50.865051903114185,
                "kept_percent_lambda": 49.134948096885815,
                "num_examples": 15,
                "num_explored_concrete": 1661,
                "num_explored_lambda": 839,
                "num_explored_none": 792,
                "num_inputs": 1,
                "num_kept_concrete": 294,
                "num_kept_lambda": 284,
                "num_values_explored": 3292,
                "num_values_kept": 578,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 100409
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10788364900508896,
            "num_unique_values": 63,
            "solution": "Cons(Multiply(Add(1, 1), Add(1, 1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 50.38167938931298,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 24.56140350877193,
                "kept_percent_lambda": 75.43859649122807,
                "num_examples": 15,
                "num_explored_concrete": 66,
                "num_explored_lambda": 50,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 43,
                "num_values_explored": 131,
                "num_values_kept": 57,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19648119999328628,
            "num_unique_values": 123,
            "solution": "Cons(Add(1, Multiply(Add(1, 1), Add(1, 1))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.12956810631229,
                "explored_percent_lambda": 26.245847176079735,
                "explored_percent_none": 12.624584717607974,
                "kept_percent_concrete": 54.7008547008547,
                "kept_percent_lambda": 45.2991452991453,
                "num_examples": 15,
                "num_explored_concrete": 184,
                "num_explored_lambda": 79,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 53,
                "num_values_explored": 301,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.70552580300136,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.18589743589744,
                "explored_percent_lambda": 28.044871794871796,
                "explored_percent_none": 25.76923076923077,
                "kept_percent_concrete": 32.69230769230769,
                "kept_percent_lambda": 67.3076923076923,
                "num_examples": 15,
                "num_explored_concrete": 1441,
                "num_explored_lambda": 875,
                "num_explored_none": 804,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 245,
                "num_values_explored": 3120,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93644
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3853360389766749,
            "num_unique_values": 187,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cdr(Cdr(Cdr(x1)))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.69767441860465,
                "explored_percent_lambda": 23.565891472868216,
                "explored_percent_none": 5.736434108527132,
                "kept_percent_concrete": 56.353591160220994,
                "kept_percent_lambda": 43.646408839779006,
                "num_examples": 15,
                "num_explored_concrete": 456,
                "num_explored_lambda": 152,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 79,
                "num_values_explored": 645,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 645
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1178862689994,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.31926121372032,
                "explored_percent_lambda": 22.65831134564644,
                "explored_percent_none": 26.022427440633244,
                "kept_percent_concrete": 54.702495201535505,
                "kept_percent_lambda": 45.297504798464495,
                "num_examples": 15,
                "num_explored_concrete": 1556,
                "num_explored_lambda": 687,
                "num_explored_none": 789,
                "num_inputs": 1,
                "num_kept_concrete": 285,
                "num_kept_lambda": 236,
                "num_values_explored": 3032,
                "num_values_kept": 521,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91078
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1767777109926,
            "num_unique_values": 618,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.89029825162839,
                "explored_percent_lambda": 19.643469317792253,
                "explored_percent_none": 20.466232430579364,
                "kept_percent_concrete": 60.62091503267974,
                "kept_percent_lambda": 39.37908496732026,
                "num_examples": 15,
                "num_explored_concrete": 1747,
                "num_explored_lambda": 573,
                "num_explored_none": 597,
                "num_inputs": 1,
                "num_kept_concrete": 371,
                "num_kept_lambda": 241,
                "num_values_explored": 2917,
                "num_values_kept": 612,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88715
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.181715099985,
            "num_unique_values": 550,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.6757457846952,
                "explored_percent_lambda": 27.82101167315175,
                "explored_percent_none": 22.50324254215305,
                "kept_percent_concrete": 43.1985294117647,
                "kept_percent_lambda": 56.8014705882353,
                "num_examples": 15,
                "num_explored_concrete": 1532,
                "num_explored_lambda": 858,
                "num_explored_none": 694,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 309,
                "num_values_explored": 3084,
                "num_values_kept": 544,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93579
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.16910700299195,
            "num_unique_values": 600,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.06871247498332,
                "explored_percent_lambda": 24.18278852568379,
                "explored_percent_none": 22.748498999332888,
                "kept_percent_concrete": 56.397306397306394,
                "kept_percent_lambda": 43.602693602693606,
                "num_examples": 15,
                "num_explored_concrete": 1591,
                "num_explored_lambda": 725,
                "num_explored_none": 682,
                "num_inputs": 1,
                "num_kept_concrete": 335,
                "num_kept_lambda": 259,
                "num_values_explored": 2998,
                "num_values_kept": 594,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93042
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.90967959701084,
            "num_unique_values": 440,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.24554183813443,
                "explored_percent_lambda": 27.743484224965705,
                "explored_percent_none": 23.010973936899862,
                "kept_percent_concrete": 47.235023041474655,
                "kept_percent_lambda": 52.764976958525345,
                "num_examples": 15,
                "num_explored_concrete": 1436,
                "num_explored_lambda": 809,
                "num_explored_none": 671,
                "num_inputs": 1,
                "num_kept_concrete": 205,
                "num_kept_lambda": 229,
                "num_values_explored": 2916,
                "num_values_kept": 434,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87302
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0724634140206,
            "num_unique_values": 485,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.823008849557525,
                "explored_percent_lambda": 32.95575221238938,
                "explored_percent_none": 31.221238938053098,
                "kept_percent_concrete": 36.95198329853862,
                "kept_percent_lambda": 63.04801670146138,
                "num_examples": 15,
                "num_explored_concrete": 1012,
                "num_explored_lambda": 931,
                "num_explored_none": 882,
                "num_inputs": 1,
                "num_kept_concrete": 177,
                "num_kept_lambda": 302,
                "num_values_explored": 2825,
                "num_values_kept": 479,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87283
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.09990769499564,
            "num_unique_values": 478,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.07954150746787,
                "explored_percent_lambda": 25.981243487321986,
                "explored_percent_none": 24.93921500521014,
                "kept_percent_concrete": 51.69491525423729,
                "kept_percent_lambda": 48.30508474576271,
                "num_examples": 15,
                "num_explored_concrete": 1413,
                "num_explored_lambda": 748,
                "num_explored_none": 718,
                "num_inputs": 1,
                "num_kept_concrete": 244,
                "num_kept_lambda": 228,
                "num_values_explored": 2879,
                "num_values_kept": 472,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89023
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.19032653199974,
            "num_unique_values": 505,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.83802816901409,
                "explored_percent_lambda": 32.46478873239437,
                "explored_percent_none": 28.697183098591548,
                "kept_percent_concrete": 36.87374749498998,
                "kept_percent_lambda": 63.12625250501002,
                "num_examples": 15,
                "num_explored_concrete": 1103,
                "num_explored_lambda": 922,
                "num_explored_none": 815,
                "num_inputs": 1,
                "num_kept_concrete": 184,
                "num_kept_lambda": 315,
                "num_values_explored": 2840,
                "num_values_kept": 499,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 84703
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3927446339803282,
            "num_unique_values": 172,
            "solution": "Map((lambda u1: Car(Cdr(Cdr(Cdr(Cdr(x1)))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 72.93233082706767,
                "explored_percent_lambda": 19.548872180451127,
                "explored_percent_none": 7.518796992481203,
                "kept_percent_concrete": 60.24096385542169,
                "kept_percent_lambda": 39.75903614457831,
                "num_examples": 15,
                "num_explored_concrete": 485,
                "num_explored_lambda": 130,
                "num_explored_none": 50,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 66,
                "num_values_explored": 665,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.04752098800964,
            "num_unique_values": 578,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.10180623973727,
                "explored_percent_lambda": 18.226600985221676,
                "explored_percent_none": 19.671592775041052,
                "kept_percent_concrete": 60.31468531468531,
                "kept_percent_lambda": 39.68531468531469,
                "num_examples": 15,
                "num_explored_concrete": 1891,
                "num_explored_lambda": 555,
                "num_explored_none": 599,
                "num_inputs": 1,
                "num_kept_concrete": 345,
                "num_kept_lambda": 227,
                "num_values_explored": 3045,
                "num_values_kept": 572,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92556
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.04301981802564,
            "num_unique_values": 571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.23956326268465,
                "explored_percent_lambda": 18.689788053949904,
                "explored_percent_none": 20.070648683365448,
                "kept_percent_concrete": 62.47787610619469,
                "kept_percent_lambda": 37.52212389380531,
                "num_examples": 15,
                "num_explored_concrete": 1907,
                "num_explored_lambda": 582,
                "num_explored_none": 625,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 212,
                "num_values_explored": 3114,
                "num_values_kept": 565,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93868
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13616768299835,
            "num_unique_values": 584,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.45867098865478,
                "explored_percent_lambda": 17.86061588330632,
                "explored_percent_none": 20.6807131280389,
                "kept_percent_concrete": 63.667820069204154,
                "kept_percent_lambda": 36.332179930795846,
                "num_examples": 15,
                "num_explored_concrete": 1896,
                "num_explored_lambda": 551,
                "num_explored_none": 638,
                "num_inputs": 1,
                "num_kept_concrete": 368,
                "num_kept_lambda": 210,
                "num_values_explored": 3085,
                "num_values_kept": 578,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94348
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.77997137000784,
            "num_unique_values": 832,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cons(Index(1, Cdr(x1)), [])))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 58.22523030644858,
                "explored_percent_lambda": 18.368114307200603,
                "explored_percent_none": 23.406655386350817,
                "kept_percent_concrete": 61.98547215496368,
                "kept_percent_lambda": 38.01452784503632,
                "num_examples": 15,
                "num_explored_concrete": 3097,
                "num_explored_lambda": 977,
                "num_explored_none": 1245,
                "num_inputs": 1,
                "num_kept_concrete": 512,
                "num_kept_lambda": 314,
                "num_values_explored": 5319,
                "num_values_kept": 826,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 26264
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.92747331698774,
            "num_unique_values": 525,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.82121006118287,
                "explored_percent_lambda": 24.88103331067301,
                "explored_percent_none": 22.29775662814412,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 15,
                "num_explored_concrete": 1554,
                "num_explored_lambda": 732,
                "num_explored_none": 656,
                "num_inputs": 1,
                "num_kept_concrete": 270,
                "num_kept_lambda": 249,
                "num_values_explored": 2942,
                "num_values_kept": 519,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93430
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2043805150024,
            "num_unique_values": 976,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.45513548596463,
                "explored_percent_lambda": 17.280545189031315,
                "explored_percent_none": 17.264319325004056,
                "kept_percent_concrete": 61.44329896907217,
                "kept_percent_lambda": 38.55670103092783,
                "num_examples": 15,
                "num_explored_concrete": 4034,
                "num_explored_lambda": 1065,
                "num_explored_none": 1064,
                "num_inputs": 1,
                "num_kept_concrete": 596,
                "num_kept_lambda": 374,
                "num_values_explored": 6163,
                "num_values_kept": 970,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 156635
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3250888490001671,
            "num_unique_values": 190,
            "solution": "Cons(Index(1, Cdr(x1)), Cons(Index(1, Cdr(Cdr(x1))), []))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.45482866043614,
                "explored_percent_lambda": 19.781931464174455,
                "explored_percent_none": 5.7632398753894085,
                "kept_percent_concrete": 65.21739130434783,
                "kept_percent_lambda": 34.78260869565217,
                "num_examples": 15,
                "num_explored_concrete": 478,
                "num_explored_lambda": 127,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 120,
                "num_kept_lambda": 64,
                "num_values_explored": 642,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.69760104600573,
            "num_unique_values": 739,
            "solution": "Cons(Index(1, Cdr(Cdr(x1))), Cons(Index(1, Cdr(Cdr(Cdr(x1)))), []))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 61.58922914466737,
                "explored_percent_lambda": 20.53854276663147,
                "explored_percent_none": 17.87222808870116,
                "kept_percent_concrete": 62.21009549795362,
                "kept_percent_lambda": 37.78990450204638,
                "num_examples": 15,
                "num_explored_concrete": 2333,
                "num_explored_lambda": 778,
                "num_explored_none": 677,
                "num_inputs": 1,
                "num_kept_concrete": 456,
                "num_kept_lambda": 277,
                "num_values_explored": 3788,
                "num_values_kept": 733,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4808
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.01853252001456,
            "num_unique_values": 606,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.55734829884251,
                "explored_percent_lambda": 19.46685373553139,
                "explored_percent_none": 18.975797965626096,
                "kept_percent_concrete": 60.333333333333336,
                "kept_percent_lambda": 39.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 1755,
                "num_explored_lambda": 555,
                "num_explored_none": 541,
                "num_inputs": 1,
                "num_kept_concrete": 362,
                "num_kept_lambda": 238,
                "num_values_explored": 2851,
                "num_values_kept": 600,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89205
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37022112001432106,
            "num_unique_values": 173,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), [])",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 70.7165109034268,
                "explored_percent_lambda": 22.118380062305295,
                "explored_percent_none": 7.165109034267913,
                "kept_percent_concrete": 60.47904191616767,
                "kept_percent_lambda": 39.52095808383233,
                "num_examples": 15,
                "num_explored_concrete": 454,
                "num_explored_lambda": 142,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 66,
                "num_values_explored": 642,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0964508089819,
            "num_unique_values": 602,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.172413793103445,
                "explored_percent_lambda": 23.310344827586206,
                "explored_percent_none": 19.517241379310345,
                "kept_percent_concrete": 56.375838926174495,
                "kept_percent_lambda": 43.624161073825505,
                "num_examples": 15,
                "num_explored_concrete": 1658,
                "num_explored_lambda": 676,
                "num_explored_none": 566,
                "num_inputs": 1,
                "num_kept_concrete": 336,
                "num_kept_lambda": 260,
                "num_values_explored": 2900,
                "num_values_kept": 596,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86967
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0853172780189,
            "num_unique_values": 602,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.75819672131148,
                "explored_percent_lambda": 20.32103825136612,
                "explored_percent_none": 18.920765027322403,
                "kept_percent_concrete": 59.22818791946309,
                "kept_percent_lambda": 40.77181208053691,
                "num_examples": 15,
                "num_explored_concrete": 1779,
                "num_explored_lambda": 595,
                "num_explored_none": 554,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 243,
                "num_values_explored": 2928,
                "num_values_kept": 596,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89255
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07708210501005,
            "num_unique_values": 449,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.68449197860963,
                "explored_percent_lambda": 18.88368983957219,
                "explored_percent_none": 24.431818181818183,
                "kept_percent_concrete": 63.88261851015801,
                "kept_percent_lambda": 36.11738148984199,
                "num_examples": 15,
                "num_explored_concrete": 1696,
                "num_explored_lambda": 565,
                "num_explored_none": 731,
                "num_inputs": 1,
                "num_kept_concrete": 283,
                "num_kept_lambda": 160,
                "num_values_explored": 2992,
                "num_values_kept": 443,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91530
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.94619916399824,
            "num_unique_values": 486,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.20470262793914,
                "explored_percent_lambda": 25.933609958506224,
                "explored_percent_none": 24.861687413554634,
                "kept_percent_concrete": 47.708333333333336,
                "kept_percent_lambda": 52.291666666666664,
                "num_examples": 15,
                "num_explored_concrete": 1423,
                "num_explored_lambda": 750,
                "num_explored_none": 719,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 251,
                "num_values_explored": 2892,
                "num_values_kept": 480,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87888
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0595483899815,
            "num_unique_values": 518,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.21358567083474,
                "explored_percent_lambda": 18.08043257857384,
                "explored_percent_none": 29.705981750591416,
                "kept_percent_concrete": 56.640625,
                "kept_percent_lambda": 43.359375,
                "num_examples": 15,
                "num_explored_concrete": 1545,
                "num_explored_lambda": 535,
                "num_explored_none": 879,
                "num_inputs": 1,
                "num_kept_concrete": 290,
                "num_kept_lambda": 222,
                "num_values_explored": 2959,
                "num_values_kept": 512,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89732
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3969.770231613016,
            "num_unique_values": 429,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.82781456953642,
                "explored_percent_lambda": 24.988962472406183,
                "explored_percent_none": 29.183222958057396,
                "kept_percent_concrete": 50.118203309692674,
                "kept_percent_lambda": 49.881796690307326,
                "num_examples": 15,
                "num_explored_concrete": 1038,
                "num_explored_lambda": 566,
                "num_explored_none": 661,
                "num_inputs": 1,
                "num_kept_concrete": 212,
                "num_kept_lambda": 211,
                "num_values_explored": 2265,
                "num_values_kept": 423,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 20622
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3933.543143991992,
            "num_unique_values": 446,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.883940620782724,
                "explored_percent_lambda": 24.786324786324787,
                "explored_percent_none": 29.32973459289249,
                "kept_percent_concrete": 49.54545454545455,
                "kept_percent_lambda": 50.45454545454545,
                "num_examples": 15,
                "num_explored_concrete": 1020,
                "num_explored_lambda": 551,
                "num_explored_none": 652,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 222,
                "num_values_explored": 2223,
                "num_values_kept": 440,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 15459
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.99998150600004,
            "num_unique_values": 552,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.225122349102776,
                "explored_percent_lambda": 18.890701468189235,
                "explored_percent_none": 26.884176182707993,
                "kept_percent_concrete": 60.989010989010985,
                "kept_percent_lambda": 39.010989010989015,
                "num_examples": 15,
                "num_explored_concrete": 1662,
                "num_explored_lambda": 579,
                "num_explored_none": 824,
                "num_inputs": 1,
                "num_kept_concrete": 333,
                "num_kept_lambda": 213,
                "num_values_explored": 3065,
                "num_values_kept": 546,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91511
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.13990055400063,
            "num_unique_values": 877,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.19762845849802,
                "explored_percent_lambda": 17.454545454545453,
                "explored_percent_none": 20.347826086956523,
                "kept_percent_concrete": 62.11251435132032,
                "kept_percent_lambda": 37.88748564867968,
                "num_examples": 15,
                "num_explored_concrete": 3934,
                "num_explored_lambda": 1104,
                "num_explored_none": 1287,
                "num_inputs": 1,
                "num_kept_concrete": 541,
                "num_kept_lambda": 330,
                "num_values_explored": 6325,
                "num_values_kept": 871,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 164248
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4064.449612186989,
            "num_unique_values": 447,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.93167701863354,
                "explored_percent_lambda": 21.691352126134735,
                "explored_percent_none": 27.376970855231725,
                "kept_percent_concrete": 51.70068027210884,
                "kept_percent_lambda": 48.29931972789116,
                "num_examples": 15,
                "num_explored_concrete": 1066,
                "num_explored_lambda": 454,
                "num_explored_none": 573,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 213,
                "num_values_explored": 2093,
                "num_values_kept": 441,
                "temperature": 1.0,
                "total_num_restarts": 19,
                "total_num_values_explored": 105918
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3842326780141,
            "num_unique_values": 1016,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.54372623574145,
                "explored_percent_lambda": 19.153992395437264,
                "explored_percent_none": 16.302281368821294,
                "kept_percent_concrete": 60.59405940594059,
                "kept_percent_lambda": 39.40594059405941,
                "num_examples": 15,
                "num_explored_concrete": 4074,
                "num_explored_lambda": 1209,
                "num_explored_none": 1029,
                "num_inputs": 1,
                "num_kept_concrete": 612,
                "num_kept_lambda": 398,
                "num_values_explored": 6312,
                "num_values_kept": 1010,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 189499
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2028921150195,
            "num_unique_values": 905,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.03066332916145,
                "explored_percent_lambda": 16.066958698372968,
                "explored_percent_none": 21.902377972465583,
                "kept_percent_concrete": 62.18020022246941,
                "kept_percent_lambda": 37.81979977753059,
                "num_examples": 15,
                "num_explored_concrete": 3965,
                "num_explored_lambda": 1027,
                "num_explored_none": 1400,
                "num_inputs": 1,
                "num_kept_concrete": 559,
                "num_kept_lambda": 340,
                "num_values_explored": 6392,
                "num_values_kept": 899,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 193520
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.34086683101486,
            "num_unique_values": 998,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.69937048978966,
                "explored_percent_lambda": 15.814524796560725,
                "explored_percent_none": 18.486104713649624,
                "kept_percent_concrete": 65.42338709677419,
                "kept_percent_lambda": 34.57661290322581,
                "num_examples": 15,
                "num_explored_concrete": 4279,
                "num_explored_lambda": 1030,
                "num_explored_none": 1204,
                "num_inputs": 1,
                "num_kept_concrete": 649,
                "num_kept_lambda": 343,
                "num_values_explored": 6513,
                "num_values_kept": 992,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 194224
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3605373429891,
            "num_unique_values": 962,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.347667879589814,
                "explored_percent_lambda": 19.070459808137613,
                "explored_percent_none": 17.581872312272576,
                "kept_percent_concrete": 56.90376569037657,
                "kept_percent_lambda": 43.09623430962343,
                "num_examples": 15,
                "num_explored_concrete": 3830,
                "num_explored_lambda": 1153,
                "num_explored_none": 1063,
                "num_inputs": 1,
                "num_kept_concrete": 544,
                "num_kept_lambda": 412,
                "num_values_explored": 6046,
                "num_values_kept": 956,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 180823
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.01109850400826,
            "num_unique_values": 858,
            "solution": "Map((lambda u1: ((lambda v1: Add(Add(1, 1), v1)))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.894353060878416,
                "explored_percent_lambda": 19.78972358826522,
                "explored_percent_none": 21.315923350856366,
                "kept_percent_concrete": 55.04694835680751,
                "kept_percent_lambda": 44.95305164319249,
                "num_examples": 15,
                "num_explored_concrete": 3473,
                "num_explored_lambda": 1167,
                "num_explored_none": 1257,
                "num_inputs": 1,
                "num_kept_concrete": 469,
                "num_kept_lambda": 383,
                "num_values_explored": 5897,
                "num_values_kept": 852,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 21393
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 151.93737921499996,
            "num_unique_values": 126,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 17.483660130718953,
                "explored_percent_lambda": 46.40522875816993,
                "explored_percent_none": 36.111111111111114,
                "kept_percent_concrete": 19.166666666666668,
                "kept_percent_lambda": 80.83333333333333,
                "num_examples": 15,
                "num_explored_concrete": 107,
                "num_explored_lambda": 284,
                "num_explored_none": 221,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 97,
                "num_values_explored": 612,
                "num_values_kept": 120,
                "temperature": 1.0,
                "total_num_restarts": 17,
                "total_num_values_explored": 96720
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.19216372299707,
            "num_unique_values": 909,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.22222222222222,
                "explored_percent_lambda": 20.96825396825397,
                "explored_percent_none": 18.80952380952381,
                "kept_percent_concrete": 57.25359911406423,
                "kept_percent_lambda": 42.74640088593577,
                "num_examples": 15,
                "num_explored_concrete": 3794,
                "num_explored_lambda": 1321,
                "num_explored_none": 1185,
                "num_inputs": 1,
                "num_kept_concrete": 517,
                "num_kept_lambda": 386,
                "num_values_explored": 6300,
                "num_values_kept": 903,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 193651
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11956687999190763,
            "num_unique_values": 74,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 45.22292993630573,
                "explored_percent_lambda": 38.853503184713375,
                "explored_percent_none": 15.92356687898089,
                "kept_percent_concrete": 29.41176470588235,
                "kept_percent_lambda": 70.58823529411765,
                "num_examples": 15,
                "num_explored_concrete": 71,
                "num_explored_lambda": 61,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 48,
                "num_values_explored": 157,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 157
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 141.93136555701494,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsPrime(v1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 19.81566820276498,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 37.327188940092164,
                "kept_percent_concrete": 23.80952380952381,
                "kept_percent_lambda": 76.19047619047619,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 279,
                "num_explored_none": 243,
                "num_inputs": 1,
                "num_kept_concrete": 30,
                "num_kept_lambda": 96,
                "num_values_explored": 651,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 16,
                "total_num_values_explored": 92502
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5689253360033035,
            "num_unique_values": 131,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 17.391304347826086,
                "explored_percent_lambda": 45.571658615136876,
                "explored_percent_none": 37.03703703703704,
                "kept_percent_concrete": 20.8,
                "kept_percent_lambda": 79.2,
                "num_examples": 15,
                "num_explored_concrete": 108,
                "num_explored_lambda": 283,
                "num_explored_none": 230,
                "num_inputs": 1,
                "num_kept_concrete": 26,
                "num_kept_lambda": 99,
                "num_values_explored": 621,
                "num_values_kept": 125,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 1981
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09575487702386454,
            "num_unique_values": 77,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.875,
                "explored_percent_lambda": 44.375,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.760563380281692,
                "kept_percent_lambda": 73.2394366197183,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 71,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 52,
                "num_values_explored": 160,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 160
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.17958241997985,
            "num_unique_values": 897,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.12051743900442,
                "explored_percent_lambda": 27.918781725888326,
                "explored_percent_none": 19.960700835107254,
                "kept_percent_concrete": 46.01571268237935,
                "kept_percent_lambda": 53.98428731762065,
                "num_examples": 15,
                "num_explored_concrete": 3183,
                "num_explored_lambda": 1705,
                "num_explored_none": 1219,
                "num_inputs": 1,
                "num_kept_concrete": 410,
                "num_kept_lambda": 481,
                "num_values_explored": 6107,
                "num_values_kept": 891,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 185140
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.8154349259857554,
            "num_unique_values": 281,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Equal(1, v1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 28.272656855151045,
                "explored_percent_lambda": 38.96204492641363,
                "explored_percent_none": 32.76529821843532,
                "kept_percent_concrete": 29.09090909090909,
                "kept_percent_lambda": 70.9090909090909,
                "num_examples": 15,
                "num_explored_concrete": 365,
                "num_explored_lambda": 503,
                "num_explored_none": 423,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 195,
                "num_values_explored": 1291,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2651
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08356089700828306,
            "num_unique_values": 67,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 32.35294117647059,
                "explored_percent_lambda": 56.86274509803921,
                "explored_percent_none": 10.784313725490197,
                "kept_percent_concrete": 11.475409836065573,
                "kept_percent_lambda": 88.52459016393442,
                "num_examples": 15,
                "num_explored_concrete": 33,
                "num_explored_lambda": 58,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 54,
                "num_values_explored": 102,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 102
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15647965398966335,
            "num_unique_values": 130,
            "solution": "Cdr(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.98529411764706,
                "explored_percent_lambda": 32.720588235294116,
                "explored_percent_none": 10.294117647058824,
                "kept_percent_concrete": 47.58064516129032,
                "kept_percent_lambda": 52.41935483870968,
                "num_examples": 15,
                "num_explored_concrete": 155,
                "num_explored_lambda": 89,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 65,
                "num_values_explored": 272,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28042199500487186,
            "num_unique_values": 186,
            "solution": "Cdr(Cdr(Cdr(Cdr(x1))))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.6078431372549,
                "explored_percent_lambda": 24.18300653594771,
                "explored_percent_none": 6.209150326797386,
                "kept_percent_concrete": 58.888888888888886,
                "kept_percent_lambda": 41.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 426,
                "num_explored_lambda": 148,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 74,
                "num_values_explored": 612,
                "num_values_kept": 180,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 612
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0897152149991598,
            "num_unique_values": 77,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 42.65734265734266,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 11.888111888111888,
                "kept_percent_concrete": 21.12676056338028,
                "kept_percent_lambda": 78.87323943661971,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 65,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 56,
                "num_values_explored": 143,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 143
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07133584201801568,
            "num_unique_values": 61,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.93103448275862,
                "explored_percent_lambda": 48.275862068965516,
                "explored_percent_none": 13.793103448275861,
                "kept_percent_concrete": 14.545454545454545,
                "kept_percent_lambda": 85.45454545454545,
                "num_examples": 15,
                "num_explored_concrete": 44,
                "num_explored_lambda": 56,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 8,
                "num_kept_lambda": 47,
                "num_values_explored": 116,
                "num_values_kept": 55,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 116
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15516804001526907,
            "num_unique_values": 139,
            "solution": "Index(1, Cdr(Cdr(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.74358974358974,
                "explored_percent_lambda": 25.32051282051282,
                "explored_percent_none": 9.935897435897436,
                "kept_percent_concrete": 57.89473684210526,
                "kept_percent_lambda": 42.10526315789474,
                "num_examples": 15,
                "num_explored_concrete": 202,
                "num_explored_lambda": 79,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 56,
                "num_values_explored": 312,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0973310369882,
            "num_unique_values": 916,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.34848484848484,
                "explored_percent_lambda": 11.60213243546577,
                "explored_percent_none": 16.049382716049383,
                "kept_percent_concrete": 69.12087912087912,
                "kept_percent_lambda": 30.87912087912088,
                "num_examples": 15,
                "num_explored_concrete": 5157,
                "num_explored_lambda": 827,
                "num_explored_none": 1144,
                "num_inputs": 1,
                "num_kept_concrete": 629,
                "num_kept_lambda": 281,
                "num_values_explored": 7128,
                "num_values_kept": 910,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 215675
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14557754300767556,
            "num_unique_values": 106,
            "solution": "Mod(Car(x1), Add(1, 1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.84905660377358,
                "explored_percent_lambda": 28.77358490566038,
                "explored_percent_none": 10.377358490566039,
                "kept_percent_concrete": 43.0,
                "kept_percent_lambda": 57.0,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 61,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 57,
                "num_values_explored": 212,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 212
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2007347129984,
            "num_unique_values": 709,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.295801526717554,
                "explored_percent_lambda": 22.041984732824428,
                "explored_percent_none": 22.662213740458014,
                "kept_percent_concrete": 39.5448079658606,
                "kept_percent_lambda": 60.4551920341394,
                "num_examples": 15,
                "num_explored_concrete": 3477,
                "num_explored_lambda": 1386,
                "num_explored_none": 1425,
                "num_inputs": 1,
                "num_kept_concrete": 278,
                "num_kept_lambda": 425,
                "num_values_explored": 6288,
                "num_values_kept": 703,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 190207
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19946494599571452,
            "num_unique_values": 141,
            "solution": "Cons(Index(1, Cdr(x1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.800664451827245,
                "explored_percent_lambda": 31.229235880398672,
                "explored_percent_none": 8.970099667774086,
                "kept_percent_concrete": 53.333333333333336,
                "kept_percent_lambda": 46.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 180,
                "num_explored_lambda": 94,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 63,
                "num_values_explored": 301,
                "num_values_kept": 135,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.270774328004336,
            "num_unique_values": 160,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 76.28705148205928,
                "explored_percent_lambda": 17.784711388455538,
                "explored_percent_none": 5.928237129485179,
                "kept_percent_concrete": 59.74025974025974,
                "kept_percent_lambda": 40.25974025974026,
                "num_examples": 15,
                "num_explored_concrete": 489,
                "num_explored_lambda": 114,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 62,
                "num_values_explored": 641,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 641
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08061665899003856,
            "num_unique_values": 62,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 48.85496183206107,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 12.977099236641221,
                "kept_percent_concrete": 21.428571428571427,
                "kept_percent_lambda": 78.57142857142857,
                "num_examples": 15,
                "num_explored_concrete": 64,
                "num_explored_lambda": 50,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 56,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07972840598085895,
            "num_unique_values": 66,
            "solution": "Cons(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.038167938931295,
                "explored_percent_lambda": 40.458015267175576,
                "explored_percent_none": 14.50381679389313,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 53,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16350714399595745,
            "num_unique_values": 122,
            "solution": "Cons(Add(1, Add(1, 1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.475083056478404,
                "explored_percent_lambda": 29.235880398671096,
                "explored_percent_none": 13.289036544850498,
                "kept_percent_concrete": 48.275862068965516,
                "kept_percent_lambda": 51.724137931034484,
                "num_examples": 15,
                "num_explored_concrete": 173,
                "num_explored_lambda": 88,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 60,
                "num_values_explored": 301,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07567894499516115,
            "num_unique_values": 65,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 35.23809523809524,
                "explored_percent_lambda": 51.42857142857143,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 11.864406779661017,
                "kept_percent_lambda": 88.13559322033899,
                "num_examples": 15,
                "num_explored_concrete": 37,
                "num_explored_lambda": 54,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 52,
                "num_values_explored": 105,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 105
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09000392598682083,
            "num_unique_values": 67,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 50.64935064935065,
                "explored_percent_lambda": 36.36363636363637,
                "explored_percent_none": 12.987012987012987,
                "kept_percent_concrete": 24.59016393442623,
                "kept_percent_lambda": 75.40983606557377,
                "num_examples": 15,
                "num_explored_concrete": 78,
                "num_explored_lambda": 56,
                "num_explored_none": 20,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 46,
                "num_values_explored": 154,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09379842600901611,
            "num_unique_values": 72,
            "solution": "Map((lambda u1: Index(1, Cdr(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.830065359477125,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 24.242424242424242,
                "kept_percent_lambda": 75.75757575757575,
                "num_examples": 15,
                "num_explored_concrete": 72,
                "num_explored_lambda": 64,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 50,
                "num_values_explored": 153,
                "num_values_kept": 66,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16759483600617386,
            "num_unique_values": 135,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), []))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.47176079734219,
                "explored_percent_lambda": 30.564784053156146,
                "explored_percent_none": 10.96345514950166,
                "kept_percent_concrete": 54.263565891472865,
                "kept_percent_lambda": 45.736434108527135,
                "num_examples": 15,
                "num_explored_concrete": 176,
                "num_explored_lambda": 92,
                "num_explored_none": 33,
                "num_inputs": 1,
                "num_kept_concrete": 70,
                "num_kept_lambda": 59,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08521574200130999,
            "num_unique_values": 66,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.45454545454545,
                "explored_percent_lambda": 43.18181818181818,
                "explored_percent_none": 11.363636363636363,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 15,
                "num_explored_concrete": 60,
                "num_explored_lambda": 57,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 48,
                "num_values_explored": 132,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 132
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1654620190092828,
            "num_unique_values": 135,
            "solution": "Cons(Index(1, Cdr(x1)), [])",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 63.12292358803987,
                "explored_percent_lambda": 27.242524916943523,
                "explored_percent_none": 9.634551495016611,
                "kept_percent_concrete": 58.13953488372093,
                "kept_percent_lambda": 41.86046511627907,
                "num_examples": 15,
                "num_explored_concrete": 190,
                "num_explored_lambda": 82,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 54,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.3173076923076923
}