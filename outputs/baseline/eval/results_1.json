{
    "num_tasks": 104,
    "num_tasks_solved": 32,
    "results": [
        {
            "elapsed_time": 301.3902914479986,
            "num_unique_values": 499,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.43487041400202,
                "explored_percent_lambda": 23.964994951194885,
                "explored_percent_none": 27.600134634803098,
                "kept_percent_concrete": 54.563894523326574,
                "kept_percent_lambda": 45.436105476673426,
                "num_examples": 15,
                "num_explored_concrete": 1439,
                "num_explored_lambda": 712,
                "num_explored_none": 820,
                "num_inputs": 1,
                "num_kept_concrete": 269,
                "num_kept_lambda": 224,
                "num_values_explored": 2971,
                "num_values_kept": 493,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 108337
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.15953808798804,
            "num_unique_values": 533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.96618985695709,
                "explored_percent_lambda": 24.7074122236671,
                "explored_percent_none": 21.32639791937581,
                "kept_percent_concrete": 56.54648956356736,
                "kept_percent_lambda": 43.45351043643264,
                "num_examples": 15,
                "num_explored_concrete": 1660,
                "num_explored_lambda": 760,
                "num_explored_none": 656,
                "num_inputs": 1,
                "num_kept_concrete": 298,
                "num_kept_lambda": 229,
                "num_values_explored": 3076,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90608
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2649137980043,
            "num_unique_values": 544,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.282901214309156,
                "explored_percent_lambda": 21.726288152280933,
                "explored_percent_none": 23.99081063340991,
                "kept_percent_concrete": 58.36431226765799,
                "kept_percent_lambda": 41.63568773234201,
                "num_examples": 15,
                "num_explored_concrete": 1654,
                "num_explored_lambda": 662,
                "num_explored_none": 731,
                "num_inputs": 1,
                "num_kept_concrete": 314,
                "num_kept_lambda": 224,
                "num_values_explored": 3047,
                "num_values_kept": 538,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93516
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=5',\n    inputs_dict={'x1': [[11, 9, 15, 7, 2, 3, 11, 7, 1, 2], [11, 9, 16, 5, 5, 16, 11, 9], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2], [4, 6, 1, 7, 1, 13], [8, 16, 5, 13, 14, 12, 6, 0], [9, 11, 8, 0, 7, 8], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4], [0, 12, 0, 0, 15, 9, 9, 9, 2], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10], [13, 0, 16, 8, 9, 10, 16, 7], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8], [7, 7, 5, 15, 2], [13, 2, 13, 16, 1, 3], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4]]},\n    outputs=[[11, 9, 15, 7, 2, 3, 11, 7, 1, 2, 2], [11, 9, 16, 5, 5, 16, 11, 9, 5], [12, 12, 3, 2, 14, 15, 10, 11, 4, 11, 15, 2, 14], [4, 6, 1, 7, 1, 13, 1], [8, 16, 5, 13, 14, 12, 6, 0, 14], [9, 11, 8, 0, 7, 8, 7], [12, 4, 7, 10, 13, 3, 14, 4, 12, 4, 13], [0, 12, 0, 0, 15, 9, 9, 9, 2, 15], [12, 5, 6, 5, 15, 2, 10, 7, 7, 2, 13, 10, 15], [13, 0, 16, 8, 9, 10, 16, 7, 9], [16, 15, 7, 8, 2, 5, 14, 15, 8, 8, 2], [7, 7, 5, 15, 2, 2], [13, 2, 13, 16, 1, 3, 1], [6, 4, 15, 14, 7, 12, 3, 0, 4, 16, 7], [15, 15, 9, 4, 2, 2, 14, 13, 5, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1700552939874,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.219160926737636,
                "explored_percent_lambda": 26.299311208515967,
                "explored_percent_none": 23.4815278647464,
                "kept_percent_concrete": 50.285714285714285,
                "kept_percent_lambda": 49.714285714285715,
                "num_examples": 15,
                "num_explored_concrete": 1604,
                "num_explored_lambda": 840,
                "num_explored_none": 750,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 261,
                "num_values_explored": 3194,
                "num_values_kept": 525,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 98173
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=1',\n    inputs_dict={'x1': [[0, 12, 5, 16, 2, 5, 12], [], [8], [0, 16], [16, 13, 14, 9, 10, 15], [9], [5, 11, 5, 15, 11, 1, 3], [4, 0, 6, 13, 5, 15, 6], [7], [8, 14, 16, 4, 12], [4, 6], [13, 11, 5, 1], [], [5, 0, 1, 16, 14, 12], [15, 5, 12, 2, 8]]},\n    outputs=[[0, 12, 5, 16, 2, 5, 12, 1], [1], [8, 1], [0, 16, 1], [16, 13, 14, 9, 10, 15, 1], [9, 1], [5, 11, 5, 15, 11, 1, 3, 1], [4, 0, 6, 13, 5, 15, 6, 1], [7, 1], [8, 14, 16, 4, 12, 1], [4, 6, 1], [13, 11, 5, 1, 1], [1], [5, 0, 1, 16, 14, 12, 1], [15, 5, 12, 2, 8, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2109975130006,
            "num_unique_values": 555,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.31283007145076,
                "explored_percent_lambda": 27.834731283007144,
                "explored_percent_none": 24.852438645542094,
                "kept_percent_concrete": 42.622950819672134,
                "kept_percent_lambda": 57.377049180327866,
                "num_examples": 15,
                "num_explored_concrete": 1523,
                "num_explored_lambda": 896,
                "num_explored_none": 800,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 315,
                "num_values_explored": 3219,
                "num_values_kept": 549,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 97124
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=2',\n    inputs_dict={'x1': [[], [], [4, 13, 1, 7, 8], [1, 5, 15], [12, 7, 12], [8, 13, 11], [4, 5, 15, 0], [14, 12, 13, 12, 1], [5], [], [7, 1, 3, 1, 4, 15], [4, 11, 8, 4, 10], [4, 2, 12, 14, 9], [0], [12, 12, 9, 6, 8, 2]]},\n    outputs=[[2], [2], [4, 13, 1, 7, 8, 2], [1, 5, 15, 2], [12, 7, 12, 2], [8, 13, 11, 2], [4, 5, 15, 0, 2], [14, 12, 13, 12, 1, 2], [5, 2], [2], [7, 1, 3, 1, 4, 15, 2], [4, 11, 8, 4, 10, 2], [4, 2, 12, 14, 9, 2], [0, 2], [12, 12, 9, 6, 8, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4372901760071,
            "num_unique_values": 543,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.97255027130546,
                "explored_percent_lambda": 32.588573252473665,
                "explored_percent_none": 25.438876476220873,
                "kept_percent_concrete": 41.154562383612664,
                "kept_percent_lambda": 58.845437616387336,
                "num_examples": 15,
                "num_explored_concrete": 1315,
                "num_explored_lambda": 1021,
                "num_explored_none": 797,
                "num_inputs": 1,
                "num_kept_concrete": 221,
                "num_kept_lambda": 316,
                "num_values_explored": 3133,
                "num_values_kept": 537,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92500
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=5',\n    inputs_dict={'x1': [[12, 10], [15, 7, 10, 3, 8], [8, 6, 12, 16, 3, 6, 16], [12, 10, 6, 6, 12], [2, 13], [], [], [13], [2, 15, 10, 15, 0], [3, 3, 12], [4, 8, 10, 0, 15, 8, 4], [2, 0, 6, 1, 11, 0, 12], [2, 5, 4, 2, 12, 2], [7, 10], [1, 1, 7, 1]]},\n    outputs=[[1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1], [1, 1, 1, 1, 1], [0, 1], [], [], [1], [0, 1, 1, 1, 0], [0, 0, 1], [0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0], [1, 1], [0, 0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.29507893300615,
            "num_unique_values": 544,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.78712390812035,
                "explored_percent_lambda": 35.74894856033646,
                "explored_percent_none": 26.46392753154319,
                "kept_percent_concrete": 32.52788104089219,
                "kept_percent_lambda": 67.4721189591078,
                "num_examples": 15,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 1105,
                "num_explored_none": 818,
                "num_inputs": 1,
                "num_kept_concrete": 175,
                "num_kept_lambda": 363,
                "num_values_explored": 3091,
                "num_values_kept": 538,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89878
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=2',\n    inputs_dict={'x1': [[2, 8, 0, 14, 3, 10], [2, 2, 2, 4], [5, 16, 12], [2, 2, 2, 4, 16], [2, 0, 7], [9, 2, 2, 8], [2, 2, 2], [2, 9, 11, 15], [4, 16, 10], [13, 2, 0, 1, 2], [2, 6], [8, 15, 16, 15], [], [0, 13, 2], [12]]},\n    outputs=[[1, 1, 1, 1, 0, 1], [1, 1, 1, 1], [0, 1, 1], [1, 1, 1, 1, 1], [1, 1, 0], [0, 1, 1, 1], [1, 1, 1], [1, 0, 0, 0], [1, 1, 1], [0, 1, 1, 0, 1], [1, 1], [1, 0, 1, 0], [], [1, 0, 1], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.48821877299633,
            "num_unique_values": 533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.07445008460237,
                "explored_percent_lambda": 36.54822335025381,
                "explored_percent_none": 27.377326565143825,
                "kept_percent_concrete": 34.53510436432637,
                "kept_percent_lambda": 65.46489563567363,
                "num_examples": 15,
                "num_explored_concrete": 1066,
                "num_explored_lambda": 1080,
                "num_explored_none": 809,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 345,
                "num_values_explored": 2955,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91300
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=5',\n    inputs_dict={'x1': [[8, 7, 5, 10], [13, 5, 5, 8], [5, 5, 5], [2, 9, 3, 5, 16, 5], [10], [5], [11, 10, 12, 13, 2], [5, 6, 2, 8, 9, 0, 2], [5], [15, 0, 1, 3, 16, 9], [9, 14, 5], [], [5], [0, 7, 3, 15, 11, 1], [2, 12, 11, 14, 15, 9, 8]]},\n    outputs=[[0, 0, 1, 1], [0, 1, 1, 0], [1, 1, 1], [0, 0, 0, 1, 0, 1], [1], [1], [0, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0], [1], [1, 1, 0, 0, 0, 0], [0, 0, 1], [], [1], [1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2609542880091,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.41287878787879,
                "explored_percent_lambda": 28.724747474747474,
                "explored_percent_none": 26.862373737373737,
                "kept_percent_concrete": 44.91362763915547,
                "kept_percent_lambda": 55.08637236084453,
                "num_examples": 15,
                "num_explored_concrete": 1407,
                "num_explored_lambda": 910,
                "num_explored_none": 851,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 287,
                "num_values_explored": 3168,
                "num_values_kept": 521,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96128
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[[1], [0, 0], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0], [], [0, 0], [0, 0, 0, 0, 1, 1], [0], [0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1], [0, 0, 0], [0], [1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3245290710038,
            "num_unique_values": 615,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.27176781002638,
                "explored_percent_lambda": 31.00263852242744,
                "explored_percent_none": 25.725593667546175,
                "kept_percent_concrete": 45.97701149425287,
                "kept_percent_lambda": 54.02298850574713,
                "num_examples": 15,
                "num_explored_concrete": 1312,
                "num_explored_lambda": 940,
                "num_explored_none": 780,
                "num_inputs": 1,
                "num_kept_concrete": 280,
                "num_kept_lambda": 329,
                "num_values_explored": 3032,
                "num_values_kept": 609,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92608
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [1], [3, 0, 3], [2, 3, 2, 0, 2], [3, 3, 1, 2, 3, 2, 2], [3, 2, 3], [1, 3, 2, 3], [], [2, 0, 1], [3, 0, 2], [1, 0, 0], [3, 1, 3, 2, 0, 3], [], [2, 3], [1, 2, 2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.35296235900023,
            "num_unique_values": 604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.92600067272116,
                "explored_percent_lambda": 35.92330978809284,
                "explored_percent_none": 24.150689539186008,
                "kept_percent_concrete": 43.812709030100336,
                "kept_percent_lambda": 56.187290969899664,
                "num_examples": 15,
                "num_explored_concrete": 1187,
                "num_explored_lambda": 1068,
                "num_explored_none": 718,
                "num_inputs": 1,
                "num_kept_concrete": 262,
                "num_kept_lambda": 336,
                "num_values_explored": 2973,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91784
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.38240215499536,
            "num_unique_values": 580,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.44340878828229,
                "explored_percent_lambda": 30.9254327563249,
                "explored_percent_none": 26.63115845539281,
                "kept_percent_concrete": 43.728222996515676,
                "kept_percent_lambda": 56.271777003484324,
                "num_examples": 15,
                "num_explored_concrete": 1275,
                "num_explored_lambda": 929,
                "num_explored_none": 800,
                "num_inputs": 1,
                "num_kept_concrete": 251,
                "num_kept_lambda": 323,
                "num_values_explored": 3004,
                "num_values_kept": 574,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91023
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=4',\n    inputs_dict={'x1': [[], [0], [2, 3, 2], [1, 2, 1, 3, 1], [2, 2, 0, 1, 2, 1, 1], [2, 1, 2], [0, 2, 1, 2], [], [1, 3, 0], [2, 3, 1], [0, 3, 3], [2, 0, 2, 1, 3, 2], [], [1, 2], [0, 1, 1, 2, 3]]},\n    outputs=[[], [2], [0, 1, 0], [3, 0, 3, 1, 3], [0, 0, 2, 3, 0, 3, 3], [0, 3, 0], [2, 0, 3, 0], [], [3, 1, 2], [0, 1, 3], [2, 1, 1], [0, 2, 0, 3, 1, 0], [], [3, 0], [2, 3, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.50974359500105,
            "num_unique_values": 594,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.0780046869769,
                "explored_percent_lambda": 31.570137261466353,
                "explored_percent_none": 27.351858051556746,
                "kept_percent_concrete": 42.51700680272109,
                "kept_percent_lambda": 57.48299319727891,
                "num_examples": 15,
                "num_explored_concrete": 1227,
                "num_explored_lambda": 943,
                "num_explored_none": 817,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 338,
                "num_values_explored": 2987,
                "num_values_kept": 588,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90457
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[1, 0, 4, 0, 0, 3], [3, 2, 4, 4, 4, 2, 4], [3], [4, 3, 4, 1], [1, 0, 4, 1, 4], [1, 4, 4], [], [2, 2, 4, 1, 2, 3, 2], [4, 0, 0], [], [0, 0, 2, 4, 3, 2], [2], [4, 4], [3, 4, 1, 3, 2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.48113666201243,
            "num_unique_values": 592,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.3314358001265,
                "explored_percent_lambda": 30.70841239721695,
                "explored_percent_none": 22.960151802656547,
                "kept_percent_concrete": 44.539249146757676,
                "kept_percent_lambda": 55.460750853242324,
                "num_examples": 15,
                "num_explored_concrete": 1465,
                "num_explored_lambda": 971,
                "num_explored_none": 726,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 325,
                "num_values_explored": 3162,
                "num_values_kept": 586,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94648
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.60845487899496,
            "num_unique_values": 604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.35726099900761,
                "explored_percent_lambda": 32.58352629837909,
                "explored_percent_none": 27.059212702613298,
                "kept_percent_concrete": 41.63879598662207,
                "kept_percent_lambda": 58.36120401337793,
                "num_examples": 15,
                "num_explored_concrete": 1220,
                "num_explored_lambda": 985,
                "num_explored_none": 818,
                "num_inputs": 1,
                "num_kept_concrete": 249,
                "num_kept_lambda": 349,
                "num_values_explored": 3023,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91548
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[3, 2, 1, 2, 2, 0], [0, 4, 1, 1, 1, 4, 1], [0], [1, 0, 1, 3], [3, 2, 1, 3, 1], [3, 1, 1], [], [4, 4, 1, 3, 4, 0, 4], [1, 2, 2], [], [2, 2, 4, 1, 0, 4], [4], [1, 1], [0, 1, 3, 0, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.27192267100327,
            "num_unique_values": 561,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.37245696400626,
                "explored_percent_lambda": 18.46635367762128,
                "explored_percent_none": 23.161189358372457,
                "kept_percent_concrete": 60.72072072072072,
                "kept_percent_lambda": 39.27927927927928,
                "num_examples": 15,
                "num_explored_concrete": 1865,
                "num_explored_lambda": 590,
                "num_explored_none": 740,
                "num_inputs": 1,
                "num_kept_concrete": 337,
                "num_kept_lambda": 218,
                "num_values_explored": 3195,
                "num_values_kept": 555,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96681
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[1, 0, 0, 4, 0, 1, 1, 2, 0, 5, 3, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.22926046699286,
            "num_unique_values": 509,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.59581881533101,
                "explored_percent_lambda": 18.501742160278745,
                "explored_percent_none": 23.902439024390244,
                "kept_percent_concrete": 59.24453280318092,
                "kept_percent_lambda": 40.75546719681908,
                "num_examples": 15,
                "num_explored_concrete": 1653,
                "num_explored_lambda": 531,
                "num_explored_none": 686,
                "num_inputs": 1,
                "num_kept_concrete": 298,
                "num_kept_lambda": 205,
                "num_values_explored": 2870,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89312
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[1, 7, 1, 1, 2, 2, 0, 7, 1, 0, 2, 5, 0, 0, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2609819690115,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.69240628003845,
                "explored_percent_lambda": 19.480935597564883,
                "explored_percent_none": 20.82665812239667,
                "kept_percent_concrete": 57.005758157389636,
                "kept_percent_lambda": 42.994241842610364,
                "num_examples": 15,
                "num_explored_concrete": 1863,
                "num_explored_lambda": 608,
                "num_explored_none": 650,
                "num_inputs": 1,
                "num_kept_concrete": 297,
                "num_kept_lambda": 224,
                "num_values_explored": 3121,
                "num_values_kept": 521,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96317
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[3, 2, 0, 3, 4, 1, 2, 1, 1, 6, 0, 0, 0, 5, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.51734545701765,
            "num_unique_values": 570,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.45152354570637,
                "explored_percent_lambda": 30.332409972299168,
                "explored_percent_none": 27.21606648199446,
                "kept_percent_concrete": 41.666666666666664,
                "kept_percent_lambda": 58.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 1226,
                "num_explored_lambda": 876,
                "num_explored_none": 786,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 329,
                "num_values_explored": 2888,
                "num_values_kept": 564,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88590
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4673138379876,
            "num_unique_values": 590,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.49952992792228,
                "explored_percent_lambda": 16.515198997179567,
                "explored_percent_none": 16.98527107489815,
                "kept_percent_concrete": 69.34931506849315,
                "kept_percent_lambda": 30.65068493150685,
                "num_examples": 15,
                "num_explored_concrete": 2122,
                "num_explored_lambda": 527,
                "num_explored_none": 542,
                "num_inputs": 1,
                "num_kept_concrete": 405,
                "num_kept_lambda": 179,
                "num_values_explored": 3191,
                "num_values_kept": 584,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 97386
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=1',\n    inputs_dict={'x1': [[6, 0, 3, 16], [0, 0, 5, 3], [16], [14, 8, 1, 1, 1, 1], [6, 14, 4], [11, 1, 7, 8, 4, 5, 6], [1, 1, 1, 7], [1, 1, 1], [1, 1, 1], [2, 4, 6, 9], [16, 10, 7, 12, 13, 3], [8, 8, 7, 1, 1, 2, 3], [1], [15, 7, 6, 15, 7], [1, 1, 1, 1]]},\n    outputs=[0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.22534467699006,
            "num_unique_values": 486,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.91234526597524,
                "explored_percent_lambda": 19.237203077952493,
                "explored_percent_none": 22.850451656072266,
                "kept_percent_concrete": 61.666666666666664,
                "kept_percent_lambda": 38.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 1731,
                "num_explored_lambda": 575,
                "num_explored_none": 683,
                "num_inputs": 1,
                "num_kept_concrete": 296,
                "num_kept_lambda": 184,
                "num_values_explored": 2989,
                "num_values_kept": 480,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93207
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=2',\n    inputs_dict={'x1': [[1, 7, 3, 2, 3], [], [12, 4, 7, 15], [2], [9, 6], [2, 3, 6, 6, 7, 7], [2, 2, 2, 2, 2], [12], [0, 2], [2, 2, 2, 2, 2, 2], [11, 9, 16, 9, 7, 2, 6], [9, 15, 4, 7], [1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16]]},\n    outputs=[1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.31164529401576,
            "num_unique_values": 478,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.913787430075686,
                "explored_percent_lambda": 19.34846989141165,
                "explored_percent_none": 22.737742678512667,
                "kept_percent_concrete": 58.05084745762712,
                "kept_percent_lambda": 41.94915254237288,
                "num_examples": 15,
                "num_explored_concrete": 1760,
                "num_explored_lambda": 588,
                "num_explored_none": 691,
                "num_inputs": 1,
                "num_kept_concrete": 274,
                "num_kept_lambda": 198,
                "num_values_explored": 3039,
                "num_values_kept": 472,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91907
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=4',\n    inputs_dict={'x1': [[7, 3, 14, 6, 3], [16], [9, 4, 4, 4, 4, 4], [16, 14, 7, 8, 7, 1, 3], [4], [4, 4, 13], [], [4, 4, 13], [4, 4, 9, 16, 4, 4, 4], [15, 14, 11, 7], [4, 4, 4, 4, 4], [9, 4, 3, 4], [7, 11, 13, 15, 16], [11, 11, 4, 14, 6, 14, 0], [3]]},\n    outputs=[0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1982622159994,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.16481360366252,
                "explored_percent_lambda": 16.44865925441465,
                "explored_percent_none": 21.386527141922826,
                "kept_percent_concrete": 67.94625719769674,
                "kept_percent_lambda": 32.05374280230326,
                "num_examples": 15,
                "num_explored_concrete": 1901,
                "num_explored_lambda": 503,
                "num_explored_none": 654,
                "num_inputs": 1,
                "num_kept_concrete": 354,
                "num_kept_lambda": 167,
                "num_values_explored": 3058,
                "num_values_kept": 521,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91711
            },
            "success": false,
            "task": "Task(\n    name='is-evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 6, 5], [8, 3], [12, 16, 22, 22, 4, 2, 6], [8, 4], [26, 20, 32, 10, 16, 16, 12], [28], [11, 16, 10, 2, 1, 8], [14, 10, 4, 0, 12, 6], [24, 10, 30, 4, 14], [5, 7, 14, 0, 13, 5, 9], [4, 13, 12, 8, 14, 1, 7], [22, 2, 20], [3, 6, 4]]},\n    outputs=[1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1753106340184,
            "num_unique_values": 488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.07182141701715,
                "explored_percent_lambda": 19.54060174700744,
                "explored_percent_none": 22.387576835975413,
                "kept_percent_concrete": 54.149377593360995,
                "kept_percent_lambda": 45.850622406639005,
                "num_examples": 15,
                "num_explored_concrete": 1795,
                "num_explored_lambda": 604,
                "num_explored_none": 692,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 221,
                "num_values_explored": 3091,
                "num_values_kept": 482,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91878
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=4',\n    inputs_dict={'x1': [[8], [7, 4, 11], [52, 0, 8], [24], [28, 0, 44], [10, 15, 6, 9, 16, 12], [7, 7, 6], [40, 32, 16, 28], [3, 5, 15, 16, 13], [0, 12, 40, 48, 16, 20], [], [56, 12, 56, 60], [0, 7, 13, 8, 10], [24, 20, 0, 28], [16, 15, 11, 9, 16]]},\n    outputs=[1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3349128669943,
            "num_unique_values": 467,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.656836461126005,
                "explored_percent_lambda": 19.906166219839143,
                "explored_percent_none": 19.43699731903485,
                "kept_percent_concrete": 56.61605206073753,
                "kept_percent_lambda": 43.38394793926247,
                "num_examples": 15,
                "num_explored_concrete": 1810,
                "num_explored_lambda": 594,
                "num_explored_none": 580,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 200,
                "num_values_explored": 2984,
                "num_values_kept": 461,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92983
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=5',\n    inputs_dict={'x1': [[2, 6, 8], [15, 4, 7, 9], [], [16, 11, 14, 5], [65, 60], [15, 16, 9, 6], [12, 8], [60, 25, 45, 25, 25], [0, 10, 3, 3, 10, 4], [40, 5, 15, 15, 25], [65, 35, 5, 35, 5, 80], [], [12, 10, 16, 6, 8, 13], [3, 12, 12, 15, 2, 4], [4]]},\n    outputs=[0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4462805489893,
            "num_unique_values": 629,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.380510440835266,
                "explored_percent_lambda": 21.11368909512761,
                "explored_percent_none": 22.505800464037122,
                "kept_percent_concrete": 60.192616372391655,
                "kept_percent_lambda": 39.807383627608345,
                "num_examples": 15,
                "num_explored_concrete": 1701,
                "num_explored_lambda": 637,
                "num_explored_none": 679,
                "num_inputs": 1,
                "num_kept_concrete": 375,
                "num_kept_lambda": 248,
                "num_values_explored": 3017,
                "num_values_kept": 623,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92163
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [2], [8, 24, 32], [1, 15], [6, 18], [3, 24, 3, 9, 12], [7, 13], [10, 2, 12, 9], [6, 6, 5, 24, 54, 24], [4], [5, 15, 0, 20, 13, 7], [12, 3], [7, 3, 9]]},\n    outputs=[[3, 6, 9], [8, 12], [2, 3], [], [24, 32], [15], [18], [24, 3, 9, 12], [], [], [6, 24, 54, 24], [], [15, 0, 20], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.48317446999135,
            "num_unique_values": 511,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.91259105098855,
                "explored_percent_lambda": 28.26916406520985,
                "explored_percent_none": 27.818244883801597,
                "kept_percent_concrete": 40.396039603960396,
                "kept_percent_lambda": 59.603960396039604,
                "num_examples": 15,
                "num_explored_concrete": 1266,
                "num_explored_lambda": 815,
                "num_explored_none": 802,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 301,
                "num_values_explored": 2883,
                "num_values_kept": 505,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94195
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=2',\n    inputs_dict={'x1': [[0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [2, 1, 10, 8, 4, 6, 2], [4, 9, 4, 4], [1, 10, 11], [], [10, 8, 16, 5, 9], [13, 9, 11, 13], [10, 0, 16], [12], [2, 12, 2], [0, 15, 9, 13, 13, 15, 3], [12, 6, 16], [9, 4, 1, 5, 8]]},\n    outputs=[[0, 8, 10], [6, 8, 6, 14, 4], [], [2, 10, 8, 4, 6, 2], [4, 4, 4], [10], [], [10, 8, 16], [], [10, 0, 16], [12], [2, 12, 2], [0], [12, 6, 16], [4, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.30240915101604,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.41307974641308,
                "explored_percent_lambda": 26.626626626626628,
                "explored_percent_none": 26.960293626960294,
                "kept_percent_concrete": 46.666666666666664,
                "kept_percent_lambda": 53.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 1391,
                "num_explored_lambda": 798,
                "num_explored_none": 808,
                "num_inputs": 1,
                "num_kept_concrete": 245,
                "num_kept_lambda": 280,
                "num_values_explored": 2997,
                "num_values_kept": 525,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90438
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.25566028800677,
            "num_unique_values": 555,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.07111707480711,
                "explored_percent_lambda": 26.266353572626635,
                "explored_percent_none": 25.662529352566253,
                "kept_percent_concrete": 46.994535519125684,
                "kept_percent_lambda": 53.005464480874316,
                "num_examples": 15,
                "num_explored_concrete": 1433,
                "num_explored_lambda": 783,
                "num_explored_none": 765,
                "num_inputs": 1,
                "num_kept_concrete": 258,
                "num_kept_lambda": 291,
                "num_values_explored": 2981,
                "num_values_kept": 549,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 91977
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1244520499895,
            "num_unique_values": 513,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.582460732984295,
                "explored_percent_lambda": 27.912303664921467,
                "explored_percent_none": 26.505235602094242,
                "kept_percent_concrete": 42.209072978303745,
                "kept_percent_lambda": 57.790927021696255,
                "num_examples": 15,
                "num_explored_concrete": 1393,
                "num_explored_lambda": 853,
                "num_explored_none": 810,
                "num_inputs": 1,
                "num_kept_concrete": 214,
                "num_kept_lambda": 293,
                "num_values_explored": 3056,
                "num_values_kept": 507,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92402
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.28405899199424,
            "num_unique_values": 551,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.150159744408946,
                "explored_percent_lambda": 16.10223642172524,
                "explored_percent_none": 22.747603833865814,
                "kept_percent_concrete": 69.54128440366972,
                "kept_percent_lambda": 30.458715596330276,
                "num_examples": 15,
                "num_explored_concrete": 1914,
                "num_explored_lambda": 504,
                "num_explored_none": 712,
                "num_inputs": 1,
                "num_kept_concrete": 379,
                "num_kept_lambda": 166,
                "num_values_explored": 3130,
                "num_values_kept": 545,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93887
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=2',\n    inputs_dict={'x1': [[3, 13, 12], [16, 10, 8, 15, 9, 15, 14, 2, 12], [8, 13, 5, 2], [16, 15, 13, 0, 15], [9, 16, 7, 6, 3], [14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6]]},\n    outputs=[12, 15, 8, 15, 9, 1, 12, 0, 12, 7, 13, 1, 15, 5, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.33008368799346,
            "num_unique_values": 577,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.40836012861736,
                "explored_percent_lambda": 17.170418006430868,
                "explored_percent_none": 19.421221864951768,
                "kept_percent_concrete": 66.37478108581436,
                "kept_percent_lambda": 33.62521891418564,
                "num_examples": 15,
                "num_explored_concrete": 1972,
                "num_explored_lambda": 534,
                "num_explored_none": 604,
                "num_inputs": 1,
                "num_kept_concrete": 379,
                "num_kept_lambda": 192,
                "num_values_explored": 3110,
                "num_values_kept": 571,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92204
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=4',\n    inputs_dict={'x1': [[16, 9, 15, 4, 16], [16, 4, 13, 11, 6, 13, 16, 1, 5, 6], [0, 3, 6, 10, 4, 3, 1], [0, 6, 13, 5, 0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8]]},\n    outputs=[9, 13, 3, 6, 0, 5, 8, 4, 10, 1, 11, 4, 7, 6, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0834039869951,
            "num_unique_values": 472,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.8032021347565,
                "explored_percent_lambda": 19.679786524349566,
                "explored_percent_none": 25.51701134089393,
                "kept_percent_concrete": 63.09012875536481,
                "kept_percent_lambda": 36.90987124463519,
                "num_examples": 15,
                "num_explored_concrete": 1643,
                "num_explored_lambda": 590,
                "num_explored_none": 765,
                "num_inputs": 1,
                "num_kept_concrete": 294,
                "num_kept_lambda": 172,
                "num_values_explored": 2998,
                "num_values_kept": 466,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90199
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=5',\n    inputs_dict={'x1': [[7, 2, 7, 14, 6, 0, 2, 14, 2, 16, 16], [6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11, 13], [1, 12, 11, 6, 11, 15, 11, 2, 7, 8, 13], [10, 1, 4, 3, 5, 6, 0], [3, 16, 14, 5, 10, 1, 5, 6], [12, 9, 2, 7, 13, 11, 1, 8, 14, 3, 14, 3], [11, 11, 14, 8, 14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9]]},\n    outputs=[7, 7, 11, 3, 5, 11, 9, 0, 2, 8, 8, 7, 8, 5, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0954093549808,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.37638376383764,
                "explored_percent_lambda": 15.83640836408364,
                "explored_percent_none": 20.78720787207872,
                "kept_percent_concrete": 67.80952380952381,
                "kept_percent_lambda": 32.19047619047619,
                "num_examples": 15,
                "num_explored_concrete": 2061,
                "num_explored_lambda": 515,
                "num_explored_none": 676,
                "num_inputs": 1,
                "num_kept_concrete": 356,
                "num_kept_lambda": 169,
                "num_values_explored": 3252,
                "num_values_kept": 525,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 97687
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=1',\n    inputs_dict={'x1': [[0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16], [14], [13, 0, 3, 2, 9, 14], [12, 13], [12, 14, 13], [3, 14], [3, 3, 12]]},\n    outputs=[0, 13, 10, 2, 1, 1, 2, 0, 16, 14, 0, 12, 12, 3, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.14808390897815,
            "num_unique_values": 535,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.440276406712734,
                "explored_percent_lambda": 17.505758473181967,
                "explored_percent_none": 24.053965120105296,
                "kept_percent_concrete": 65.40642722117202,
                "kept_percent_lambda": 34.593572778827976,
                "num_examples": 15,
                "num_explored_concrete": 1776,
                "num_explored_lambda": 532,
                "num_explored_none": 731,
                "num_inputs": 1,
                "num_kept_concrete": 346,
                "num_kept_lambda": 183,
                "num_values_explored": 3039,
                "num_values_kept": 529,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 92470
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=2',\n    inputs_dict={'x1': [[1, 1, 6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5], [10, 5], [13, 4, 8, 10, 3, 2], [9, 0, 0, 5, 14, 10, 5, 2], [10, 1, 9, 16, 8, 11, 16, 13, 1], [7, 2, 5, 9, 11, 13, 2]]},\n    outputs=[1, 10, 9, 6, 11, 7, 2, 5, 0, 2, 10, 3, 0, 1, 2],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0549251989869,
            "num_unique_values": 563,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.123320394147505,
                "explored_percent_lambda": 16.034637205135862,
                "explored_percent_none": 20.842042400716632,
                "kept_percent_concrete": 70.01795332136446,
                "kept_percent_lambda": 29.982046678635548,
                "num_examples": 15,
                "num_explored_concrete": 2114,
                "num_explored_lambda": 537,
                "num_explored_none": 698,
                "num_inputs": 1,
                "num_kept_concrete": 390,
                "num_kept_lambda": 167,
                "num_values_explored": 3349,
                "num_values_kept": 557,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 100794
            },
            "success": false,
            "task": "Task(\n    name='max',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [13, 9, 16, 8], [13, 10, 9, 16, 4, 15, 13], [9], [15, 14, 11, 7, 12, 0, 15], [4, 12], [16, 10, 4, 9, 3], [4, 13, 4, 2], [12, 11, 5, 12, 1, 2], [16, 8], [4, 9], [3], [4, 12]]},\n    outputs=[3, 0, 2, 16, 16, 9, 15, 12, 16, 13, 12, 16, 9, 3, 12],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0680073729891,
            "num_unique_values": 542,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.87480680061824,
                "explored_percent_lambda": 16.754250386398763,
                "explored_percent_none": 20.370942812983,
                "kept_percent_concrete": 66.04477611940298,
                "kept_percent_lambda": 33.95522388059702,
                "num_examples": 15,
                "num_explored_concrete": 2034,
                "num_explored_lambda": 542,
                "num_explored_none": 659,
                "num_inputs": 1,
                "num_kept_concrete": 354,
                "num_kept_lambda": 182,
                "num_values_explored": 3235,
                "num_values_kept": 536,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 96681
            },
            "success": false,
            "task": "Task(\n    name='min',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 5, 8, 12], [9, 9, 2, 11], [10, 14, 2], [3, 15, 14, 3, 5, 15], [1], [1, 7, 12, 6, 15, 12, 9], [7, 9, 7, 7, 8, 1], [16, 11, 13], [3, 1, 8, 15, 7], [14, 1, 3], [11, 15, 2, 0], [3, 6, 7, 6, 8]]},\n    outputs=[1, 0, 1, 5, 2, 2, 3, 1, 1, 1, 11, 1, 1, 0, 3],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.33179442200344,
            "num_unique_values": 599,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.45126353790614,
                "explored_percent_lambda": 24.63898916967509,
                "explored_percent_none": 24.90974729241877,
                "kept_percent_concrete": 51.09612141652614,
                "kept_percent_lambda": 48.90387858347386,
                "num_examples": 15,
                "num_explored_concrete": 1677,
                "num_explored_lambda": 819,
                "num_explored_none": 828,
                "num_inputs": 1,
                "num_kept_concrete": 303,
                "num_kept_lambda": 290,
                "num_values_explored": 3324,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 100241
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=4',\n    inputs_dict={'x1': [[14, 6, 10, 2, 7], [1, 12, 8, 11, 2, 7], [3], [5, 14, 6, 5, 8], [4, 14], [], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13], [9]]},\n    outputs=[[56, 24, 40, 8, 28], [4, 48, 32, 44, 8, 28], [12], [20, 56, 24, 20, 32], [16, 56], [], [4, 24, 48, 4, 28], [44], [12, 20, 28, 16, 16, 24], [8], [12], [0, 44, 16, 44, 4, 24, 48], [60], [52, 60, 52], [36]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10865642101271078,
            "num_unique_values": 63,
            "solution": "Cons(Multiply(Add(1, 1), Add(1, 1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 50.38167938931298,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 11.450381679389313,
                "kept_percent_concrete": 24.56140350877193,
                "kept_percent_lambda": 75.43859649122807,
                "num_examples": 15,
                "num_explored_concrete": 66,
                "num_explored_lambda": 50,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 43,
                "num_values_explored": 131,
                "num_values_kept": 57,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19310039101401344,
            "num_unique_values": 123,
            "solution": "Cons(Add(1, Multiply(Add(1, 1), Add(1, 1))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 61.12956810631229,
                "explored_percent_lambda": 26.245847176079735,
                "explored_percent_none": 12.624584717607974,
                "kept_percent_concrete": 54.7008547008547,
                "kept_percent_lambda": 45.2991452991453,
                "num_examples": 15,
                "num_explored_concrete": 184,
                "num_explored_lambda": 79,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 53,
                "num_values_explored": 301,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.73246698101866,
            "num_unique_values": 363,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.06519591702338,
                "explored_percent_lambda": 28.745472505762265,
                "explored_percent_none": 25.189331577214357,
                "kept_percent_concrete": 33.333333333333336,
                "kept_percent_lambda": 66.66666666666667,
                "num_examples": 15,
                "num_explored_concrete": 1399,
                "num_explored_lambda": 873,
                "num_explored_none": 765,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 238,
                "num_values_explored": 3037,
                "num_values_kept": 357,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93272
            },
            "success": false,
            "task": "Task(\n    name='range',\n    inputs_dict={'x1': [0, 1, 2, 3, 7, 5, 3, 6, 2, 3, 5, 2, 1, 3, 5]},\n    outputs=[[], [0], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4], [0, 1, 2], [0, 1, 2, 3, 4, 5], [0, 1], [0, 1, 2], [0, 1, 2, 3, 4], [0, 1], [0], [0, 1, 2], [0, 1, 2, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3795743730152026,
            "num_unique_values": 187,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), Cdr(Cdr(Cdr(x1)))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.69767441860465,
                "explored_percent_lambda": 23.565891472868216,
                "explored_percent_none": 5.736434108527132,
                "kept_percent_concrete": 56.353591160220994,
                "kept_percent_lambda": 43.646408839779006,
                "num_examples": 15,
                "num_explored_concrete": 456,
                "num_explored_lambda": 152,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 79,
                "num_values_explored": 645,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 645
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=3',\n    inputs_dict={'x1': [[10, 5, 9], [4, 8, 10, 3, 2, 12, 9, 0, 0], [14, 10, 5, 2, 16], [1, 9, 16, 8, 11, 16, 13], [11, 7, 2], [9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [3, 11, 16, 4, 10, 7], [7, 1, 2, 14, 10], [9, 10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16]]},\n    outputs=[[10, 5], [4, 8, 3, 2, 12, 9, 0, 0], [14, 10, 2, 16], [1, 9, 8, 11, 16, 13], [11, 7], [9, 11, 2, 9], [5, 11, 10, 13, 9, 13], [5, 4, 2, 14, 6, 9, 15, 1, 1], [3, 11, 4, 10, 7], [7, 1, 14, 10], [9, 10, 6, 7, 15, 2, 9, 16], [4, 0, 4, 9, 2, 15, 4, 8, 5], [6, 4, 5, 11, 11, 14], [4, 6], [1, 14, 7, 11, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0957965790003,
            "num_unique_values": 545,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.14238628872775,
                "explored_percent_lambda": 22.544495715227423,
                "explored_percent_none": 25.313117996044824,
                "kept_percent_concrete": 56.58627087198516,
                "kept_percent_lambda": 43.41372912801484,
                "num_examples": 15,
                "num_explored_concrete": 1582,
                "num_explored_lambda": 684,
                "num_explored_none": 768,
                "num_inputs": 1,
                "num_kept_concrete": 305,
                "num_kept_lambda": 234,
                "num_values_explored": 3034,
                "num_values_kept": 539,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90801
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1849928019801,
            "num_unique_values": 616,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.14150943396226,
                "explored_percent_lambda": 20.5188679245283,
                "explored_percent_none": 19.339622641509433,
                "kept_percent_concrete": 58.68852459016394,
                "kept_percent_lambda": 41.31147540983606,
                "num_examples": 15,
                "num_explored_concrete": 1785,
                "num_explored_lambda": 609,
                "num_explored_none": 574,
                "num_inputs": 1,
                "num_kept_concrete": 358,
                "num_kept_lambda": 252,
                "num_values_explored": 2968,
                "num_values_kept": 610,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89374
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1714508070145,
            "num_unique_values": 539,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.60981912144703,
                "explored_percent_lambda": 27.906976744186046,
                "explored_percent_none": 24.483204134366925,
                "kept_percent_concrete": 42.77673545966229,
                "kept_percent_lambda": 57.22326454033771,
                "num_examples": 15,
                "num_explored_concrete": 1474,
                "num_explored_lambda": 864,
                "num_explored_none": 758,
                "num_inputs": 1,
                "num_kept_concrete": 228,
                "num_kept_lambda": 305,
                "num_values_explored": 3096,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94624
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=4',\n    inputs_dict={'x1': [[3, 32, 32, 36], [10, 14], [20], [], [10], [20, 11, 0, 20, 24, 10, 24], [0, 24, 16, 24], [28, 6, 20, 16, 5], [11, 7, 16, 14, 13, 12, 3], [12, 9, 4, 16, 6], [], [4, 14, 15, 1], [0, 12], [10, 3, 5, 8, 3, 7], [9, 5, 3, 3, 4, 5]]},\n    outputs=[[3], [10, 14], [], [], [10], [11, 10], [], [6, 5], [11, 7, 14, 13, 3], [9, 6], [], [14, 15, 1], [], [10, 3, 5, 3, 7], [9, 5, 3, 3, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1887835380039,
            "num_unique_values": 606,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.05026455026455,
                "explored_percent_lambda": 24.272486772486772,
                "explored_percent_none": 23.677248677248677,
                "kept_percent_concrete": 55.833333333333336,
                "kept_percent_lambda": 44.166666666666664,
                "num_examples": 15,
                "num_explored_concrete": 1574,
                "num_explored_lambda": 734,
                "num_explored_none": 716,
                "num_inputs": 1,
                "num_kept_concrete": 335,
                "num_kept_lambda": 265,
                "num_values_explored": 3024,
                "num_values_kept": 600,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93941
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.94756391699775,
            "num_unique_values": 397,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.83195592286501,
                "explored_percent_lambda": 28.133608815426996,
                "explored_percent_none": 25.03443526170799,
                "kept_percent_concrete": 43.22250639386189,
                "kept_percent_lambda": 56.77749360613811,
                "num_examples": 15,
                "num_explored_concrete": 1360,
                "num_explored_lambda": 817,
                "num_explored_none": 727,
                "num_inputs": 1,
                "num_kept_concrete": 169,
                "num_kept_lambda": 222,
                "num_values_explored": 2904,
                "num_values_kept": 391,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87807
            },
            "success": false,
            "task": "Task(\n    name='repeat',\n    inputs_dict={'x1': [[1, 1], [1, 2], [1, 3], [2, 1], [2, 3], [3, 7], [6, 13], [4, 6], [3, 7], [4, 3], [3, 7], [7, 6], [3, 3], [1, 2], [4, 5]]},\n    outputs=[[1], [2], [3], [1, 1], [3, 3], [7, 7, 7], [13, 13, 13, 13, 13, 13], [6, 6, 6, 6], [7, 7, 7], [3, 3, 3, 3], [7, 7, 7], [6, 6, 6, 6, 6, 6, 6], [3, 3, 3], [2], [5, 5, 5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0582085160131,
            "num_unique_values": 504,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.46272855133615,
                "explored_percent_lambda": 32.9817158931083,
                "explored_percent_none": 30.555555555555557,
                "kept_percent_concrete": 35.140562248995984,
                "kept_percent_lambda": 64.85943775100401,
                "num_examples": 15,
                "num_explored_concrete": 1037,
                "num_explored_lambda": 938,
                "num_explored_none": 869,
                "num_inputs": 1,
                "num_kept_concrete": 175,
                "num_kept_lambda": 323,
                "num_values_explored": 2844,
                "num_values_kept": 498,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88063
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=3',\n    inputs_dict={'x1': [[10, 9], [10, 8, 4], [7, 10, 5, 13, 1], [11, 10], [11, 5], [16, 6, 0, 0], [12, 10], [8], [6, 11], [4], [], [8], [11, 14], [1], [2]]},\n    outputs=[[10, 9, 10, 9, 10, 9], [10, 8, 4, 10, 8, 4, 10, 8, 4], [7, 10, 5, 13, 1, 7, 10, 5, 13, 1, 7, 10, 5, 13, 1], [11, 10, 11, 10, 11, 10], [11, 5, 11, 5, 11, 5], [16, 6, 0, 0, 16, 6, 0, 0, 16, 6, 0, 0], [12, 10, 12, 10, 12, 10], [8, 8, 8], [6, 11, 6, 11, 6, 11], [4, 4, 4], [], [8, 8, 8], [11, 14, 11, 14, 11, 14], [1, 1, 1], [2, 2, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.04118564899545,
            "num_unique_values": 495,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.17320703653586,
                "explored_percent_lambda": 25.57510148849797,
                "explored_percent_none": 26.25169147496617,
                "kept_percent_concrete": 51.942740286298566,
                "kept_percent_lambda": 48.057259713701434,
                "num_examples": 15,
                "num_explored_concrete": 1424,
                "num_explored_lambda": 756,
                "num_explored_none": 776,
                "num_inputs": 1,
                "num_kept_concrete": 254,
                "num_kept_lambda": 235,
                "num_values_explored": 2956,
                "num_values_kept": 489,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 89294
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=4',\n    inputs_dict={'x1': [[7, 9, 11, 7], [15, 10, 10, 8], [1, 3, 13], [5, 8, 13, 0], [3, 1, 12, 6], [9, 3, 9, 14], [15, 10], [8, 16], [14, 8, 6, 2, 6], [12, 3, 13], [6], [3, 5], [6, 5], [12, 14, 1], [6, 0, 12, 11, 3]]},\n    outputs=[[7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7, 7, 9, 11, 7], [15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8, 15, 10, 10, 8], [1, 3, 13, 1, 3, 13, 1, 3, 13, 1, 3, 13], [5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0, 5, 8, 13, 0], [3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6, 3, 1, 12, 6], [9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14, 9, 3, 9, 14], [15, 10, 15, 10, 15, 10, 15, 10], [8, 16, 8, 16, 8, 16, 8, 16], [14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6, 14, 8, 6, 2, 6], [12, 3, 13, 12, 3, 13, 12, 3, 13, 12, 3, 13], [6, 6, 6, 6], [3, 5, 3, 5, 3, 5, 3, 5], [6, 5, 6, 5, 6, 5, 6, 5], [12, 14, 1, 12, 14, 1, 12, 14, 1, 12, 14, 1], [6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3, 6, 0, 12, 11, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2005272860115,
            "num_unique_values": 492,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.42857142857143,
                "explored_percent_lambda": 32.107142857142854,
                "explored_percent_none": 28.464285714285715,
                "kept_percent_concrete": 37.65432098765432,
                "kept_percent_lambda": 62.34567901234568,
                "num_examples": 15,
                "num_explored_concrete": 1104,
                "num_explored_lambda": 899,
                "num_explored_none": 797,
                "num_inputs": 1,
                "num_kept_concrete": 183,
                "num_kept_lambda": 303,
                "num_values_explored": 2800,
                "num_values_kept": 486,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 85666
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38325057600741275,
            "num_unique_values": 172,
            "solution": "Map((lambda u1: Car(Cdr(Cdr(Cdr(Cdr(x1)))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 72.93233082706767,
                "explored_percent_lambda": 19.548872180451127,
                "explored_percent_none": 7.518796992481203,
                "kept_percent_concrete": 60.24096385542169,
                "kept_percent_lambda": 39.75903614457831,
                "num_examples": 15,
                "num_explored_concrete": 485,
                "num_explored_lambda": 130,
                "num_explored_none": 50,
                "num_inputs": 1,
                "num_kept_concrete": 100,
                "num_kept_lambda": 66,
                "num_values_explored": 665,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.07008204297745,
            "num_unique_values": 597,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.051930758988014,
                "explored_percent_lambda": 19.00798934753662,
                "explored_percent_none": 19.940079893475367,
                "kept_percent_concrete": 59.052453468697124,
                "kept_percent_lambda": 40.947546531302876,
                "num_examples": 15,
                "num_explored_concrete": 1834,
                "num_explored_lambda": 571,
                "num_explored_none": 599,
                "num_inputs": 1,
                "num_kept_concrete": 349,
                "num_kept_lambda": 242,
                "num_values_explored": 3004,
                "num_values_kept": 591,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 93185
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0484411130019,
            "num_unique_values": 577,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.21262886597938,
                "explored_percent_lambda": 18.975515463917525,
                "explored_percent_none": 20.811855670103093,
                "kept_percent_concrete": 59.5446584938704,
                "kept_percent_lambda": 40.4553415061296,
                "num_examples": 15,
                "num_explored_concrete": 1869,
                "num_explored_lambda": 589,
                "num_explored_none": 646,
                "num_inputs": 1,
                "num_kept_concrete": 340,
                "num_kept_lambda": 231,
                "num_values_explored": 3104,
                "num_values_kept": 571,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94491
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1422490889963,
            "num_unique_values": 567,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.26828489300543,
                "explored_percent_lambda": 18.460555732992653,
                "explored_percent_none": 21.271159374001915,
                "kept_percent_concrete": 63.101604278074866,
                "kept_percent_lambda": 36.898395721925134,
                "num_examples": 15,
                "num_explored_concrete": 1887,
                "num_explored_lambda": 578,
                "num_explored_none": 666,
                "num_inputs": 1,
                "num_kept_concrete": 354,
                "num_kept_lambda": 207,
                "num_values_explored": 3131,
                "num_values_kept": 561,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94301
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 302.45391613201355,
            "num_unique_values": 521,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.52481777160708,
                "explored_percent_lambda": 24.540090246442208,
                "explored_percent_none": 26.935091981950713,
                "kept_percent_concrete": 52.81553398058252,
                "kept_percent_lambda": 47.18446601941748,
                "num_examples": 15,
                "num_explored_concrete": 1398,
                "num_explored_lambda": 707,
                "num_explored_none": 776,
                "num_inputs": 1,
                "num_kept_concrete": 272,
                "num_kept_lambda": 243,
                "num_values_explored": 2881,
                "num_values_kept": 515,
                "temperature": 1.0,
                "total_num_restarts": 27,
                "total_num_values_explored": 75498
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=3',\n    inputs_dict={'x1': [[14, 13, 13, 2, 12, 5, 15, 3], [13, 12, 5, 0, 6, 6, 4, 2, 2, 11], [7, 7, 11, 5, 16], [8, 1, 7, 13, 11, 2, 5, 16, 10, 9], [15, 14, 7, 2, 13, 14, 7], [5, 15, 11, 2, 8, 15, 4, 11, 1, 16, 10, 13], [13, 13, 2, 4, 6, 5, 3], [12, 14, 2, 14, 0, 9, 8], [12, 7, 10, 10, 1, 11, 12, 10, 0, 3, 14], [6, 13, 3, 14, 6, 3, 8, 9, 10, 7, 9, 1], [1, 14, 4, 2, 7, 14], [12, 5, 9, 6, 0, 15, 6, 6, 4, 13, 0, 14], [3, 5, 5, 7, 6, 16, 4, 2, 7], [15, 12, 15, 9, 8, 3, 14, 3, 0, 0, 14], [12, 4, 14, 2, 6, 9, 14]]},\n    outputs=[[14, 13, 13], [13, 12, 5], [7, 7, 11], [8, 1, 7], [15, 14, 7], [5, 15, 11], [13, 13, 2], [12, 14, 2], [12, 7, 10], [6, 13, 3], [1, 14, 4], [12, 5, 9], [3, 5, 5], [15, 12, 15], [12, 4, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 414.9540499909781,
            "num_unique_values": 439,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.66094934184284,
                "explored_percent_lambda": 25.40885520542481,
                "explored_percent_none": 24.93019545273235,
                "kept_percent_concrete": 48.96073903002309,
                "kept_percent_lambda": 51.03926096997691,
                "num_examples": 15,
                "num_explored_concrete": 1245,
                "num_explored_lambda": 637,
                "num_explored_none": 625,
                "num_inputs": 1,
                "num_kept_concrete": 212,
                "num_kept_lambda": 221,
                "num_values_explored": 2507,
                "num_values_kept": 433,
                "temperature": 1.0,
                "total_num_restarts": 21,
                "total_num_values_explored": 60658
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=5',\n    inputs_dict={'x1': [[10, 0, 10, 4, 4, 5, 5, 2, 13, 14, 13, 6, 3], [7, 8, 2, 14, 6, 14, 5, 5], [7, 4, 1, 16, 9, 16, 14, 6, 15, 2, 9, 1], [15, 2, 10, 8, 8, 14, 6, 4, 8, 8, 16], [7, 11, 5, 14, 15, 11, 12, 9, 7, 5], [15, 6, 12, 11, 12, 12, 2], [2, 12, 15, 7, 10, 4, 14, 11, 7], [1, 15, 4, 2, 11, 12, 11, 9, 16, 11, 16, 12, 2, 1], [5, 7, 4, 16, 10, 8, 12], [8, 10, 7, 16, 3, 14, 0], [3, 11, 9, 11, 9, 7, 3, 3, 13, 10, 3], [10, 12, 3, 12, 5, 14, 2, 5, 1, 13], [3, 14, 10, 13, 16, 6, 1, 14, 12, 3, 12, 15, 5], [3, 0, 13, 7, 3, 5, 13, 11, 12, 5, 11], [14, 2, 3, 14, 10, 0, 12, 16, 13]]},\n    outputs=[[10, 0, 10, 4, 4], [7, 8, 2, 14, 6], [7, 4, 1, 16, 9], [15, 2, 10, 8, 8], [7, 11, 5, 14, 15], [15, 6, 12, 11, 12], [2, 12, 15, 7, 10], [1, 15, 4, 2, 11], [5, 7, 4, 16, 10], [8, 10, 7, 16, 3], [3, 11, 9, 11, 9], [10, 12, 3, 12, 5], [3, 14, 10, 13, 16], [3, 0, 13, 7, 3], [14, 2, 3, 14, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0286089470028,
            "num_unique_values": 581,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.55555555555556,
                "explored_percent_lambda": 22.38095238095238,
                "explored_percent_none": 22.063492063492063,
                "kept_percent_concrete": 54.08695652173913,
                "kept_percent_lambda": 45.91304347826087,
                "num_examples": 15,
                "num_explored_concrete": 1750,
                "num_explored_lambda": 705,
                "num_explored_none": 695,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 264,
                "num_values_explored": 3150,
                "num_values_kept": 575,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 94632
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3720152350142598,
            "num_unique_values": 190,
            "solution": "Cons(Index(1, Cdr(x1)), Cons(Index(1, Cdr(Cdr(x1))), []))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 74.45482866043614,
                "explored_percent_lambda": 19.781931464174455,
                "explored_percent_none": 5.7632398753894085,
                "kept_percent_concrete": 65.21739130434783,
                "kept_percent_lambda": 34.78260869565217,
                "num_examples": 15,
                "num_explored_concrete": 478,
                "num_explored_lambda": 127,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 120,
                "num_kept_lambda": 64,
                "num_values_explored": 642,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=2',\n    inputs_dict={'x1': [[1, 13, 12, 5, 9, 8, 6, 4, 1, 16, 12, 15, 5], [3, 12, 15, 13, 16, 3, 8, 11, 9, 16, 15, 4], [11, 12, 7, 13, 16, 3, 9, 15, 1, 0, 3], [1, 0, 11, 10, 7, 15, 3], [10, 10, 15, 3, 3, 9, 6, 15], [2, 4, 10, 9, 16, 0, 6], [10, 13, 7, 13, 2, 8], [8, 8, 8, 15, 15, 16], [11, 0, 13, 11, 9, 7, 7, 10, 9, 2], [7, 9, 3, 7, 11, 11], [2, 1, 1, 8, 0, 10], [6, 6, 7, 8, 14, 7, 11, 14, 8, 16, 1, 8], [1, 1, 6, 15, 11, 7, 1, 6, 8, 14], [15, 0, 8, 12, 3, 0, 14, 1], [6, 5, 13, 9, 7, 10, 14, 16, 1, 7, 16, 14, 13]]},\n    outputs=[[12, 5], [15, 13], [7, 13], [11, 10], [15, 3], [10, 9], [7, 13], [8, 15], [13, 11], [3, 7], [1, 8], [7, 8], [6, 15], [8, 12], [13, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.43483616600861,
            "num_unique_values": 591,
            "solution": "Cons(Index(1, Cdr(Cdr(x1))), Cons(Index(1, Cdr(Cdr(Cdr(x1)))), []))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 57.590451324132786,
                "explored_percent_lambda": 21.708317791868705,
                "explored_percent_none": 20.70123088399851,
                "kept_percent_concrete": 60.17094017094017,
                "kept_percent_lambda": 39.82905982905983,
                "num_examples": 15,
                "num_explored_concrete": 1544,
                "num_explored_lambda": 582,
                "num_explored_none": 555,
                "num_inputs": 1,
                "num_kept_concrete": 352,
                "num_kept_lambda": 233,
                "num_values_explored": 2681,
                "num_values_kept": 585,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 18344
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=2',\n    inputs_dict={'x1': [[4, 15, 8, 1, 13, 7, 5], [8, 11, 3, 5, 1, 14, 8, 3, 14, 11, 16, 1, 7], [10, 4, 13, 5, 6, 10, 8, 2, 4, 2], [0, 14, 0, 16, 0, 12, 0, 2, 7, 8, 5, 9, 10, 2], [12, 3, 6, 9, 13, 11, 0, 10, 5, 15, 4, 6, 6], [9, 10, 10, 3, 9, 11, 10, 2, 9, 0, 5], [5, 5, 10, 13, 4, 1, 14, 4], [6, 11, 12, 6, 11, 5, 0], [12, 9, 10, 1, 7, 7, 10, 7, 4, 1, 2, 12, 9, 14], [3, 8, 0, 14, 10, 16, 6, 9, 10, 3], [8, 2, 9, 6, 5, 9, 12, 11, 11, 6], [8, 14, 15, 4, 16, 7, 14, 14, 2, 10, 1, 1, 1], [6, 6, 14, 11, 16, 9, 5, 16], [3, 7, 8, 0, 7, 6, 8, 6, 9, 8], [6, 7, 9, 2, 4, 16, 11]]},\n    outputs=[[1, 13], [5, 1], [5, 6], [16, 0], [9, 13], [3, 9], [13, 4], [6, 11], [1, 7], [14, 10], [6, 5], [4, 16], [11, 16], [0, 7], [2, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.25019827100914,
            "num_unique_values": 602,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.978954752718344,
                "explored_percent_lambda": 19.922834093300597,
                "explored_percent_none": 20.098211153981058,
                "kept_percent_concrete": 57.88590604026846,
                "kept_percent_lambda": 42.11409395973154,
                "num_examples": 15,
                "num_explored_concrete": 1710,
                "num_explored_lambda": 568,
                "num_explored_none": 573,
                "num_inputs": 1,
                "num_kept_concrete": 345,
                "num_kept_lambda": 251,
                "num_values_explored": 2851,
                "num_values_kept": 596,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88210
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=4',\n    inputs_dict={'x1': [[6, 2, 5, 14, 9, 7, 6, 8, 5, 6, 9, 3, 10, 3, 0], [6, 4, 5, 10, 15, 4, 6, 16, 15, 15, 12], [12, 0, 1, 11, 12, 9, 15, 10, 1, 5, 11, 16, 9], [6, 7, 15, 4, 8, 9, 13, 1, 7, 6, 1, 2, 7, 10, 14, 8], [7, 9, 7, 10, 16, 2, 12, 11, 15, 1, 7, 2], [12, 1, 5, 12, 7, 10, 5, 16, 10, 9, 3, 8, 15], [15, 5, 1, 4, 11, 7, 8, 15, 3, 1, 7, 1, 3, 8, 4, 14], [4, 7, 13, 4, 7, 13, 5, 10, 8, 8, 11], [12, 8, 6, 4, 5, 10, 8, 11, 9, 9, 16], [14, 14, 1, 1, 9, 14, 13, 2, 11, 3], [2, 0, 10, 7, 5, 12, 15, 2, 11, 11, 7, 3, 8, 2], [6, 12, 7, 10, 16, 3, 4, 7, 4, 9, 4, 2], [4, 0, 15, 15, 10, 0, 11, 14, 4, 15, 10, 5, 7, 10], [14, 9, 3, 15, 10, 9, 5, 12, 14, 4, 7, 13, 15, 2], [16, 1, 15, 3, 4, 4, 7, 8, 16, 3, 3, 9, 14, 6, 5, 7]]},\n    outputs=[[14, 9, 7, 6], [10, 15, 4, 6], [11, 12, 9, 15], [4, 8, 9, 13], [10, 16, 2, 12], [12, 7, 10, 5], [4, 11, 7, 8], [4, 7, 13, 5], [4, 5, 10, 8], [1, 9, 14, 13], [7, 5, 12, 15], [10, 16, 3, 4], [15, 10, 0, 11], [15, 10, 9, 5], [3, 4, 4, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3797300189908128,
            "num_unique_values": 173,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), [])",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 70.7165109034268,
                "explored_percent_lambda": 22.118380062305295,
                "explored_percent_none": 7.165109034267913,
                "kept_percent_concrete": 60.47904191616767,
                "kept_percent_lambda": 39.52095808383233,
                "num_examples": 15,
                "num_explored_concrete": 454,
                "num_explored_lambda": 142,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 66,
                "num_values_explored": 642,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 642
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=5 and n=1',\n    inputs_dict={'x1': [[9, 1, 14, 12, 11, 7, 8], [2, 11, 14, 5, 8, 11, 7], [16, 12, 11, 0, 0, 5, 10, 14], [6, 3, 16, 10, 7, 13, 3, 4], [8, 2, 13, 14, 12, 1, 7, 1, 13, 4, 5], [7, 12, 1, 4, 5, 14, 3], [8, 3, 7, 9, 3, 8, 10, 9], [13, 16, 6, 11, 11, 16, 8, 1, 1, 1, 15, 11], [15, 11, 4, 16, 12, 5, 4, 3, 7, 10, 16, 16, 11, 7], [16, 12, 11, 12, 3, 4, 0, 2, 13, 16, 6, 13, 5], [13, 2, 13, 7, 6, 6, 14, 5, 15, 5, 16], [7, 14, 4, 6, 15, 10, 14, 8], [3, 16, 9, 15, 13, 13, 15, 4, 11, 9, 16], [7, 8, 9, 14, 16, 4, 5, 9, 9, 3, 9, 14, 10, 0], [9, 8, 9, 8, 14, 11, 12, 14, 12, 14, 8]]},\n    outputs=[[11], [8], [0], [7], [12], [5], [3], [11], [12], [3], [6], [15], [13], [16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1508793460089,
            "num_unique_values": 605,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.84109786926688,
                "explored_percent_lambda": 20.621162874684,
                "explored_percent_none": 19.537739256049115,
                "kept_percent_concrete": 58.59766277128548,
                "kept_percent_lambda": 41.40233722871452,
                "num_examples": 15,
                "num_explored_concrete": 1657,
                "num_explored_lambda": 571,
                "num_explored_none": 541,
                "num_inputs": 1,
                "num_kept_concrete": 351,
                "num_kept_lambda": 248,
                "num_values_explored": 2769,
                "num_values_kept": 599,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 86998
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.0772017839772,
            "num_unique_values": 612,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.80460572226099,
                "explored_percent_lambda": 20.376831821353804,
                "explored_percent_none": 19.818562456385205,
                "kept_percent_concrete": 57.42574257425743,
                "kept_percent_lambda": 42.57425742574257,
                "num_examples": 15,
                "num_explored_concrete": 1714,
                "num_explored_lambda": 584,
                "num_explored_none": 568,
                "num_inputs": 1,
                "num_kept_concrete": 348,
                "num_kept_lambda": 258,
                "num_values_explored": 2866,
                "num_values_kept": 606,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 88737
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.04297867100104,
            "num_unique_values": 466,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.88250912711583,
                "explored_percent_lambda": 18.752074344507136,
                "explored_percent_none": 23.365416528377033,
                "kept_percent_concrete": 63.69565217391305,
                "kept_percent_lambda": 36.30434782608695,
                "num_examples": 15,
                "num_explored_concrete": 1744,
                "num_explored_lambda": 565,
                "num_explored_none": 704,
                "num_inputs": 1,
                "num_kept_concrete": 293,
                "num_kept_lambda": 167,
                "num_values_explored": 3013,
                "num_values_kept": 460,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 90837
            },
            "success": false,
            "task": "Task(\n    name='sum',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [10], [14, 6], [8, 5], [14, 1], [1, 6, 12, 1, 7], [11], [3, 5, 7, 4, 4, 6], [2], [3], [0, 11, 4, 11, 1, 6, 12], [15], [13, 15, 13]]},\n    outputs=[6, 0, 5, 10, 20, 13, 15, 27, 11, 29, 2, 3, 45, 15, 41],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 300.940695805999,
            "num_unique_values": 482,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.46560846560847,
                "explored_percent_lambda": 25.64373897707231,
                "explored_percent_none": 25.890652557319225,
                "kept_percent_concrete": 48.319327731092436,
                "kept_percent_lambda": 51.680672268907564,
                "num_examples": 15,
                "num_explored_concrete": 1374,
                "num_explored_lambda": 727,
                "num_explored_none": 734,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 246,
                "num_values_explored": 2835,
                "num_values_kept": 476,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87243
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3632717630244,
            "num_unique_values": 973,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.301680058436816,
                "explored_percent_lambda": 14.12710007304602,
                "explored_percent_none": 22.571219868517165,
                "kept_percent_concrete": 65.87383660806618,
                "kept_percent_lambda": 34.126163391933815,
                "num_examples": 15,
                "num_explored_concrete": 4333,
                "num_explored_lambda": 967,
                "num_explored_none": 1545,
                "num_inputs": 1,
                "num_kept_concrete": 637,
                "num_kept_lambda": 330,
                "num_values_explored": 6845,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 200129
            },
            "success": false,
            "task": "Task(\n    name='keep eq 0',\n    inputs_dict={'x1': [[3, 0, 0, 5, 4], [2, 1, 5, 1, 5], [4, 5, 6, 4, 4], [5, 6, 0, 5, 3], [3, 5, 1, 6, 5], [4, 0, 6, 0, 4], [0, 5, 0, 5, 6], [2, 3, 2, 3, 6], [4, 4, 3, 1, 2], [6, 0, 5, 4, 4], [0, 4, 4, 3, 3], [1, 4, 5, 5, 0], [1, 3, 0, 5, 2], [2, 6, 5, 3, 4], [5, 0, 1, 4, 6]]},\n    outputs=[[0, 0], [], [], [0], [], [0, 0], [0, 0], [], [], [0], [0], [0], [0], [], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2041640430107,
            "num_unique_values": 985,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.16010418262601,
                "explored_percent_lambda": 17.57315765282672,
                "explored_percent_none": 17.266738164547267,
                "kept_percent_concrete": 65.1685393258427,
                "kept_percent_lambda": 34.831460674157306,
                "num_examples": 15,
                "num_explored_concrete": 4253,
                "num_explored_lambda": 1147,
                "num_explored_none": 1127,
                "num_inputs": 1,
                "num_kept_concrete": 638,
                "num_kept_lambda": 341,
                "num_values_explored": 6527,
                "num_values_kept": 979,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 194515
            },
            "success": false,
            "task": "Task(\n    name='keep gt 0',\n    inputs_dict={'x1': [[1, 5, 3, 5, 1], [6, 0, 5, 6, 3], [1, 6, 6, 3, 0], [5, 3, 4, 5, 2], [1, 0, 5, 4, 2], [3, 5, 4, 1, 0], [6, 5, 6, 1, 0], [4, 5, 6, 0, 1], [0, 6, 1, 6, 4], [5, 1, 5, 0, 0], [0, 2, 0, 1, 0], [5, 0, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 0, 2]]},\n    outputs=[[1, 5, 3, 5, 1], [6, 5, 6, 3], [1, 6, 6, 3], [5, 3, 4, 5, 2], [1, 5, 4, 2], [3, 5, 4, 1], [6, 5, 6, 1], [4, 5, 6, 1], [6, 1, 6, 4], [5, 1, 5], [2, 1], [5, 6, 2, 1], [1, 3, 1, 5, 6], [6, 6, 1, 5, 1], [4, 3, 4, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.28476580098504,
            "num_unique_values": 989,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.23015996272713,
                "explored_percent_lambda": 18.21711445876689,
                "explored_percent_none": 19.552725578505978,
                "kept_percent_concrete": 60.22380467955239,
                "kept_percent_lambda": 39.77619532044761,
                "num_examples": 15,
                "num_explored_concrete": 4007,
                "num_explored_lambda": 1173,
                "num_explored_none": 1259,
                "num_inputs": 1,
                "num_kept_concrete": 592,
                "num_kept_lambda": 391,
                "num_values_explored": 6439,
                "num_values_kept": 983,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 192915
            },
            "success": false,
            "task": "Task(\n    name='remove eq 1',\n    inputs_dict={'x1': [[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [1, 1, 5, 5, 4], [1, 2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 1, 5, 6], [5, 1, 4, 2, 4], [0, 0, 3, 0, 4], [0, 1, 0, 5, 0], [0, 5, 4, 0, 1], [4, 4, 1, 3, 5], [4, 5, 6, 1, 0], [5, 6, 4, 0, 3], [1, 1, 2, 3, 0]]},\n    outputs=[[4, 6, 5, 6, 2], [5, 2, 2, 3, 5], [2, 5, 5, 6, 5], [5, 5, 4], [2, 0, 3, 5], [2, 0, 2, 6, 0], [6, 6, 5, 6], [5, 4, 2, 4], [0, 0, 3, 0, 4], [0, 0, 5, 0], [0, 5, 4, 0], [4, 4, 3, 5], [4, 5, 6, 0], [5, 6, 4, 0, 3], [2, 3, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.35286525299307,
            "num_unique_values": 950,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.8808642888856,
                "explored_percent_lambda": 15.332248039070594,
                "explored_percent_none": 19.786887672043807,
                "kept_percent_concrete": 65.2542372881356,
                "kept_percent_lambda": 34.74576271186441,
                "num_examples": 15,
                "num_explored_concrete": 4384,
                "num_explored_lambda": 1036,
                "num_explored_none": 1337,
                "num_inputs": 1,
                "num_kept_concrete": 616,
                "num_kept_lambda": 328,
                "num_values_explored": 6757,
                "num_values_kept": 944,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 203007
            },
            "success": false,
            "task": "Task(\n    name='remove gt 1',\n    inputs_dict={'x1': [[6, 1, 1, 6, 3], [6, 2, 0, 0, 3], [5, 5, 1, 2, 2], [2, 5, 0, 6, 2], [6, 2, 1, 3, 2], [2, 2, 1, 1, 1], [5, 3, 6, 0, 4], [4, 2, 4, 0, 5], [4, 1, 4, 3, 2], [4, 2, 5, 4, 3], [4, 6, 0, 6, 0], [1, 3, 5, 6, 5], [5, 5, 0, 6, 2], [2, 5, 0, 5, 0], [4, 4, 5, 4, 4]]},\n    outputs=[[1, 1], [0, 0], [1], [0], [1], [1, 1, 1], [0], [0], [1], [], [0, 0], [1], [0], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.18999730297946,
            "num_unique_values": 904,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.84621270084162,
                "explored_percent_lambda": 17.44452945677123,
                "explored_percent_none": 19.709257842387146,
                "kept_percent_concrete": 63.14031180400891,
                "kept_percent_lambda": 36.85968819599109,
                "num_examples": 15,
                "num_explored_concrete": 4107,
                "num_explored_lambda": 1140,
                "num_explored_none": 1288,
                "num_inputs": 1,
                "num_kept_concrete": 567,
                "num_kept_lambda": 331,
                "num_values_explored": 6535,
                "num_values_kept": 898,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 196097
            },
            "success": false,
            "task": "Task(\n    name='keep eq 2',\n    inputs_dict={'x1': [[4, 1, 0, 5, 3], [1, 3, 5, 6, 3], [5, 1, 5, 5, 2], [6, 1, 6, 6, 0], [2, 3, 5, 6, 1], [1, 4, 0, 0, 1], [0, 5, 2, 5, 0], [2, 4, 5, 1, 3], [1, 1, 0, 4, 6], [6, 6, 6, 4, 0], [2, 0, 3, 1, 6], [3, 5, 0, 6, 0], [2, 5, 4, 4, 4], [1, 2, 1, 0, 0], [5, 4, 1, 5, 5]]},\n    outputs=[[], [], [2], [], [2], [], [2], [2], [], [], [2], [], [2], [2], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4003.2973388519895,
            "num_unique_values": 875,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.51046405823476,
                "explored_percent_lambda": 17.015468607825294,
                "explored_percent_none": 21.474067333939946,
                "kept_percent_concrete": 59.263521288837744,
                "kept_percent_lambda": 40.736478711162256,
                "num_examples": 15,
                "num_explored_concrete": 3380,
                "num_explored_lambda": 935,
                "num_explored_none": 1180,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 354,
                "num_values_explored": 5495,
                "num_values_kept": 869,
                "temperature": 1.0,
                "total_num_restarts": 12,
                "total_num_values_explored": 68363
            },
            "success": false,
            "task": "Task(\n    name='remove eq 2',\n    inputs_dict={'x1': [[5, 3, 2, 5, 0], [3, 2, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 2, 6, 3], [5, 6, 5, 5, 3], [3, 2, 0, 6, 5], [2, 6, 4, 2, 4], [3, 4, 4, 3, 2], [2, 3, 4, 2, 5], [1, 6, 4, 2, 1], [6, 5, 1, 3, 5], [2, 0, 3, 1, 1], [4, 2, 5, 6, 2], [1, 3, 5, 2, 0]]},\n    outputs=[[5, 3, 5, 0], [3, 3, 4, 5], [4, 4, 6, 5, 3], [1, 6, 1, 0, 5], [5, 4, 6, 3], [5, 6, 5, 5, 3], [3, 0, 6, 5], [6, 4, 4], [3, 4, 4, 3], [3, 4, 5], [1, 6, 4, 1], [6, 5, 1, 3, 5], [0, 3, 1, 1], [4, 5, 6], [1, 3, 5, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.3733352269919,
            "num_unique_values": 967,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.3206650831354,
                "explored_percent_lambda": 19.01821060965954,
                "explored_percent_none": 15.661124307205068,
                "kept_percent_concrete": 60.24973985431842,
                "kept_percent_lambda": 39.75026014568158,
                "num_examples": 15,
                "num_explored_concrete": 4125,
                "num_explored_lambda": 1201,
                "num_explored_none": 989,
                "num_inputs": 1,
                "num_kept_concrete": 579,
                "num_kept_lambda": 382,
                "num_values_explored": 6315,
                "num_values_kept": 961,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 190898
            },
            "success": false,
            "task": "Task(\n    name='keep gt 2',\n    inputs_dict={'x1': [[4, 5, 3, 6, 0], [2, 1, 3, 6, 5], [2, 1, 4, 0, 1], [0, 6, 1, 2, 4], [6, 0, 1, 4, 4], [0, 2, 4, 5, 4], [3, 4, 0, 5, 6], [2, 3, 3, 2, 4], [5, 5, 2, 1, 1], [0, 5, 6, 2, 6], [3, 6, 2, 1, 3], [6, 4, 1, 6, 6], [6, 1, 2, 4, 5], [3, 4, 1, 3, 4], [2, 1, 1, 3, 2]]},\n    outputs=[[4, 5, 3, 6], [3, 6, 5], [4], [6, 4], [6, 4, 4], [4, 5, 4], [3, 4, 5, 6], [3, 3, 4], [5, 5], [5, 6, 6], [3, 6, 3], [6, 4, 6, 6], [6, 4, 5], [3, 4, 3, 4], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2677178950107,
            "num_unique_values": 899,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.89831585637115,
                "explored_percent_lambda": 16.396568160152526,
                "explored_percent_none": 23.705115983476325,
                "kept_percent_concrete": 63.045912653975364,
                "kept_percent_lambda": 36.954087346024636,
                "num_examples": 15,
                "num_explored_concrete": 3770,
                "num_explored_lambda": 1032,
                "num_explored_none": 1492,
                "num_inputs": 1,
                "num_kept_concrete": 563,
                "num_kept_lambda": 330,
                "num_values_explored": 6294,
                "num_values_kept": 893,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 193456
            },
            "success": false,
            "task": "Task(\n    name='keep eq 3',\n    inputs_dict={'x1': [[5, 1, 6, 1, 3], [2, 2, 4, 2, 2], [5, 2, 3, 4, 5], [0, 2, 4, 4, 4], [2, 6, 2, 4, 5], [4, 5, 4, 1, 6], [0, 6, 0, 1, 2], [3, 5, 5, 4, 5], [0, 3, 4, 1, 0], [2, 5, 0, 5, 5], [4, 1, 1, 6, 0], [0, 6, 6, 2, 5], [0, 2, 1, 1, 0], [6, 1, 1, 3, 3], [0, 5, 6, 3, 1]]},\n    outputs=[[3], [], [3], [], [], [], [], [3], [3], [], [], [], [], [3, 3], [3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.4468839940091,
            "num_unique_values": 982,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.1059935946317,
                "explored_percent_lambda": 16.394692694829953,
                "explored_percent_none": 18.499313710538356,
                "kept_percent_concrete": 63.217213114754095,
                "kept_percent_lambda": 36.782786885245905,
                "num_examples": 15,
                "num_explored_concrete": 4269,
                "num_explored_lambda": 1075,
                "num_explored_none": 1213,
                "num_inputs": 1,
                "num_kept_concrete": 617,
                "num_kept_lambda": 359,
                "num_values_explored": 6557,
                "num_values_kept": 976,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 194171
            },
            "success": false,
            "task": "Task(\n    name='remove eq 3',\n    inputs_dict={'x1': [[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0, 3], [1, 5, 5, 5, 6], [5, 3, 4, 4, 5], [3, 0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 3, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 3, 6, 0], [3, 6, 1, 4, 4], [6, 3, 6, 1, 1]]},\n    outputs=[[4, 6, 6, 0, 1], [6, 6, 2, 2, 0], [0, 6, 0, 0], [1, 5, 5, 5, 6], [5, 4, 4, 5], [0, 2, 4, 6], [4, 1, 5, 0, 4], [2, 2, 1, 2, 5], [6, 4, 2, 1], [1, 4, 6, 4, 6], [2, 0, 6, 6, 1], [5, 1, 4, 2, 6], [2, 2, 6, 0], [6, 1, 4, 4], [6, 6, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.32955565600423,
            "num_unique_values": 948,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.302286198137175,
                "explored_percent_lambda": 19.695173581710414,
                "explored_percent_none": 17.00254022015241,
                "kept_percent_concrete": 54.45859872611465,
                "kept_percent_lambda": 45.54140127388535,
                "num_examples": 15,
                "num_explored_concrete": 3738,
                "num_explored_lambda": 1163,
                "num_explored_none": 1004,
                "num_inputs": 1,
                "num_kept_concrete": 513,
                "num_kept_lambda": 429,
                "num_values_explored": 5905,
                "num_values_kept": 942,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 182555
            },
            "success": false,
            "task": "Task(\n    name='remove gt 3',\n    inputs_dict={'x1': [[3, 1, 4, 3, 3], [2, 2, 5, 1, 2], [4, 1, 4, 6, 4], [3, 2, 0, 4, 2], [3, 3, 3, 1, 1], [2, 3, 6, 5, 3], [3, 2, 2, 3, 5], [3, 2, 1, 5, 0], [4, 3, 1, 4, 0], [3, 1, 3, 2, 6], [6, 4, 1, 6, 0], [3, 5, 0, 1, 4], [5, 6, 3, 1, 2], [4, 3, 3, 4, 3], [2, 3, 2, 1, 2]]},\n    outputs=[[3, 1, 3, 3], [2, 2, 1, 2], [1], [3, 2, 0, 2], [3, 3, 3, 1, 1], [2, 3, 3], [3, 2, 2, 3], [3, 2, 1, 0], [3, 1, 0], [3, 1, 3, 2], [1, 0], [3, 0, 1], [3, 1, 2], [3, 3, 3], [2, 3, 2, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.84319255701848,
            "num_unique_values": 297,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 41.106128550074736,
                "explored_percent_lambda": 28.923766816143498,
                "explored_percent_none": 29.970104633781762,
                "kept_percent_concrete": 41.23711340206186,
                "kept_percent_lambda": 58.76288659793814,
                "num_examples": 15,
                "num_explored_concrete": 550,
                "num_explored_lambda": 387,
                "num_explored_none": 401,
                "num_inputs": 1,
                "num_kept_concrete": 120,
                "num_kept_lambda": 171,
                "num_values_explored": 1338,
                "num_values_kept": 291,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 38244
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 161.97450275800657,
            "num_unique_values": 125,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 17.656500802568218,
                "explored_percent_lambda": 45.10433386837881,
                "explored_percent_none": 37.239165329052966,
                "kept_percent_concrete": 19.327731092436974,
                "kept_percent_lambda": 80.67226890756302,
                "num_examples": 15,
                "num_explored_concrete": 110,
                "num_explored_lambda": 281,
                "num_explored_none": 232,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 96,
                "num_values_explored": 623,
                "num_values_kept": 119,
                "temperature": 1.0,
                "total_num_restarts": 18,
                "total_num_values_explored": 102261
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-geq-k with k=2',\n    inputs_dict={'x1': [[14, 2, 10, 5, 6], [14, -1, -1, -1, 1, -1], [0, -1], [1, 3, 4, 1, 13, 9], [13], [], [-1, -1, 6, 15], [11, 11, 7, 1], [9, 0, 4, 3, 1, 10, 0], [8, 5, 9, 13, 1, 13], [0, 10, 0, 0], [15, 2, 13, 11, 5, 9, 4], [12], [9, 13, 10, 11, 11], [1]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0, 0], [0, 1, 1, 0, 1, 1], [1], [], [0, 0, 1, 1], [1, 1, 1, 0], [1, 0, 1, 1, 0, 1, 0], [1, 1, 1, 1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 1, 1, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1799205970019,
            "num_unique_values": 920,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.5164903546982,
                "explored_percent_lambda": 21.017423771001866,
                "explored_percent_none": 18.46608587429994,
                "kept_percent_concrete": 55.25164113785558,
                "kept_percent_lambda": 44.74835886214442,
                "num_examples": 15,
                "num_explored_concrete": 3890,
                "num_explored_lambda": 1351,
                "num_explored_none": 1187,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 409,
                "num_values_explored": 6428,
                "num_values_kept": 914,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 192213
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=3',\n    inputs_dict={'x1': [[5, 5, 7], [7, 11, 2, 3, 2, 2, 10], [-1], [8, 4, 1, 7], [2, 9, 2, 2, 2], [4, 9], [11, 4, 4, 4, 4], [12, 6, 11, 16, 7, 10, 3], [5, 5, 16], [7], [4], [7, 5, 6, 7, 9, 3], [5, 5], [0, 9, 0], [4, 0]]},\n    outputs=[[1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [0], [1, 1, 0, 1], [0, 1, 0, 0, 0], [1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1], [1], [1], [1, 1, 1, 1, 1, 1], [1, 1], [0, 1, 0], [1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1870014799933415,
            "num_unique_values": 74,
            "solution": "Map((lambda u1: 1), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 45.22292993630573,
                "explored_percent_lambda": 38.853503184713375,
                "explored_percent_none": 15.92356687898089,
                "kept_percent_concrete": 29.41176470588235,
                "kept_percent_lambda": 70.58823529411765,
                "num_examples": 15,
                "num_explored_concrete": 71,
                "num_explored_lambda": 61,
                "num_explored_none": 25,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 48,
                "num_values_explored": 157,
                "num_values_kept": 68,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 157
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=1',\n    inputs_dict={'x1': [[], [0, 7, 0, 8, 1, 15, 10], [6, 8, 6, 14, 11, 4, 15], [], [1, 1, 1, 1, 1, 6, 1], [11, 0, 1, 1, 1, 1, 1], [13, 7, 9, 10], [], [12], [1, 1, 1], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], []]},\n    outputs=[[], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1], [], [1], [1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 71.71312813300756,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsPrime(v1)))(v1), 1, 0)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 19.53125,
                "explored_percent_lambda": 43.90625,
                "explored_percent_none": 36.5625,
                "kept_percent_concrete": 23.80952380952381,
                "kept_percent_lambda": 76.19047619047619,
                "num_examples": 15,
                "num_explored_concrete": 125,
                "num_explored_lambda": 281,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 30,
                "num_kept_lambda": 96,
                "num_values_explored": 640,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 46822
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-is-prime',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [2, 3, 4, 5, 7, 9], [7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5]]},\n    outputs=[[1], [1, 0], [1, 1], [1, 1, 0], [1, 1, 0, 1, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0], [1, 1, 0], [1, 0, 0, 0, 0], [0, 0, 0, 1], [1, 0, 1], [0, 0, 0, 1], [0], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5481904940097593,
            "num_unique_values": 126,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 18.38351822503962,
                "explored_percent_lambda": 44.05705229793978,
                "explored_percent_none": 37.5594294770206,
                "kept_percent_concrete": 20.833333333333332,
                "kept_percent_lambda": 79.16666666666667,
                "num_examples": 15,
                "num_explored_concrete": 116,
                "num_explored_lambda": 278,
                "num_explored_none": 237,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 95,
                "num_values_explored": 631,
                "num_values_kept": 120,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 1991
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[[0, 0, 1], [], [1, 0], [], [0, 0], [0, 0, 0], [1, 1, 0], [1, 1, 1], [0], [1, 0], [0, 0, 0, 1], [1, 1, 1, 0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09782221997738816,
            "num_unique_values": 77,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Greater(v1, 1)))(v1), 0, 1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.875,
                "explored_percent_lambda": 44.375,
                "explored_percent_none": 18.75,
                "kept_percent_concrete": 26.760563380281692,
                "kept_percent_lambda": 73.2394366197183,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 71,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 52,
                "num_values_explored": 160,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 160
            },
            "success": true,
            "task": "Task(\n    name='bool-identify-k with k=1',\n    inputs_dict={'x1': [[1, 2, 9, 16], [5, 8, 4, 13, 12], [15, 16], [1, 1, 1, 1], [], [1], [3, 3, 5, 1, 13], [1, 16, 1], [16, 6, 8, 13, 14], [1, 1, 1, 4, 1, 1], [6, 1, 1, 1], [8, 7], [1, 15], [1, 1, 1], []]},\n    outputs=[[1, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [1, 1, 1, 1], [], [1], [0, 0, 0, 1, 0], [1, 0, 1], [0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 1], [0, 1, 1, 1], [0, 0], [1, 0], [1, 1, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.2778467540047,
            "num_unique_values": 853,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.8458904109589,
                "explored_percent_lambda": 26.421232876712327,
                "explored_percent_none": 18.732876712328768,
                "kept_percent_concrete": 48.52420306965762,
                "kept_percent_lambda": 51.47579693034238,
                "num_examples": 15,
                "num_explored_concrete": 3203,
                "num_explored_lambda": 1543,
                "num_explored_none": 1094,
                "num_inputs": 1,
                "num_kept_concrete": 411,
                "num_kept_lambda": 436,
                "num_values_explored": 5840,
                "num_values_kept": 847,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 181027
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=2',\n    inputs_dict={'x1': [[14, 0, 2, 6], [2, 2, 2, 2, 2, 2, 2], [2], [2, 15], [0, 8, 7, 2, 5, 2], [9, 16, 3, 2, 7, 2], [13, 10, 9], [2, 2, 2, 2, 2, 2, 2], [2, 12, 11, 5, 12, 1], [8], [2, 2], [2, 2, 2, 2, 16, 2], [3], [3, 8, 1], [2, 2, 2, 2, 2, 2]]},\n    outputs=[[0, 0, 1, 0], [1, 1, 1, 1, 1, 1, 1], [1], [1, 0], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [0, 0, 0], [1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0], [0], [1, 1], [1, 1, 1, 1, 0, 1], [0], [0, 0, 0], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.100647162995301,
            "num_unique_values": 855,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.15025451992277,
                "explored_percent_lambda": 29.559417237142355,
                "explored_percent_none": 18.290328242934876,
                "kept_percent_concrete": 40.16489988221437,
                "kept_percent_lambda": 59.83510011778563,
                "num_examples": 15,
                "num_explored_concrete": 2971,
                "num_explored_lambda": 1684,
                "num_explored_none": 1042,
                "num_inputs": 1,
                "num_kept_concrete": 341,
                "num_kept_lambda": 508,
                "num_values_explored": 5697,
                "num_values_kept": 849,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 7057
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 0, 0], [], [1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0], [0], [0, 0, 0, 0, 1, 0, 1], [], [], [0, 1, 1, 0, 1, 1], [], [1, 1, 0, 0], [1], [1, 0, 1, 1, 1], []]},\n    outputs=[[1, 1, 1, 1, 0, 0], [0, 1, 1, 0, 1, 1], [], [0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1], [1], [1, 1, 1, 1, 0, 1, 0], [], [], [1, 0, 0, 1, 0, 0], [], [0, 0, 1, 1], [0], [0, 1, 0, 0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10833631199784577,
            "num_unique_values": 67,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 32.35294117647059,
                "explored_percent_lambda": 56.86274509803921,
                "explored_percent_none": 10.784313725490197,
                "kept_percent_concrete": 11.475409836065573,
                "kept_percent_lambda": 88.52459016393442,
                "num_examples": 15,
                "num_explored_concrete": 33,
                "num_explored_lambda": 58,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 54,
                "num_values_explored": 102,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 102
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16507931900559925,
            "num_unique_values": 130,
            "solution": "Cdr(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.98529411764706,
                "explored_percent_lambda": 32.720588235294116,
                "explored_percent_none": 10.294117647058824,
                "kept_percent_concrete": 47.58064516129032,
                "kept_percent_lambda": 52.41935483870968,
                "num_examples": 15,
                "num_explored_concrete": 155,
                "num_explored_lambda": 89,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 65,
                "num_values_explored": 272,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2954034860013053,
            "num_unique_values": 186,
            "solution": "Cdr(Cdr(Cdr(Cdr(x1))))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.6078431372549,
                "explored_percent_lambda": 24.18300653594771,
                "explored_percent_none": 6.209150326797386,
                "kept_percent_concrete": 58.888888888888886,
                "kept_percent_lambda": 41.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 426,
                "num_explored_lambda": 148,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 74,
                "num_values_explored": 612,
                "num_values_kept": 180,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 612
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=4',\n    inputs_dict={'x1': [[7, 0, 3, 6, 10, 4], [1, 13, 0, 6, 13], [0, 5, 2, 14, 9, 3], [0, 13, 4, 2], [5, 12, 2, 4, 15, 16], [5, 11, 5, 6, 7, 1, 3, 9, 14, 8], [4, 8, 4, 5], [12, 10, 12, 0, 2, 10, 9, 6], [7, 4, 8, 1], [7, 14, 14, 11, 8, 14, 3, 8, 6, 1], [14, 4, 4, 13, 12], [7, 16, 6, 13, 16, 4, 7], [4, 3, 8, 1, 14, 9, 6], [11, 1, 8, 6, 5, 4, 10, 12, 15, 8], [7, 2, 7, 14, 6, 0, 2, 14, 2, 16]]},\n    outputs=[[10, 4], [13], [9, 3], [], [15, 16], [7, 1, 3, 9, 14, 8], [], [2, 10, 9, 6], [], [8, 14, 3, 8, 6, 1], [12], [16, 4, 7], [14, 9, 6], [5, 4, 10, 12, 15, 8], [6, 0, 2, 14, 2, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09637825598474592,
            "num_unique_values": 77,
            "solution": "Index(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 42.65734265734266,
                "explored_percent_lambda": 45.45454545454545,
                "explored_percent_none": 11.888111888111888,
                "kept_percent_concrete": 21.12676056338028,
                "kept_percent_lambda": 78.87323943661971,
                "num_examples": 15,
                "num_explored_concrete": 61,
                "num_explored_lambda": 65,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 56,
                "num_values_explored": 143,
                "num_values_kept": 71,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 143
            },
            "success": true,
            "task": "Task(\n    name='index-head',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [1, 1], [1, 10, 1, 4], [1, 3], [2, 0, 15, 9, 10, 14], [3, 2, 6, 2, 15, 10, 13], [1, 6, 9, 3, 11, 1], [4, 9, 7, 7, 3, 2], [1, 11], [3, 6, 13, 4, 6]]},\n    outputs=[1, 2, 2, 4, 4, 8, 1, 10, 3, 15, 2, 6, 3, 11, 4],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07319135699071921,
            "num_unique_values": 61,
            "solution": "Car(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.93103448275862,
                "explored_percent_lambda": 48.275862068965516,
                "explored_percent_none": 13.793103448275861,
                "kept_percent_concrete": 14.545454545454545,
                "kept_percent_lambda": 85.45454545454545,
                "num_examples": 15,
                "num_explored_concrete": 44,
                "num_explored_lambda": 56,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 8,
                "num_kept_lambda": 47,
                "num_values_explored": 116,
                "num_values_kept": 55,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 116
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=2',\n    inputs_dict={'x1': [[15, 3, 9, 14, 0, 2, 5], [11, 7, 12, 5], [4, 14, 13, 8, 14, 14, 16], [3, 10], [13, 2], [1, 11], [10, 10, 6, 8, 1, 3, 0], [9, 9, 1], [11, 13, 10, 6, 8], [2, 5, 14], [8, 9, 0, 3, 2, 16, 12, 4, 8], [0, 8, 11, 16, 14, 13, 8], [8, 10, 0, 6, 10, 8, 10, 12, 11], [8, 13, 4, 4, 12, 7], [9, 1, 10, 13, 4, 11, 10, 5]]},\n    outputs=[3, 7, 14, 10, 2, 11, 10, 9, 13, 5, 9, 8, 10, 13, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16470144799677655,
            "num_unique_values": 139,
            "solution": "Index(1, Cdr(Cdr(x1)))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.74358974358974,
                "explored_percent_lambda": 25.32051282051282,
                "explored_percent_none": 9.935897435897436,
                "kept_percent_concrete": 57.89473684210526,
                "kept_percent_lambda": 42.10526315789474,
                "num_examples": 15,
                "num_explored_concrete": 202,
                "num_explored_lambda": 79,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 56,
                "num_values_explored": 312,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=4',\n    inputs_dict={'x1': [[1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5, 1, 10], [9, 13, 4, 8, 10, 3], [12, 9, 0, 0, 5], [10, 5, 2, 16, 10, 1, 9, 16, 8, 11, 16], [1, 11, 7, 2, 5, 9, 11, 13, 2, 9], [5, 11, 2, 10, 13, 9, 13, 16], [4, 5, 2, 14, 6, 9], [1, 1, 7, 3, 11, 16, 4, 10, 7, 5, 7], [2, 14, 10, 13], [10, 8, 6, 7, 15, 2, 9, 16], [4, 0, 3, 4, 9, 2, 15, 4, 8, 5, 8], [4, 16, 5, 11, 11, 14], [4, 6, 12, 8], [14, 9, 7, 11]]},\n    outputs=[11, 4, 8, 0, 16, 2, 10, 14, 3, 13, 7, 4, 11, 8, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1026853969961,
            "num_unique_values": 536,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.11219053588217,
                "explored_percent_lambda": 16.107803196490128,
                "explored_percent_none": 21.7800062676277,
                "kept_percent_concrete": 63.58490566037736,
                "kept_percent_lambda": 36.41509433962264,
                "num_examples": 15,
                "num_explored_concrete": 1982,
                "num_explored_lambda": 514,
                "num_explored_none": 695,
                "num_inputs": 1,
                "num_kept_concrete": 337,
                "num_kept_lambda": 193,
                "num_values_explored": 3191,
                "num_values_kept": 530,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 180406
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=1',\n    inputs_dict={'x1': [[4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [0, 6, 4, 12, 15], [2, 16, 2, 5, 15, 6, 7], [6, 11, 0, 11, 7, 9], [9, 10, 4], [1, 13, 10, 13], [6, 1, 13, 7], [1, 12, 3], [14, 1], [2, 13, 3], [14, 13, 12, 6], [6, 14, 7], [13, 14, 7, 1, 0, 11, 0]]},\n    outputs=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1623004350112751,
            "num_unique_values": 106,
            "solution": "Mod(Car(x1), Add(1, 1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.84905660377358,
                "explored_percent_lambda": 28.77358490566038,
                "explored_percent_none": 10.377358490566039,
                "kept_percent_concrete": 43.0,
                "kept_percent_lambda": 57.0,
                "num_examples": 15,
                "num_explored_concrete": 129,
                "num_explored_lambda": 61,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 57,
                "num_values_explored": 212,
                "num_values_kept": 100,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 212
            },
            "success": true,
            "task": "Task(\n    name='is-odds',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [9, 7, 27], [6, 4, 6, 12, 0, 8, 1], [13, 3, 9, 25, 25], [31, 33, 19, 25, 31, 1, 5], [27, 29, 15, 21, 19], [17, 3, 21, 9], [21, 9, 33], [11, 31, 17, 21, 27, 25, 15], [12], [11, 33, 21, 33, 17, 15], [4, 1, 12, 0, 9], [1, 7, 3], [31, 7, 19, 29, 1]]},\n    outputs=[0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 301.1293621030054,
            "num_unique_values": 411,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.29757785467128,
                "explored_percent_lambda": 25.086505190311417,
                "explored_percent_none": 28.6159169550173,
                "kept_percent_concrete": 35.30864197530864,
                "kept_percent_lambda": 64.69135802469135,
                "num_examples": 15,
                "num_explored_concrete": 1338,
                "num_explored_lambda": 725,
                "num_explored_none": 827,
                "num_inputs": 1,
                "num_kept_concrete": 143,
                "num_kept_lambda": 262,
                "num_values_explored": 2890,
                "num_values_kept": 405,
                "temperature": 1.0,
                "total_num_restarts": 31,
                "total_num_values_explored": 87604
            },
            "success": false,
            "task": "Task(\n    name='is-squares',\n    inputs_dict={'x1': [[25], [3], [1, 4], [1, 4, 9], [1, 4, 9, 15], [144, 169], [9, 1], [196, 49, 9, 1, 81, 81, 25], [16, 49, 100], [], [4, 15, 1], [2], [9, 10, 11], [169, 25, 25, 64, 49, 16, 256], [256, 64, 169, 64, 0, 196]]},\n    outputs=[1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2884998630033806,
            "num_unique_values": 141,
            "solution": "Cons(Index(1, Cdr(x1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.800664451827245,
                "explored_percent_lambda": 31.229235880398672,
                "explored_percent_none": 8.970099667774086,
                "kept_percent_concrete": 53.333333333333336,
                "kept_percent_lambda": 46.666666666666664,
                "num_examples": 15,
                "num_explored_concrete": 180,
                "num_explored_lambda": 94,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 63,
                "num_values_explored": 301,
                "num_values_kept": 135,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=3',\n    inputs_dict={'x1': [[15, 12, 9, 14, 7, 9], [7, 8, 1, 6, 16, 11], [11, 3, 1, 8, 15, 7, 7, 14, 1], [9, 11, 15, 2], [11, 3, 6], [6, 8, 5, 6, 10, 3], [4, 3, 8, 13, 2, 12, 6, 9, 1], [3, 15, 13, 1, 8, 13, 9, 6], [6, 3, 0, 5, 4, 2], [6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 10, 5, 16], [8, 14, 3, 5, 11], [11, 10, 3, 14, 0, 5], [15, 6, 14, 4, 12, 0, 15], [13, 16, 6, 9, 16, 6, 10]]},\n    outputs=[[9, 15, 12, 9, 14, 7, 9], [1, 7, 8, 1, 6, 16, 11], [1, 11, 3, 1, 8, 15, 7, 7, 14, 1], [15, 9, 11, 15, 2], [6, 11, 3, 6], [5, 6, 8, 5, 6, 10, 3], [8, 4, 3, 8, 13, 2, 12, 6, 9, 1], [13, 3, 15, 13, 1, 8, 13, 9, 6], [0, 6, 3, 0, 5, 4, 2], [15, 6, 10, 15, 8, 14, 3, 4, 16, 1], [5, 5, 10, 5, 16], [3, 8, 14, 3, 5, 11], [3, 11, 10, 3, 14, 0, 5], [14, 15, 6, 14, 4, 12, 0, 15], [6, 13, 16, 6, 9, 16, 6, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3349661900138017,
            "num_unique_values": 160,
            "solution": "Cons(Car(Cdr(Cdr(Cdr(Cdr(x1))))), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 76.28705148205928,
                "explored_percent_lambda": 17.784711388455538,
                "explored_percent_none": 5.928237129485179,
                "kept_percent_concrete": 59.74025974025974,
                "kept_percent_lambda": 40.25974025974026,
                "num_examples": 15,
                "num_explored_concrete": 489,
                "num_explored_lambda": 114,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 62,
                "num_values_explored": 641,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 641
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0937850670015905,
            "num_unique_values": 62,
            "solution": "Cons(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 48.85496183206107,
                "explored_percent_lambda": 38.16793893129771,
                "explored_percent_none": 12.977099236641221,
                "kept_percent_concrete": 21.428571428571427,
                "kept_percent_lambda": 78.57142857142857,
                "num_examples": 15,
                "num_explored_concrete": 64,
                "num_explored_lambda": 50,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 56,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=1',\n    inputs_dict={'x1': [[2, 9, 7, 12, 6], [8, 12, 11, 7, 12], [15, 15, 15, 12, 8, 12], [9, 3, 5, 6, 11, 12], [], [13, 13, 16, 13, 0, 14, 13], [9, 15, 2], [16, 9, 10, 8, 8, 1, 0], [5], [16, 3, 3, 9, 11, 6, 0], [4, 16, 10, 8], [5, 10, 10, 14, 10, 8, 6], [15, 3, 5], [9, 6, 16, 11], [6]]},\n    outputs=[[1, 2, 9, 7, 12, 6], [1, 8, 12, 11, 7, 12], [1, 15, 15, 15, 12, 8, 12], [1, 9, 3, 5, 6, 11, 12], [1], [1, 13, 13, 16, 13, 0, 14, 13], [1, 9, 15, 2], [1, 16, 9, 10, 8, 8, 1, 0], [1, 5], [1, 16, 3, 3, 9, 11, 6, 0], [1, 4, 16, 10, 8], [1, 5, 10, 10, 14, 10, 8, 6], [1, 15, 3, 5], [1, 9, 6, 16, 11], [1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0998210439865943,
            "num_unique_values": 66,
            "solution": "Cons(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.038167938931295,
                "explored_percent_lambda": 40.458015267175576,
                "explored_percent_none": 14.50381679389313,
                "kept_percent_concrete": 26.666666666666668,
                "kept_percent_lambda": 73.33333333333333,
                "num_examples": 15,
                "num_explored_concrete": 59,
                "num_explored_lambda": 53,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 44,
                "num_values_explored": 131,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 131
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19573799800127745,
            "num_unique_values": 122,
            "solution": "Cons(Add(1, Add(1, 1)), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.475083056478404,
                "explored_percent_lambda": 29.235880398671096,
                "explored_percent_none": 13.289036544850498,
                "kept_percent_concrete": 48.275862068965516,
                "kept_percent_lambda": 51.724137931034484,
                "num_examples": 15,
                "num_explored_concrete": 173,
                "num_explored_lambda": 88,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 60,
                "num_values_explored": 301,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08663896698271856,
            "num_unique_values": 65,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 35.23809523809524,
                "explored_percent_lambda": 51.42857142857143,
                "explored_percent_none": 13.333333333333334,
                "kept_percent_concrete": 11.864406779661017,
                "kept_percent_lambda": 88.13559322033899,
                "num_examples": 15,
                "num_explored_concrete": 37,
                "num_explored_lambda": 54,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 52,
                "num_values_explored": 105,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 105
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=1',\n    inputs_dict={'x1': [[4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0, 6], [8, 10, 12, 11, 8, 8], [4, 4, 12, 7, 13, 9, 1], [13, 4, 11, 10, 5], [12, 14, 15, 4, 8, 1, 0, 10], [0, 10, 4, 11, 14], [13], [10], [2, 8, 12], [1], [12, 15, 10, 10, 3, 8, 1], [6, 10, 8, 14, 2, 12], [6, 0], [16]]},\n    outputs=[[8, 11, 0, 8, 11], [13, 8, 15, 8, 10, 0, 6], [10, 12, 11, 8, 8], [4, 12, 7, 13, 9, 1], [4, 11, 10, 5], [14, 15, 4, 8, 1, 0, 10], [10, 4, 11, 14], [], [], [8, 12], [], [15, 10, 10, 3, 8, 1], [10, 8, 14, 2, 12], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10933085999567993,
            "num_unique_values": 67,
            "solution": "Map((lambda u1: Car(Cdr(x1))), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 50.64935064935065,
                "explored_percent_lambda": 36.36363636363637,
                "explored_percent_none": 12.987012987012987,
                "kept_percent_concrete": 24.59016393442623,
                "kept_percent_lambda": 75.40983606557377,
                "num_examples": 15,
                "num_explored_concrete": 78,
                "num_explored_lambda": 56,
                "num_explored_none": 20,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 46,
                "num_values_explored": 154,
                "num_values_kept": 61,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11088185399421491,
            "num_unique_values": 72,
            "solution": "Map((lambda u1: Index(1, Cdr(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.830065359477125,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 24.242424242424242,
                "kept_percent_lambda": 75.75757575757575,
                "num_examples": 15,
                "num_explored_concrete": 72,
                "num_explored_lambda": 64,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 50,
                "num_values_explored": 153,
                "num_values_kept": 66,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 153
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=3',\n    inputs_dict={'x1': [[4, 7, 15, 9, 4, 15, 3], [2, 8, 0, 11, 14, 13, 12, 10, 1, 15], [12, 6, 11, 4], [8, 5, 9, 6, 6, 10], [2, 2, 16, 14, 9, 11, 11], [2, 14, 16, 10, 9, 6], [11, 5, 2, 1, 4, 8], [12, 12, 14, 10, 3], [5, 15, 7, 9, 9, 5, 10, 5], [14, 0, 6, 5, 14, 1, 2, 5, 3], [15, 14, 8, 5], [5, 11, 5, 1, 16, 1], [7, 15, 15, 7], [0, 1, 4, 13, 14], [7, 10, 4, 1, 12]]},\n    outputs=[[15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, 11, 11, 11], [9, 9, 9, 9, 9, 9], [16, 16, 16, 16, 16, 16, 16], [16, 16, 16, 16, 16, 16], [2, 2, 2, 2, 2, 2], [14, 14, 14, 14, 14], [7, 7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6, 6, 6, 6], [8, 8, 8, 8], [5, 5, 5, 5, 5, 5], [15, 15, 15, 15], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2007831720111426,
            "num_unique_values": 135,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), []))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.47176079734219,
                "explored_percent_lambda": 30.564784053156146,
                "explored_percent_none": 10.96345514950166,
                "kept_percent_concrete": 54.263565891472865,
                "kept_percent_lambda": 45.736434108527135,
                "num_examples": 15,
                "num_explored_concrete": 176,
                "num_explored_lambda": 92,
                "num_explored_none": 33,
                "num_inputs": 1,
                "num_kept_concrete": 70,
                "num_kept_lambda": 59,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09858906097360887,
            "num_unique_values": 66,
            "solution": "Cons(Car(Cdr(x1)), [])",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.45454545454545,
                "explored_percent_lambda": 43.18181818181818,
                "explored_percent_none": 11.363636363636363,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 15,
                "num_explored_concrete": 60,
                "num_explored_lambda": 57,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 48,
                "num_values_explored": 132,
                "num_values_kept": 60,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 132
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20220650598639622,
            "num_unique_values": 135,
            "solution": "Cons(Index(1, Cdr(x1)), [])",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 63.12292358803987,
                "explored_percent_lambda": 27.242524916943523,
                "explored_percent_none": 9.634551495016611,
                "kept_percent_concrete": 58.13953488372093,
                "kept_percent_lambda": 41.86046511627907,
                "num_examples": 15,
                "num_explored_concrete": 190,
                "num_explored_lambda": 82,
                "num_explored_none": 29,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 54,
                "num_values_explored": 301,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 301
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.3076923076923077
}