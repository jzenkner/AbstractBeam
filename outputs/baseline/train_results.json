{
    "num_operations": 17,
    "num_tasks": 109,
    "num_tasks_solved": 32,
    "results": [
        {
            "elapsed_time": 2.533728240057826,
            "num_unique_values": 142,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, 1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 19.499105545617173,
                "explored_percent_lambda": 42.93381037567084,
                "explored_percent_none": 37.567084078711986,
                "kept_percent_concrete": 14.705882352941176,
                "kept_percent_lambda": 85.29411764705883,
                "num_examples": 15,
                "num_explored_concrete": 109,
                "num_explored_lambda": 240,
                "num_explored_none": 210,
                "num_inputs": 1,
                "num_kept_concrete": 20,
                "num_kept_lambda": 116,
                "num_values_explored": 559,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=1',\n    inputs_dict={'x1': [[3, 4, 4, 13, 6], [], [0, 2, 12, 2, 11, 0], [4, 12, 15], [15, 2, 16, 2, 5, 15, 6], [8, 13, 6], [0, 11, 7, 9, 3], [9, 10, 4], [9, 1, 13, 10, 13], [9, 6], [], [7, 9, 8, 1, 12, 3], [4, 14, 1], [6, 2, 13], [14]]},\n    outputs=[[4, 5, 5, 14, 7], [], [1, 3, 13, 3, 12, 1], [5, 13, 16], [16, 3, 17, 3, 6, 16, 7], [9, 14, 7], [1, 12, 8, 10, 4], [10, 11, 5], [10, 2, 14, 11, 14], [10, 7], [], [8, 10, 9, 2, 13, 4], [5, 15, 2], [7, 3, 14], [15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.737557175103575,
            "num_unique_values": 448,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, Add(1, Add(1, 1)))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 39.891785538612886,
                "explored_percent_lambda": 31.529758976881457,
                "explored_percent_none": 28.578455484505657,
                "kept_percent_concrete": 41.4027149321267,
                "kept_percent_lambda": 58.5972850678733,
                "num_examples": 15,
                "num_explored_concrete": 811,
                "num_explored_lambda": 641,
                "num_explored_none": 581,
                "num_inputs": 1,
                "num_kept_concrete": 183,
                "num_kept_lambda": 259,
                "num_values_explored": 2033,
                "num_values_kept": 442,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5273
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=3',\n    inputs_dict={'x1': [[], [3], [9, 14, 9], [7, 11, 6, 14, 4], [12, 11, 1, 7, 8, 4, 5], [8, 6, 10], [1, 9, 7, 8], [], [7, 14, 1], [11, 14, 7], [2, 14, 15], [9, 2, 11, 4, 13, 11], [], [8, 8], [2, 4, 6, 9, 13]]},\n    outputs=[[], [6], [12, 17, 12], [10, 14, 9, 17, 7], [15, 14, 4, 10, 11, 7, 8], [11, 9, 13], [4, 12, 10, 11], [], [10, 17, 4], [14, 17, 10], [5, 17, 18], [12, 5, 14, 7, 16, 14], [], [11, 11], [5, 7, 9, 12, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.077500134240836,
            "num_unique_values": 657,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.78765109441359,
                "explored_percent_lambda": 27.96471741261026,
                "explored_percent_none": 22.24763149297615,
                "kept_percent_concrete": 44.39324116743472,
                "kept_percent_lambda": 55.60675883256528,
                "num_examples": 15,
                "num_explored_concrete": 1524,
                "num_explored_lambda": 856,
                "num_explored_none": 681,
                "num_inputs": 1,
                "num_kept_concrete": 289,
                "num_kept_lambda": 362,
                "num_values_explored": 3061,
                "num_values_kept": 651,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9300
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=4',\n    inputs_dict={'x1': [[16, 10, 7, 12, 13, 3], [3, 2, 8, 8, 7, 0, 9], [3], [9, 3, 7, 14], [14, 12, 9, 15, 7], [15, 7, 9], [], [0, 3, 8, 15, 3, 3, 0], [9, 10, 10], [], [11, 11, 1, 7, 3, 2], [0], [10, 8], [4, 7, 15, 3, 2], []]},\n    outputs=[[20, 14, 11, 16, 17, 7], [7, 6, 12, 12, 11, 4, 13], [7], [13, 7, 11, 18], [18, 16, 13, 19, 11], [19, 11, 13], [], [4, 7, 12, 19, 7, 7, 4], [13, 14, 14], [], [15, 15, 5, 11, 7, 6], [4], [14, 12], [8, 11, 19, 7, 6], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.075513808056712,
            "num_unique_values": 560,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.36056158264199,
                "explored_percent_lambda": 21.21888959795788,
                "explored_percent_none": 23.42054881940013,
                "kept_percent_concrete": 59.56678700361011,
                "kept_percent_lambda": 40.43321299638989,
                "num_examples": 15,
                "num_explored_concrete": 1735,
                "num_explored_lambda": 665,
                "num_explored_none": 734,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 224,
                "num_values_explored": 3134,
                "num_values_kept": 554,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9084
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=2',\n    inputs_dict={'x1': [[11, 5, 15, 11], [3, 15], [0, 6, 13, 5], [6, 2, 7, 12, 8, 14, 16, 4, 12], [4, 6, 10, 13], [5, 1, 1, 13, 5, 0, 1], [14, 12, 12, 15, 5, 12, 2, 8, 2], [11, 4], [1, 7, 8, 8, 1, 5, 15, 6], [7, 12, 7, 8, 13, 11, 8, 4], [15, 0, 11, 14], [13, 12, 1, 2, 5, 1, 14], [1, 3, 1, 4, 15], [4, 11, 8, 4, 10, 11, 4], [12, 14, 9]]},\n    outputs=[[11, 5, 15, 11, 5], [3, 15, 15], [0, 6, 13, 5, 6], [6, 2, 7, 12, 8, 14, 16, 4, 12, 2], [4, 6, 10, 13, 6], [5, 1, 1, 13, 5, 0, 1, 1], [14, 12, 12, 15, 5, 12, 2, 8, 2, 12], [11, 4, 4], [1, 7, 8, 8, 1, 5, 15, 6, 7], [7, 12, 7, 8, 13, 11, 8, 4, 12], [15, 0, 11, 14, 0], [13, 12, 1, 2, 5, 1, 14, 12], [1, 3, 1, 4, 15, 3], [4, 11, 8, 4, 10, 11, 4, 11], [12, 14, 9, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.083656609989703,
            "num_unique_values": 572,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.25806451612903,
                "explored_percent_lambda": 22.387096774193548,
                "explored_percent_none": 23.35483870967742,
                "kept_percent_concrete": 60.24734982332156,
                "kept_percent_lambda": 39.75265017667844,
                "num_examples": 15,
                "num_explored_concrete": 1682,
                "num_explored_lambda": 694,
                "num_explored_none": 724,
                "num_inputs": 1,
                "num_kept_concrete": 341,
                "num_kept_lambda": 225,
                "num_values_explored": 3100,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9489
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=3',\n    inputs_dict={'x1': [[0, 13, 12, 12], [6, 8, 2, 6, 7, 14, 9], [6, 15, 6, 15, 5, 13], [15, 13, 7, 2, 4, 10], [1, 2, 1, 7, 12, 15, 12, 13, 11, 4], [9, 5, 2, 15, 8, 1], [3, 13, 5, 7, 4, 3, 3], [6, 14, 12, 4, 4, 15, 3, 1, 4], [14, 2, 10, 6, 7, 9, 14, 2], [11, 11, 2, 9], [8, 6, 13, 11, 15, 2], [15, 0, 13, 10, 7, 1, 14, 5, 10, 10], [11, 0, 12, 10, 15, 13], [14, 10, 10, 14, 14, 2, 9], [12, 7, 16, 14]]},\n    outputs=[[0, 13, 12, 12, 12], [6, 8, 2, 6, 7, 14, 9, 2], [6, 15, 6, 15, 5, 13, 6], [15, 13, 7, 2, 4, 10, 7], [1, 2, 1, 7, 12, 15, 12, 13, 11, 4, 1], [9, 5, 2, 15, 8, 1, 2], [3, 13, 5, 7, 4, 3, 3, 5], [6, 14, 12, 4, 4, 15, 3, 1, 4, 12], [14, 2, 10, 6, 7, 9, 14, 2, 10], [11, 11, 2, 9, 2], [8, 6, 13, 11, 15, 2, 13], [15, 0, 13, 10, 7, 1, 14, 5, 10, 10, 13], [11, 0, 12, 10, 15, 13, 12], [14, 10, 10, 14, 14, 2, 9, 10], [12, 7, 16, 14, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.077324603218585,
            "num_unique_values": 559,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.196145477152626,
                "explored_percent_lambda": 19.02393534348772,
                "explored_percent_none": 23.779919179359652,
                "kept_percent_concrete": 63.65280289330922,
                "kept_percent_lambda": 36.34719710669078,
                "num_examples": 15,
                "num_explored_concrete": 1840,
                "num_explored_lambda": 612,
                "num_explored_none": 765,
                "num_inputs": 1,
                "num_kept_concrete": 352,
                "num_kept_lambda": 201,
                "num_values_explored": 3217,
                "num_values_kept": 553,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9501
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=4',\n    inputs_dict={'x1': [[2, 3, 13, 14, 11, 14, 14, 0, 5], [12, 14, 1, 8, 0, 5, 7, 3], [2, 4, 8, 9, 3], [5, 2, 13, 3, 0, 8], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7], [8, 1, 16, 6, 16], [5, 11, 8, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7], [14, 7, 10, 3, 1, 4], [3, 5, 4, 4, 2, 0, 1, 8], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7], [8, 13, 11, 9, 0, 13, 6, 16, 12], [5, 3, 7, 1, 14, 0, 0, 2], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16]]},\n    outputs=[[2, 3, 13, 14, 11, 14, 14, 0, 5, 14], [12, 14, 1, 8, 0, 5, 7, 3, 8], [2, 4, 8, 9, 3, 9], [5, 2, 13, 3, 0, 8, 3], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7, 9], [8, 1, 16, 6, 16, 6], [5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7, 9], [14, 7, 10, 3, 1, 4, 3], [3, 5, 4, 4, 2, 0, 1, 8, 4], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7, 14], [8, 13, 11, 9, 0, 13, 6, 16, 12, 9], [5, 3, 7, 1, 14, 0, 0, 2, 1], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4, 15], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.0800432250835,
            "num_unique_values": 534,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.315973324865034,
                "explored_percent_lambda": 30.771673547157828,
                "explored_percent_none": 23.912353127977134,
                "kept_percent_concrete": 38.63636363636363,
                "kept_percent_lambda": 61.36363636363637,
                "num_examples": 15,
                "num_explored_concrete": 1427,
                "num_explored_lambda": 969,
                "num_explored_none": 753,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 324,
                "num_values_explored": 3149,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9549
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=0',\n    inputs_dict={'x1': [[0, 14], [4, 0], [], [7, 7, 5], [3, 16, 10, 0, 8, 6, 4], [7, 7, 13, 12], [2, 2, 9], [14, 1, 4, 15, 11], [6, 4, 9], [15, 16], [3, 5], [], [], [5, 15, 4, 3], [8, 10, 0]]},\n    outputs=[[0, 14, 0], [4, 0, 0], [0], [7, 7, 5, 0], [3, 16, 10, 0, 8, 6, 4, 0], [7, 7, 13, 12, 0], [2, 2, 9, 0], [14, 1, 4, 15, 11, 0], [6, 4, 9, 0], [15, 16, 0], [3, 5, 0], [0], [0], [5, 15, 4, 3, 0], [8, 10, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.073083483614028,
            "num_unique_values": 567,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.35335689045937,
                "explored_percent_lambda": 24.381625441696112,
                "explored_percent_none": 25.26501766784452,
                "kept_percent_concrete": 48.484848484848484,
                "kept_percent_lambda": 51.515151515151516,
                "num_examples": 15,
                "num_explored_concrete": 1710,
                "num_explored_lambda": 828,
                "num_explored_none": 858,
                "num_inputs": 1,
                "num_kept_concrete": 272,
                "num_kept_lambda": 289,
                "num_values_explored": 3396,
                "num_values_kept": 561,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9989
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=3',\n    inputs_dict={'x1': [[7, 14, 9], [6, 15, 6], [5, 13, 8, 15, 13, 7, 2], [10, 16], [], [1], [12, 15, 12], [11, 4, 7, 9, 5, 2], [8, 1, 9, 3, 13, 5, 7], [3, 3], [6, 14, 12, 4, 4, 15], [1], [12, 14], [], [6, 7, 9, 14]]},\n    outputs=[[7, 14, 9, 3], [6, 15, 6, 3], [5, 13, 8, 15, 13, 7, 2, 3], [10, 16, 3], [3], [1, 3], [12, 15, 12, 3], [11, 4, 7, 9, 5, 2, 3], [8, 1, 9, 3, 13, 5, 7, 3], [3, 3, 3], [6, 14, 12, 4, 4, 15, 3], [1, 3], [12, 14, 3], [3], [6, 7, 9, 14, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.080099522136152,
            "num_unique_values": 534,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.26151560178306,
                "explored_percent_lambda": 27.072808320950966,
                "explored_percent_none": 24.665676077265974,
                "kept_percent_concrete": 41.47727272727273,
                "kept_percent_lambda": 58.52272727272727,
                "num_examples": 15,
                "num_explored_concrete": 1624,
                "num_explored_lambda": 911,
                "num_explored_none": 830,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 309,
                "num_values_explored": 3365,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9782
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=4',\n    inputs_dict={'x1': [[3], [11, 2, 9, 8, 8], [13, 11], [2, 16, 15, 0, 13, 10, 7], [], [5, 10, 10, 6, 11, 0], [10, 15, 13, 8, 14, 10], [14, 14, 2, 9, 2], [7, 16, 14, 12, 2], [13], [11, 14, 14, 0, 5, 10], [14, 1, 8, 0, 5, 7], [3], [], [8, 9]]},\n    outputs=[[3, 4], [11, 2, 9, 8, 8, 4], [13, 11, 4], [2, 16, 15, 0, 13, 10, 7, 4], [4], [5, 10, 10, 6, 11, 0, 4], [10, 15, 13, 8, 14, 10, 4], [14, 14, 2, 9, 2, 4], [7, 16, 14, 12, 2, 4], [13, 4], [11, 14, 14, 0, 5, 10, 4], [14, 1, 8, 0, 5, 7, 4], [3, 4], [4], [8, 9, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.052159593906254,
            "num_unique_values": 557,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.412199630314234,
                "explored_percent_lambda": 28.31176833025262,
                "explored_percent_none": 24.276032039433147,
                "kept_percent_concrete": 39.745916515426494,
                "kept_percent_lambda": 60.254083484573506,
                "num_examples": 15,
                "num_explored_concrete": 1539,
                "num_explored_lambda": 919,
                "num_explored_none": 788,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 332,
                "num_values_explored": 3246,
                "num_values_kept": 551,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9722
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=5',\n    inputs_dict={'x1': [[5], [2, 13], [0], [15, 0, 13], [9], [2, 1, 16, 7, 11, 7], [8], [], [6, 16, 1, 5, 11, 8, 5], [9, 14, 6, 9, 8, 2], [13, 3], [5, 14, 7], [3, 1, 4, 9], [5], [4, 2]]},\n    outputs=[[5, 5], [2, 13, 5], [0, 5], [15, 0, 13, 5], [9, 5], [2, 1, 16, 7, 11, 7, 5], [8, 5], [5], [6, 16, 1, 5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5], [13, 3, 5], [5, 14, 7, 5], [3, 1, 4, 9, 5], [5, 5], [4, 2, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.066261040978134,
            "num_unique_values": 554,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.14492753623188,
                "explored_percent_lambda": 32.93807641633729,
                "explored_percent_none": 31.91699604743083,
                "kept_percent_concrete": 37.59124087591241,
                "kept_percent_lambda": 62.40875912408759,
                "num_examples": 15,
                "num_explored_concrete": 1067,
                "num_explored_lambda": 1000,
                "num_explored_none": 969,
                "num_inputs": 1,
                "num_kept_concrete": 206,
                "num_kept_lambda": 342,
                "num_values_explored": 3036,
                "num_values_kept": 548,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9221
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=0',\n    inputs_dict={'x1': [[11, 11], [10, 6, 8, 4, 6, 6, 7], [1, 14, 0, 12, 14], [], [3, 3, 3, 3, 13, 14, 9], [3, 10, 8, 13, 11, 15], [10, 15, 5, 16, 9, 7, 9], [12, 2, 7, 1, 6], [0, 5, 6, 15, 0, 13], [1, 14, 12, 8, 4, 3, 12], [-1, -1, 13], [0, 0, 0], [5, 2, 5, 8, 2, 2], [12], [10, 16]]},\n    outputs=[[1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [0, 0, 1], [1, 1, 1], [1, 1, 1, 1, 1, 1], [1], [1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.067075326107442,
            "num_unique_values": 598,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.2226148409894,
                "explored_percent_lambda": 31.320269836170898,
                "explored_percent_none": 29.457115322839705,
                "kept_percent_concrete": 39.189189189189186,
                "kept_percent_lambda": 60.810810810810814,
                "num_examples": 15,
                "num_explored_concrete": 1221,
                "num_explored_lambda": 975,
                "num_explored_none": 917,
                "num_inputs": 1,
                "num_kept_concrete": 232,
                "num_kept_lambda": 360,
                "num_values_explored": 3113,
                "num_values_kept": 592,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9407
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=1',\n    inputs_dict={'x1': [[], [2, 5, 11], [], [6, 1, 3, 4, 15, 3], [12, 5, 7, 7, 2], [3, 3, 3, 3], [3, 3, 3, 3], [], [4, 4, 4, 0, 7, 4], [4], [6, 0, 1], [-3, -3], [1, 5, 1, 5, 6], [1, 2, 15, 11, 14, 1], [4, 15, 1, 15, 13, 10]]},\n    outputs=[[], [1, 1, 1], [], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1], [], [1, 1, 1, 0, 1, 1], [1], [1, 0, 1], [0, 0], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.055153073277324,
            "num_unique_values": 582,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.07765451664025,
                "explored_percent_lambda": 32.42472266244057,
                "explored_percent_none": 26.497622820919176,
                "kept_percent_concrete": 38.888888888888886,
                "kept_percent_lambda": 61.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 1296,
                "num_explored_lambda": 1023,
                "num_explored_none": 836,
                "num_inputs": 1,
                "num_kept_concrete": 224,
                "num_kept_lambda": 352,
                "num_values_explored": 3155,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9375
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-geq-k with k=4',\n    inputs_dict={'x1': [[], [7, 14, 7, 0], [7, 10, 16], [16, 16, 15, 13, 8], [7], [5, 15, 2, 15, 1, 10, 5], [], [12, 6, 15, 6, 14, 8, 6], [12, 13], [3], [], [15, 3, 3, 1, 3], [4], [2, 0, 1, 15, 2, 4, 0], [2, 15]]},\n    outputs=[[], [1, 1, 1, 0], [1, 1, 1], [1, 1, 1, 1, 1], [1], [1, 1, 0, 1, 0, 1, 1], [], [1, 1, 1, 1, 1, 1, 1], [1, 1], [0], [], [1, 0, 0, 0, 0], [1], [0, 0, 0, 1, 0, 1, 0], [0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.06148563325405,
            "num_unique_values": 571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.0873786407767,
                "explored_percent_lambda": 35.30744336569579,
                "explored_percent_none": 27.60517799352751,
                "kept_percent_concrete": 35.39823008849557,
                "kept_percent_lambda": 64.60176991150442,
                "num_examples": 15,
                "num_explored_concrete": 1146,
                "num_explored_lambda": 1091,
                "num_explored_none": 853,
                "num_inputs": 1,
                "num_kept_concrete": 200,
                "num_kept_lambda": 365,
                "num_values_explored": 3090,
                "num_values_kept": 565,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9211
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=3',\n    inputs_dict={'x1': [[5, 8, 8, 9, 4, 4], [11, 0, 1], [3, 3, 7, 3, 14], [1, 12, 8], [3, 3, 3, 5, 14], [3, 3], [], [12], [3], [2, 3, 16], [], [1, 6], [3, 3, 3, 3, 3], [3, 16, 11, 3], [16]]},\n    outputs=[[0, 0, 0, 1, 0, 0], [0, 1, 0], [1, 1, 0, 1, 0], [0, 1, 0], [1, 1, 1, 0, 0], [1, 1], [], [1], [1], [0, 1, 0], [], [0, 1], [1, 1, 1, 1, 1], [1, 0, 0, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.072255886159837,
            "num_unique_values": 557,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.1216999356085,
                "explored_percent_lambda": 33.19381841596909,
                "explored_percent_none": 29.68448164842241,
                "kept_percent_concrete": 37.74954627949183,
                "kept_percent_lambda": 62.25045372050817,
                "num_examples": 15,
                "num_explored_concrete": 1153,
                "num_explored_lambda": 1031,
                "num_explored_none": 922,
                "num_inputs": 1,
                "num_kept_concrete": 208,
                "num_kept_lambda": 343,
                "num_values_explored": 3106,
                "num_values_kept": 551,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9316
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-is-mod-k with k=4',\n    inputs_dict={'x1': [[], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [4, 4, 2, 4, 4, 4], [11, 12, 7], [14], [4, 0], [9, 1, 16], [13, 2], [2, 4], [9, 4, 5], [10, 4, 4], [1]]},\n    outputs=[[], [1, 0], [1, 1, 0, 0, 0, 0], [1], [1, 0, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1], [0, 1, 0], [0], [1, 1], [0, 0, 1], [0, 0], [0, 1], [0, 1, 0], [0, 1, 1], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.07188594294712,
            "num_unique_values": 624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.51477597712107,
                "explored_percent_lambda": 33.4604385128694,
                "explored_percent_none": 26.024785510009533,
                "kept_percent_concrete": 38.67313915857605,
                "kept_percent_lambda": 61.32686084142395,
                "num_examples": 15,
                "num_explored_concrete": 1275,
                "num_explored_lambda": 1053,
                "num_explored_none": 819,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 379,
                "num_values_explored": 3147,
                "num_values_kept": 618,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9300
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=3',\n    inputs_dict={'x1': [[2, 13], [3, 3, 3, 3, 3, 6, 3], [11, 0, 3, 3, 3, 3, 3], [13, 7, 9, 10], [], [12], [3, 3, 3], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10], [3, 3, 3, 4], [5, 16, 12]]},\n    outputs=[[0, 0], [1, 1, 1, 1, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0], [], [0], [1, 1, 1], [0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [], [0, 1, 0], [], [0, 0, 0, 0, 1, 0], [1, 1, 1, 0], [0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.070079807192087,
            "num_unique_values": 576,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.55072463768116,
                "explored_percent_lambda": 34.94363929146538,
                "explored_percent_none": 26.505636070853463,
                "kept_percent_concrete": 36.49122807017544,
                "kept_percent_lambda": 63.50877192982456,
                "num_examples": 15,
                "num_explored_concrete": 1197,
                "num_explored_lambda": 1085,
                "num_explored_none": 823,
                "num_inputs": 1,
                "num_kept_concrete": 208,
                "num_kept_lambda": 362,
                "num_values_explored": 3105,
                "num_values_kept": 570,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9184
            },
            "success": false,
            "task": "Task(\n    name='bool-identify-k with k=4',\n    inputs_dict={'x1': [[4, 4, 14, 4, 16], [6, 4, 4, 0], [], [4, 4, 4, 12], [4, 13, 10, 4, 4, 4], [4, 16, 10], [13, 4, 0, 1, 4], [4], [15, 1, 2, 7, 5, 4, 0], [4, 4, 4, 4, 4, 4], [2, 7, 12], [], [2, 7, 3, 3], [4, 4, 4, 4, 4], [6, 4, 2]]},\n    outputs=[[1, 1, 0, 1, 0], [0, 1, 1, 0], [], [1, 1, 1, 0], [1, 0, 0, 1, 1, 1], [1, 0, 0], [0, 1, 0, 0, 1], [1], [0, 0, 0, 0, 0, 1, 0], [1, 1, 1, 1, 1, 1], [0, 0, 0], [], [0, 0, 0, 0], [1, 1, 1, 1, 1], [0, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.000908504705876,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 17.839607201309327,
                "explored_percent_lambda": 45.49918166939444,
                "explored_percent_none": 36.661211129296234,
                "kept_percent_concrete": 19.841269841269842,
                "kept_percent_lambda": 80.15873015873017,
                "num_examples": 15,
                "num_explored_concrete": 109,
                "num_explored_lambda": 278,
                "num_explored_none": 224,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 101,
                "num_values_explored": 611,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 611
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 1, 0], [], [0, 0, 1, 0, 1, 0], [0, 1, 1], [1, 0, 1, 0, 0, 1, 0], [1, 1, 0], [0, 1, 0, 1, 0], [1, 1, 0], [1, 0, 1, 1, 1], [1, 0], [], [0, 1, 0, 0, 1, 0], [0, 1, 0], [0, 0, 1], [1]]},\n    outputs=[[1, 1, 1, 0, 1], [], [1, 1, 0, 1, 0, 1], [1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [0, 0, 1], [1, 0, 1, 0, 1], [0, 0, 1], [0, 1, 0, 0, 0], [0, 1], [], [1, 0, 1, 1, 0, 1], [1, 0, 1], [1, 1, 0], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.051503092050552,
            "num_unique_values": 615,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.3257328990228,
                "explored_percent_lambda": 33.02931596091205,
                "explored_percent_none": 26.644951140065146,
                "kept_percent_concrete": 39.57307060755337,
                "kept_percent_lambda": 60.42692939244663,
                "num_examples": 15,
                "num_explored_concrete": 1238,
                "num_explored_lambda": 1014,
                "num_explored_none": 818,
                "num_inputs": 1,
                "num_kept_concrete": 241,
                "num_kept_lambda": 368,
                "num_values_explored": 3070,
                "num_values_kept": 609,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9239
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[0, 0, 0, 2], [2, 2, 0, 2, 0, 0, 0], [2, 1, 1, 0, 1, 2], [], [], [2, 1, 2, 2], [1, 1, 1, 0, 0], [2, 1, 2, 2, 2], [1], [2, 0, 0, 2], [2, 0, 2], [1, 1], [2, 2, 1, 1], [2, 2, 1, 1, 2, 1, 1], [0, 0, 2, 2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.063478864263743,
            "num_unique_values": 664,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.152542372881356,
                "explored_percent_lambda": 34.440677966101696,
                "explored_percent_none": 24.406779661016948,
                "kept_percent_concrete": 40.27355623100304,
                "kept_percent_lambda": 59.72644376899696,
                "num_examples": 15,
                "num_explored_concrete": 1214,
                "num_explored_lambda": 1016,
                "num_explored_none": 720,
                "num_inputs": 1,
                "num_kept_concrete": 265,
                "num_kept_lambda": 393,
                "num_values_explored": 2950,
                "num_values_kept": 658,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8857
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=5',\n    inputs_dict={'x1': [[4, 3, 2, 3, 3, 1], [1, 0, 2, 2, 2, 0, 2], [1], [2, 1, 2, 4], [4, 3, 2, 4, 2], [4, 2, 2], [], [0, 0, 2, 4, 0, 1, 0], [2, 3, 3], [], [3, 3, 0, 2, 1, 0], [0], [2, 2], [1, 2, 4, 1, 0], []]},\n    outputs=[[0, 4, 3, 4, 4, 2], [2, 1, 3, 3, 3, 1, 3], [2], [3, 2, 3, 0], [0, 4, 3, 0, 3], [0, 3, 3], [], [1, 1, 3, 0, 1, 2, 1], [3, 4, 4], [], [4, 4, 1, 3, 2, 1], [1], [3, 3], [2, 3, 0, 2, 1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.078303002752364,
            "num_unique_values": 660,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.703804347826086,
                "explored_percent_lambda": 35.69972826086956,
                "explored_percent_none": 26.596467391304348,
                "kept_percent_concrete": 41.28440366972477,
                "kept_percent_lambda": 58.71559633027523,
                "num_examples": 15,
                "num_explored_concrete": 1110,
                "num_explored_lambda": 1051,
                "num_explored_none": 783,
                "num_inputs": 1,
                "num_kept_concrete": 270,
                "num_kept_lambda": 384,
                "num_values_explored": 2944,
                "num_values_kept": 654,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8848
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=4',\n    inputs_dict={'x1': [[2, 0], [0, 1, 1, 1, 1, 2], [1, 1], [0, 3, 1, 2, 3, 0, 0], [3, 0, 3, 3, 3], [3, 2, 2, 1, 2, 1], [], [0, 3, 1], [0], [1, 3, 2, 3, 2], [1, 2, 3, 3, 0, 1], [1, 1, 3, 1], [0], [], [2, 3, 0, 1, 2]]},\n    outputs=[[1, 3], [3, 0, 0, 0, 0, 1], [0, 0], [3, 2, 0, 1, 2, 3, 3], [2, 3, 2, 2, 2], [2, 1, 1, 0, 1, 0], [], [3, 2, 0], [3], [0, 2, 1, 2, 1], [0, 1, 2, 2, 3, 0], [0, 0, 2, 0], [3], [], [1, 2, 3, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.098852109164,
            "num_unique_values": 663,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.378555083360574,
                "explored_percent_lambda": 35.95946387708401,
                "explored_percent_none": 25.66198103955541,
                "kept_percent_concrete": 40.791476407914764,
                "kept_percent_lambda": 59.208523592085236,
                "num_examples": 15,
                "num_explored_concrete": 1174,
                "num_explored_lambda": 1100,
                "num_explored_none": 785,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 389,
                "num_values_explored": 3059,
                "num_values_kept": 657,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9154
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[0, 0, 0, 2], [2, 2, 0, 2, 0, 0, 0], [2, 1, 1, 0, 1, 2], [], [], [2, 1, 2, 2], [1, 1, 1, 0, 0], [2, 1, 2, 2, 2], [1], [2, 0, 0, 2], [2, 0, 2], [1, 1], [2, 2, 1, 1], [2, 2, 1, 1, 2, 1, 1], [0, 0, 2, 2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9129078849218786,
            "num_unique_values": 129,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 16.526138279932546,
                "explored_percent_lambda": 45.025295109612145,
                "explored_percent_none": 38.44856661045531,
                "kept_percent_concrete": 19.51219512195122,
                "kept_percent_lambda": 80.48780487804878,
                "num_examples": 15,
                "num_explored_concrete": 98,
                "num_explored_lambda": 267,
                "num_explored_none": 228,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 99,
                "num_values_explored": 593,
                "num_values_kept": 123,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 593
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=2',\n    inputs_dict={'x1': [[1, 1, 0, 0, 1], [1, 1, 1, 1, 0], [1], [1, 1, 0, 1, 1, 0, 0], [0], [], [0, 1, 0], [1, 0, 1, 1], [0, 0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [], [], [1, 1, 1, 0, 1, 1, 0]]},\n    outputs=[[0, 0, 1, 1, 0], [0, 0, 0, 0, 1], [0], [0, 0, 1, 0, 0, 1, 1], [1], [], [1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0], [], [], [0, 0, 0, 1, 0, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.052668501157314,
            "num_unique_values": 628,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.82722167162207,
                "explored_percent_lambda": 28.0806078625702,
                "explored_percent_none": 23.09217046580773,
                "kept_percent_concrete": 49.19614147909968,
                "kept_percent_lambda": 50.80385852090032,
                "num_examples": 15,
                "num_explored_concrete": 1478,
                "num_explored_lambda": 850,
                "num_explored_none": 699,
                "num_inputs": 1,
                "num_kept_concrete": 306,
                "num_kept_lambda": 316,
                "num_values_explored": 3027,
                "num_values_kept": 622,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9148
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=3',\n    inputs_dict={'x1': [[1, 2, 0], [1, 1, 0, 2], [1, 2, 0, 2, 1], [1, 2, 1, 2], [2, 1, 1, 0, 0, 2, 2], [1, 0, 1, 1], [2, 0], [2], [2], [0, 0, 2, 1, 0, 2, 2], [2, 0, 0], [2], [2, 2, 1, 0, 0], [2], [0, 0, 0, 1, 1, 1]]},\n    outputs=[[0, 1, 2], [0, 0, 2, 1], [0, 1, 2, 1, 0], [0, 1, 0, 1], [1, 0, 0, 2, 2, 1, 1], [0, 2, 0, 0], [1, 2], [1], [1], [2, 2, 1, 0, 2, 1, 1], [1, 2, 2], [1], [1, 1, 0, 2, 2], [1], [2, 2, 2, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.074780482798815,
            "num_unique_values": 597,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.67787971457696,
                "explored_percent_lambda": 34.31872239211689,
                "explored_percent_none": 30.00339789330615,
                "kept_percent_concrete": 38.74788494077834,
                "kept_percent_lambda": 61.25211505922166,
                "num_examples": 15,
                "num_explored_concrete": 1050,
                "num_explored_lambda": 1010,
                "num_explored_none": 883,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 362,
                "num_values_explored": 2943,
                "num_values_kept": 591,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8887
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=4',\n    inputs_dict={'x1': [[3, 2, 1, 3, 3], [2, 0, 1, 1], [2, 2, 0, 1, 2, 3, 3], [0, 3, 1, 1, 0], [3, 0, 0], [], [0, 0], [1, 0, 1, 2, 1, 2], [0, 3, 2, 2, 2], [], [3, 1, 2, 1, 1], [3, 1, 3], [3, 3], [0, 0, 0, 0, 2, 2], [2, 0, 0, 2, 1, 0]]},\n    outputs=[[0, 3, 2, 0, 0], [3, 1, 2, 2], [3, 3, 1, 2, 3, 0, 0], [1, 0, 2, 2, 1], [0, 1, 1], [], [1, 1], [2, 1, 2, 3, 2, 3], [1, 0, 3, 3, 3], [], [0, 2, 3, 2, 2], [0, 2, 0], [0, 0], [1, 1, 1, 1, 3, 3], [3, 1, 1, 3, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04765513027087,
            "num_unique_values": 593,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.67711787760024,
                "explored_percent_lambda": 17.06361169731685,
                "explored_percent_none": 20.259270425082907,
                "kept_percent_concrete": 66.95059625212947,
                "kept_percent_lambda": 33.04940374787053,
                "num_examples": 15,
                "num_explored_concrete": 2079,
                "num_explored_lambda": 566,
                "num_explored_none": 672,
                "num_inputs": 1,
                "num_kept_concrete": 393,
                "num_kept_lambda": 194,
                "num_values_explored": 3317,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10232
            },
            "success": false,
            "task": "Task(\n    name='count-head-in-tail',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [0, 5, 4, 0, 2], [3, 1, 3, 3, 2], [4, 2, 6, 10, 8, 12], [12], [7], [10], [4], [14, 14], [9, 14, 15, 7, 2, 6, 2], [10, 12, 1, 6, 9, 3, 11], [11]]},\n    outputs=[1, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.061955558136106,
            "num_unique_values": 638,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.60482323924363,
                "explored_percent_lambda": 19.895861879967114,
                "explored_percent_none": 22.499314880789257,
                "kept_percent_concrete": 57.59493670886076,
                "kept_percent_lambda": 42.40506329113924,
                "num_examples": 15,
                "num_explored_concrete": 2102,
                "num_explored_lambda": 726,
                "num_explored_none": 821,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 268,
                "num_values_explored": 3649,
                "num_values_kept": 632,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10611
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=0',\n    inputs_dict={'x1': [[11, 9, 0], [], [0, 7], [], [10, 15], [16, 12, 15], [0, 0, 9], [0, 0, 0], [12], [0, 8], [3, 14, 15, 0], [0, 0, 0, 14, 9], [16, 15, 11], [9, 7, 2, 6], [9, 15, 4, 7]]},\n    outputs=[1, 0, 1, 0, 0, 0, 2, 3, 0, 1, 1, 3, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05451449472457,
            "num_unique_values": 622,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.7423887587822,
                "explored_percent_lambda": 22.306791569086652,
                "explored_percent_none": 22.950819672131146,
                "kept_percent_concrete": 55.357142857142854,
                "kept_percent_lambda": 44.642857142857146,
                "num_examples": 15,
                "num_explored_concrete": 1870,
                "num_explored_lambda": 762,
                "num_explored_none": 784,
                "num_inputs": 1,
                "num_kept_concrete": 341,
                "num_kept_lambda": 275,
                "num_values_explored": 3416,
                "num_values_kept": 616,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10310
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=3',\n    inputs_dict={'x1': [[2, 13], [3, 3, 3, 3, 3, 6, 3], [11, 0, 3, 3, 3, 3, 3], [13, 7, 9, 10], [], [12], [3, 3, 3], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10], [3, 3, 3, 4], [5, 16, 12]]},\n    outputs=[0, 6, 5, 0, 0, 0, 3, 0, 1, 0, 1, 0, 1, 3, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.07113674795255,
            "num_unique_values": 632,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.68658465143527,
                "explored_percent_lambda": 21.79261862917399,
                "explored_percent_none": 23.520796719390745,
                "kept_percent_concrete": 56.54952076677316,
                "kept_percent_lambda": 43.45047923322684,
                "num_examples": 15,
                "num_explored_concrete": 1867,
                "num_explored_lambda": 744,
                "num_explored_none": 803,
                "num_inputs": 1,
                "num_kept_concrete": 354,
                "num_kept_lambda": 272,
                "num_values_explored": 3414,
                "num_values_kept": 626,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10374
            },
            "success": false,
            "task": "Task(\n    name='count-k with k=5',\n    inputs_dict={'x1': [[5], [1, 6], [5, 5, 5, 5, 5], [5, 16, 11, 5], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [5, 5, 2, 5, 5, 5], [11, 12, 7], [14], [5, 0], [9, 1, 16]]},\n    outputs=[1, 0, 5, 2, 0, 0, 0, 2, 0, 0, 5, 0, 0, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.254898359067738,
            "num_unique_values": 415,
            "solution": "Cdr(Cdr(Cdr(x1)))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 43.87271496276236,
                "explored_percent_lambda": 26.607989167230873,
                "explored_percent_none": 29.519295870006772,
                "kept_percent_concrete": 52.07823960880196,
                "kept_percent_lambda": 47.92176039119804,
                "num_examples": 15,
                "num_explored_concrete": 648,
                "num_explored_lambda": 393,
                "num_explored_none": 436,
                "num_inputs": 1,
                "num_kept_concrete": 213,
                "num_kept_lambda": 196,
                "num_values_explored": 1477,
                "num_values_kept": 409,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1477
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=3',\n    inputs_dict={'x1': [[16, 3, 9, 1, 7, 12, 5, 12, 4, 14], [10, 6, 5, 4, 15, 11, 8, 8], [13, 0, 5, 14, 1, 12, 1, 12, 5, 4], [10, 15, 13, 9, 13, 15, 7, 12, 3, 14], [4, 1, 11, 2, 3, 15, 2, 0, 12], [1, 5, 8, 16, 15, 10, 14, 11], [11, 12, 13, 4, 0, 13, 6, 9, 1, 9], [8, 5, 1, 4, 15, 4, 9, 11, 1], [9, 15, 11, 10, 4, 13], [7, 11, 12, 8, 15, 1, 9, 2], [9, 0, 5, 8, 5, 8, 13], [2, 5, 14, 8, 8], [14, 0, 7, 11, 10, 0, 5, 2], [16, 9, 15, 4], [14, 16, 4, 13, 11, 6, 13, 16, 1, 5]]},\n    outputs=[[1, 7, 12, 5, 12, 4, 14], [4, 15, 11, 8, 8], [14, 1, 12, 1, 12, 5, 4], [9, 13, 15, 7, 12, 3, 14], [2, 3, 15, 2, 0, 12], [16, 15, 10, 14, 11], [4, 0, 13, 6, 9, 1, 9], [4, 15, 4, 9, 11, 1], [10, 4, 13], [8, 15, 1, 9, 2], [8, 5, 8, 13], [8, 8], [11, 10, 0, 5, 2], [4], [13, 11, 6, 13, 16, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.051611429080367,
            "num_unique_values": 623,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.09258576171155,
                "explored_percent_lambda": 23.644411656215418,
                "explored_percent_none": 17.263002582073035,
                "kept_percent_concrete": 51.21555915721232,
                "kept_percent_lambda": 48.78444084278768,
                "num_examples": 15,
                "num_explored_concrete": 1602,
                "num_explored_lambda": 641,
                "num_explored_none": 468,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 301,
                "num_values_explored": 2711,
                "num_values_kept": 617,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8171
            },
            "success": false,
            "task": "Task(\n    name='drop-k with k=5',\n    inputs_dict={'x1': [[15, 6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11], [13, 1, 12, 11, 6, 11, 15, 11, 2, 7, 8], [5, 10, 1, 4, 3, 5, 6, 0, 6, 3, 16], [5, 10, 1, 5, 6, 16, 12, 9, 2, 7, 13], [1, 8, 14, 3, 14, 3, 15, 11, 11, 14], [14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9], [7, 15, 3, 15, 7, 7, 11]]},\n    outputs=[[7, 2, 11, 14, 6, 7, 11], [11, 15, 11, 2, 7, 8], [5, 6, 0, 6, 3, 16], [16, 12, 9, 2, 7, 13], [3, 15, 11, 11, 14], [9, 9, 4], [], [12], [3, 8, 0, 13], [6, 2, 11, 4, 11], [0, 4, 7], [9, 1, 13, 4, 8, 6], [5], [11, 9], [7, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7591717131435871,
            "num_unique_values": 88,
            "solution": "If(IsEmpty(x1), 1, 0)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.610169491525422,
                "explored_percent_lambda": 33.47457627118644,
                "explored_percent_none": 44.91525423728814,
                "kept_percent_concrete": 10.975609756097562,
                "kept_percent_lambda": 89.02439024390245,
                "num_examples": 15,
                "num_explored_concrete": 51,
                "num_explored_lambda": 79,
                "num_explored_none": 106,
                "num_inputs": 1,
                "num_kept_concrete": 9,
                "num_kept_lambda": 73,
                "num_values_explored": 236,
                "num_values_kept": 82,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 236
            },
            "success": true,
            "task": "Task(\n    name='empty',\n    inputs_dict={'x1': [[1, 2, 3], [], [0], [1, 1, 2, 1], [], [7, 7, 3, 2], [], [10, 10, 6, 13, 4], [4, 7, 16, 11, 10, 3, 15], [4], [6, 0, 14, 0, 2, 12], [], [], [12, 15], [2, 16, 2, 5, 15, 6, 7]]},\n    outputs=[0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.048276888672262,
            "num_unique_values": 598,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.24223407593348,
                "explored_percent_lambda": 27.86319422654534,
                "explored_percent_none": 27.89457169752118,
                "kept_percent_concrete": 46.79054054054054,
                "kept_percent_lambda": 53.20945945945946,
                "num_examples": 15,
                "num_explored_concrete": 1410,
                "num_explored_lambda": 888,
                "num_explored_none": 889,
                "num_inputs": 1,
                "num_kept_concrete": 277,
                "num_kept_lambda": 315,
                "num_values_explored": 3187,
                "num_values_kept": 592,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9596
            },
            "success": false,
            "task": "Task(\n    name='evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [12, 13], [4], [1], [], [14, 7, 3, 1, 9, 9, 5], [6, 4, 7], [7, 0, 12, 7], [15], [], [2, 2, 8, 7], [10, 11, 8, 16], [5, 5, 8, 7, 4, 16], [14]]},\n    outputs=[[2, 0, 4], [2, 4, 2, 0], [12], [4], [], [], [14], [6, 4], [0, 12], [], [], [2, 2, 8], [10, 8, 16], [8, 4, 16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.043523862026632,
            "num_unique_values": 331,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.95169082125604,
                "explored_percent_lambda": 18.146135265700483,
                "explored_percent_none": 26.902173913043477,
                "kept_percent_concrete": 44.61538461538461,
                "kept_percent_lambda": 55.38461538461539,
                "num_examples": 15,
                "num_explored_concrete": 1820,
                "num_explored_lambda": 601,
                "num_explored_none": 891,
                "num_inputs": 1,
                "num_kept_concrete": 145,
                "num_kept_lambda": 180,
                "num_values_explored": 3312,
                "num_values_kept": 325,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9861
            },
            "success": false,
            "task": "Task(\n    name='fibonacci',\n    inputs_dict={'x1': [2, 4, 6, 9, 9, 9, 9, 8, 2, 6, 2, 1, 6, 13, 8]},\n    outputs=[1, 3, 8, 34, 34, 34, 34, 21, 1, 8, 1, 1, 8, 233, 21],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05169445509091,
            "num_unique_values": 562,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.33045622688039,
                "explored_percent_lambda": 15.93711467324291,
                "explored_percent_none": 21.732429099876697,
                "kept_percent_concrete": 70.68345323741008,
                "kept_percent_lambda": 29.31654676258993,
                "num_examples": 15,
                "num_explored_concrete": 2022,
                "num_explored_lambda": 517,
                "num_explored_none": 705,
                "num_inputs": 1,
                "num_kept_concrete": 393,
                "num_kept_lambda": 163,
                "num_values_explored": 3244,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9769
            },
            "success": false,
            "task": "Task(\n    name='has-head-in-tail',\n    inputs_dict={'x1': [[1, 1, 2], [1, 2, 3], [2, 1, 2], [2, 3, 4], [3, 1, 3, 4, 2], [4, 2, 6, 10, 8, 12], [11, 11, 11], [7, 7, 7], [2, 15, 2, 2, 2, 2], [6, 6, 16, 6, 2], [15, 13, 10], [5, 14, 14, 1, 7, 9, 4], [14, 3, 14, 11], [2, 2, 13, 2, 2, 2, 4], [0, 0, 0, 5, 0]]},\n    outputs=[1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.044719605706632,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.820039738858924,
                "explored_percent_lambda": 20.238433153562305,
                "explored_percent_none": 21.941527107578768,
                "kept_percent_concrete": 57.011070110701105,
                "kept_percent_lambda": 42.988929889298895,
                "num_examples": 15,
                "num_explored_concrete": 2037,
                "num_explored_lambda": 713,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 309,
                "num_kept_lambda": 233,
                "num_values_explored": 3523,
                "num_values_kept": 542,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10642
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=0',\n    inputs_dict={'x1': [[6, 11, 0, 11], [3, 8, 9], [9, 0, 0, 0], [0, 0, 0], [1, 8], [0, 0, 0], [], [], [], [4, 9, 6, 11], [], [13], [5, 7, 6, 8, 3], [9, 12], [6, 9, 11, 7, 5, 5, 0]]},\n    outputs=[1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.056299864780158,
            "num_unique_values": 616,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.55010438413361,
                "explored_percent_lambda": 20.511482254697285,
                "explored_percent_none": 22.9384133611691,
                "kept_percent_concrete": 53.60655737704918,
                "kept_percent_lambda": 46.39344262295082,
                "num_examples": 15,
                "num_explored_concrete": 2167,
                "num_explored_lambda": 786,
                "num_explored_none": 879,
                "num_inputs": 1,
                "num_kept_concrete": 327,
                "num_kept_lambda": 283,
                "num_values_explored": 3832,
                "num_values_kept": 610,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11068
            },
            "success": false,
            "task": "Task(\n    name='has-k with k=3',\n    inputs_dict={'x1': [[3, 3, 3, 3], [], [3], [13, 3, 5, 5, 13], [3, 16, 3], [16, 6, 8, 13, 14], [3, 3, 3, 4, 3, 3], [6, 3, 3, 3], [8, 7], [3, 15], [3], [3, 2, 3, 3], [], [3, 15], [3, 6]]},\n    outputs=[1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.421636572107673,
            "num_unique_values": 526,
            "solution": "If(IsPrime(Index(Subtract(1, Length(Cdr(x1))), Cons(0, Cons(1, x1)))), 1, 0)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 55.06502395619439,
                "explored_percent_lambda": 20.602327173169062,
                "explored_percent_none": 24.33264887063655,
                "kept_percent_concrete": 58.07692307692308,
                "kept_percent_lambda": 41.92307692307692,
                "num_examples": 15,
                "num_explored_concrete": 1609,
                "num_explored_lambda": 602,
                "num_explored_none": 711,
                "num_inputs": 1,
                "num_kept_concrete": 302,
                "num_kept_lambda": 218,
                "num_values_explored": 2922,
                "num_values_kept": 520,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10898
            },
            "success": true,
            "task": "Task(\n    name='has-k with k=5',\n    inputs_dict={'x1': [[3, 8, 1], [5, 5, 5, 5, 5, 5], [2, 13], [5, 5, 5, 5, 5, 6, 5], [11, 0, 5, 5, 5, 5, 5], [13, 7, 9, 10], [], [12], [5, 5, 5], [10, 0, 15, 9, 13], [3, 6, 1, 15, 12, 13], [], [12, 3, 14], [], [2, 8, 0, 14, 3, 10]]},\n    outputs=[0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0242037000134587,
            "num_unique_values": 103,
            "solution": "Car(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 18.367346938775512,
                "explored_percent_lambda": 38.775510204081634,
                "explored_percent_none": 42.857142857142854,
                "kept_percent_concrete": 9.278350515463918,
                "kept_percent_lambda": 90.72164948453609,
                "num_examples": 15,
                "num_explored_concrete": 63,
                "num_explored_lambda": 133,
                "num_explored_none": 147,
                "num_inputs": 1,
                "num_kept_concrete": 9,
                "num_kept_lambda": 88,
                "num_values_explored": 343,
                "num_values_kept": 97,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 343
            },
            "success": true,
            "task": "Task(\n    name='head',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [8, 13, 8, 0, 14, 0, 5], [9, 3], [16], [14, 8, 2, 12, 10], [0, 5], [7, 11], [11, 10, 12, 13, 2, 15], [5, 6, 2, 8, 9], [2], [8, 7], [11, 13, 15, 15, 0, 1, 3], [9, 7, 8, 1, 9, 14, 16]]},\n    outputs=[1, 0, 1, 8, 9, 16, 14, 0, 7, 11, 5, 2, 8, 11, 9],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.0172153511084616,
            "num_unique_values": 101,
            "solution": "Car(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 19.318181818181817,
                "explored_percent_lambda": 37.78409090909091,
                "explored_percent_none": 42.89772727272727,
                "kept_percent_concrete": 9.473684210526315,
                "kept_percent_lambda": 90.52631578947368,
                "num_examples": 15,
                "num_explored_concrete": 68,
                "num_explored_lambda": 133,
                "num_explored_none": 151,
                "num_inputs": 1,
                "num_kept_concrete": 9,
                "num_kept_lambda": 86,
                "num_values_explored": 352,
                "num_values_kept": 95,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 352
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=1',\n    inputs_dict={'x1': [[1, 12, 4, 0, 0, 14, 14, 14], [0, 7, 3, 15, 11, 1, 16], [2, 12, 11, 14, 15, 9, 8], [4, 3, 13, 1], [6, 4, 6, 12, 0, 8, 1, 16], [6, 1, 4, 12, 12, 0], [15, 16, 9, 12, 15, 0, 2, 7], [13, 14, 7, 10, 9, 7], [8, 1, 10, 4, 3], [10, 4, 16, 1], [5, 15, 8, 10, 13, 12, 7, 0], [12, 12], [5, 16, 10, 16, 8, 7, 2], [4, 1, 12, 0, 9, 12], [0, 3, 1, 6]]},\n    outputs=[1, 0, 2, 4, 6, 6, 15, 13, 8, 10, 5, 12, 5, 4, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.3024953752756119,
            "num_unique_values": 134,
            "solution": "Index(1, Cdr(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 19.23076923076923,
                "explored_percent_lambda": 41.1764705882353,
                "explored_percent_none": 39.59276018099548,
                "kept_percent_concrete": 14.0625,
                "kept_percent_lambda": 85.9375,
                "num_examples": 15,
                "num_explored_concrete": 85,
                "num_explored_lambda": 182,
                "num_explored_none": 175,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 110,
                "num_values_explored": 442,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 442
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=3',\n    inputs_dict={'x1': [[12, 14, 15, 4, 8, 1, 0, 10, 8, 0], [4, 11, 14, 0, 13, 1, 10, 5], [8, 12, 0, 1], [12, 15, 10, 10, 3, 8, 1, 11, 6], [8, 14, 2, 12, 3, 6, 0], [16, 1, 14], [13, 0, 3, 2, 9, 14, 4, 12], [5, 12, 14, 13, 2, 3, 14, 5, 3], [12, 4, 1, 1], [8, 2, 15, 3, 10, 0], [5, 6, 0, 9, 6, 7, 15], [3, 11, 3], [3, 7, 16, 2, 2, 13, 0, 13, 5], [6, 2, 6, 12], [0, 10, 11, 7, 4]]},\n    outputs=[15, 14, 0, 10, 2, 14, 3, 14, 1, 15, 0, 3, 16, 6, 11],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.875335764139891,
            "num_unique_values": 547,
            "solution": "Car(Cdr(Cdr(Cdr(Cdr(x1)))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 49.945434703528555,
                "explored_percent_lambda": 19.679883594034195,
                "explored_percent_none": 30.37468170243725,
                "kept_percent_concrete": 65.06469500924214,
                "kept_percent_lambda": 34.93530499075786,
                "num_examples": 15,
                "num_explored_concrete": 1373,
                "num_explored_lambda": 541,
                "num_explored_none": 835,
                "num_inputs": 1,
                "num_kept_concrete": 352,
                "num_kept_lambda": 189,
                "num_values_explored": 2749,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2749
            },
            "success": true,
            "task": "Task(\n    name='index-k with k=5',\n    inputs_dict={'x1': [[0, 15, 1, 4, 12, 10, 8, 7, 4, 2, 3, 12], [13, 15, 6, 5, 2, 13, 14, 5, 12], [16, 11, 8, 8, 5, 6, 2], [9, 1, 6, 0, 4, 14, 15, 6, 6, 14, 4, 7], [4, 3, 1, 4, 0, 6, 0, 14, 13, 12], [1, 7, 3, 16, 10, 12, 14, 12, 16, 13, 8, 3], [0, 4, 2, 11, 6, 4, 9, 11, 5, 11, 1, 0], [1, 12, 15, 3, 7, 14], [15, 8, 9, 0, 11, 12, 9, 15], [0, 8, 9, 6, 7, 13, 8, 13, 16, 7, 10, 10], [9, 10, 2, 3, 5, 1, 8, 4, 3, 3, 16], [16, 4, 1, 12, 3, 12, 15], [1, 5, 15, 15, 2, 10, 13, 15, 3, 7], [4, 7, 13, 6, 12], [11, 11, 12, 5, 13, 11]]},\n    outputs=[12, 2, 5, 4, 0, 10, 6, 7, 11, 7, 5, 3, 2, 12, 13],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04483381891623,
            "num_unique_values": 656,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.57683215130024,
                "explored_percent_lambda": 18.486997635933808,
                "explored_percent_none": 18.93617021276596,
                "kept_percent_concrete": 59.53846153846154,
                "kept_percent_lambda": 40.46153846153846,
                "num_examples": 15,
                "num_explored_concrete": 2647,
                "num_explored_lambda": 782,
                "num_explored_none": 801,
                "num_inputs": 1,
                "num_kept_concrete": 387,
                "num_kept_lambda": 263,
                "num_values_explored": 4230,
                "num_values_kept": 650,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12392
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=2',\n    inputs_dict={'x1': [[], [9, 4, 9, 6], [], [13], [22, 10, 14, 12, 16], [9, 9], [18, 12, 18, 22, 14, 10, 10], [11, 6, 0, 3], [22, 0, 0, 10], [14], [12, 16, 28, 16, 4, 2], [7], [18, 24, 14, 22, 12, 28], [24, 22, 2, 14, 16, 8, 10], [6, 10, 9, 1]]},\n    outputs=[1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.046899917069823,
            "num_unique_values": 641,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.905934498891895,
                "explored_percent_lambda": 17.581876385126815,
                "explored_percent_none": 20.512189115981286,
                "kept_percent_concrete": 62.36220472440945,
                "kept_percent_lambda": 37.63779527559055,
                "num_examples": 15,
                "num_explored_concrete": 2514,
                "num_explored_lambda": 714,
                "num_explored_none": 833,
                "num_inputs": 1,
                "num_kept_concrete": 396,
                "num_kept_lambda": 239,
                "num_values_explored": 4061,
                "num_values_kept": 635,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12230
            },
            "success": false,
            "task": "Task(\n    name='is-mod-k with k=3',\n    inputs_dict={'x1': [[24, 0, 21], [1, 6, 11, 14, 7, 6, 2], [39, 27, 6, 33, 12, 39, 33], [8, 8], [12], [39, 39, 48, 30], [39, 9, 45, 9, 6], [21, 0, 27, 6], [9, 3, 7, 14], [36, 27, 45, 21, 18, 45], [0, 16, 0, 3], [9, 9, 0, 21, 27, 30, 30], [33, 33, 3, 21, 9, 6], [], [8, 12, 4, 7]]},\n    outputs=[1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05223672837019,
            "num_unique_values": 622,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.47738693467337,
                "explored_percent_lambda": 19.371859296482413,
                "explored_percent_none": 20.150753768844222,
                "kept_percent_concrete": 59.09090909090909,
                "kept_percent_lambda": 40.90909090909091,
                "num_examples": 15,
                "num_explored_concrete": 2407,
                "num_explored_lambda": 771,
                "num_explored_none": 802,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 252,
                "num_values_explored": 3980,
                "num_values_kept": 616,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11972
            },
            "success": false,
            "task": "Task(\n    name='is-primes',\n    inputs_dict={'x1': [[2], [2, 0], [5, 11], [5, 11, 12], [13, 9, 13, 0, 3, 10, 12], [71, 13], [4, 13], [67, 179, 17, 163, 79], [13, 14], [17, 193, 149, 13, 3, 47], [0, 2, 6, 16], [4], [5], [5, 13, 7, 5], []]},\n    outputs=[1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.056382259819657,
            "num_unique_values": 693,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.32223543400714,
                "explored_percent_lambda": 11.890606420927467,
                "explored_percent_none": 18.787158145065398,
                "kept_percent_concrete": 73.36244541484716,
                "kept_percent_lambda": 26.637554585152838,
                "num_examples": 15,
                "num_explored_concrete": 2915,
                "num_explored_lambda": 500,
                "num_explored_none": 790,
                "num_inputs": 1,
                "num_kept_concrete": 504,
                "num_kept_lambda": 183,
                "num_values_explored": 4205,
                "num_values_kept": 687,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12681
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=1',\n    inputs_dict={'x1': [[2, 15, 14, 6, 4, 5, 5], [3, 15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16]]},\n    outputs=[15, 15, 15, 9, 11, 13, 13, 12, 16, 16, 15, 15, 16, 8, 16],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.049394532106817,
            "num_unique_values": 678,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.27861485593444,
                "explored_percent_lambda": 13.428495902722707,
                "explored_percent_none": 24.29288924134285,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 15,
                "num_explored_concrete": 2356,
                "num_explored_lambda": 508,
                "num_explored_none": 919,
                "num_inputs": 1,
                "num_kept_concrete": 504,
                "num_kept_lambda": 168,
                "num_values_explored": 3783,
                "num_values_kept": 672,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11427
            },
            "success": false,
            "task": "Task(\n    name='kth-largest with k=3',\n    inputs_dict={'x1': [[2, 14, 6, 12, 15], [9, 12, 12, 2, 16, 1, 3, 4, 16], [3, 9, 1, 7, 12, 5, 12, 4, 14, 12], [6, 5, 4, 15, 11, 8, 8], [13, 0, 5, 14, 1, 12, 1, 12, 5, 4], [10, 15, 13, 9, 13, 15, 7, 12, 3, 14], [4, 1, 11, 2, 3, 15, 2, 0, 12], [1, 5, 8, 16, 15, 10, 14, 11], [11, 12, 13, 4, 0, 13, 6, 9, 1, 9], [8, 5, 1, 4, 15, 4, 9, 11, 1], [9, 15, 11, 10, 4, 13], [7, 11, 12, 8, 15, 1, 9, 2], [9, 0, 5, 8, 5, 8, 13], [2, 5, 14, 8, 8], [14, 0, 7, 11, 10, 0, 5, 2]]},\n    outputs=[12, 12, 12, 8, 12, 14, 11, 14, 12, 9, 11, 11, 8, 8, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.071389493066818,
            "num_unique_values": 774,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.15515409139213,
                "explored_percent_lambda": 11.609989373007439,
                "explored_percent_none": 19.234856535600425,
                "kept_percent_concrete": 71.74479166666667,
                "kept_percent_lambda": 28.255208333333332,
                "num_examples": 15,
                "num_explored_concrete": 2603,
                "num_explored_lambda": 437,
                "num_explored_none": 724,
                "num_inputs": 1,
                "num_kept_concrete": 551,
                "num_kept_lambda": 217,
                "num_values_explored": 3764,
                "num_values_kept": 768,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11197
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=3',\n    inputs_dict={'x1': [[9, 5, 11, 2, 10, 13, 9], [16, 5, 4, 5, 2, 14, 6, 9, 15], [1, 7, 3], [16, 4, 10, 7, 5, 7, 1, 2], [10, 13, 9, 10, 8, 6, 7, 15, 2], [16, 16, 4, 0, 3, 4, 9], [15, 4, 8, 5], [6, 4, 16, 5, 11, 11, 14], [4, 6, 12], [1, 14, 9, 7, 11, 16], [15, 1, 4], [10, 8, 7, 4, 2, 3, 12, 8], [15, 6, 5, 2, 13, 14, 5, 12, 6], [11, 8, 8, 5, 6, 2, 15, 9, 1, 6], [4, 14, 15]]},\n    outputs=[9, 5, 7, 4, 7, 4, 8, 6, 12, 9, 15, 4, 5, 5, 15],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.065038131084293,
            "num_unique_values": 754,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.127252564458,
                "explored_percent_lambda": 12.75298031605212,
                "explored_percent_none": 24.119767119489882,
                "kept_percent_concrete": 70.85561497326204,
                "kept_percent_lambda": 29.144385026737968,
                "num_examples": 15,
                "num_explored_concrete": 2277,
                "num_explored_lambda": 460,
                "num_explored_none": 870,
                "num_inputs": 1,
                "num_kept_concrete": 530,
                "num_kept_lambda": 218,
                "num_values_explored": 3607,
                "num_values_kept": 748,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10876
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=4',\n    inputs_dict={'x1': [[6, 14, 4, 7, 12, 4, 3], [4, 0, 6, 0], [13, 12, 15, 1, 7, 3, 16, 10, 12, 14], [16, 13, 8, 3, 15, 0, 4, 2, 11], [4, 9, 11, 5, 11, 1], [2, 1, 12, 15], [7, 14, 8, 15, 8], [0, 11, 12, 9, 15, 16, 0, 8], [6, 7, 13, 8, 13, 16, 7, 10], [12, 9, 10, 2, 3, 5, 1, 8], [3, 3, 16, 6, 16, 4], [12, 3, 12, 15], [1, 5, 15, 15, 2, 10, 13, 15, 3], [0, 4, 7, 13, 6, 12, 4], [11, 12, 5, 13, 11, 4, 16, 0, 8]]},\n    outputs=[6, 6, 10, 4, 9, 15, 14, 9, 8, 5, 6, 15, 5, 6, 8],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.069358241278678,
            "num_unique_values": 735,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.5509138381201,
                "explored_percent_lambda": 13.655352480417754,
                "explored_percent_none": 22.79373368146214,
                "kept_percent_concrete": 72.42798353909465,
                "kept_percent_lambda": 27.57201646090535,
                "num_examples": 15,
                "num_explored_concrete": 2434,
                "num_explored_lambda": 523,
                "num_explored_none": 873,
                "num_inputs": 1,
                "num_kept_concrete": 528,
                "num_kept_lambda": 201,
                "num_values_explored": 3830,
                "num_values_kept": 729,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11644
            },
            "success": false,
            "task": "Task(\n    name='kth-smallest with k=5',\n    inputs_dict={'x1': [[6, 7, 16, 16, 6, 6, 11, 5, 9], [9, 5, 0, 0, 13, 1, 16, 0, 9, 3, 1], [3, 11, 8, 10, 9, 8], [8, 4, 16, 7, 10, 5, 13, 1, 6, 11], [7, 11, 5, 11, 16, 6, 0, 0, 8], [10, 3, 8, 6, 6, 11, 3, 4, 1, 4, 8], [11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3], [14, 6, 15, 10, 7, 8, 16, 16, 14], [6, 2, 6, 9, 12, 3, 13, 5], [6, 3, 5, 7, 6, 5, 11], [14, 1, 15, 6, 0, 12, 11, 3, 15, 14], [13, 4, 9, 6, 7, 6, 12, 4, 8, 16, 4]]},\n    outputs=[7, 1, 10, 7, 7, 4, 11, 10, 5, 12, 14, 6, 6, 11, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.4625091021880507,
            "num_unique_values": 131,
            "solution": "Index(Length(Cdr(x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 18.30708661417323,
                "explored_percent_lambda": 40.15748031496063,
                "explored_percent_none": 41.53543307086614,
                "kept_percent_concrete": 15.2,
                "kept_percent_lambda": 84.8,
                "num_examples": 15,
                "num_explored_concrete": 93,
                "num_explored_lambda": 204,
                "num_explored_none": 211,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 106,
                "num_values_explored": 508,
                "num_values_kept": 125,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 508
            },
            "success": true,
            "task": "Task(\n    name='last',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [15, 0, 1, 3, 16, 9, 7], [1, 9, 14, 16], [1, 12, 4, 0, 0, 14, 14], [14, 0, 7, 3, 15, 11], [16], [2, 12, 11, 14, 15, 9], [8, 4, 3, 13], [16], [4, 6, 12], [8], [16], [6, 1, 4, 12, 12, 0]]},\n    outputs=[3, 0, 1, 7, 16, 14, 11, 16, 9, 13, 16, 12, 8, 16, 0],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2891525579616427,
            "num_unique_values": 115,
            "solution": "Length(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 15.077605321507761,
                "explored_percent_lambda": 37.472283813747225,
                "explored_percent_none": 47.450110864745014,
                "kept_percent_concrete": 8.256880733944953,
                "kept_percent_lambda": 91.74311926605505,
                "num_examples": 15,
                "num_explored_concrete": 68,
                "num_explored_lambda": 169,
                "num_explored_none": 214,
                "num_inputs": 1,
                "num_kept_concrete": 9,
                "num_kept_lambda": 100,
                "num_values_explored": 451,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='len',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [2, 9], [0], [10, 14, 8, 2, 12, 10, 3], [], [2, 7], [13, 11, 10, 12, 13], [15], [5, 6, 2, 8, 9], [], [3], [7, 14, 11], [15, 15, 0, 1, 3, 16]]},\n    outputs=[3, 1, 4, 2, 1, 7, 0, 2, 5, 1, 5, 0, 1, 3, 6],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6513269082643092,
            "num_unique_values": 135,
            "solution": "Map((lambda u1: ((lambda v1: Length(((lambda v1: Cdr(((lambda v1: If(((lambda v1: IsPrime(v1)))(v1), [], [])))(v1))))(v1))))(u1)), x1)",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 19.327731092436974,
                "explored_percent_lambda": 40.50420168067227,
                "explored_percent_none": 40.168067226890756,
                "kept_percent_concrete": 16.27906976744186,
                "kept_percent_lambda": 83.72093023255815,
                "num_examples": 15,
                "num_explored_concrete": 115,
                "num_explored_lambda": 241,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 108,
                "num_values_explored": 595,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 595
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=1',\n    inputs_dict={'x1': [[7, 8, 1, 9], [16, 15, 1, 12, 4, 0, 0], [14, 14, 14, 0, 7, 3], [11, 1, 16, 14, 2, 12, 11], [15, 9, 8, 8, 4, 3], [1, 16, 6, 4, 6, 12], [], [1, 16, 12], [1, 4, 12], [0, 15, 15, 16, 9], [15, 0, 2, 7, 11, 13], [7, 10, 9, 7, 8, 8], [], [4, 3, 7, 10, 4], [1, 16, 5, 15, 8, 10, 13]]},\n    outputs=[[0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [], [0, 0, 0], [0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7266165227629244,
            "num_unique_values": 131,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 15.126050420168067,
                "explored_percent_lambda": 45.714285714285715,
                "explored_percent_none": 39.15966386554622,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 15,
                "num_explored_concrete": 90,
                "num_explored_lambda": 272,
                "num_explored_none": 233,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 100,
                "num_values_explored": 595,
                "num_values_kept": 125,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 595
            },
            "success": true,
            "task": "Task(\n    name='modulo-k with k=2',\n    inputs_dict={'x1': [[7, 0, 3, 12, 12], [5, 16, 10, 16, 8, 7], [12], [1], [0, 9, 12, 7, 0], [1], [12, 15], [9], [0, 2, 5, 4, 11, 7], [5, 11, 4, 14, 13], [14, 14, 16], [], [10], [], [2, 0, 1, 11, 11, 10]]},\n    outputs=[[1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 1], [0], [1], [0, 1, 0, 1, 0], [1], [0, 1], [1], [0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1], [0, 0, 0], [], [0], [], [0, 0, 1, 1, 1, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04374168999493,
            "num_unique_values": 697,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.94355518112889,
                "explored_percent_lambda": 35.15866329682673,
                "explored_percent_none": 23.89778152204437,
                "kept_percent_concrete": 38.494934876989866,
                "kept_percent_lambda": 61.505065123010134,
                "num_examples": 15,
                "num_explored_concrete": 1458,
                "num_explored_lambda": 1252,
                "num_explored_none": 851,
                "num_inputs": 1,
                "num_kept_concrete": 266,
                "num_kept_lambda": 425,
                "num_values_explored": 3561,
                "num_values_kept": 691,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10673
            },
            "success": false,
            "task": "Task(\n    name='modulo-k with k=3',\n    inputs_dict={'x1': [[6, 8, 1, 3], [], [9], [1, 7, 11, 13], [6, 8, 2, 2], [14, 15], [9, 0, 3], [], [12, 4, 8, 11, 0, 8, 11], [14, 13, 8, 15, 8, 10, 0], [10, 8], [12, 11, 8, 8], [4, 4, 12, 7, 13, 9], [], [13, 4, 11, 10]]},\n    outputs=[[0, 2, 1, 0], [], [0], [1, 1, 2, 1], [0, 2, 2, 2], [2, 0], [0, 0, 0], [], [0, 1, 2, 2, 0, 2, 2], [2, 1, 2, 0, 2, 1, 0], [1, 2], [0, 2, 2, 2], [1, 1, 0, 1, 1, 0], [], [1, 1, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.065094648860395,
            "num_unique_values": 662,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.41620962827544,
                "explored_percent_lambda": 35.80134064594759,
                "explored_percent_none": 26.782449725776964,
                "kept_percent_concrete": 33.079268292682926,
                "kept_percent_lambda": 66.92073170731707,
                "num_examples": 15,
                "num_explored_concrete": 1228,
                "num_explored_lambda": 1175,
                "num_explored_none": 879,
                "num_inputs": 1,
                "num_kept_concrete": 217,
                "num_kept_lambda": 439,
                "num_values_explored": 3282,
                "num_values_kept": 656,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9871
            },
            "success": false,
            "task": "Task(\n    name='modulo-k with k=4',\n    inputs_dict={'x1': [[16, 12], [15, 4, 8, 1, 0, 10], [0, 10, 4, 11], [0, 13, 1, 10, 5, 2, 8], [0, 1, 13, 12, 15, 10], [3, 8, 1, 11, 6], [8, 14, 2, 12], [6], [], [], [1, 14, 11, 13, 0, 3, 2], [14, 4, 12, 13], [12, 14], [2, 3, 14, 5, 3, 3], [4, 1, 1, 6, 8]]},\n    outputs=[[0, 0], [3, 0, 0, 1, 0, 2], [0, 2, 0, 3], [0, 1, 1, 2, 1, 2, 0], [0, 1, 1, 0, 3, 2], [3, 0, 1, 3, 2], [0, 2, 2, 0], [2], [], [], [1, 2, 3, 1, 0, 3, 2], [2, 0, 0, 1], [0, 2], [2, 3, 2, 1, 3, 3], [0, 1, 1, 2, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.065465340856463,
            "num_unique_values": 655,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.92168674698795,
                "explored_percent_lambda": 35.39156626506024,
                "explored_percent_none": 26.686746987951807,
                "kept_percent_concrete": 35.43913713405239,
                "kept_percent_lambda": 64.56086286594761,
                "num_examples": 15,
                "num_explored_concrete": 1259,
                "num_explored_lambda": 1175,
                "num_explored_none": 886,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 419,
                "num_values_explored": 3320,
                "num_values_kept": 649,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10381
            },
            "success": false,
            "task": "Task(\n    name='modulo-k with k=5',\n    inputs_dict={'x1': [[15], [10], [], [5, 6, 0, 9], [7, 15], [], [11], [13], [7], [2, 2, 13, 0, 13, 5, 2], [2, 6, 12], [0, 10], [7, 4, 0, 1, 11], [], [11, 2, 16, 6, 4]]},\n    outputs=[[0], [0], [], [0, 1, 0, 4], [2, 0], [], [1], [3], [2], [2, 2, 3, 0, 3, 0, 2], [2, 1, 2], [0, 0], [2, 4, 0, 1, 1], [], [1, 2, 1, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.7108386210165918,
            "num_unique_values": 137,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(v1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 20.55921052631579,
                "explored_percent_lambda": 39.80263157894737,
                "explored_percent_none": 39.63815789473684,
                "kept_percent_concrete": 19.083969465648856,
                "kept_percent_lambda": 80.91603053435115,
                "num_examples": 15,
                "num_explored_concrete": 125,
                "num_explored_lambda": 242,
                "num_explored_none": 241,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 106,
                "num_values_explored": 608,
                "num_values_kept": 131,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 608
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=0',\n    inputs_dict={'x1': [[7, 11, 13, 15, 16, 16], [11, 11, 4, 14, 6, 14, 0], [8], [7], [3, 8, 1, 13, 5], [11, 13, 5, 14, 4, 2, 14], [5, 10, 15], [15, 5], [8], [3, 16], [9, 7], [5, 15, 8, 6], [], [15, 10], []]},\n    outputs=[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0], [0, 0], [0], [0, 0], [0, 0], [0, 0, 0, 0], [], [0, 0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.6843259711749852,
            "num_unique_values": 138,
            "solution": "Map((lambda u1: ((lambda v1: Add(v1, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 14.776632302405499,
                "explored_percent_lambda": 45.36082474226804,
                "explored_percent_none": 39.86254295532646,
                "kept_percent_concrete": 13.636363636363637,
                "kept_percent_lambda": 86.36363636363636,
                "num_examples": 15,
                "num_explored_concrete": 86,
                "num_explored_lambda": 264,
                "num_explored_none": 232,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 114,
                "num_values_explored": 582,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=2',\n    inputs_dict={'x1': [[2, 0, 15, 0, 2], [11, 15, 10], [], [9, 13, 13, 15, 3, 6, 1], [12, 13, 2, 4, 7, 15, 12], [14], [], [13, 14, 2, 8, 0, 14, 3], [9, 5, 11, 4, 6], [4, 1, 5, 8], [8, 5, 16], [11, 2, 7, 10, 4], [4, 16, 1, 8, 4, 7], [0, 2, 0], [8, 2, 8]]},\n    outputs=[[4, 0, 30, 0, 4], [22, 30, 20], [], [18, 26, 26, 30, 6, 12, 2], [24, 26, 4, 8, 14, 30, 24], [28], [], [26, 28, 4, 16, 0, 28, 6], [18, 10, 22, 8, 12], [8, 2, 10, 16], [16, 10, 32], [22, 4, 14, 20, 8], [8, 32, 2, 16, 8, 14], [0, 4, 0], [16, 4, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.879989177919924,
            "num_unique_values": 431,
            "solution": "Map((lambda u1: ((lambda v1: Multiply(v1, Add(1, Add(1, 1)))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.95758166747928,
                "explored_percent_lambda": 33.349585568015605,
                "explored_percent_none": 29.69283276450512,
                "kept_percent_concrete": 34.588235294117645,
                "kept_percent_lambda": 65.41176470588235,
                "num_examples": 15,
                "num_explored_concrete": 758,
                "num_explored_lambda": 684,
                "num_explored_none": 609,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 278,
                "num_values_explored": 2051,
                "num_values_kept": 425,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 2051
            },
            "success": true,
            "task": "Task(\n    name='mult-k with k=3',\n    inputs_dict={'x1': [[7, 10, 8, 8], [12, 7, 7], [0, 13, 3, 9, 1], [10, 8, 2, 12, 9, 11], [0, 6, 9, 4, 16, 10, 12], [4], [10, 0, 1, 2, 6, 4], [2, 6, 10, 10, 8, 15, 16], [1, 2, 7, 5, 4, 0, 13], [15, 3], [12, 14, 13, 5, 8, 8, 9], [4], [9, 11, 0], [], [7, 8, 4, 3, 7]]},\n    outputs=[[21, 30, 24, 24], [36, 21, 21], [0, 39, 9, 27, 3], [30, 24, 6, 36, 27, 33], [0, 18, 27, 12, 48, 30, 36], [12], [30, 0, 3, 6, 18, 12], [6, 18, 30, 30, 24, 45, 48], [3, 6, 21, 15, 12, 0, 39], [45, 9], [36, 42, 39, 15, 24, 24, 27], [12], [27, 33, 0], [], [21, 24, 12, 9, 21]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.062569114379585,
            "num_unique_values": 680,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.749136939010356,
                "explored_percent_lambda": 27.56041426927503,
                "explored_percent_none": 25.690448791714616,
                "kept_percent_concrete": 44.95548961424333,
                "kept_percent_lambda": 55.04451038575667,
                "num_examples": 15,
                "num_explored_concrete": 1625,
                "num_explored_lambda": 958,
                "num_explored_none": 893,
                "num_inputs": 1,
                "num_kept_concrete": 303,
                "num_kept_lambda": 371,
                "num_values_explored": 3476,
                "num_values_kept": 674,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10579
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=5',\n    inputs_dict={'x1': [[12, 2, 8, 5], [8, 2, 14], [3, 6, 6, 16], [7, 3, 15, 2, 12], [0, 15, 5, 10, 8, 14, 12], [4, 12, 3, 15, 5, 5, 2], [8, 15, 9, 0, 1], [], [3, 9, 12, 12, 4, 12], [8], [12], [10, 11, 13, 1, 10], [16, 15, 1, 15], [8, 13], [12, 7, 3, 10, 14]]},\n    outputs=[[60, 10, 40, 25], [40, 10, 70], [15, 30, 30, 80], [35, 15, 75, 10, 60], [0, 75, 25, 50, 40, 70, 60], [20, 60, 15, 75, 25, 25, 10], [40, 75, 45, 0, 5], [], [15, 45, 60, 60, 20, 60], [40], [60], [50, 55, 65, 5, 50], [80, 75, 5, 75], [40, 65], [60, 35, 15, 50, 70]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05415929388255,
            "num_unique_values": 629,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.28103044496487,
                "explored_percent_lambda": 31.206088992974237,
                "explored_percent_none": 28.51288056206089,
                "kept_percent_concrete": 39.96789727126806,
                "kept_percent_lambda": 60.03210272873194,
                "num_examples": 15,
                "num_explored_concrete": 1376,
                "num_explored_lambda": 1066,
                "num_explored_none": 974,
                "num_inputs": 1,
                "num_kept_concrete": 249,
                "num_kept_lambda": 374,
                "num_values_explored": 3416,
                "num_values_kept": 623,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10132
            },
            "success": false,
            "task": "Task(\n    name='odds',\n    inputs_dict={'x1': [[1, 1, 3], [2, 5, 4, 2, 0, 5, 1, 1], [6, 10], [14], [3, 8], [2, 12, 6, 9, 1, 12], [15], [1, 8, 13, 9, 6, 8], [3, 0], [4, 2], [6, 10, 15, 8, 14, 3], [16], [], [5], [5, 16, 4, 8]]},\n    outputs=[[1, 1, 3], [5, 5, 1, 1], [], [], [3], [9, 1], [15], [1, 13, 9], [3], [], [15, 3], [], [], [5], [5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.07581666018814,
            "num_unique_values": 721,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.5531197301855,
                "explored_percent_lambda": 22.23159078133783,
                "explored_percent_none": 23.21528948847667,
                "kept_percent_concrete": 54.12587412587413,
                "kept_percent_lambda": 45.87412587412587,
                "num_examples": 15,
                "num_explored_concrete": 1941,
                "num_explored_lambda": 791,
                "num_explored_none": 826,
                "num_inputs": 1,
                "num_kept_concrete": 387,
                "num_kept_lambda": 328,
                "num_values_explored": 3558,
                "num_values_kept": 715,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10725
            },
            "success": false,
            "task": "Task(\n    name='pop',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [9, 14], [2], [4, 11, 7], [5, 11, 4, 14, 13, 8], [14, 16, 1, 3, 10, 0], [2, 0, 1, 11, 11, 10], [6, 8, 1, 3, 0], [9], [1, 7, 11, 13, 10], [8, 2, 2], [14, 15, 8], [0, 3, 2, 16]]},\n    outputs=[[1, 2], [], [1, 1, 2], [9], [], [4, 11], [5, 11, 4, 14, 13], [14, 16, 1, 3, 10], [2, 0, 1, 11, 11], [6, 8, 1, 3], [], [1, 7, 11, 13], [8, 2], [14, 15], [0, 3, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5447037261910737,
            "num_unique_values": 107,
            "solution": "Cons(Car(x1), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 14.048059149722736,
                "explored_percent_lambda": 46.02587800369686,
                "explored_percent_none": 39.92606284658041,
                "kept_percent_concrete": 12.871287128712872,
                "kept_percent_lambda": 87.12871287128714,
                "num_examples": 15,
                "num_explored_concrete": 76,
                "num_explored_lambda": 249,
                "num_explored_none": 216,
                "num_inputs": 1,
                "num_kept_concrete": 13,
                "num_kept_lambda": 88,
                "num_values_explored": 541,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=1',\n    inputs_dict={'x1': [[16, 0, 8], [6, 7, 16, 16, 6], [11, 5, 9, 14], [5, 0, 0, 13, 1], [0, 9, 3, 1, 2, 3, 11, 8], [9, 8, 10, 8, 4], [7, 10, 5, 13, 1, 6, 11, 10], [11, 5, 11, 16], [0, 0, 8, 12], [3, 8, 6, 6, 11], [4, 1], [8, 5, 11], [2, 1, 3, 2, 13, 7, 9], [7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8]]},\n    outputs=[[16, 16, 0, 8], [6, 6, 7, 16, 16, 6], [11, 11, 5, 9, 14], [5, 5, 0, 0, 13, 1], [0, 0, 9, 3, 1, 2, 3, 11, 8], [9, 9, 8, 10, 8, 4], [7, 7, 10, 5, 13, 1, 6, 11, 10], [11, 11, 5, 11, 16], [0, 0, 0, 8, 12], [3, 3, 8, 6, 6, 11], [4, 4, 1], [8, 8, 5, 11], [2, 2, 1, 3, 2, 13, 7, 9], [7, 7, 13, 15, 10, 10, 8], [1, 1, 3, 13, 12, 5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.2748984666541219,
            "num_unique_values": 124,
            "solution": "Cons(Car(Cdr(x1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 19.866071428571427,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 37.276785714285715,
                "kept_percent_concrete": 12.711864406779661,
                "kept_percent_lambda": 87.28813559322033,
                "num_examples": 15,
                "num_explored_concrete": 89,
                "num_explored_lambda": 192,
                "num_explored_none": 167,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 103,
                "num_values_explored": 448,
                "num_values_kept": 118,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 448
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=2',\n    inputs_dict={'x1': [[0, 13, 3, 1, 12, 6, 11, 9], [9, 14, 6], [10, 7, 8, 16, 16, 14, 8, 6, 2], [9, 12, 3, 13], [6, 6, 3, 5], [6, 5, 11, 12, 14], [15, 6], [12, 11], [15, 14, 13], [4, 9, 6, 7, 6, 12, 4, 8], [4, 8, 15, 5, 8, 12, 7, 9, 9], [11, 6, 10], [2, 14, 3, 15, 14, 3, 5, 15], [1, 15], [7, 12]]},\n    outputs=[[13, 0, 13, 3, 1, 12, 6, 11, 9], [14, 9, 14, 6], [7, 10, 7, 8, 16, 16, 14, 8, 6, 2], [12, 9, 12, 3, 13], [6, 6, 6, 3, 5], [5, 6, 5, 11, 12, 14], [6, 15, 6], [11, 12, 11], [14, 15, 14, 13], [9, 4, 9, 6, 7, 6, 12, 4, 8], [8, 4, 8, 15, 5, 8, 12, 7, 9, 9], [6, 11, 6, 10], [14, 2, 14, 3, 15, 14, 3, 5, 15], [15, 1, 15], [12, 7, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.302810828667134,
            "num_unique_values": 270,
            "solution": "Cons(Index(Add(1, 1), Cdr(x1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 39.34426229508197,
                "explored_percent_lambda": 29.85332182916307,
                "explored_percent_none": 30.80241587575496,
                "kept_percent_concrete": 43.93939393939394,
                "kept_percent_lambda": 56.06060606060606,
                "num_examples": 15,
                "num_explored_concrete": 456,
                "num_explored_lambda": 346,
                "num_explored_none": 357,
                "num_inputs": 1,
                "num_kept_concrete": 116,
                "num_kept_lambda": 148,
                "num_values_explored": 1159,
                "num_values_kept": 264,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1159
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=4',\n    inputs_dict={'x1': [[16, 13, 9, 8, 8, 0, 2, 15, 9], [14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [0, 2, 8, 7, 6, 14, 0, 0, 12], [10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [16, 11, 3, 0, 8, 13], [3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [1, 10, 1, 10, 5, 16], [7, 2, 8, 11, 5, 9, 8, 9, 7], [2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [4, 8, 5, 3, 1, 7, 5, 6, 13], [11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [13, 1, 3, 2, 14, 16, 8, 4], [8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [13, 12, 8, 7, 11, 1, 15]]},\n    outputs=[[8, 16, 13, 9, 8, 8, 0, 2, 15, 9], [16, 14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [7, 0, 2, 8, 7, 6, 14, 0, 0, 12], [3, 10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [0, 16, 11, 3, 0, 8, 13], [16, 3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [10, 1, 10, 1, 10, 5, 16], [11, 7, 2, 8, 11, 5, 9, 8, 9, 7], [0, 2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [3, 4, 8, 5, 3, 1, 7, 5, 6, 13], [13, 11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [2, 13, 1, 3, 2, 14, 16, 8, 4], [13, 8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [7, 13, 12, 8, 7, 11, 1, 15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5417989348061383,
            "num_unique_values": 104,
            "solution": "Cons(0, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 17.761989342806395,
                "explored_percent_lambda": 40.319715808170514,
                "explored_percent_none": 41.91829484902309,
                "kept_percent_concrete": 14.285714285714286,
                "kept_percent_lambda": 85.71428571428571,
                "num_examples": 15,
                "num_explored_concrete": 100,
                "num_explored_lambda": 227,
                "num_explored_none": 236,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 84,
                "num_values_explored": 563,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 563
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=0',\n    inputs_dict={'x1': [[12, 0, 1, 9, 4], [9, 10, 8], [], [5, 11, 9, 0, 7, 1, 7], [14, 0, 3], [6, 9, 8, 16, 1, 2], [16, 11], [8, 0, 16, 10, 7, 12, 10], [12, 4], [1], [1, 2, 5, 13, 1, 3], [6, 8, 0, 11], [16], [4, 14, 11, 0], [5]]},\n    outputs=[[0, 12, 0, 1, 9, 4], [0, 9, 10, 8], [0], [0, 5, 11, 9, 0, 7, 1, 7], [0, 14, 0, 3], [0, 6, 9, 8, 16, 1, 2], [0, 16, 11], [0, 8, 0, 16, 10, 7, 12, 10], [0, 12, 4], [0, 1], [0, 1, 2, 5, 13, 1, 3], [0, 6, 8, 0, 11], [0, 16], [0, 4, 14, 11, 0], [0, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.03112604562193,
            "num_unique_values": 533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.15977961432507,
                "explored_percent_lambda": 18.37465564738292,
                "explored_percent_none": 27.46556473829201,
                "kept_percent_concrete": 61.48007590132827,
                "kept_percent_lambda": 38.51992409867173,
                "num_examples": 15,
                "num_explored_concrete": 1966,
                "num_explored_lambda": 667,
                "num_explored_none": 997,
                "num_inputs": 1,
                "num_kept_concrete": 324,
                "num_kept_lambda": 203,
                "num_values_explored": 3630,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10974
            },
            "success": false,
            "task": "Task(\n    name='product',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [7, 15], [15, 7], [11, 9, 9], [7, 1, 6, 2], [6], [8, 6, 8, 11, 11, 16], [10, 6, 8, 4, 6, 6, 7], [16, 1, 14, 0, 12], [0, 4, 11, 12, 15, 5, 2], [9, 5, 6, 11, 6, 13, 14], [3, 1, 5, 9, 13], [3, 10, 8, 13, 11]]},\n    outputs=[6, 0, 2, 105, 105, 891, 84, 6, 743424, 483840, 0, 0, 3243240, 1755, 34320],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6044433140195906,
            "num_unique_values": 260,
            "solution": "Cons(Car(x1), Cdr(Cdr(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 29.872340425531913,
                "explored_percent_lambda": 32.59574468085106,
                "explored_percent_none": 37.53191489361702,
                "kept_percent_concrete": 37.79527559055118,
                "kept_percent_lambda": 62.20472440944882,
                "num_examples": 15,
                "num_explored_concrete": 351,
                "num_explored_lambda": 383,
                "num_explored_none": 441,
                "num_inputs": 1,
                "num_kept_concrete": 96,
                "num_kept_lambda": 158,
                "num_values_explored": 1175,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1175
            },
            "success": true,
            "task": "Task(\n    name='remove-index-k with k=2',\n    inputs_dict={'x1': [[14, 11], [0, 3, 2, 9, 14, 4, 12, 13], [12, 14, 13, 2], [14, 5, 3], [12, 4, 1], [6, 8], [15, 3, 10], [9, 5], [0, 9, 6, 7, 15], [3, 11], [13, 3, 7], [2, 2, 13, 0, 13, 5, 2, 6, 2], [12, 5, 0, 10], [7, 4, 0, 1, 11, 0, 11], [2, 16, 6, 4, 4, 1, 5]]},\n    outputs=[[14], [0, 2, 9, 14, 4, 12, 13], [12, 13, 2], [14, 3], [12, 1], [6], [15, 10], [9], [0, 6, 7, 15], [3], [13, 7], [2, 13, 0, 13, 5, 2, 6, 2], [12, 0, 10], [7, 0, 1, 11, 0, 11], [2, 6, 4, 4, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.051348425913602,
            "num_unique_values": 651,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.58587672052663,
                "explored_percent_lambda": 25.97247157390784,
                "explored_percent_none": 22.44165170556553,
                "kept_percent_concrete": 48.83720930232558,
                "kept_percent_lambda": 51.16279069767442,
                "num_examples": 15,
                "num_explored_concrete": 1724,
                "num_explored_lambda": 868,
                "num_explored_none": 750,
                "num_inputs": 1,
                "num_kept_concrete": 315,
                "num_kept_lambda": 330,
                "num_values_explored": 3342,
                "num_values_kept": 645,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9784
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=4',\n    inputs_dict={'x1': [[15, 1, 4, 12], [8, 7, 4, 2, 3, 12, 8, 13], [6, 5, 2, 13, 14, 5, 12, 6, 16, 11, 8], [5, 6, 2, 15, 9, 1, 6], [4, 14, 15, 6], [14, 4, 7, 12, 4, 3], [4, 0, 6, 0], [13, 12, 15, 1, 7, 3, 16, 10, 12, 14], [16, 13, 8, 3, 15, 0, 4, 2, 11], [4, 9, 11, 5, 11, 1], [2, 1, 12, 15], [7, 14, 8, 15, 8], [0, 11, 12, 9, 15, 16, 0, 8], [6, 7, 13, 8, 13, 16, 7, 10], [12, 9, 10, 2, 3, 5, 1, 8]]},\n    outputs=[[15, 1, 4], [8, 7, 4, 3, 12, 8, 13], [6, 5, 2, 14, 5, 12, 6, 16, 11, 8], [5, 6, 2, 9, 1, 6], [4, 14, 15], [14, 4, 7, 4, 3], [4, 0, 6], [13, 12, 15, 7, 3, 16, 10, 12, 14], [16, 13, 8, 15, 0, 4, 2, 11], [4, 9, 11, 11, 1], [2, 1, 12], [7, 14, 8, 8], [0, 11, 12, 15, 16, 0, 8], [6, 7, 13, 13, 16, 7, 10], [12, 9, 10, 3, 5, 1, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.058916663751006,
            "num_unique_values": 601,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.92692987625221,
                "explored_percent_lambda": 29.7878609310548,
                "explored_percent_none": 28.28520919269299,
                "kept_percent_concrete": 43.02521008403362,
                "kept_percent_lambda": 56.97478991596638,
                "num_examples": 15,
                "num_explored_concrete": 1423,
                "num_explored_lambda": 1011,
                "num_explored_none": 960,
                "num_inputs": 1,
                "num_kept_concrete": 256,
                "num_kept_lambda": 339,
                "num_values_explored": 3394,
                "num_values_kept": 595,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10130
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=2',\n    inputs_dict={'x1': [[10, 10, 16, 7, 2], [5, 3, 1, 13, 7, 7, 4], [6, 0], [0], [13, 1, 3, 2, 14], [15, 7, 15, 10, 13, 3, 12], [7, 10], [1, 15, 5], [2, 7, 6, 8], [3, 7, 1, 14], [15, 2, 6], [10, 11, 7], [10], [], [7, 0, 4, 12]]},\n    outputs=[[7], [5, 3, 1, 13, 7, 7], [], [], [13, 1, 3], [15, 7, 15, 13, 3], [7], [1, 15, 5], [7], [3, 7, 1], [15], [11, 7], [], [], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.075931881088763,
            "num_unique_values": 609,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.81647940074907,
                "explored_percent_lambda": 27.830596369922212,
                "explored_percent_none": 25.352924229328725,
                "kept_percent_concrete": 44.11276948590381,
                "kept_percent_lambda": 55.88723051409619,
                "num_examples": 15,
                "num_explored_concrete": 1625,
                "num_explored_lambda": 966,
                "num_explored_none": 880,
                "num_inputs": 1,
                "num_kept_concrete": 266,
                "num_kept_lambda": 337,
                "num_values_explored": 3471,
                "num_values_kept": 603,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10419
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=3',\n    inputs_dict={'x1': [[6], [3], [6, 3, 11, 12], [], [0, 0, 7, 11, 27, 24, 7], [12], [13, 9, 6, 15, 14, 11, 13], [11, 9, 10, 15, 0, 1, 13], [10, 5, 6], [3], [7, 15, 6], [7], [5, 3, 11], [1, 1], [4, 15, 1, 6]]},\n    outputs=[[], [], [11], [], [7, 11, 7], [], [13, 14, 11, 13], [11, 10, 1, 13], [10, 5], [], [7], [7], [5, 11], [1, 1], [4, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.114141213241965,
            "num_unique_values": 301,
            "solution": "Fold((lambda u1, u2: ((lambda v1, v2: Cons(v1, v2)))(u2, u1)), x1, x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.393468118195955,
                "explored_percent_lambda": 34.292379471228614,
                "explored_percent_none": 36.314152410575424,
                "kept_percent_concrete": 30.847457627118644,
                "kept_percent_lambda": 69.15254237288136,
                "num_examples": 15,
                "num_explored_concrete": 378,
                "num_explored_lambda": 441,
                "num_explored_none": 467,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 204,
                "num_values_explored": 1286,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1286
            },
            "success": true,
            "task": "Task(\n    name='repeat-k with k=2',\n    inputs_dict={'x1': [[3, 12, 15, 12], [], [15], [2, 10, 13, 15, 3], [0, 4], [13, 6], [4, 11, 11, 12], [13], [4, 16, 0, 8], [6, 7, 16], [6, 6, 11, 5, 9], [9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2], [11]]},\n    outputs=[[3, 12, 15, 12, 3, 12, 15, 12], [], [15, 15], [2, 10, 13, 15, 3, 2, 10, 13, 15, 3], [0, 4, 0, 4], [13, 6, 13, 6], [4, 11, 11, 12, 4, 11, 11, 12], [13, 13], [4, 16, 0, 8, 4, 16, 0, 8], [6, 7, 16, 6, 7, 16], [6, 6, 11, 5, 9, 6, 6, 11, 5, 9], [9, 5, 0, 0, 13, 9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2, 0, 9, 3, 1, 2], [11, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.050949481781572,
            "num_unique_values": 651,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.178259560373384,
                "explored_percent_lambda": 27.49171936163806,
                "explored_percent_none": 24.330021077988558,
                "kept_percent_concrete": 52.55813953488372,
                "kept_percent_lambda": 47.44186046511628,
                "num_examples": 15,
                "num_explored_concrete": 1600,
                "num_explored_lambda": 913,
                "num_explored_none": 808,
                "num_inputs": 1,
                "num_kept_concrete": 339,
                "num_kept_lambda": 306,
                "num_values_explored": 3321,
                "num_values_kept": 645,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9934
            },
            "success": false,
            "task": "Task(\n    name='repeat-many',\n    inputs_dict={'x1': [[1, 1, 2, 3], [2, 1, 2, 3], [4, 1, 2], [5, 7, 0], [3, 3, 2, 5], [5, 1], [2, 15, 1], [4, 3], [1, 7, 16, 2, 2], [0, 13, 5, 2, 6], [2, 12], [0, 10, 11], [1, 0, 1], [0, 11, 11, 2], [2, 4, 4, 1, 5]]},\n    outputs=[[1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 1, 2, 1, 2, 1, 2], [7, 0, 7, 0, 7, 0, 7, 0, 7, 0], [3, 2, 5, 3, 2, 5, 3, 2, 5], [1, 1, 1, 1, 1], [15, 1, 15, 1], [3, 3, 3, 3], [7, 16, 2, 2], [], [12, 12], [], [0, 1], [], [4, 4, 1, 5, 4, 4, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.669850671198219,
            "num_unique_values": 124,
            "solution": "Map((lambda u1: Car(x1)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 18.600682593856654,
                "explored_percent_lambda": 42.83276450511946,
                "explored_percent_none": 38.56655290102389,
                "kept_percent_concrete": 17.796610169491526,
                "kept_percent_lambda": 82.20338983050847,
                "num_examples": 15,
                "num_explored_concrete": 109,
                "num_explored_lambda": 251,
                "num_explored_none": 226,
                "num_inputs": 1,
                "num_kept_concrete": 21,
                "num_kept_lambda": 97,
                "num_values_explored": 586,
                "num_values_kept": 118,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 586
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=1',\n    inputs_dict={'x1': [[6], [4, 2, 6], [16, 15, 10, 14, 4, 15, 10, 14], [7, 6], [10, 8, 1, 12], [14, 10], [3, 9, 14, 11, 13, 7, 1, 10], [1, 11, 15, 14, 15], [16], [8, 1, 0, 8, 16, 11, 7], [11, 11, 6, 0, 10], [14, 14], [15, 7, 0, 9, 9, 7, 10], [0, 16, 6, 10], [0, 15]]},\n    outputs=[[6], [4, 4, 4], [16, 16, 16, 16, 16, 16, 16, 16], [7, 7], [10, 10, 10, 10], [14, 14], [3, 3, 3, 3, 3, 3, 3, 3], [1, 1, 1, 1, 1], [16], [8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11, 11], [14, 14], [15, 15, 15, 15, 15, 15, 15], [0, 0, 0, 0], [0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.507003956940025,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: Index(1, Cdr(Cdr(x1)))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 33.05716652858327,
                "explored_percent_lambda": 33.38856669428335,
                "explored_percent_none": 33.554266777133385,
                "kept_percent_concrete": 46.07142857142857,
                "kept_percent_lambda": 53.92857142857143,
                "num_examples": 15,
                "num_explored_concrete": 399,
                "num_explored_lambda": 403,
                "num_explored_none": 405,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 151,
                "num_values_explored": 1207,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1207
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=4',\n    inputs_dict={'x1': [[12, 11, 1, 13, 14, 2, 11, 6, 6, 5, 6], [16, 7, 6, 13, 1, 0, 1, 15, 10, 14], [10, 1, 3, 13, 10, 14], [16, 4, 3, 7, 13, 13, 0, 6, 4], [10, 10, 0, 5, 7, 16, 2, 7, 8, 16], [0, 10, 8, 9, 8, 1, 9, 3], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7], [4, 14, 0, 9, 15, 3, 7, 5, 14, 7], [0, 4, 2, 5], [9, 11, 5, 6, 10, 0, 15, 6], [0, 15, 16, 5], [10, 5, 4, 3, 7, 1, 5, 10, 3, 15], [0, 9, 16, 3, 3, 11, 16, 0], [1, 4, 13, 3], [10, 15, 6, 9, 2]]},\n    outputs=[[13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [13, 13, 13, 13, 13, 13], [7, 7, 7, 7, 7, 7, 7, 7, 7], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [9, 9, 9, 9, 9, 9, 9, 9, 9, 9], [5, 5, 5, 5], [6, 6, 6, 6, 6, 6, 6, 6], [5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3, 3, 3, 3, 3], [3, 3, 3, 3], [9, 9, 9, 9, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.13089613104239,
            "num_unique_values": 670,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.14943215780036,
                "explored_percent_lambda": 26.83801554094441,
                "explored_percent_none": 23.01255230125523,
                "kept_percent_concrete": 42.7710843373494,
                "kept_percent_lambda": 57.2289156626506,
                "num_examples": 15,
                "num_explored_concrete": 1678,
                "num_explored_lambda": 898,
                "num_explored_none": 770,
                "num_inputs": 1,
                "num_kept_concrete": 284,
                "num_kept_lambda": 380,
                "num_values_explored": 3346,
                "num_values_kept": 664,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10127
            },
            "success": false,
            "task": "Task(\n    name='reverse',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 12], [], [7, 13, 5, 7, 6], [15, 7, 11], [8, 7, 11, 7, 15, 11], [9, 10, 5, 8, 3], [2], [8, 6, 9], [4, 11], [], [], [15, 15, 11, 5, 3], [11, 5, 5, 6]]},\n    outputs=[[4, 0, 2], [1, 1, 5, 0, 2, 4, 5, 2], [12, 14], [], [6, 7, 5, 13, 7], [11, 7, 15], [11, 15, 7, 11, 7, 8], [3, 8, 5, 10, 9], [2], [9, 6, 8], [11, 4], [], [], [3, 5, 11, 15, 15], [6, 5, 5, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.051633738912642,
            "num_unique_values": 595,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.687935034802784,
                "explored_percent_lambda": 17.198375870069604,
                "explored_percent_none": 21.11368909512761,
                "kept_percent_concrete": 61.62988115449915,
                "kept_percent_lambda": 38.37011884550085,
                "num_examples": 15,
                "num_explored_concrete": 2127,
                "num_explored_lambda": 593,
                "num_explored_none": 728,
                "num_inputs": 1,
                "num_kept_concrete": 363,
                "num_kept_lambda": 226,
                "num_values_explored": 3448,
                "num_values_kept": 589,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10323
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=4',\n    inputs_dict={'x1': [[2, 6, 10, 10, 8, 15, 16, 15, 1, 2, 7, 5, 4, 0, 13], [0, 9, 15, 3, 7], [7, 7, 2, 1, 10, 7, 2, 4, 3, 4, 10, 3, 12, 0, 15, 14], [12, 6, 15, 12, 9, 14, 7, 9, 7, 7, 8, 1], [7, 9, 13, 6, 10, 10, 14, 4, 11, 3, 0, 3, 12, 13, 13, 16], [15, 8, 14, 3, 4, 16, 1, 2, 5, 10, 5, 16, 4, 8], [5, 2, 5, 8, 2, 2, 2, 10, 12, 5, 13], [10, 8, 6, 7, 15, 2, 9, 16, 16, 4, 0, 3, 4, 9, 2], [15, 3, 16, 12, 14, 13, 5, 8, 8, 9], [14, 7, 0, 0, 4, 2, 5, 8, 9, 11, 5, 6, 10, 0, 15, 6, 0], [11, 2, 8, 16, 9, 8, 11, 10, 14, 11, 16, 5, 15, 2, 5, 13], [16, 11, 13, 11, 3, 1, 8, 15, 7, 7], [8, 0, 13, 13, 1, 8, 8, 4, 5], [3, 5, 11, 7, 11, 10, 3, 14, 0], [16, 0, 11, 7, 9, 2, 5, 11]]},\n    outputs=[[5, 4, 0, 13, 2, 6, 10, 10, 8, 15, 16, 15, 1, 2, 7], [9, 15, 3, 7, 0], [12, 0, 15, 14, 7, 7, 2, 1, 10, 7, 2, 4, 3, 4, 10, 3], [7, 7, 8, 1, 12, 6, 15, 12, 9, 14, 7, 9], [12, 13, 13, 16, 7, 9, 13, 6, 10, 10, 14, 4, 11, 3, 0, 3], [5, 16, 4, 8, 15, 8, 14, 3, 4, 16, 1, 2, 5, 10], [10, 12, 5, 13, 5, 2, 5, 8, 2, 2, 2], [3, 4, 9, 2, 10, 8, 6, 7, 15, 2, 9, 16, 16, 4, 0], [5, 8, 8, 9, 15, 3, 16, 12, 14, 13], [0, 15, 6, 0, 14, 7, 0, 0, 4, 2, 5, 8, 9, 11, 5, 6, 10], [15, 2, 5, 13, 11, 2, 8, 16, 9, 8, 11, 10, 14, 11, 16, 5], [8, 15, 7, 7, 16, 11, 13, 11, 3, 1], [8, 8, 4, 5, 8, 0, 13, 13, 1], [10, 3, 14, 0, 3, 5, 11, 7, 11], [9, 2, 5, 11, 16, 0, 11, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.049220953136683,
            "num_unique_values": 626,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.3121387283237,
                "explored_percent_lambda": 16.30057803468208,
                "explored_percent_none": 21.387283236994218,
                "kept_percent_concrete": 61.774193548387096,
                "kept_percent_lambda": 38.225806451612904,
                "num_examples": 15,
                "num_explored_concrete": 2156,
                "num_explored_lambda": 564,
                "num_explored_none": 740,
                "num_inputs": 1,
                "num_kept_concrete": 383,
                "num_kept_lambda": 237,
                "num_values_explored": 3460,
                "num_values_kept": 620,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10417
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=5',\n    inputs_dict={'x1': [[4, 12, 6, 13, 11, 6, 1, 3, 4], [4, 8, 5, 8, 6, 4, 16, 5, 11, 11, 14, 0, 4, 6], [4, 6, 9, 11, 0, 1, 11, 7, 8, 4, 3, 7], [15, 16, 5, 13, 10, 5, 4, 3, 7, 1, 5, 10], [4, 14, 0, 5, 2, 1, 1, 7, 1, 1, 1, 3, 13, 16, 0], [1, 3, 9, 11, 15, 2], [6, 9, 9, 0, 15, 12, 1, 8, 5, 14, 8, 2, 0], [10, 15, 6, 14, 4, 12, 0, 15, 8, 13, 16, 6, 9, 16], [3, 12, 13, 12, 5, 7, 7, 2], [8, 1, 14, 9, 7, 11, 16, 0, 15, 1, 4, 12, 10], [14, 6, 10, 2, 7, 12, 1, 12, 8, 11, 2, 7, 3], [15, 10, 0, 9, 16, 3, 3, 11, 16, 0, 1, 1, 4, 13], [6, 0, 7, 8, 15, 14, 0, 8, 16, 15, 9, 3, 7, 3, 9], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8, 13], [7, 3, 14, 15, 8, 10, 9, 15, 9, 11, 13]]},\n    outputs=[[11, 6, 1, 3, 4, 4, 12, 6, 13], [11, 14, 0, 4, 6, 4, 8, 5, 8, 6, 4, 16, 5, 11], [7, 8, 4, 3, 7, 4, 6, 9, 11, 0, 1, 11], [3, 7, 1, 5, 10, 15, 16, 5, 13, 10, 5, 4], [1, 3, 13, 16, 0, 4, 14, 0, 5, 2, 1, 1, 7, 1, 1], [3, 9, 11, 15, 2, 1], [5, 14, 8, 2, 0, 6, 9, 9, 0, 15, 12, 1, 8], [13, 16, 6, 9, 16, 10, 15, 6, 14, 4, 12, 0, 15, 8], [12, 5, 7, 7, 2, 3, 12, 13], [15, 1, 4, 12, 10, 8, 1, 14, 9, 7, 11, 16, 0], [8, 11, 2, 7, 3, 14, 6, 10, 2, 7, 12, 1, 12], [0, 1, 1, 4, 13, 15, 10, 0, 9, 16, 3, 3, 11, 16], [9, 3, 7, 3, 9, 6, 0, 7, 8, 15, 14, 0, 8, 16, 15], [14, 4, 3, 8, 13, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3], [9, 15, 9, 11, 13, 7, 3, 14, 15, 8, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5558446520008147,
            "num_unique_values": 110,
            "solution": "Cons(Car(x1), [])",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 16.036036036036037,
                "explored_percent_lambda": 43.06306306306306,
                "explored_percent_none": 40.9009009009009,
                "kept_percent_concrete": 12.5,
                "kept_percent_lambda": 87.5,
                "num_examples": 15,
                "num_explored_concrete": 89,
                "num_explored_lambda": 239,
                "num_explored_none": 227,
                "num_inputs": 1,
                "num_kept_concrete": 13,
                "num_kept_lambda": 91,
                "num_values_explored": 555,
                "num_values_kept": 104,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=1 and n=1',\n    inputs_dict={'x1': [[5, 14, 5, 2, 13, 1, 7, 13, 1, 1], [15, 0, 1, 9, 3, 14, 6, 10, 12, 5], [16, 14, 0, 6, 8, 4, 0, 0, 11], [8, 6, 15, 14], [4, 9, 0, 9, 13], [0, 11, 13, 1, 16, 11, 3, 4, 11, 4], [12, 0, 13, 16, 10], [9, 9, 14, 10], [9, 2, 11, 7], [8, 5, 0], [16, 4, 9, 6, 6, 1], [10, 3, 10, 11, 4, 16, 7], [15, 13, 8], [14, 1, 5, 9, 0, 15, 14, 9, 12, 13], [15, 11, 7, 8, 10, 16]]},\n    outputs=[[5], [15], [16], [8], [4], [0], [12], [9], [9], [8], [16], [10], [15], [14], [15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.045790432021022,
            "num_unique_values": 587,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.167927382753405,
                "explored_percent_lambda": 23.872919818456882,
                "explored_percent_none": 26.959152798789713,
                "kept_percent_concrete": 54.0447504302926,
                "kept_percent_lambda": 45.9552495697074,
                "num_examples": 15,
                "num_explored_concrete": 1625,
                "num_explored_lambda": 789,
                "num_explored_none": 891,
                "num_inputs": 1,
                "num_kept_concrete": 314,
                "num_kept_lambda": 267,
                "num_values_explored": 3305,
                "num_values_kept": 581,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9963
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=4',\n    inputs_dict={'x1': [[12, 3, 1, 10, 12, 2, 13, 5, 5], [5, 8, 11, 0, 0, 13, 3, 11, 1, 2, 12, 15, 5], [12, 12, 2, 1, 10, 15, 3, 13, 9, 9, 16, 1, 5], [15, 13, 11, 10, 5, 14, 11, 13, 6, 5], [3, 8, 9, 15, 11, 10, 0, 15, 16, 8, 15, 1], [14, 3, 5, 6, 0, 14, 6, 4, 11, 8, 11, 11, 10], [12, 1, 8, 14, 0, 15, 6, 16, 1], [5, 6, 8, 1, 11, 12, 12, 6, 5, 6], [15, 10, 11, 14, 12, 12, 14], [0, 7, 13, 15, 0, 9, 4, 7, 12, 7, 6], [14, 4, 5, 8, 14, 12, 15, 2, 14, 0, 8, 12, 11], [2, 13, 1, 16, 9, 5, 16, 16, 4, 1, 8], [9, 6, 11, 4, 14, 7, 16, 7, 3], [6, 7, 15, 2, 2, 16, 15, 12, 6, 3, 3, 14, 5], [8, 10, 14, 0, 14, 0, 16]]},\n    outputs=[[12, 3, 1, 10], [5, 8, 11, 0], [12, 12, 2, 1], [15, 13, 11, 10], [3, 8, 9, 15], [14, 3, 5, 6], [12, 1, 8, 14], [5, 6, 8, 1], [15, 10, 11, 14], [0, 7, 13, 15], [14, 4, 5, 8], [2, 13, 1, 16], [9, 6, 11, 4], [6, 7, 15, 2], [8, 10, 14, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.712976268026978,
            "num_unique_values": 446,
            "solution": "Cons(Car(Cdr(x1)), Cons(Index(1, Cdr(x1)), []))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 49.974160206718345,
                "explored_percent_lambda": 25.322997416020673,
                "explored_percent_none": 24.702842377260982,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 15,
                "num_explored_concrete": 967,
                "num_explored_lambda": 490,
                "num_explored_none": 478,
                "num_inputs": 1,
                "num_kept_concrete": 230,
                "num_kept_lambda": 210,
                "num_values_explored": 1935,
                "num_values_kept": 440,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1935
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=2 and n=2',\n    inputs_dict={'x1': [[2, 13, 7, 10, 15], [12, 2, 10, 14, 4, 0, 4], [6, 1, 7, 11, 9, 4], [2, 14, 5, 16, 3, 7, 15, 3], [14, 11, 16, 5, 0, 0, 5], [12, 6, 14, 6, 7, 8, 6, 6, 13, 7, 6, 10], [13, 12, 8, 12, 8], [9, 5, 16, 1, 15, 12, 6, 7], [0, 9, 16, 10, 16], [8, 1, 15, 13, 12, 15, 14, 11, 13, 2, 5], [2, 7, 11, 0, 2, 7, 2, 2, 10, 6, 0], [6, 16, 14, 2, 4, 13, 11, 11, 12, 4], [8, 7, 10, 6, 9], [11, 7, 5, 13, 0, 4, 14, 8, 3, 10], [8, 3, 9, 11, 15, 7, 13, 4]]},\n    outputs=[[13, 7], [2, 10], [1, 7], [14, 5], [11, 16], [6, 14], [12, 8], [5, 16], [9, 16], [1, 15], [7, 11], [16, 14], [7, 10], [7, 5], [3, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04558127000928,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.659489387880654,
                "explored_percent_lambda": 22.45462934481698,
                "explored_percent_none": 20.88588126730237,
                "kept_percent_concrete": 51.894563426688634,
                "kept_percent_lambda": 48.105436573311366,
                "num_examples": 15,
                "num_explored_concrete": 1842,
                "num_explored_lambda": 730,
                "num_explored_none": 679,
                "num_inputs": 1,
                "num_kept_concrete": 315,
                "num_kept_lambda": 292,
                "num_values_explored": 3251,
                "num_values_kept": 607,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9731
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=3',\n    inputs_dict={'x1': [[7, 0, 2, 0, 3, 8, 2, 0, 5, 2], [2, 13, 8, 6, 3, 9, 0, 11, 6, 7, 4], [5, 11, 2, 6, 5, 15, 7, 0, 10, 16], [4, 11, 16, 11, 10, 9, 5, 12, 6, 0, 5], [14, 11, 0, 1, 0, 12, 14, 10, 7], [7, 15, 11, 10, 13, 6, 9, 7, 2, 9, 4, 6, 4], [5, 11, 9, 0, 10, 16, 9, 5, 11], [14, 12, 8, 6, 15, 15, 11, 13, 16, 16, 11, 2, 7], [16, 8, 13, 3, 9, 1, 16, 9, 3, 4], [7, 4, 11, 13, 11, 16, 9, 4, 14, 13, 1, 2, 15], [13, 5, 3, 16, 8, 12], [16, 11, 10, 0, 7, 14], [11, 5, 2, 9, 12, 0, 3, 11, 9, 15], [1, 5, 3, 6, 16, 9], [2, 15, 1, 6, 7, 10, 1, 8, 8, 7, 8]]},\n    outputs=[[0, 2, 0], [13, 8, 6], [11, 2, 6], [11, 16, 11], [11, 0, 1], [15, 11, 10], [11, 9, 0], [12, 8, 6], [8, 13, 3], [4, 11, 13], [5, 3, 16], [11, 10, 0], [5, 2, 9], [5, 3, 6], [15, 1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.168637711089104,
            "num_unique_values": 593,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.229135053110774,
                "explored_percent_lambda": 24.00606980273141,
                "explored_percent_none": 24.764795144157816,
                "kept_percent_concrete": 50.08517887563884,
                "kept_percent_lambda": 49.91482112436116,
                "num_examples": 15,
                "num_explored_concrete": 1688,
                "num_explored_lambda": 791,
                "num_explored_none": 816,
                "num_inputs": 1,
                "num_kept_concrete": 294,
                "num_kept_lambda": 293,
                "num_values_explored": 3295,
                "num_values_kept": 587,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9898
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=5',\n    inputs_dict={'x1': [[9, 15, 11, 12, 12, 14, 9, 2, 0, 9, 15, 13, 7, 16], [8, 10, 0, 3, 8, 5, 1, 7, 4, 2, 7, 14, 16], [11, 10, 12, 11, 11, 0, 5, 1, 8, 0], [10, 14, 14, 0, 16, 0, 9, 15, 1, 15, 10], [14, 6, 8, 15, 15, 14, 12, 3], [15, 5, 3, 3, 12, 2, 11, 16, 6, 6, 12, 9, 13, 15, 0], [15, 4, 13, 9, 10, 2, 9, 14, 4, 16], [4, 14, 6, 13, 10, 6, 12, 8, 11, 14], [11, 15, 3, 9, 0, 16, 1, 0, 8, 15, 8], [11, 3, 7, 16, 4, 8, 6, 7, 9, 3, 0, 5, 6], [15, 10, 2, 15, 16, 11, 16, 9, 13, 10, 1, 8, 14, 5], [14, 1, 7, 10, 5, 11, 16, 8, 1, 1, 14, 16, 0, 14, 14], [14, 4, 13, 11, 12, 10, 12, 3, 1, 10, 15, 7], [12, 12, 10, 16, 5, 6, 9, 4, 1, 0, 13, 4, 15, 7], [9, 7, 2, 5, 0, 11, 10, 2, 1, 15, 16, 8]]},\n    outputs=[[15, 11, 12, 12, 14], [10, 0, 3, 8, 5], [10, 12, 11, 11, 0], [14, 14, 0, 16, 0], [6, 8, 15, 15, 14], [5, 3, 3, 12, 2], [4, 13, 9, 10, 2], [14, 6, 13, 10, 6], [15, 3, 9, 0, 16], [3, 7, 16, 4, 8], [10, 2, 15, 16, 11], [1, 7, 10, 5, 11], [4, 13, 11, 12, 10], [12, 10, 16, 5, 6], [7, 2, 5, 0, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.049606647808105,
            "num_unique_values": 693,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.991738163330155,
                "explored_percent_lambda": 22.65649825230378,
                "explored_percent_none": 19.35176358436606,
                "kept_percent_concrete": 54.29403202328967,
                "kept_percent_lambda": 45.70596797671033,
                "num_examples": 15,
                "num_explored_concrete": 1825,
                "num_explored_lambda": 713,
                "num_explored_none": 609,
                "num_inputs": 1,
                "num_kept_concrete": 373,
                "num_kept_lambda": 314,
                "num_values_explored": 3147,
                "num_values_kept": 687,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9558
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=3 and n=3',\n    inputs_dict={'x1': [[9, 5, 7, 11, 0, 7, 16], [16, 16, 12, 7, 5, 4, 15, 1, 11, 1], [5, 3, 4, 11, 12, 2, 8, 12], [3, 9, 3, 2, 14, 6, 2, 8, 14], [7, 13, 9, 7, 8, 15, 9, 15, 7, 4, 9], [3, 3, 16, 13, 4, 15, 14], [8, 13, 13, 11, 6, 15, 7, 8, 5, 10, 1], [4, 6, 3, 11, 8, 0, 13, 2, 12, 10, 12, 12, 15], [3, 10, 15, 15, 6, 3, 4, 10, 12, 11, 7, 15], [15, 5, 13, 13, 16, 11, 3, 7], [16, 10, 5, 13, 10, 7, 5], [9, 6, 3, 12, 2, 3, 11, 6, 2, 7, 11, 2, 13, 8], [4, 3, 2, 1, 10, 0, 14, 0, 14], [1, 15, 7, 4, 2, 15, 1, 7, 10, 3], [6, 1, 1, 7, 1, 12, 3, 5, 1, 12, 11]]},\n    outputs=[[7, 11, 0], [12, 7, 5], [4, 11, 12], [3, 2, 14], [9, 7, 8], [16, 13, 4], [13, 11, 6], [3, 11, 8], [15, 15, 6], [13, 13, 16], [5, 13, 10], [3, 12, 2], [2, 1, 10], [7, 4, 2], [1, 7, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.079398307017982,
            "num_unique_values": 670,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.03883495145631,
                "explored_percent_lambda": 19.296116504854368,
                "explored_percent_none": 23.66504854368932,
                "kept_percent_concrete": 58.734939759036145,
                "kept_percent_lambda": 41.265060240963855,
                "num_examples": 15,
                "num_explored_concrete": 1880,
                "num_explored_lambda": 636,
                "num_explored_none": 780,
                "num_inputs": 1,
                "num_kept_concrete": 390,
                "num_kept_lambda": 274,
                "num_values_explored": 3296,
                "num_values_kept": 664,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9667
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=3 and n=4',\n    inputs_dict={'x1': [[15, 10, 1, 10, 15, 13, 5, 4, 3, 12, 0, 5, 1, 9, 4], [13, 11, 15, 0, 16, 16, 1, 2, 16, 11, 2, 13, 14], [4, 11, 16, 9, 3, 9, 3, 5, 8, 8, 12, 11, 0, 6], [2, 10, 13, 10, 15, 1, 0, 11, 0, 15, 3, 7, 4, 11], [9, 8, 16, 9, 14, 9, 12, 1, 1, 0, 13, 0], [15, 11, 1, 3, 16, 2, 15, 2, 16, 5], [0, 5, 15, 2, 7, 11, 8, 4, 12, 2, 4], [10, 9, 3, 3, 4, 8, 9, 6, 6], [16, 4, 13, 12, 3, 14, 12, 16], [6, 9, 12, 0, 0, 3, 13, 11, 13], [8, 7, 16, 2, 13, 8, 14, 14, 15, 9, 8, 9, 1], [9, 1, 10, 0, 14, 12, 5, 1, 12], [0, 9, 14, 0, 7, 12, 14, 4, 7, 0, 12, 10], [9, 0, 6, 6, 12, 7, 3, 13, 8], [8, 10, 5, 12, 3, 8, 0, 16, 8, 2]]},\n    outputs=[[1, 10, 15, 13], [15, 0, 16, 16], [16, 9, 3, 9], [13, 10, 15, 1], [16, 9, 14, 9], [1, 3, 16, 2], [15, 2, 7, 11], [3, 3, 4, 8], [13, 12, 3, 14], [12, 0, 0, 3], [16, 2, 13, 8], [10, 0, 14, 12], [14, 0, 7, 12], [6, 6, 12, 7], [5, 12, 3, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.052907099947333,
            "num_unique_values": 635,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.7593177511055,
                "explored_percent_lambda": 22.8048010107391,
                "explored_percent_none": 20.4358812381554,
                "kept_percent_concrete": 50.39745627980922,
                "kept_percent_lambda": 49.60254372019078,
                "num_examples": 15,
                "num_explored_concrete": 1797,
                "num_explored_lambda": 722,
                "num_explored_none": 647,
                "num_inputs": 1,
                "num_kept_concrete": 317,
                "num_kept_lambda": 312,
                "num_values_explored": 3166,
                "num_values_kept": 629,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9495
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=3 and n=5',\n    inputs_dict={'x1': [[8, 5, 10, 10, 13, 4, 5, 1, 4, 5], [2, 8, 14, 13, 9, 7, 3, 1, 8, 3], [9, 3, 15, 15, 11, 1, 0, 3, 6, 14, 12, 3, 8, 4], [1, 0, 5, 5, 13, 10, 14, 4, 11], [5, 11, 10, 6, 5, 14, 1, 2, 4, 1, 2, 5, 6, 15], [14, 1, 6, 4, 10, 10, 13, 9, 1, 10, 4, 3, 12, 8, 14, 13], [13, 0, 15, 4, 12, 16, 4, 3, 2, 7, 5, 6, 0, 0, 14], [12, 13, 2, 11, 3, 1, 16, 11, 4, 12, 2, 1, 1], [0, 1, 4, 1, 7, 8, 12, 15, 14, 12, 9, 2, 15, 5], [3, 15, 15, 7, 15, 7, 11, 15, 14, 5, 4, 7, 10, 6, 4, 2], [14, 7, 14, 14, 0, 8, 10, 4, 1, 9, 0, 9, 4], [11, 1, 2, 6, 9, 7, 13, 2, 3, 16, 8], [5, 0, 14, 1, 3, 6, 0, 6, 16, 3, 2, 14, 8, 7, 8, 16], [2, 11, 6, 1, 16, 9, 12, 12, 9, 5, 6, 4, 13, 16, 14, 6], [16, 11, 0, 8, 5, 11, 15, 6, 12]]},\n    outputs=[[10, 10, 13, 4, 5], [14, 13, 9, 7, 3], [15, 15, 11, 1, 0], [5, 5, 13, 10, 14], [10, 6, 5, 14, 1], [6, 4, 10, 10, 13], [15, 4, 12, 16, 4], [2, 11, 3, 1, 16], [4, 1, 7, 8, 12], [15, 7, 15, 7, 11], [14, 14, 0, 8, 10], [2, 6, 9, 7, 13], [14, 1, 3, 6, 0], [6, 1, 16, 9, 12], [0, 8, 5, 11, 15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.3367889621295035,
            "num_unique_values": 273,
            "solution": "Cons(Index(Add(1, 1), Cdr(x1)), [])",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 31.431079894644427,
                "explored_percent_lambda": 34.591747146619845,
                "explored_percent_none": 33.977172958735736,
                "kept_percent_concrete": 40.449438202247194,
                "kept_percent_lambda": 59.550561797752806,
                "num_examples": 15,
                "num_explored_concrete": 358,
                "num_explored_lambda": 394,
                "num_explored_none": 387,
                "num_inputs": 1,
                "num_kept_concrete": 108,
                "num_kept_lambda": 159,
                "num_values_explored": 1139,
                "num_values_kept": 267,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1139
            },
            "success": true,
            "task": "Task(\n    name='slice-k-n with k=4 and n=1',\n    inputs_dict={'x1': [[4, 14, 2, 9, 2, 14, 16], [0, 0, 3, 2, 15, 14, 2], [13, 13, 12, 9, 14, 1, 12, 4, 14, 8, 8, 0, 1], [10, 3, 6, 1, 10, 12, 5], [10, 5, 5, 12, 14, 10, 3, 6, 7, 15, 0], [13, 16, 7, 9, 12, 14, 2, 9], [4, 8, 10, 12, 12, 3, 13, 4, 7, 10, 10], [10, 10, 14, 13, 9, 8, 7, 13, 10, 12, 11, 4, 16], [7, 8, 3, 14, 10, 10], [0, 6, 2, 7, 9, 8, 11, 4, 9, 11, 2], [2, 8, 12, 12, 3, 7, 5, 12, 3, 13], [9, 16, 10, 5, 14, 0, 1, 4], [8, 13, 9, 1, 16, 0, 7, 5, 7, 11, 3, 2, 8], [15, 12, 4, 9, 16, 11, 8], [16, 10, 10, 2, 9, 6, 10, 4, 1, 7, 14, 8]]},\n    outputs=[[9], [2], [9], [1], [12], [9], [12], [13], [14], [7], [12], [5], [1], [9], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.0607216572389,
            "num_unique_values": 728,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.37881074554784,
                "explored_percent_lambda": 16.993661334138242,
                "explored_percent_none": 17.627527920313916,
                "kept_percent_concrete": 63.01939058171745,
                "kept_percent_lambda": 36.98060941828255,
                "num_examples": 15,
                "num_explored_concrete": 2166,
                "num_explored_lambda": 563,
                "num_explored_none": 584,
                "num_inputs": 1,
                "num_kept_concrete": 455,
                "num_kept_lambda": 267,
                "num_values_explored": 3313,
                "num_values_kept": 722,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9936
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=3',\n    inputs_dict={'x1': [[12, 12, 13, 16, 8, 14, 6, 13], [1, 8, 7, 8, 4, 3, 6, 1, 10, 8, 5, 0, 4, 12, 15], [8, 15, 12, 16, 13, 5, 6, 2], [0, 8, 0, 13, 14, 11, 6, 7, 13, 11, 1, 3], [6, 1, 15, 0, 10, 9, 3, 13, 1, 12, 15, 3, 14, 1, 6], [8, 4, 3, 7, 1, 10, 14, 7], [14, 8, 11, 16, 15, 11, 5, 5, 10, 0, 12, 8, 3, 9], [1, 6, 5, 2, 6, 7, 15, 5, 5, 7], [0, 5, 13, 3, 15, 5, 12, 5, 4, 2, 2, 3, 16], [0, 1, 7, 16, 12, 13, 12, 1, 2], [3, 14, 1, 4, 1, 16, 6, 3, 1, 7, 9], [14, 15, 0, 16, 4, 11, 2, 13, 7, 5, 8], [13, 5, 14, 11, 1, 3, 12, 7, 14, 10, 15, 10, 2], [9, 7, 14, 3, 6, 10, 6, 8, 1], [1, 9, 0, 13, 8, 10, 14, 8, 15, 10, 10, 6, 14]]},\n    outputs=[[16, 8, 14], [8, 4, 3], [16, 13, 5], [13, 14, 11], [0, 10, 9], [7, 1, 10], [16, 15, 11], [2, 6, 7], [3, 15, 5], [16, 12, 13], [4, 1, 16], [16, 4, 11], [11, 1, 3], [3, 6, 10], [13, 8, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05268177203834,
            "num_unique_values": 657,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.507936507936506,
                "explored_percent_lambda": 22.095238095238095,
                "explored_percent_none": 21.396825396825395,
                "kept_percent_concrete": 53.45622119815668,
                "kept_percent_lambda": 46.54377880184332,
                "num_examples": 15,
                "num_explored_concrete": 1780,
                "num_explored_lambda": 696,
                "num_explored_none": 674,
                "num_inputs": 1,
                "num_kept_concrete": 348,
                "num_kept_lambda": 303,
                "num_values_explored": 3150,
                "num_values_kept": 651,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9495
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=5',\n    inputs_dict={'x1': [[13, 8, 8, 16, 2, 3, 13, 1, 9, 9, 1, 16, 7, 11], [13, 11, 11, 9, 11, 2, 7, 2, 7, 2, 0, 12, 10, 4, 14, 11, 15], [8, 4, 13, 6, 7, 13, 7, 5, 15, 11, 8, 13, 6, 1, 0], [2, 8, 6, 13, 2, 0, 0, 8, 8, 7, 8, 15, 12, 12, 13], [1, 15, 7, 1, 16, 16, 6, 8, 9, 15, 14, 1, 12], [6, 5, 16, 5, 5, 12, 12, 9, 9, 16, 14, 14], [1, 6, 1, 5, 16, 14, 0, 9, 9, 13, 4, 9, 14], [7, 8, 2, 2, 13, 15, 0, 9, 8, 8, 13, 13, 10, 11, 7], [7, 4, 12, 1, 11, 13, 14, 11, 11, 2, 2, 0, 14, 15], [12, 11, 15, 8, 8, 10, 5, 5, 5, 14, 16], [1, 12, 7, 12, 0, 14, 12, 14, 5, 12, 15, 12, 1, 12, 6], [14, 8, 12, 8, 2, 14, 1, 2, 15, 2, 14, 0, 0], [3, 0, 1, 14, 6, 10, 10, 12, 6, 0, 1, 9, 6, 7], [5, 14, 2, 6, 12, 5, 6, 10, 4, 8, 14, 12], [14, 14, 8, 2, 4, 8, 10, 9, 12, 11, 10]]},\n    outputs=[[16, 2, 3, 13, 1], [9, 11, 2, 7, 2], [6, 7, 13, 7, 5], [13, 2, 0, 0, 8], [1, 16, 16, 6, 8], [5, 5, 12, 12, 9], [5, 16, 14, 0, 9], [2, 13, 15, 0, 9], [1, 11, 13, 14, 11], [8, 8, 10, 5, 5], [12, 0, 14, 12, 14], [8, 2, 14, 1, 2], [14, 6, 10, 10, 12], [6, 12, 5, 6, 10], [2, 4, 8, 10, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.07435408467427,
            "num_unique_values": 637,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.86950904392765,
                "explored_percent_lambda": 23.772609819121445,
                "explored_percent_none": 27.357881136950905,
                "kept_percent_concrete": 52.931854199683045,
                "kept_percent_lambda": 47.068145800316955,
                "num_examples": 15,
                "num_explored_concrete": 1513,
                "num_explored_lambda": 736,
                "num_explored_none": 847,
                "num_inputs": 1,
                "num_kept_concrete": 334,
                "num_kept_lambda": 297,
                "num_values_explored": 3096,
                "num_values_kept": 631,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9178
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=2',\n    inputs_dict={'x1': [[4, 6, 13, 1, 3, 8, 5, 4, 16, 8, 6, 15], [9, 4, 5, 8, 0, 4, 2, 11], [4, 15, 6, 1, 4, 4, 11, 5, 15, 12], [5, 3, 5, 12, 1, 7, 15, 12, 6, 1, 8, 15, 5, 2, 16], [13, 13, 3, 6, 5, 1, 1, 7], [2, 15, 5, 13, 14, 10, 2, 2, 15, 16, 1, 13, 15, 4], [9, 9, 11, 10, 14, 11, 13, 12, 10, 16], [15, 10, 14, 9, 4, 7, 1, 7, 1, 1, 5, 8], [5, 12, 16, 6, 2, 14, 9, 15, 6], [1, 12, 11, 6, 4, 4, 16, 9, 10, 0, 4], [9, 12, 12, 15, 15, 7, 5, 0, 1, 13, 11, 0], [6, 13, 14, 5, 13, 15, 16, 5, 8, 3, 15, 2, 0, 12, 6], [7, 15, 9, 9, 2, 2, 3, 8, 14, 6, 5, 6], [9, 7, 1, 9, 14, 0, 9, 4, 14, 16, 8, 0, 4], [0, 11, 16, 14, 7, 7, 11, 11, 4, 5, 15, 6]]},\n    outputs=[[3, 8], [0, 4], [4, 4], [1, 7], [5, 1], [14, 10], [14, 11], [4, 7], [2, 14], [4, 4], [15, 7], [13, 15], [2, 2], [14, 0], [7, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.050342408008873,
            "num_unique_values": 619,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.3198127925117,
                "explored_percent_lambda": 22.121684867394695,
                "explored_percent_none": 22.558502340093604,
                "kept_percent_concrete": 53.3442088091354,
                "kept_percent_lambda": 46.6557911908646,
                "num_examples": 15,
                "num_explored_concrete": 1773,
                "num_explored_lambda": 709,
                "num_explored_none": 723,
                "num_inputs": 1,
                "num_kept_concrete": 327,
                "num_kept_lambda": 286,
                "num_values_explored": 3205,
                "num_values_kept": 613,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9493
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=4',\n    inputs_dict={'x1': [[7, 6, 5, 7, 13, 8, 11, 13, 3, 16, 12, 10, 6, 15, 11, 3, 4], [8, 3, 6, 2, 1, 10, 1, 13, 7, 6, 3, 8, 11, 11, 8, 10, 8], [12, 4, 7, 1, 8, 1, 2, 3, 7, 5], [12, 4, 14, 10, 8, 12, 12, 9, 1, 0, 4, 0, 15, 13, 1, 11], [8, 1, 8, 16, 7, 10, 9, 3, 9, 9, 10, 3, 15, 16, 5, 5], [11, 13, 13, 3, 4, 15, 1, 7, 10, 13, 7], [11, 4, 5, 14, 3, 13, 3, 0, 8, 6, 11, 0, 0], [16, 3, 10, 5, 6, 16, 1, 11, 7, 13, 13, 13, 4], [11, 15, 13, 3, 10, 16, 13, 3, 11, 5, 15, 6, 6, 14, 6, 10, 9], [5, 12, 3, 12, 15, 2, 6, 6, 15, 11, 16, 2], [2, 3, 9, 15, 1, 14, 7, 13, 10, 12, 14, 1, 11, 5, 12], [0, 8, 1, 11, 12, 14, 12, 5, 7, 4, 10, 13, 6, 4], [0, 9, 12, 15, 16, 4, 2, 7, 8, 2, 0, 2], [1, 4, 15, 3, 15, 8, 14, 5, 9, 4, 4, 2, 15, 7, 8], [13, 2, 16, 15, 14, 4, 10, 0, 10, 0, 3]]},\n    outputs=[[13, 8, 11, 13], [1, 10, 1, 13], [8, 1, 2, 3], [8, 12, 12, 9], [7, 10, 9, 3], [4, 15, 1, 7], [3, 13, 3, 0], [6, 16, 1, 11], [10, 16, 13, 3], [15, 2, 6, 6], [1, 14, 7, 13], [12, 14, 12, 5], [16, 4, 2, 7], [15, 8, 14, 5], [14, 4, 10, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.080587923992425,
            "num_unique_values": 641,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.14164471758853,
                "explored_percent_lambda": 25.4023997658765,
                "explored_percent_none": 26.45595551653497,
                "kept_percent_concrete": 45.669291338582674,
                "kept_percent_lambda": 54.330708661417326,
                "num_examples": 15,
                "num_explored_concrete": 1645,
                "num_explored_lambda": 868,
                "num_explored_none": 904,
                "num_inputs": 1,
                "num_kept_concrete": 290,
                "num_kept_lambda": 345,
                "num_values_explored": 3417,
                "num_values_kept": 635,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10191
            },
            "success": false,
            "task": "Task(\n    name='sort',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [7, 2, 10, 13], [9], [0, 14], [], [8, 2, 10, 14], [], [11, 8, 14, 7, 8], [8], [12, 2, 8, 5, 15], [9, 3, 8], [16, 0], [15], [13]]},\n    outputs=[[0, 2, 4], [0, 1, 1, 2, 2, 4, 5, 5], [2, 7, 10, 13], [9], [0, 14], [], [2, 8, 10, 14], [], [7, 8, 8, 11, 14], [8], [2, 5, 8, 12, 15], [3, 8, 9], [0, 16], [15], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7702064686454833,
            "num_unique_values": 96,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 22.580645161290324,
                "explored_percent_lambda": 35.88709677419355,
                "explored_percent_none": 41.53225806451613,
                "kept_percent_concrete": 7.777777777777778,
                "kept_percent_lambda": 92.22222222222223,
                "num_examples": 15,
                "num_explored_concrete": 56,
                "num_explored_lambda": 89,
                "num_explored_none": 103,
                "num_inputs": 1,
                "num_kept_concrete": 7,
                "num_kept_lambda": 83,
                "num_values_explored": 248,
                "num_values_kept": 90,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 248
            },
            "success": true,
            "task": "Task(\n    name='tail',\n    inputs_dict={'x1': [[5, 9, 1], [12, 4], [2, 3, 6, 7], [5], [13, 2, 2, 13, 4, 3], [0, 1, 4], [9, 5, 7, 5, 4, 1], [13, 0, 4, 12], [6, 6, 3, 14], [11, 12, 14, 1, 2, 15, 9], [0, 1, 0, 2, 11, 0], [2, 10, 3, 12], [5, 9, 14], [6, 8, 2, 7, 6, 9, 8], [1, 7, 4, 5, 3]]},\n    outputs=[[9, 1], [4], [3, 6, 7], [], [2, 2, 13, 4, 3], [1, 4], [5, 7, 5, 4, 1], [0, 4, 12], [6, 3, 14], [12, 14, 1, 2, 15, 9], [1, 0, 2, 11, 0], [10, 3, 12], [9, 14], [8, 2, 7, 6, 9, 8], [7, 4, 5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.5411518048495054,
            "num_unique_values": 109,
            "solution": "Cons(Car(x1), [])",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 16.27906976744186,
                "explored_percent_lambda": 42.93381037567084,
                "explored_percent_none": 40.7871198568873,
                "kept_percent_concrete": 12.62135922330097,
                "kept_percent_lambda": 87.37864077669903,
                "num_examples": 15,
                "num_explored_concrete": 91,
                "num_explored_lambda": 240,
                "num_explored_none": 228,
                "num_inputs": 1,
                "num_kept_concrete": 13,
                "num_kept_lambda": 90,
                "num_values_explored": 559,
                "num_values_kept": 103,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=1',\n    inputs_dict={'x1': [[1, 16, 3, 16, 0], [4, 9, 4], [14, 12, 5, 12, 2, 10], [11, 16], [15, 0, 4, 1], [10, 9, 0, 12], [8, 0], [12, 5, 4, 11, 4, 4], [4, 3, 14], [10, 13, 10, 5], [6, 7, 12, 16], [15, 8, 10, 14, 15, 5, 11], [15, 12], [2, 0, 7], [2, 10, 15, 3, 11]]},\n    outputs=[[1], [4], [14], [11], [15], [10], [8], [12], [4], [10], [6], [15], [15], [2], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.8750682240352035,
            "num_unique_values": 265,
            "solution": "Cons(Car(x1), Cons(Car(Cdr(x1)), []))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 32.60700389105058,
                "explored_percent_lambda": 31.98443579766537,
                "explored_percent_none": 35.40856031128405,
                "kept_percent_concrete": 39.76833976833977,
                "kept_percent_lambda": 60.23166023166023,
                "num_examples": 15,
                "num_explored_concrete": 419,
                "num_explored_lambda": 411,
                "num_explored_none": 455,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 156,
                "num_values_explored": 1285,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1285
            },
            "success": true,
            "task": "Task(\n    name='take-k with k=2',\n    inputs_dict={'x1': [[7, 10, 3, 0, 7, 7], [3, 6, 2, 14], [7, 4, 4, 16], [15, 0, 14, 12, 16, 15, 1, 14], [5, 2, 13, 4, 15, 6, 14, 8], [13, 14, 1], [14, 2, 11, 4, 1, 6, 11, 4, 1], [14, 14], [7, 6], [3, 5, 1, 15, 2, 14, 14, 1, 11], [11, 2, 1, 14, 8, 6, 9], [7, 16, 11, 2, 2, 5, 12, 2], [15, 0, 16, 1, 2, 5], [1, 9, 12, 12, 2, 3, 5, 15], [14, 7, 1, 11]]},\n    outputs=[[7, 10], [3, 6], [7, 4], [15, 0], [5, 2], [13, 14], [14, 2], [14, 14], [7, 6], [3, 5], [11, 2], [7, 16], [15, 0], [1, 9], [14, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.038120340090245,
            "num_unique_values": 563,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.91538021726701,
                "explored_percent_lambda": 21.66952544311035,
                "explored_percent_none": 26.41509433962264,
                "kept_percent_concrete": 57.98922800718133,
                "kept_percent_lambda": 42.01077199281867,
                "num_examples": 15,
                "num_explored_concrete": 1816,
                "num_explored_lambda": 758,
                "num_explored_none": 924,
                "num_inputs": 1,
                "num_kept_concrete": 323,
                "num_kept_lambda": 234,
                "num_values_explored": 3498,
                "num_values_kept": 557,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10313
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=3',\n    inputs_dict={'x1': [[7, 3, 11, 12, 6, 7, 13, 9, 9], [1, 7, 9, 2, 2, 6, 6, 15, 1], [2, 13, 16, 16, 1], [0, 2, 15], [6, 5, 11, 7], [7, 7, 15, 15], [2, 13, 8, 1, 9], [1, 10, 10], [14, 6, 0, 9, 4, 13], [11, 2, 16, 13, 6, 16, 8, 2, 11, 8], [15, 7, 11, 10, 10, 9, 8], [7, 4, 16, 15, 16, 3, 10, 11, 3], [1, 2, 0, 13, 7, 10, 12, 4], [10, 7, 14], [8, 15, 6, 6, 1, 5]]},\n    outputs=[[7, 3, 11], [1, 7, 9], [2, 13, 16], [0, 2, 15], [6, 5, 11], [7, 7, 15], [2, 13, 8], [1, 10, 10], [14, 6, 0], [11, 2, 16], [15, 7, 11], [7, 4, 16], [1, 2, 0], [10, 7, 14], [8, 15, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.061490355059505,
            "num_unique_values": 585,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.20673360897815,
                "explored_percent_lambda": 23.685764914353218,
                "explored_percent_none": 26.107501476668634,
                "kept_percent_concrete": 53.19516407599309,
                "kept_percent_lambda": 46.80483592400691,
                "num_examples": 15,
                "num_explored_concrete": 1700,
                "num_explored_lambda": 802,
                "num_explored_none": 884,
                "num_inputs": 1,
                "num_kept_concrete": 308,
                "num_kept_lambda": 271,
                "num_values_explored": 3386,
                "num_values_kept": 579,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10098
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=4',\n    inputs_dict={'x1': [[12, 3, 13, 16, 6, 4, 12, 2, 16, 12], [14, 15, 3, 1, 3, 1, 8, 2, 1, 8], [7, 13, 13, 8], [8, 9, 9, 11, 0], [12, 2, 6, 8, 3, 14, 12, 7, 16, 16, 5], [9, 1, 6, 11], [3, 9, 9, 10, 3, 3], [8, 9, 3, 11, 1], [14, 12, 6, 14, 16, 4], [5, 2, 4, 3], [10, 15, 5, 3, 4, 9, 6, 14, 6], [1, 11, 15, 7, 12], [3, 10, 3, 15], [7, 7, 12, 5], [0, 6, 11, 0, 7, 6, 0, 10, 9, 6, 6]]},\n    outputs=[[12, 3, 13, 16], [14, 15, 3, 1], [7, 13, 13, 8], [8, 9, 9, 11], [12, 2, 6, 8], [9, 1, 6, 11], [3, 9, 9, 10], [8, 9, 3, 11], [14, 12, 6, 14], [5, 2, 4, 3], [10, 15, 5, 3], [1, 11, 15, 7], [3, 10, 3, 15], [7, 7, 12, 5], [0, 6, 11, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.04856023285538,
            "num_unique_values": 708,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.11495884189611,
                "explored_percent_lambda": 13.028668748225943,
                "explored_percent_none": 21.856372409877945,
                "kept_percent_concrete": 68.09116809116809,
                "kept_percent_lambda": 31.90883190883191,
                "num_examples": 15,
                "num_explored_concrete": 2294,
                "num_explored_lambda": 459,
                "num_explored_none": 770,
                "num_inputs": 1,
                "num_kept_concrete": 478,
                "num_kept_lambda": 224,
                "num_values_explored": 3523,
                "num_values_kept": 702,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10571
            },
            "success": false,
            "task": "Task(\n    name='sort-and-deduplicate',\n    inputs_dict={'x1': [[7, 0, 1, 6], [9, 10, 2, 1], [7, 6, 8, 0], [7, 3, 9, 0, 1], [4, 5], [2, 10, 9], [6, 1, 4], [3, 4, 2], [8, 10, 2], [1, 10, 7], [10, 8, 6], [9, 3, 8], [4, 6], [2, 3, 9, 6], [3, 4, 0]]},\n    outputs=[[0, 1, 6, 7], [1, 2, 9, 10], [0, 6, 7, 8], [0, 1, 3, 7, 9], [4, 5], [2, 9, 10], [1, 4, 6], [2, 3, 4], [2, 8, 10], [1, 7, 10], [6, 8, 10], [3, 8, 9], [4, 6], [2, 3, 6, 9], [0, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.13564780727029,
            "num_unique_values": 546,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.64021164021164,
                "explored_percent_lambda": 14.788359788359788,
                "explored_percent_none": 23.571428571428573,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 15,
                "num_explored_concrete": 2330,
                "num_explored_lambda": 559,
                "num_explored_none": 891,
                "num_inputs": 1,
                "num_kept_concrete": 375,
                "num_kept_lambda": 165,
                "num_values_explored": 3780,
                "num_values_kept": 540,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11267
            },
            "success": false,
            "task": "Task(\n    name='+1 maximum list',\n    inputs_dict={'x1': [[8, 5, 10, 4], [5, 6, 8, 6, 4], [3, 0, 9], [9, 9, 6, 5], [2, 5, 8], [0, 3, 2, 3, 10], [1, 1, 8], [5, 10, 0, 3, 2], [5, 4, 0], [5, 6, 9], [4, 5], [6, 5], [3, 3, 5, 2], [6, 0, 0, 2, 6], [0, 9]]},\n    outputs=[11, 9, 10, 10, 9, 11, 9, 11, 6, 10, 6, 7, 6, 7, 10],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.057052813004702,
            "num_unique_values": 658,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.08260646485377,
                "explored_percent_lambda": 16.213442791174963,
                "explored_percent_none": 22.703950743971266,
                "kept_percent_concrete": 73.00613496932516,
                "kept_percent_lambda": 26.993865030674847,
                "num_examples": 15,
                "num_explored_concrete": 2381,
                "num_explored_lambda": 632,
                "num_explored_none": 885,
                "num_inputs": 1,
                "num_kept_concrete": 476,
                "num_kept_lambda": 176,
                "num_values_explored": 3898,
                "num_values_kept": 652,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11411
            },
            "success": false,
            "task": "Task(\n    name='range +1 maximum list',\n    inputs_dict={'x1': [[5, 8], [2, 9, 9, 5, 5], [0, 0, 6, 7], [0, 10, 5], [2, 9, 1], [10, 8, 0], [7, 9, 3, 0, 5], [3, 0], [10, 0], [9, 1, 5], [5, 8, 0], [7, 9], [2, 2, 6], [8, 0], [3, 5, 3, 4]]},\n    outputs=[[0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 2, 3, 4, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.056665213778615,
            "num_unique_values": 624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.22356495468278,
                "explored_percent_lambda": 26.88821752265861,
                "explored_percent_none": 26.88821752265861,
                "kept_percent_concrete": 46.763754045307444,
                "kept_percent_lambda": 53.236245954692556,
                "num_examples": 15,
                "num_explored_concrete": 1530,
                "num_explored_lambda": 890,
                "num_explored_none": 890,
                "num_inputs": 1,
                "num_kept_concrete": 289,
                "num_kept_lambda": 329,
                "num_values_explored": 3310,
                "num_values_kept": 618,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9893
            },
            "success": false,
            "task": "Task(\n    name='keep squares',\n    inputs_dict={'x1': [[4, 4, 3, 16, 25, 25, 3], [6, 4, 0, 25, 0, 4, 9], [0, 2, 0, 4, 9, 9, 4], [9, 4, 0, 4, 9, 0, 4], [8, 0, 9, 6, 25, 1, 16], [16, 5, 8, 7, 4, 1, 25], [6, 16, 4, 4, 1, 4, 0], [5, 3, 16, 16, 0, 8, 6], [7, 0, 1, 0, 25, 1, 25], [4, 9, 25, 7, 7, 1, 25], [9, 16, 25, 16, 6, 0, 7], [1, 0, 0, 16, 6, 9, 6], [4, 0, 16, 0, 0, 7, 9], [4, 0, 6, 9, 1, 5, 4], [1, 9, 1, 16, 3, 9, 2]]},\n    outputs=[[4, 4, 16, 25, 25], [4, 0, 25, 0, 4, 9], [0, 0, 4, 9, 9, 4], [9, 4, 0, 4, 9, 0, 4], [0, 9, 25, 1, 16], [16, 4, 1, 25], [16, 4, 4, 1, 4, 0], [16, 16, 0], [0, 1, 0, 25, 1, 25], [4, 9, 25, 1, 25], [9, 16, 25, 16, 0], [1, 0, 0, 16, 9], [4, 0, 16, 0, 0, 9], [4, 0, 9, 1, 4], [1, 9, 1, 16, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.067405108828098,
            "num_unique_values": 674,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.572429251891286,
                "explored_percent_lambda": 25.105071448585036,
                "explored_percent_none": 21.322499299523678,
                "kept_percent_concrete": 49.40119760479042,
                "kept_percent_lambda": 50.59880239520958,
                "num_examples": 15,
                "num_explored_concrete": 1912,
                "num_explored_lambda": 896,
                "num_explored_none": 761,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 338,
                "num_values_explored": 3569,
                "num_values_kept": 668,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10406
            },
            "success": false,
            "task": "Task(\n    name='keep primes',\n    inputs_dict={'x1': [[13, 31, 4, 8, 2, 17, 2], [31, 5, 9, 9, 3, 1, 5], [37, 11, 2, 5, 7, 29, 7], [6, 6, 3, 3, 5, 3, 7], [0, 23, 13, 8, 9, 6, 7], [2, 17, 2, 11, 17, 5, 23], [5, 11, 6, 31, 17, 8, 17], [2, 2, 0, 13, 4, 4, 6], [9, 11, 5, 37, 17, 5, 1], [4, 1, 19, 1, 23, 19, 2], [4, 5, 31, 31, 7, 3, 2], [2, 2, 3, 23, 5, 7, 8], [13, 13, 7, 29, 37, 7, 29], [7, 3, 29, 5, 11, 23, 5], [11, 2, 7, 7, 0, 7, 6]]},\n    outputs=[[13, 31, 2, 17, 2], [31, 5, 3, 5], [37, 11, 2, 5, 7, 29, 7], [3, 3, 5, 3, 7], [23, 13, 7], [2, 17, 2, 11, 17, 5, 23], [5, 11, 31, 17, 17], [2, 2, 13], [11, 5, 37, 17, 5], [19, 23, 19, 2], [5, 31, 31, 7, 3, 2], [2, 2, 3, 23, 5, 7], [13, 13, 7, 29, 37, 7, 29], [7, 3, 29, 5, 11, 23, 5], [11, 2, 7, 7, 7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.058208543807268,
            "num_unique_values": 634,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.911764705882355,
                "explored_percent_lambda": 24.11764705882353,
                "explored_percent_none": 26.970588235294116,
                "kept_percent_concrete": 52.388535031847134,
                "kept_percent_lambda": 47.611464968152866,
                "num_examples": 15,
                "num_explored_concrete": 1663,
                "num_explored_lambda": 820,
                "num_explored_none": 917,
                "num_inputs": 1,
                "num_kept_concrete": 329,
                "num_kept_lambda": 299,
                "num_values_explored": 3400,
                "num_values_kept": 628,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10338
            },
            "success": false,
            "task": "Task(\n    name='remove eq 0',\n    inputs_dict={'x1': [[4, 5, 5, 0, 4], [6, 1, 2, 0, 1], [0, 5, 5, 0, 1], [3, 4, 6, 5, 0], [1, 3, 5, 6, 6], [1, 6, 2, 6, 4], [6, 5, 0, 2, 2], [5, 2, 5, 3, 3], [1, 4, 3, 0, 2], [0, 3, 1, 5, 0], [0, 3, 3, 3, 1], [4, 2, 0, 4, 5], [5, 3, 4, 1, 0], [4, 6, 6, 5, 1], [5, 6, 1, 3, 1]]},\n    outputs=[[4, 5, 5, 4], [6, 1, 2, 1], [5, 5, 1], [3, 4, 6, 5], [1, 3, 5, 6, 6], [1, 6, 2, 6, 4], [6, 5, 2, 2], [5, 2, 5, 3, 3], [1, 4, 3, 2], [3, 1, 5], [3, 3, 3, 1], [4, 2, 4, 5], [5, 3, 4, 1], [4, 6, 6, 5, 1], [5, 6, 1, 3, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.067563010845333,
            "num_unique_values": 614,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.11462450592885,
                "explored_percent_lambda": 15.499717673630718,
                "explored_percent_none": 27.38565782044043,
                "kept_percent_concrete": 61.18421052631579,
                "kept_percent_lambda": 38.81578947368421,
                "num_examples": 15,
                "num_explored_concrete": 2023,
                "num_explored_lambda": 549,
                "num_explored_none": 970,
                "num_inputs": 1,
                "num_kept_concrete": 372,
                "num_kept_lambda": 236,
                "num_values_explored": 3542,
                "num_values_kept": 608,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10705
            },
            "success": false,
            "task": "Task(\n    name='remove gt 0',\n    inputs_dict={'x1': [[6, 1, 1, 5, 3], [3, 3, 5, 0, 2], [5, 3, 1, 0, 6], [1, 5, 3, 0, 5], [3, 0, 3, 5, 4], [5, 3, 6, 2, 0], [2, 6, 5, 5, 5], [6, 1, 3, 2, 5], [4, 3, 6, 3, 4], [3, 4, 0, 5, 2], [6, 0, 3, 3, 0], [3, 6, 1, 0, 2], [0, 3, 1, 4, 4], [1, 0, 4, 5, 4], [1, 2, 3, 3, 6]]},\n    outputs=[[], [0], [0], [0], [0], [0], [], [], [], [0], [0, 0], [0], [0], [0], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.0491416817531,
            "num_unique_values": 624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.993117292801834,
                "explored_percent_lambda": 18.067106395182105,
                "explored_percent_none": 29.93977631201606,
                "kept_percent_concrete": 61.97411003236246,
                "kept_percent_lambda": 38.02588996763754,
                "num_examples": 15,
                "num_explored_concrete": 1813,
                "num_explored_lambda": 630,
                "num_explored_none": 1044,
                "num_inputs": 1,
                "num_kept_concrete": 383,
                "num_kept_lambda": 235,
                "num_values_explored": 3487,
                "num_values_kept": 618,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10345
            },
            "success": false,
            "task": "Task(\n    name='keep eq 1',\n    inputs_dict={'x1': [[6, 5, 3, 4, 3], [4, 0, 4, 6, 0], [1, 3, 0, 0, 4], [5, 5, 2, 3, 5], [3, 0, 6, 5, 2], [1, 5, 0, 5, 3], [1, 2, 1, 4, 5], [4, 6, 3, 4, 3], [1, 1, 2, 1, 4], [6, 6, 1, 0, 1], [2, 3, 5, 6, 2], [5, 2, 1, 5, 0], [1, 2, 2, 5, 1], [0, 1, 5, 6, 3], [2, 3, 2, 2, 0]]},\n    outputs=[[], [], [1], [], [], [1], [1, 1], [], [1, 1, 1], [1, 1], [], [1], [1, 1], [1], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05264450609684,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.11506675143039,
                "explored_percent_lambda": 20.152574698029245,
                "explored_percent_none": 26.73235855054037,
                "kept_percent_concrete": 55.18945634266886,
                "kept_percent_lambda": 44.81054365733114,
                "num_examples": 15,
                "num_explored_concrete": 1671,
                "num_explored_lambda": 634,
                "num_explored_none": 841,
                "num_inputs": 1,
                "num_kept_concrete": 335,
                "num_kept_lambda": 272,
                "num_values_explored": 3146,
                "num_values_kept": 607,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10132
            },
            "success": false,
            "task": "Task(\n    name='keep gt 1',\n    inputs_dict={'x1': [[0, 0, 5, 1, 0], [2, 3, 4, 6, 4], [1, 3, 1, 6, 0], [1, 5, 5, 5, 5], [1, 6, 1, 0, 4], [3, 3, 4, 2, 6], [0, 5, 0, 5, 6], [4, 2, 1, 3, 3], [0, 4, 0, 2, 5], [3, 6, 2, 0, 4], [2, 6, 6, 0, 0], [2, 6, 4, 6, 5], [1, 1, 1, 2, 6], [0, 0, 6, 2, 6], [1, 6, 6, 0, 0]]},\n    outputs=[[5], [2, 3, 4, 6, 4], [3, 6], [5, 5, 5, 5], [6, 4], [3, 3, 4, 2, 6], [5, 5, 6], [4, 2, 3, 3], [4, 2, 5], [3, 6, 2, 4], [2, 6, 6], [2, 6, 4, 6, 5], [2, 6], [6, 2, 6], [6, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05565168801695,
            "num_unique_values": 566,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.11485870556062,
                "explored_percent_lambda": 28.83621999392282,
                "explored_percent_none": 29.04892130051656,
                "kept_percent_concrete": 38.75,
                "kept_percent_lambda": 61.25,
                "num_examples": 15,
                "num_explored_concrete": 1386,
                "num_explored_lambda": 949,
                "num_explored_none": 956,
                "num_inputs": 1,
                "num_kept_concrete": 217,
                "num_kept_lambda": 343,
                "num_values_explored": 3291,
                "num_values_kept": 560,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10035
            },
            "success": false,
            "task": "Task(\n    name='remove gt 2',\n    inputs_dict={'x1': [[2, 3, 3, 4, 3], [4, 2, 6, 6, 5], [1, 4, 0, 4, 4], [4, 3, 0, 6, 0], [2, 4, 2, 5, 0], [5, 1, 5, 1, 6], [6, 2, 4, 1, 5], [0, 4, 0, 6, 0], [4, 5, 1, 2, 0], [4, 4, 5, 2, 4], [4, 3, 2, 3, 5], [0, 5, 4, 2, 2], [6, 2, 3, 5, 6], [0, 2, 3, 3, 3], [6, 0, 5, 4, 2]]},\n    outputs=[[2], [2], [1, 0], [0, 0], [2, 2, 0], [1, 1], [2, 1], [0, 0, 0], [1, 2, 0], [2], [2], [0, 2, 2], [2], [0, 2], [0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.05374490795657,
            "num_unique_values": 630,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.56402248594628,
                "explored_percent_lambda": 24.95315427857589,
                "explored_percent_none": 27.482823235477827,
                "kept_percent_concrete": 47.27564102564103,
                "kept_percent_lambda": 52.72435897435897,
                "num_examples": 15,
                "num_explored_concrete": 1523,
                "num_explored_lambda": 799,
                "num_explored_none": 880,
                "num_inputs": 1,
                "num_kept_concrete": 295,
                "num_kept_lambda": 329,
                "num_values_explored": 3202,
                "num_values_kept": 624,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9723
            },
            "success": false,
            "task": "Task(\n    name='keep gt 3',\n    inputs_dict={'x1': [[1, 2, 3, 2, 2], [1, 0, 0, 6, 0], [6, 0, 0, 6, 3], [5, 2, 0, 5, 4], [3, 5, 0, 0, 0], [3, 1, 6, 0, 5], [3, 3, 6, 4, 4], [2, 5, 5, 3, 5], [3, 6, 2, 3, 5], [4, 5, 6, 2, 1], [0, 0, 6, 4, 0], [3, 1, 0, 4, 4], [5, 6, 5, 2, 3], [0, 6, 3, 3, 0], [6, 2, 5, 3, 2]]},\n    outputs=[[], [6], [6, 6], [5, 5, 4], [5], [6, 5], [6, 4, 4], [5, 5, 5], [6, 5], [4, 5, 6], [6, 4], [4, 4], [5, 6, 5], [6], [6, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.29357798165137616
}