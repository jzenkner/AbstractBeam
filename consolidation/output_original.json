{
    "num_tasks": 75,
    "num_tasks_solved": 14,
    "results": [
        {
            "elapsed_time": 0.5215710746124387,
            "num_unique_values": 178,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.73856209150327,
                "explored_percent_lambda": 23.0718954248366,
                "explored_percent_none": 27.18954248366013,
                "kept_percent_concrete": 40.23668639053255,
                "kept_percent_lambda": 59.76331360946745,
                "num_examples": 15,
                "num_explored_concrete": 761,
                "num_explored_lambda": 353,
                "num_explored_none": 416,
                "num_inputs": 1,
                "num_kept_concrete": 68,
                "num_kept_lambda": 101,
                "num_values_explored": 1530,
                "num_values_kept": 169,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=1',\n    inputs_dict={'x1': [[], [0, 0, 0, 0, 0], [0, 0], [0], [0, 0], [0, 0, 0, 0], [0], [0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]},\n    outputs=[[], [0, 0, 0, 0, 0], [0, 0], [0], [0, 0], [0, 0, 0, 0], [0], [0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2900867788121104,
            "num_unique_values": 197,
            "solution": "Cdr(Cdr(Cdr(x1)))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 45.74132492113565,
                "explored_percent_lambda": 28.706624605678233,
                "explored_percent_none": 25.55205047318612,
                "kept_percent_concrete": 51.06382978723404,
                "kept_percent_lambda": 48.93617021276596,
                "num_examples": 15,
                "num_explored_concrete": 290,
                "num_explored_lambda": 182,
                "num_explored_none": 162,
                "num_inputs": 1,
                "num_kept_concrete": 96,
                "num_kept_lambda": 92,
                "num_values_explored": 634,
                "num_values_kept": 188,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=3',\n    inputs_dict={'x1': [[16, 3, 9, 1, 7, 12, 5, 12, 4, 14], [10, 6, 5, 4, 15, 11, 8, 8], [13, 0, 5, 14, 1, 12, 1, 12, 5, 4], [10, 15, 13, 9, 13, 15, 7, 12, 3, 14], [4, 1, 11, 2, 3, 15, 2, 0, 12], [1, 5, 8, 16, 15, 10, 14, 11], [11, 12, 13, 4, 0, 13, 6, 9, 1, 9], [8, 5, 1, 4, 15, 4, 9, 11, 1], [9, 15, 11, 10, 4, 13], [7, 11, 12, 8, 15, 1, 9, 2], [9, 0, 5, 8, 5, 8, 13], [2, 5, 14, 8, 8], [14, 0, 7, 11, 10, 0, 5, 2], [16, 9, 15, 4], [14, 16, 4, 13, 11, 6, 13, 16, 1, 5]]},\n    outputs=[[1, 7, 12, 5, 12, 4, 14], [4, 15, 11, 8, 8], [14, 1, 12, 1, 12, 5, 4], [9, 13, 15, 7, 12, 3, 14], [2, 3, 15, 2, 0, 12], [16, 15, 10, 14, 11], [4, 0, 13, 6, 9, 1, 9], [4, 15, 4, 9, 11, 1], [10, 4, 13], [8, 15, 1, 9, 2], [8, 5, 8, 13], [8, 8], [11, 10, 0, 5, 2], [4], [13, 11, 6, 13, 16, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5931070512160659,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.79738562091503,
                "explored_percent_lambda": 25.947712418300654,
                "explored_percent_none": 17.254901960784313,
                "kept_percent_concrete": 55.96707818930041,
                "kept_percent_lambda": 44.03292181069959,
                "num_examples": 15,
                "num_explored_concrete": 869,
                "num_explored_lambda": 397,
                "num_explored_none": 264,
                "num_inputs": 1,
                "num_kept_concrete": 136,
                "num_kept_lambda": 107,
                "num_values_explored": 1530,
                "num_values_kept": 243,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='dup',\n    inputs_dict={'x1': [[0], [7, 2, 4], [14, 3, 7, 3, 12, 8], [10, 7], [1], [5], [7, 8, 16], [4, 9, 2], [15], [], [8, 0, 9, 15, 7, 14, 9], [1, 7, 2, 6, 6, 9], [16, 15, 13], [8, 16, 5], [0, 5, 8, 16]]},\n    outputs=[[0, 0], [7, 7, 2, 2, 4, 4], [14, 14, 3, 3, 7, 7, 3, 3, 12, 12, 8, 8], [10, 10, 7, 7], [1, 1], [5, 5], [7, 7, 8, 8, 16, 16], [4, 4, 9, 9, 2, 2], [15, 15], [], [8, 8, 0, 0, 9, 9, 15, 15, 7, 7, 14, 14, 9, 9], [1, 1, 7, 7, 2, 2, 6, 6, 6, 6, 9, 9], [16, 16, 15, 15, 13, 13], [8, 8, 16, 16, 5, 5], [0, 0, 5, 5, 8, 8, 16, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.513067252933979,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.209150326797385,
                "explored_percent_lambda": 23.0718954248366,
                "explored_percent_none": 20.718954248366014,
                "kept_percent_concrete": 63.31877729257642,
                "kept_percent_lambda": 36.68122270742358,
                "num_examples": 15,
                "num_explored_concrete": 860,
                "num_explored_lambda": 353,
                "num_explored_none": 317,
                "num_inputs": 1,
                "num_kept_concrete": 145,
                "num_kept_lambda": 84,
                "num_values_explored": 1530,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=1',\n    inputs_dict={'x1': [[9, 13, 15, 7, 10], [16, 7, 12, 11, 14, 6, 9, 14, 0, 5], [7, 13, 3, 4, 8, 16, 5, 1], [15, 15, 0, 9, 9, 15, 15, 3, 4], [11, 12, 4, 5, 2], [15, 2, 4, 4, 4, 9], [5, 15, 15, 13, 6], [0, 0, 4, 12, 0, 3, 9], [3, 0, 3, 0, 11, 2, 1, 0, 8, 1, 15], [16, 1, 14, 11, 16, 4], [16, 15, 9, 11, 12], [13, 15, 13, 6, 16, 2], [12, 10, 1, 9, 6], [2, 6, 5, 5, 2], [9, 0, 16, 9, 10]]},\n    outputs=[[13], [7], [13], [15], [12], [2], [15], [0], [0], [1], [15], [15], [10], [6], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5550225116312504,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.666666666666664,
                "explored_percent_lambda": 26.209150326797385,
                "explored_percent_none": 17.124183006535947,
                "kept_percent_concrete": 54.6875,
                "kept_percent_lambda": 45.3125,
                "num_examples": 15,
                "num_explored_concrete": 867,
                "num_explored_lambda": 401,
                "num_explored_none": 262,
                "num_inputs": 1,
                "num_kept_concrete": 140,
                "num_kept_lambda": 116,
                "num_values_explored": 1530,
                "num_values_kept": 256,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-head',\n    inputs_dict={'x1': [[3, 1, 3, 4, 7, 6, 9, 2], [4, 2, 6, 10, 8, 12], [1, 2, 3], [6, 36], [5, 2, 14, 10, 13], [8, 6, 7, 15, 2], [13, 4, 0, 3, 4], [3, 4, 8, 5, 8], [4, 5, 11, 11], [1, 6, 12, 8, 1, 14, 9], [9, 0, 15, 1], [10, 8, 7], [3, 21, 9, 15], [5, 6, 16, 11, 8, 8, 5], [2, 9, 1, 6]]},\n    outputs=[[1, 4, 7, 2], [2, 6, 10], [], [], [2, 14, 13], [6, 7, 15, 2], [4, 3, 4], [4, 8, 5, 8], [5, 11, 11], [], [15, 1], [8, 7], [], [6, 16, 11, 8, 8], [9, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4959315648302436,
            "num_unique_values": 241,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.80392156862745,
                "explored_percent_lambda": 33.568627450980394,
                "explored_percent_none": 16.627450980392158,
                "kept_percent_concrete": 44.827586206896555,
                "kept_percent_lambda": 55.172413793103445,
                "num_examples": 15,
                "num_explored_concrete": 635,
                "num_explored_lambda": 428,
                "num_explored_none": 212,
                "num_inputs": 1,
                "num_kept_concrete": 104,
                "num_kept_lambda": 128,
                "num_values_explored": 1275,
                "num_values_kept": 232,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=3',\n    inputs_dict={'x1': [[7, 14, 9], [6, 15, 6], [5, 13, 8, 15, 13, 7, 2], [10, 16], [], [1], [12, 15, 12], [11, 4, 7, 9, 5, 2], [8, 1, 9, 3, 13, 5, 7], [3, 3], [6, 14, 12, 4, 4, 15], [1], [12, 14], [], [6, 7, 9, 14]]},\n    outputs=[[7, 14, 9, 3], [6, 15, 6, 3], [5, 13, 8, 15, 13, 7, 2, 3], [10, 16, 3], [3], [1, 3], [12, 15, 12, 3], [11, 4, 7, 9, 5, 2, 3], [8, 1, 9, 3, 13, 5, 7, 3], [3, 3, 3], [6, 14, 12, 4, 4, 15, 3], [1, 3], [12, 14, 3], [3], [6, 7, 9, 14, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7029322246089578,
            "num_unique_values": 256,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.49019607843137,
                "explored_percent_lambda": 17.352941176470587,
                "explored_percent_none": 17.15686274509804,
                "kept_percent_concrete": 59.51417004048583,
                "kept_percent_lambda": 40.48582995951417,
                "num_examples": 15,
                "num_explored_concrete": 1336,
                "num_explored_lambda": 354,
                "num_explored_none": 350,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 100,
                "num_values_explored": 2040,
                "num_values_kept": 247,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=2',\n    inputs_dict={'x1': [[2, 0, 15, 0, 2], [11, 15, 10], [], [9, 13, 13, 15, 3, 6, 1], [12, 13, 2, 4, 7, 15, 12], [14], [], [13, 14, 2, 8, 0, 14, 3], [9, 5, 11, 4, 6], [4, 1, 5, 8], [8, 5, 16], [11, 2, 7, 10, 4], [4, 16, 1, 8, 4, 7], [0, 2, 0], [8, 2, 8]]},\n    outputs=[[4, 0, 30, 0, 4], [22, 30, 20], [], [18, 26, 26, 30, 6, 12, 2], [24, 26, 4, 8, 14, 30, 24], [28], [], [26, 28, 4, 16, 0, 28, 6], [18, 10, 22, 8, 12], [8, 2, 10, 16], [16, 10, 32], [22, 4, 14, 20, 8], [8, 32, 2, 16, 8, 14], [0, 4, 0], [16, 4, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4643361922353506,
            "num_unique_values": 196,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.333333333333336,
                "explored_percent_lambda": 30.274509803921568,
                "explored_percent_none": 24.392156862745097,
                "kept_percent_concrete": 49.73262032085562,
                "kept_percent_lambda": 50.26737967914438,
                "num_examples": 15,
                "num_explored_concrete": 578,
                "num_explored_lambda": 386,
                "num_explored_none": 311,
                "num_inputs": 1,
                "num_kept_concrete": 93,
                "num_kept_lambda": 94,
                "num_values_explored": 1275,
                "num_values_kept": 187,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=3',\n    inputs_dict={'x1': [[12, 12, 13, 16, 8, 14, 6, 13], [1, 8, 7, 8, 4, 3, 6, 1, 10, 8, 5, 0, 4, 12, 15], [8, 15, 12, 16, 13, 5, 6, 2], [0, 8, 0, 13, 14, 11, 6, 7, 13, 11, 1, 3], [6, 1, 15, 0, 10, 9, 3, 13, 1, 12, 15, 3, 14, 1, 6], [8, 4, 3, 7, 1, 10, 14, 7], [14, 8, 11, 16, 15, 11, 5, 5, 10, 0, 12, 8, 3, 9], [1, 6, 5, 2, 6, 7, 15, 5, 5, 7], [0, 5, 13, 3, 15, 5, 12, 5, 4, 2, 2, 3, 16], [0, 1, 7, 16, 12, 13, 12, 1, 2], [3, 14, 1, 4, 1, 16, 6, 3, 1, 7, 9], [14, 15, 0, 16, 4, 11, 2, 13, 7, 5, 8], [13, 5, 14, 11, 1, 3, 12, 7, 14, 10, 15, 10, 2], [9, 7, 14, 3, 6, 10, 6, 8, 1], [1, 9, 0, 13, 8, 10, 14, 8, 15, 10, 10, 6, 14]]},\n    outputs=[[16, 8, 14], [8, 4, 3], [16, 13, 5], [13, 14, 11], [0, 10, 9], [7, 1, 10], [16, 15, 11], [2, 6, 7], [3, 15, 5], [16, 12, 13], [4, 1, 16], [16, 4, 11], [11, 1, 3], [3, 6, 10], [13, 8, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7443040423095226,
            "num_unique_values": 220,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.68627450980392,
                "explored_percent_lambda": 30.65359477124183,
                "explored_percent_none": 23.66013071895425,
                "kept_percent_concrete": 48.34123222748815,
                "kept_percent_lambda": 51.65876777251185,
                "num_examples": 15,
                "num_explored_concrete": 699,
                "num_explored_lambda": 469,
                "num_explored_none": 362,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 109,
                "num_values_explored": 1530,
                "num_values_kept": 211,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=2',\n    inputs_dict={'x1': [[6, 8, 7, 10, 2, 5, 3, 0, 15, 16, 3], [8, 0, 4, 6, 16, 1, 6], [6, 2, 13, 8], [13, 13, 8, 0, 5, 14, 0, 2], [4, 10, 5, 4, 8, 8, 1, 7, 10, 15, 8], [12, 14, 1, 6, 5, 13, 3, 13, 11, 15], [8, 6, 10, 14, 3], [10, 3, 10, 2, 4], [11, 3, 6, 11, 12, 6], [13, 3, 9, 14, 15], [10, 13, 8, 0, 11, 12, 14, 7, 9, 8], [9, 5, 1, 6, 8, 13, 16], [13, 8, 5, 4], [9, 9, 13, 7, 1], [5, 8, 2, 6, 12, 8]]},\n    outputs=[[6, 8], [8, 0], [6, 2], [13, 13], [4, 10], [12, 14], [8, 6], [10, 3], [11, 3], [13, 3], [10, 13], [9, 5], [13, 8], [9, 9], [5, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5681959427893162,
            "num_unique_values": 239,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.888888888888886,
                "explored_percent_lambda": 33.92156862745098,
                "explored_percent_none": 27.18954248366013,
                "kept_percent_concrete": 37.82608695652174,
                "kept_percent_lambda": 62.17391304347826,
                "num_examples": 15,
                "num_explored_concrete": 595,
                "num_explored_lambda": 519,
                "num_explored_none": 416,
                "num_inputs": 1,
                "num_kept_concrete": 87,
                "num_kept_lambda": 143,
                "num_values_explored": 1530,
                "num_values_kept": 230,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=2 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[1, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1], [0, 2, 2, 1, 2, 0], [], [], [0, 2, 0, 0], [2, 2, 2, 1, 1], [0, 2, 0, 0, 0], [2], [0, 1, 1, 0], [0, 1, 0], [2, 2], [0, 0, 2, 2], [0, 0, 2, 2, 0, 2, 2], [1, 1, 0, 0, 1, 0, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6464621927589178,
            "num_unique_values": 258,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.69467787114846,
                "explored_percent_lambda": 28.515406162464988,
                "explored_percent_none": 14.789915966386555,
                "kept_percent_concrete": 51.00401606425703,
                "kept_percent_lambda": 48.99598393574297,
                "num_examples": 15,
                "num_explored_concrete": 1012,
                "num_explored_lambda": 509,
                "num_explored_none": 264,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 122,
                "num_values_explored": 1785,
                "num_values_kept": 249,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='drop-k with k=0',\n    inputs_dict={'x1': [[10], [9, 16, 12, 14], [14, 10, 6, 7, 5, 6, 14], [2, 13, 4], [11, 11, 14], [15, 8, 12, 8, 14], [13, 12, 1, 9, 7, 9, 13], [13, 8, 3, 6], [10, 12, 10, 11, 0, 10, 2], [14, 9, 0, 7], [7, 4, 2, 1, 4], [5, 2, 4, 9, 9, 1], [2], [13, 2, 15, 14, 6, 4], [5, 5]]},\n    outputs=[[10], [9, 16, 12, 14], [14, 10, 6, 7, 5, 6, 14], [2, 13, 4], [11, 11, 14], [15, 8, 12, 8, 14], [13, 12, 1, 9, 7, 9, 13], [13, 8, 3, 6], [10, 12, 10, 11, 0, 10, 2], [14, 9, 0, 7], [7, 4, 2, 1, 4], [5, 2, 4, 9, 9, 1], [2], [13, 2, 15, 14, 6, 4], [5, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19705942831933498,
            "num_unique_values": 161,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: Equal(2, v1)))(v1), 3, Car(Cdr(x1)))))(u1)), x1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 53.60230547550432,
                "explored_percent_lambda": 33.14121037463977,
                "explored_percent_none": 13.256484149855908,
                "kept_percent_concrete": 49.3421052631579,
                "kept_percent_lambda": 50.6578947368421,
                "num_examples": 15,
                "num_explored_concrete": 186,
                "num_explored_lambda": 115,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 77,
                "num_values_explored": 347,
                "num_values_kept": 152,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='replace-all-with-index-k with k=2',\n    inputs_dict={'x1': [[10, 8, 6, 6, 6, 14, 6], [10, 11, 9, 13], [3, 7, 10, 11, 7], [12, 15], [11, 7, 16, 14, 13, 12], [11, 14, 12], [4, 16, 6, 0, 5, 10], [4, 14, 15, 1, 4, 5, 12], [5, 5, 0, 11, 6, 14], [10, 3, 5, 8, 3, 7, 14, 1], [9, 8], [3, 4, 5], [5, 10, 7], [1, 3, 5, 7, 5, 3, 3], [9, 10, 9, 13, 0]]},\n    outputs=[[8, 8, 8, 8, 8, 8, 8], [11, 11, 11, 11], [7, 7, 7, 7, 7], [15, 15], [7, 7, 7, 7, 7, 7], [14, 14, 14], [16, 16, 16, 16, 16, 16], [14, 14, 14, 14, 14, 14, 14], [5, 5, 5, 5, 5, 5], [3, 3, 3, 3, 3, 3, 3, 3], [8, 8], [4, 4, 4], [10, 10, 10], [3, 3, 3, 3, 3, 3, 3], [10, 10, 10, 10, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5544560896232724,
            "num_unique_values": 264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.64052287581699,
                "explored_percent_lambda": 27.58169934640523,
                "explored_percent_none": 17.77777777777778,
                "kept_percent_concrete": 55.68627450980392,
                "kept_percent_lambda": 44.31372549019608,
                "num_examples": 15,
                "num_explored_concrete": 836,
                "num_explored_lambda": 422,
                "num_explored_none": 272,
                "num_inputs": 1,
                "num_kept_concrete": 142,
                "num_kept_lambda": 113,
                "num_values_explored": 1530,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=0 and n=5',\n    inputs_dict={'x1': [[4], [1, 1, 2, 0], [1], [3, 3], [3, 3, 4], [4, 4, 3, 3, 1, 4, 1], [0, 1, 2, 0, 2, 3, 0], [0, 3, 1], [3, 4, 1, 4, 1, 0, 4], [1, 3, 4], [4, 1], [2], [0, 4], [2, 2], [1, 4, 2, 1]]},\n    outputs=[[4], [1, 1, 2, 0], [1], [3, 3], [3, 3, 4], [4, 4, 3, 3, 1, 4, 1], [0, 1, 2, 0, 2, 3, 0], [0, 3, 1], [3, 4, 1, 4, 1, 0, 4], [1, 3, 4], [4, 1], [2], [0, 4], [2, 2], [1, 4, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5252252668142319,
            "num_unique_values": 243,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.61437908496732,
                "explored_percent_lambda": 24.11764705882353,
                "explored_percent_none": 13.267973856209151,
                "kept_percent_concrete": 62.39316239316239,
                "kept_percent_lambda": 37.60683760683761,
                "num_examples": 15,
                "num_explored_concrete": 958,
                "num_explored_lambda": 369,
                "num_explored_none": 203,
                "num_inputs": 1,
                "num_kept_concrete": 146,
                "num_kept_lambda": 88,
                "num_values_explored": 1530,
                "num_values_kept": 234,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=5',\n    inputs_dict={'x1': [[10, 5, 1, 13, 10, 8, 9, 10, 13, 7, 5], [1, 10, 9, 6, 10, 14, 7, 11, 16, 15], [7, 12, 15, 13, 10, 16, 8, 4, 6, 7], [12, 5, 3, 12, 4, 16, 8, 6, 2, 2], [13, 13, 2, 2, 3, 9, 16, 10, 15], [13, 0, 12, 14, 15, 15], [1, 0, 12, 11, 11, 0, 15, 1, 4, 6, 11], [7, 13, 0, 4, 14, 10, 10], [15, 13, 4, 5, 10, 15, 4, 4, 2, 2], [7, 12, 4, 9, 7, 10, 8, 15, 10, 15, 0, 15], [0, 11, 10, 16, 9, 2, 6], [4, 9, 11, 7, 11, 10, 1, 7, 1, 8, 1, 1], [7, 12, 9, 13, 16, 6, 1, 9, 10, 14, 9], [5, 10, 13, 14, 6, 5, 13], [7, 16, 10, 1, 4, 4, 3, 1, 1, 1]]},\n    outputs=[[10, 5, 1, 13, 10], [1, 10, 9, 6, 10], [7, 12, 15, 13, 10], [12, 5, 3, 12, 4], [13, 13, 2, 2, 3], [13, 0, 12, 14, 15], [1, 0, 12, 11, 11], [7, 13, 0, 4, 14], [15, 13, 4, 5, 10], [7, 12, 4, 9, 7], [0, 11, 10, 16, 9], [4, 9, 11, 7, 11], [7, 12, 9, 13, 16], [5, 10, 13, 14, 6], [7, 16, 10, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.48720935732126236,
            "num_unique_values": 221,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.411764705882355,
                "explored_percent_lambda": 40.94117647058823,
                "explored_percent_none": 21.647058823529413,
                "kept_percent_concrete": 31.132075471698112,
                "kept_percent_lambda": 68.86792452830188,
                "num_examples": 15,
                "num_explored_concrete": 477,
                "num_explored_lambda": 522,
                "num_explored_none": 276,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 146,
                "num_values_explored": 1275,
                "num_values_kept": 212,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=2',\n    inputs_dict={'x1': [[0, 0, 0, 1, 0], [], [0, 0, 1, 0, 1, 0], [0, 1, 1], [1, 0, 1, 0, 0, 1, 0], [1, 1, 0], [0, 1, 0, 1, 0], [1, 1, 0], [1, 0, 1, 1, 1], [1, 0], [], [0, 1, 0, 0, 1, 0], [0, 1, 0], [0, 0, 1], [1]]},\n    outputs=[[1, 1, 1, 0, 1], [], [1, 1, 0, 1, 0, 1], [1, 0, 0], [0, 1, 0, 1, 1, 0, 1], [0, 0, 1], [1, 0, 1, 0, 1], [0, 0, 1], [0, 1, 0, 0, 0], [0, 1], [], [1, 0, 1, 1, 0, 1], [1, 0, 1], [1, 1, 0], [0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5410346733406186,
            "num_unique_values": 217,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.39869281045752,
                "explored_percent_lambda": 25.947712418300654,
                "explored_percent_none": 20.65359477124183,
                "kept_percent_concrete": 62.01923076923077,
                "kept_percent_lambda": 37.98076923076923,
                "num_examples": 15,
                "num_explored_concrete": 817,
                "num_explored_lambda": 397,
                "num_explored_none": 316,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 79,
                "num_values_explored": 1530,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=3',\n    inputs_dict={'x1': [[15, 9, 13, 4, 4, 0, 16, 6, 4, 3, 0, 14, 16, 10, 13, 5], [14, 0, 6, 15, 5, 11, 9, 3, 7, 10], [6, 8, 14, 14, 10, 8, 3, 15, 3], [13, 7, 0, 10, 10, 10, 15, 11, 14, 4, 16, 5], [13, 12, 5, 15, 16, 16, 1, 7, 1, 15], [11, 6, 1, 2, 7, 9, 11, 10, 5, 8, 2, 16, 4, 0], [14, 15, 15, 9, 3, 7, 7, 6, 8, 1, 1, 7, 9], [14, 7, 15, 6, 10, 9, 8, 11, 2, 11], [10, 16, 5, 12, 15, 15, 10, 9, 1, 4, 7, 12, 2, 15, 12, 14], [8, 6, 6, 11, 8, 5, 11, 3, 16, 6, 14, 15, 5, 2, 15], [16, 0, 12, 14, 8, 8, 11, 7, 16, 11, 16, 2, 0, 14], [8, 12, 8, 14, 9, 16, 6, 3, 2, 0, 10, 14, 11, 10], [7, 0, 11, 0, 13, 2, 10, 5, 10, 8], [10, 10, 5, 2, 1, 11, 8, 9, 6, 10, 6, 11, 11, 4], [11, 10, 6, 3, 9, 6, 16, 14, 12, 2, 2]]},\n    outputs=[[4, 0, 16], [5, 11, 9], [10, 8, 3], [10, 10, 15], [16, 16, 1], [7, 9, 11], [3, 7, 7], [10, 9, 8], [15, 15, 10], [8, 5, 11], [8, 8, 11], [9, 16, 6], [13, 2, 10], [1, 11, 8], [9, 6, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5956176593899727,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.50326797385621,
                "explored_percent_lambda": 29.80392156862745,
                "explored_percent_none": 18.69281045751634,
                "kept_percent_concrete": 52.75590551181102,
                "kept_percent_lambda": 47.24409448818898,
                "num_examples": 15,
                "num_explored_concrete": 788,
                "num_explored_lambda": 456,
                "num_explored_none": 286,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 120,
                "num_values_explored": 1530,
                "num_values_kept": 254,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=2',\n    inputs_dict={'x1': [[3, 12, 15, 12], [], [15], [2, 10, 13, 15, 3], [0, 4], [13, 6], [4, 11, 11, 12], [13], [4, 16, 0, 8], [6, 7, 16], [6, 6, 11, 5, 9], [9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2], [11]]},\n    outputs=[[3, 12, 15, 12, 3, 12, 15, 12], [], [15, 15], [2, 10, 13, 15, 3, 2, 10, 13, 15, 3], [0, 4, 0, 4], [13, 6, 13, 6], [4, 11, 11, 12, 4, 11, 11, 12], [13, 13], [4, 16, 0, 8, 4, 16, 0, 8], [6, 7, 16, 6, 7, 16], [6, 6, 11, 5, 9, 6, 6, 11, 5, 9], [9, 5, 0, 0, 13, 9, 5, 0, 0, 13], [], [0, 9, 3, 1, 2, 0, 9, 3, 1, 2], [11, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.47084742691367865,
            "num_unique_values": 191,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.1764705882353,
                "explored_percent_lambda": 20.326797385620914,
                "explored_percent_none": 28.49673202614379,
                "kept_percent_concrete": 55.494505494505496,
                "kept_percent_lambda": 44.505494505494504,
                "num_examples": 15,
                "num_explored_concrete": 783,
                "num_explored_lambda": 311,
                "num_explored_none": 436,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 81,
                "num_values_explored": 1530,
                "num_values_kept": 182,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=4',\n    inputs_dict={'x1': [[2, 7, 3, 3], [24, 16, 28, 4, 0], [4, 2], [0], [20, 6, 28, 4, 32], [2, 8, 5, 7], [36, 36, 16], [16], [], [8, 14], [4, 12, 3, 15, 5, 5], [8], [0, 1, 2, 14, 3, 9, 12], [24, 8, 28, 36, 11, 12], [7, 3, 10, 14, 4]]},\n    outputs=[[], [24, 16, 28, 4, 0], [4], [0], [20, 28, 4, 32], [8], [36, 36, 16], [16], [], [8], [4, 12], [8], [0, 12], [24, 8, 28, 36, 12], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4127183882519603,
            "num_unique_values": 179,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.411764705882355,
                "explored_percent_lambda": 25.019607843137255,
                "explored_percent_none": 25.568627450980394,
                "kept_percent_concrete": 40.0,
                "kept_percent_lambda": 60.0,
                "num_examples": 15,
                "num_explored_concrete": 630,
                "num_explored_lambda": 319,
                "num_explored_none": 326,
                "num_inputs": 1,
                "num_kept_concrete": 68,
                "num_kept_lambda": 102,
                "num_values_explored": 1275,
                "num_values_kept": 170,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=1',\n    inputs_dict={'x1': [[0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0], [], [0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0, 0, 0, 0, 0], [0, 0, 0], [0, 0]]},\n    outputs=[[0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0], [], [0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0, 0, 0, 0, 0], [0, 0, 0], [0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10078724939376116,
            "num_unique_values": 93,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 38.01652892561984,
                "explored_percent_lambda": 49.586776859504134,
                "explored_percent_none": 12.396694214876034,
                "kept_percent_concrete": 33.333333333333336,
                "kept_percent_lambda": 66.66666666666667,
                "num_examples": 15,
                "num_explored_concrete": 46,
                "num_explored_lambda": 60,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 56,
                "num_values_explored": 121,
                "num_values_kept": 84,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='tail',\n    inputs_dict={'x1': [[5, 9, 1], [12, 4], [2, 3, 6, 7], [5], [13, 2, 2, 13, 4, 3], [0, 1, 4], [9, 5, 7, 5, 4, 1], [13, 0, 4, 12], [6, 6, 3, 14], [11, 12, 14, 1, 2, 15, 9], [0, 1, 0, 2, 11, 0], [2, 10, 3, 12], [5, 9, 14], [6, 8, 2, 7, 6, 9, 8], [1, 7, 4, 5, 3]]},\n    outputs=[[9, 1], [4], [3, 6, 7], [], [2, 2, 13, 4, 3], [1, 4], [5, 7, 5, 4, 1], [0, 4, 12], [6, 3, 14], [12, 14, 1, 2, 15, 9], [1, 0, 2, 11, 0], [10, 3, 12], [9, 14], [8, 2, 7, 6, 9, 8], [7, 4, 5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.531674213707447,
            "num_unique_values": 248,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.75816993464052,
                "explored_percent_lambda": 27.647058823529413,
                "explored_percent_none": 13.594771241830065,
                "kept_percent_concrete": 58.99581589958159,
                "kept_percent_lambda": 41.00418410041841,
                "num_examples": 15,
                "num_explored_concrete": 899,
                "num_explored_lambda": 423,
                "num_explored_none": 208,
                "num_inputs": 1,
                "num_kept_concrete": 141,
                "num_kept_lambda": 98,
                "num_values_explored": 1530,
                "num_values_kept": 239,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=1',\n    inputs_dict={'x1': [[16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2, 2], [10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9, 0], [8, 5, 16, 12, 11], [1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6, 13], [1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4, 11], [13, 5, 6, 6, 3, 5, 7, 6, 5, 11], [12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16, 7], [11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3, 8], [0, 12], [5, 14, 10, 5, 2, 16, 10, 1, 9, 16], [7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7, 8], [0, 1, 15, 10, 14, 4, 10, 1, 3, 13], [10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0, 12], [14, 1], [10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8, 11]]},\n    outputs=[[2, 16, 15, 10, 15, 5, 16, 9, 7, 9, 11, 2], [0, 10, 5, 9, 13, 4, 8, 10, 3, 2, 12, 9], [11, 8, 5, 16, 12], [13, 1, 13, 14, 2, 11, 6, 6, 5, 6, 13, 16, 7, 6], [11, 1, 14, 6, 2, 2, 13, 5, 7, 3, 4, 9, 6, 4], [11, 13, 5, 6, 6, 3, 5, 7, 6, 5], [7, 12, 0, 2, 3, 8, 4, 12, 4, 15, 7, 13, 4, 4, 9, 16], [8, 11, 3, 6, 7, 6, 8, 5, 6, 10, 3, 14, 4, 3], [12, 0], [16, 5, 14, 10, 5, 2, 16, 10, 1, 9], [8, 7, 10, 4, 14, 4, 16, 1, 8, 4, 7, 6, 0, 2, 0, 7], [13, 0, 1, 15, 10, 14, 4, 10, 1, 3], [12, 10, 2, 5, 10, 14, 15, 9, 11, 13, 5, 15, 1, 15, 0, 9, 0], [1, 14], [11, 10, 16, 6, 14, 11, 5, 1, 4, 2, 0, 15, 14, 13, 16, 12, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43354968912899494,
            "num_unique_values": 222,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.13725490196079,
                "explored_percent_lambda": 22.431372549019606,
                "explored_percent_none": 10.431372549019608,
                "kept_percent_concrete": 63.38028169014085,
                "kept_percent_lambda": 36.61971830985915,
                "num_examples": 15,
                "num_explored_concrete": 856,
                "num_explored_lambda": 286,
                "num_explored_none": 133,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 78,
                "num_values_explored": 1275,
                "num_values_kept": 213,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=2',\n    inputs_dict={'x1': [[16, 2, 16, 6, 8, 12, 12, 3, 6, 8, 5, 5], [2, 12, 6, 9], [7, 1, 6, 5, 14, 14, 0, 5, 6], [11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9, 5, 11], [8, 9, 7, 10, 8, 8, 6, 12], [14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0, 5, 7], [11, 16, 7, 7, 6, 3, 16, 12], [6, 0, 12, 11, 3, 15, 14, 13, 13, 4], [10, 1, 13, 5, 13, 14, 7, 6, 6, 0], [12, 3, 15, 13], [0, 13, 14, 13, 1, 14, 12], [10, 13, 9, 13], [7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12, 9, 11], [2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1, 9, 3], [13, 15, 0, 2, 1, 12, 8, 8, 4, 3]]},\n    outputs=[[5, 5, 16, 2, 16, 6, 8, 12, 12, 3, 6, 8], [6, 9, 2, 12], [5, 6, 7, 1, 6, 5, 14, 14, 0], [5, 11, 11, 16, 13, 1, 11, 7, 2, 5, 9, 11, 13, 2, 9, 9], [6, 12, 8, 9, 7, 10, 8, 8], [5, 7, 14, 12, 16, 4, 3, 7, 13, 13, 0, 6, 4, 12, 10, 10, 0], [16, 12, 11, 16, 7, 7, 6, 3], [13, 4, 6, 0, 12, 11, 3, 15, 14, 13], [6, 0, 10, 1, 13, 5, 13, 14, 7, 6], [15, 13, 12, 3], [14, 12, 0, 13, 14, 13, 1], [9, 13, 10, 13], [9, 11, 7, 11, 0, 13, 3, 9, 1, 13, 10, 8, 2, 12], [9, 3, 2, 7, 8, 16, 10, 0, 10, 8, 9, 8, 1], [4, 3, 13, 15, 0, 2, 1, 12, 8, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6141116609796882,
            "num_unique_values": 193,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.15406162464986,
                "explored_percent_lambda": 17.983193277310924,
                "explored_percent_none": 16.862745098039216,
                "kept_percent_concrete": 63.58695652173913,
                "kept_percent_lambda": 36.41304347826087,
                "num_examples": 15,
                "num_explored_concrete": 1163,
                "num_explored_lambda": 321,
                "num_explored_none": 301,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 67,
                "num_values_explored": 1785,
                "num_values_kept": 184,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='replace-all-with-index-k with k=5',\n    inputs_dict={'x1': [[8, 7, 16, 9, 3, 15], [9, 13, 7, 14, 0, 3, 12], [10, 16, 9, 13, 14, 13], [4, 16, 8, 9, 13, 8, 12, 11, 4, 5, 2], [4, 10, 1, 16, 2, 11, 10, 12, 4, 10, 8, 6], [2, 4, 9, 8, 7, 9, 16], [9, 8, 15, 3, 4, 13, 9, 3, 3], [15, 5, 16, 14, 4, 6, 15, 12, 9, 13, 15], [16, 5, 7, 1, 5], [0, 5, 7, 11, 11, 0, 12, 3, 1], [9, 12, 12, 15, 13, 16, 5, 13], [12, 3, 6, 14, 5], [13, 1, 15, 8, 5, 3, 10, 11, 6, 8], [13, 5, 3, 0, 9, 15, 1, 1], [12, 13, 9, 8, 3, 4, 5]]},\n    outputs=[[3, 3, 3, 3, 3, 3], [0, 0, 0, 0, 0, 0, 0], [14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [7, 7, 7, 7, 7, 7, 7], [4, 4, 4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], [5, 5, 5, 5, 5], [11, 11, 11, 11, 11, 11, 11, 11, 11], [13, 13, 13, 13, 13, 13, 13, 13], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [9, 9, 9, 9, 9, 9, 9, 9], [3, 3, 3, 3, 3, 3, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5468766074627638,
            "num_unique_values": 264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.287581699346404,
                "explored_percent_lambda": 22.54901960784314,
                "explored_percent_none": 15.163398692810457,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 15,
                "num_explored_concrete": 953,
                "num_explored_lambda": 345,
                "num_explored_none": 232,
                "num_inputs": 1,
                "num_kept_concrete": 153,
                "num_kept_lambda": 102,
                "num_values_explored": 1530,
                "num_values_kept": 255,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=1',\n    inputs_dict={'x1': [[0, 14, 6], [0, 1, 7], [7, 5, 16, 3], [10, 0, 8, 6, 4, 9, 7, 7], [12, 7, 2, 2, 9, 11, 14], [4], [11, 7, 6, 4, 9, 4, 15, 16], [3, 5, 0], [10], [15, 4, 3], [8, 10, 0, 16], [12], [16, 2, 5], [1, 4, 8, 4, 0, 16, 13], [13, 14, 9, 10, 15, 3, 9, 15]]},\n    outputs=[[0, 14, 6, 0], [0, 1, 7, 0], [7, 5, 16, 3, 7], [10, 0, 8, 6, 4, 9, 7, 7, 10], [12, 7, 2, 2, 9, 11, 14, 12], [4, 4], [11, 7, 6, 4, 9, 4, 15, 16, 11], [3, 5, 0, 3], [10, 10], [15, 4, 3, 15], [8, 10, 0, 16, 8], [12, 12], [16, 2, 5, 16], [1, 4, 8, 4, 0, 16, 13, 1], [13, 14, 9, 10, 15, 3, 9, 15, 13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4600943559780717,
            "num_unique_values": 214,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.03921568627451,
                "explored_percent_lambda": 23.986928104575163,
                "explored_percent_none": 27.973856209150327,
                "kept_percent_concrete": 51.21951219512195,
                "kept_percent_lambda": 48.78048780487805,
                "num_examples": 15,
                "num_explored_concrete": 735,
                "num_explored_lambda": 367,
                "num_explored_none": 428,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 100,
                "num_values_explored": 1530,
                "num_values_kept": 205,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='evens',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [12, 13], [4], [1], [], [14, 7, 3, 1, 9, 9, 5], [6, 4, 7], [7, 0, 12, 7], [15], [], [2, 2, 8, 7], [10, 11, 8, 16], [5, 5, 8, 7, 4, 16], [14]]},\n    outputs=[[2, 0, 4], [2, 4, 2, 0], [12], [4], [], [], [14], [6, 4], [0, 12], [], [], [2, 2, 8], [10, 8, 16], [8, 4, 16], [14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.46515589114278555,
            "num_unique_values": 210,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.0,
                "explored_percent_lambda": 36.549019607843135,
                "explored_percent_none": 23.45098039215686,
                "kept_percent_concrete": 31.34328358208955,
                "kept_percent_lambda": 68.65671641791045,
                "num_examples": 15,
                "num_explored_concrete": 510,
                "num_explored_lambda": 466,
                "num_explored_none": 299,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 138,
                "num_values_explored": 1275,
                "num_values_kept": 201,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=0 and n=4',\n    inputs_dict={'x1': [[0, 1], [0, 1, 0], [3, 0, 1, 2, 3, 0, 2], [3, 2, 3], [3, 3, 2], [3, 0, 3, 3], [], [3, 3, 3, 2], [2, 0, 3], [0], [2, 3, 2, 0, 2], [1], [3, 1], [2], [2, 1, 2, 0, 0]]},\n    outputs=[[0, 1], [0, 1, 0], [3, 0, 1, 2, 3, 0, 2], [3, 2, 3], [3, 3, 2], [3, 0, 3, 3], [], [3, 3, 3, 2], [2, 0, 3], [0], [2, 3, 2, 0, 2], [1], [3, 1], [2], [2, 1, 2, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08839769009500742,
            "num_unique_values": 76,
            "solution": "Cons(3, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 51.886792452830186,
                "explored_percent_lambda": 46.22641509433962,
                "explored_percent_none": 1.8867924528301887,
                "kept_percent_concrete": 28.35820895522388,
                "kept_percent_lambda": 71.64179104477611,
                "num_examples": 15,
                "num_explored_concrete": 55,
                "num_explored_lambda": 49,
                "num_explored_none": 2,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 48,
                "num_values_explored": 106,
                "num_values_kept": 67,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=3',\n    inputs_dict={'x1': [[16, 4, 10, 12, 5, 11], [13, 8, 9, 4, 0], [0, 6], [5, 3, 0, 3, 7], [6, 0], [], [2, 5, 9, 14, 14], [7], [], [13, 14, 10, 10, 14, 14], [0, 2, 11, 9, 3], [11, 14, 7], [9, 14, 2, 5, 12, 10, 3], [10, 0, 8, 0], [14, 11]]},\n    outputs=[[3, 16, 4, 10, 12, 5, 11], [3, 13, 8, 9, 4, 0], [3, 0, 6], [3, 5, 3, 0, 3, 7], [3, 6, 0], [3], [3, 2, 5, 9, 14, 14], [3, 7], [3], [3, 13, 14, 10, 10, 14, 14], [3, 0, 2, 11, 9, 3], [3, 11, 14, 7], [3, 9, 14, 2, 5, 12, 10, 3], [3, 10, 0, 8, 0], [3, 14, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5453763762488961,
            "num_unique_values": 255,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.89542483660131,
                "explored_percent_lambda": 27.45098039215686,
                "explored_percent_none": 20.65359477124183,
                "kept_percent_concrete": 49.59349593495935,
                "kept_percent_lambda": 50.40650406504065,
                "num_examples": 15,
                "num_explored_concrete": 794,
                "num_explored_lambda": 420,
                "num_explored_none": 316,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 124,
                "num_values_explored": 1530,
                "num_values_kept": 246,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=5',\n    inputs_dict={'x1': [[20, 10, 5, 7], [9, 13, 0, 8], [0, 5], [13, 12, 10, 1, 15], [6], [8, 5, 9, 25, 6], [30], [14, 16, 10, 9, 6], [5, 2, 1], [12, 30], [5], [9, 5, 10, 5, 13, 14, 0], [10, 15, 40], [5, 40, 16], [35, 1, 4, 13, 10, 6, 35]]},\n    outputs=[[7], [9, 13, 8], [], [13, 12, 1], [6], [8, 9, 6], [], [14, 16, 9, 6], [2, 1], [12], [], [9, 13, 14], [], [16], [1, 4, 13, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.48414856661111116,
            "num_unique_values": 234,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.96078431372549,
                "explored_percent_lambda": 40.549019607843135,
                "explored_percent_none": 21.49019607843137,
                "kept_percent_concrete": 36.888888888888886,
                "kept_percent_lambda": 63.111111111111114,
                "num_examples": 15,
                "num_explored_concrete": 484,
                "num_explored_lambda": 517,
                "num_explored_none": 274,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 142,
                "num_values_explored": 1275,
                "num_values_kept": 225,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=3',\n    inputs_dict={'x1': [[], [3], [9, 14, 9], [7, 11, 6, 14, 4], [12, 11, 1, 7, 8, 4, 5], [8, 6, 10], [1, 9, 7, 8], [], [7, 14, 1], [11, 14, 7], [2, 14, 15], [9, 2, 11, 4, 13, 11], [], [8, 8], [2, 4, 6, 9, 13]]},\n    outputs=[[], [6], [12, 17, 12], [10, 14, 9, 17, 7], [15, 14, 4, 10, 11, 7, 8], [11, 9, 13], [4, 12, 10, 11], [], [10, 17, 4], [14, 17, 10], [5, 17, 18], [12, 5, 14, 7, 16, 14], [], [11, 11], [5, 7, 9, 12, 16]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.612674567848444,
            "num_unique_values": 250,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.24929971988796,
                "explored_percent_lambda": 32.94117647058823,
                "explored_percent_none": 23.80952380952381,
                "kept_percent_concrete": 37.344398340248965,
                "kept_percent_lambda": 62.655601659751035,
                "num_examples": 15,
                "num_explored_concrete": 772,
                "num_explored_lambda": 588,
                "num_explored_none": 425,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 151,
                "num_values_explored": 1785,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=0 and n=3',\n    inputs_dict={'x1': [[1, 1, 2, 0, 0], [2, 0], [0, 0, 1, 2, 1, 0, 1], [1, 0, 2, 1, 0, 0], [2, 2, 1, 2], [0, 2, 1, 2], [0, 2, 0], [2, 1], [1, 2], [2, 2, 1, 1, 1], [], [0], [2, 2], [1, 1], [2, 0, 2, 1]]},\n    outputs=[[1, 1, 2, 0, 0], [2, 0], [0, 0, 1, 2, 1, 0, 1], [1, 0, 2, 1, 0, 0], [2, 2, 1, 2], [0, 2, 1, 2], [0, 2, 0], [2, 1], [1, 2], [2, 2, 1, 1, 1], [], [0], [2, 2], [1, 1], [2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26462694723159075,
            "num_unique_values": 196,
            "solution": "Cons(Index(4, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.772853185595565,
                "explored_percent_lambda": 29.085872576177284,
                "explored_percent_none": 9.141274238227147,
                "kept_percent_concrete": 57.75401069518717,
                "kept_percent_lambda": 42.24598930481283,
                "num_examples": 15,
                "num_explored_concrete": 223,
                "num_explored_lambda": 105,
                "num_explored_none": 33,
                "num_inputs": 1,
                "num_kept_concrete": 108,
                "num_kept_lambda": 79,
                "num_values_explored": 361,
                "num_values_kept": 187,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=5',\n    inputs_dict={'x1': [[9, 14, 2, 7, 6, 8, 8], [3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 9, 3, 9, 3, 11], [4, 11, 12, 7, 2, 1, 15, 16], [8, 9, 0, 7, 11], [7, 7, 0, 0, 11, 15, 13, 14], [2, 5, 12, 15, 10, 13], [6, 15, 14, 11, 13, 15, 13, 11, 9], [15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [2, 11, 7, 7, 0, 4, 5, 11], [11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [6, 10, 0, 12, 3]]},\n    outputs=[[6, 9, 14, 2, 7, 6, 8, 8], [7, 3, 7, 1, 14, 7, 1, 10, 4, 2, 6], [11, 7, 5, 5, 10, 11, 7, 2, 2, 2, 10, 2, 0], [12, 14, 7, 0, 4, 12, 2, 4, 13, 6], [3, 3, 9, 3, 9, 3, 11], [2, 4, 11, 12, 7, 2, 1, 15, 16], [11, 8, 9, 0, 7, 11], [11, 7, 7, 0, 0, 11, 15, 13, 14], [10, 2, 5, 12, 15, 10, 13], [13, 6, 15, 14, 11, 13, 15, 13, 11, 9], [8, 15, 0, 1, 13, 8, 3, 2, 10, 5, 5], [3, 3, 3, 7, 11, 3, 7, 2, 10, 7, 15], [0, 2, 11, 7, 7, 0, 4, 5, 11], [1, 11, 2, 5, 11, 1, 1, 9, 13, 4, 15], [3, 6, 10, 0, 12, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5224563013762236,
            "num_unique_values": 226,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.431372549019606,
                "explored_percent_lambda": 34.967320261437905,
                "explored_percent_none": 26.601307189542485,
                "kept_percent_concrete": 34.56221198156682,
                "kept_percent_lambda": 65.43778801843318,
                "num_examples": 15,
                "num_explored_concrete": 588,
                "num_explored_lambda": 535,
                "num_explored_none": 407,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 142,
                "num_values_explored": 1530,
                "num_values_kept": 217,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=5',\n    inputs_dict={'x1': [[], [3, 4, 3, 4, 1], [3, 0, 1, 0, 3, 0, 1], [1], [2, 1, 2, 2, 3, 1, 2], [], [], [0, 4, 4, 2, 3, 3], [], [4, 3, 1, 0], [4], [3, 0, 4, 4, 2], [], [1, 0, 0, 4], [0, 1, 4]]},\n    outputs=[[], [3, 4, 3, 4, 1], [3, 0, 1, 0, 3, 0, 1], [1], [2, 1, 2, 2, 3, 1, 2], [], [], [0, 4, 4, 2, 3, 3], [], [4, 3, 1, 0], [4], [3, 0, 4, 4, 2], [], [1, 0, 0, 4], [0, 1, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4621966388076544,
            "num_unique_values": 178,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.73856209150327,
                "explored_percent_lambda": 23.0718954248366,
                "explored_percent_none": 27.18954248366013,
                "kept_percent_concrete": 40.23668639053255,
                "kept_percent_lambda": 59.76331360946745,
                "num_examples": 15,
                "num_explored_concrete": 761,
                "num_explored_lambda": 353,
                "num_explored_none": 416,
                "num_inputs": 1,
                "num_kept_concrete": 68,
                "num_kept_lambda": 101,
                "num_values_explored": 1530,
                "num_values_kept": 169,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=1 and n=1',\n    inputs_dict={'x1': [[], [0, 0, 0, 0, 0], [0, 0], [0], [0, 0], [0, 0, 0, 0], [0], [0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]},\n    outputs=[[], [0, 0, 0, 0, 0], [0, 0], [0], [0, 0], [0, 0, 0, 0], [0], [0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [], [0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5097255865111947,
            "num_unique_values": 217,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.052287581699346,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 23.594771241830067,
                "kept_percent_concrete": 45.19230769230769,
                "kept_percent_lambda": 54.80769230769231,
                "num_examples": 15,
                "num_explored_concrete": 674,
                "num_explored_lambda": 495,
                "num_explored_none": 361,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 114,
                "num_values_explored": 1530,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=2',\n    inputs_dict={'x1': [[10, 10, 16, 7, 2], [5, 3, 1, 13, 7, 7, 4], [6, 0], [0], [13, 1, 3, 2, 14], [15, 7, 15, 10, 13, 3, 12], [7, 10], [1, 15, 5], [2, 7, 6, 8], [3, 7, 1, 14], [15, 2, 6], [10, 11, 7], [10], [], [7, 0, 4, 12]]},\n    outputs=[[7], [5, 3, 1, 13, 7, 7], [], [], [13, 1, 3], [15, 7, 15, 13, 3], [7], [1, 15, 5], [7], [3, 7, 1], [15], [11, 7], [], [], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18583372235298157,
            "num_unique_values": 141,
            "solution": "Cons(Add(4, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.75342465753425,
                "explored_percent_lambda": 36.986301369863014,
                "explored_percent_none": 17.26027397260274,
                "kept_percent_concrete": 48.484848484848484,
                "kept_percent_lambda": 51.515151515151516,
                "num_examples": 15,
                "num_explored_concrete": 167,
                "num_explored_lambda": 135,
                "num_explored_none": 63,
                "num_inputs": 1,
                "num_kept_concrete": 64,
                "num_kept_lambda": 68,
                "num_values_explored": 365,
                "num_values_kept": 132,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=5',\n    inputs_dict={'x1': [[], [7, 15, 1, 15, 16, 7, 10], [16], [4, 10, 11, 11, 16, 7, 14], [10, 7, 15, 13, 14, 13, 3], [], [12], [4, 16, 2], [12, 15, 6, 1, 7, 2], [2, 5, 5, 0], [10, 9, 8, 16], [5, 9], [8, 11, 7], [14, 1, 4, 13, 1, 11, 12], [3]]},\n    outputs=[[5], [5, 7, 15, 1, 15, 16, 7, 10], [5, 16], [5, 4, 10, 11, 11, 16, 7, 14], [5, 10, 7, 15, 13, 14, 13, 3], [5], [5, 12], [5, 4, 16, 2], [5, 12, 15, 6, 1, 7, 2], [5, 2, 5, 5, 0], [5, 10, 9, 8, 16], [5, 5, 9], [5, 8, 11, 7], [5, 14, 1, 4, 13, 1, 11, 12], [5, 3]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4233192401006818,
            "num_unique_values": 192,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.05882352941177,
                "explored_percent_lambda": 27.607843137254903,
                "explored_percent_none": 29.333333333333332,
                "kept_percent_concrete": 49.72677595628415,
                "kept_percent_lambda": 50.27322404371585,
                "num_examples": 15,
                "num_explored_concrete": 549,
                "num_explored_lambda": 352,
                "num_explored_none": 374,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 92,
                "num_values_explored": 1275,
                "num_values_kept": 183,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=5',\n    inputs_dict={'x1': [[9, 15, 11, 12, 12, 14, 9, 2, 0, 9, 15, 13, 7, 16], [8, 10, 0, 3, 8, 5, 1, 7, 4, 2, 7, 14, 16], [11, 10, 12, 11, 11, 0, 5, 1, 8, 0], [10, 14, 14, 0, 16, 0, 9, 15, 1, 15, 10], [14, 6, 8, 15, 15, 14, 12, 3], [15, 5, 3, 3, 12, 2, 11, 16, 6, 6, 12, 9, 13, 15, 0], [15, 4, 13, 9, 10, 2, 9, 14, 4, 16], [4, 14, 6, 13, 10, 6, 12, 8, 11, 14], [11, 15, 3, 9, 0, 16, 1, 0, 8, 15, 8], [11, 3, 7, 16, 4, 8, 6, 7, 9, 3, 0, 5, 6], [15, 10, 2, 15, 16, 11, 16, 9, 13, 10, 1, 8, 14, 5], [14, 1, 7, 10, 5, 11, 16, 8, 1, 1, 14, 16, 0, 14, 14], [14, 4, 13, 11, 12, 10, 12, 3, 1, 10, 15, 7], [12, 12, 10, 16, 5, 6, 9, 4, 1, 0, 13, 4, 15, 7], [9, 7, 2, 5, 0, 11, 10, 2, 1, 15, 16, 8]]},\n    outputs=[[15, 11, 12, 12, 14], [10, 0, 3, 8, 5], [10, 12, 11, 11, 0], [14, 14, 0, 16, 0], [6, 8, 15, 15, 14], [5, 3, 3, 12, 2], [4, 13, 9, 10, 2], [14, 6, 13, 10, 6], [15, 3, 9, 0, 16], [3, 7, 16, 4, 8], [10, 2, 15, 16, 11], [1, 7, 10, 5, 11], [4, 13, 11, 12, 10], [12, 10, 16, 5, 6], [7, 2, 5, 0, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6529024690389633,
            "num_unique_values": 226,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.83660130718954,
                "explored_percent_lambda": 26.33986928104575,
                "explored_percent_none": 18.823529411764707,
                "kept_percent_concrete": 56.22119815668203,
                "kept_percent_lambda": 43.77880184331797,
                "num_examples": 15,
                "num_explored_concrete": 839,
                "num_explored_lambda": 403,
                "num_explored_none": 288,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 95,
                "num_values_explored": 1530,
                "num_values_kept": 217,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=4',\n    inputs_dict={'x1': [[9, 13, 11, 2, 6, 14, 11, 6, 8, 2, 7], [7, 6, 9, 1, 2, 13, 16], [14, 1, 5, 0, 2, 11, 8, 11, 1, 1, 0, 3], [10, 15, 5, 5, 0, 16, 12, 12, 8, 5, 4, 16], [16, 1, 13, 11, 14, 9, 8, 12, 8, 5, 8, 3], [15, 16, 14, 9, 16, 13, 10, 3, 13, 9, 11], [7, 7, 8, 3, 4, 0, 14, 4, 10, 7, 15, 6], [6, 10, 16, 7, 14, 1, 5, 11, 15, 11, 13, 6, 14, 14], [0, 9, 8, 11, 6, 7, 6, 4, 4, 7], [15, 10, 7, 11, 7, 4, 6], [12, 0, 15, 7, 3, 16, 15, 16, 12, 13], [0, 16, 7, 11, 3, 14, 9, 16, 8, 12], [16, 6, 12, 6, 8, 11, 7, 2, 11, 2, 4, 1], [13, 13, 4, 12, 3, 6, 5, 7, 13], [11, 0, 1, 12, 11, 4, 8, 0]]},\n    outputs=[[13, 11, 2, 6], [6, 9, 1, 2], [1, 5, 0, 2], [15, 5, 5, 0], [1, 13, 11, 14], [16, 14, 9, 16], [7, 8, 3, 4], [10, 16, 7, 14], [9, 8, 11, 6], [10, 7, 11, 7], [0, 15, 7, 3], [16, 7, 11, 3], [6, 12, 6, 8], [13, 4, 12, 3], [0, 1, 12, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.590787029825151,
            "num_unique_values": 242,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.58169934640523,
                "explored_percent_lambda": 33.790849673202615,
                "explored_percent_none": 18.627450980392158,
                "kept_percent_concrete": 48.497854077253216,
                "kept_percent_lambda": 51.502145922746784,
                "num_examples": 15,
                "num_explored_concrete": 728,
                "num_explored_lambda": 517,
                "num_explored_none": 285,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 120,
                "num_values_explored": 1530,
                "num_values_kept": 233,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=3 and n=4',\n    inputs_dict={'x1': [[15, 10, 1, 10, 15, 13, 5, 4, 3, 12, 0, 5, 1, 9, 4], [13, 11, 15, 0, 16, 16, 1, 2, 16, 11, 2, 13, 14], [4, 11, 16, 9, 3, 9, 3, 5, 8, 8, 12, 11, 0, 6], [2, 10, 13, 10, 15, 1, 0, 11, 0, 15, 3, 7, 4, 11], [9, 8, 16, 9, 14, 9, 12, 1, 1, 0, 13, 0], [15, 11, 1, 3, 16, 2, 15, 2, 16, 5], [0, 5, 15, 2, 7, 11, 8, 4, 12, 2, 4], [10, 9, 3, 3, 4, 8, 9, 6, 6], [16, 4, 13, 12, 3, 14, 12, 16], [6, 9, 12, 0, 0, 3, 13, 11, 13], [8, 7, 16, 2, 13, 8, 14, 14, 15, 9, 8, 9, 1], [9, 1, 10, 0, 14, 12, 5, 1, 12], [0, 9, 14, 0, 7, 12, 14, 4, 7, 0, 12, 10], [9, 0, 6, 6, 12, 7, 3, 13, 8], [8, 10, 5, 12, 3, 8, 0, 16, 8, 2]]},\n    outputs=[[1, 10, 15, 13], [15, 0, 16, 16], [16, 9, 3, 9], [13, 10, 15, 1], [16, 9, 14, 9], [1, 3, 16, 2], [15, 2, 7, 11], [3, 3, 4, 8], [13, 12, 3, 14], [12, 0, 0, 3], [16, 2, 13, 8], [10, 0, 14, 12], [14, 0, 7, 12], [6, 6, 12, 7], [5, 12, 3, 8]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.48017319571226835,
            "num_unique_values": 206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.529411764705884,
                "explored_percent_lambda": 29.568627450980394,
                "explored_percent_none": 22.901960784313726,
                "kept_percent_concrete": 45.17766497461929,
                "kept_percent_lambda": 54.82233502538071,
                "num_examples": 15,
                "num_explored_concrete": 606,
                "num_explored_lambda": 377,
                "num_explored_none": 292,
                "num_inputs": 1,
                "num_kept_concrete": 89,
                "num_kept_lambda": 108,
                "num_values_explored": 1275,
                "num_values_kept": 197,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='pow-k with k=2',\n    inputs_dict={'x1': [[0], [10, 14, 8, 2, 12, 10, 3], [], [2, 7], [13, 11, 10, 12, 13], [15], [5, 6, 2, 8, 9], [], [3], [7, 14, 11], [15, 15, 0, 1, 3, 16], [7, 8, 1, 9], [16, 15, 1, 12, 4, 0, 0], [14, 14, 14, 0, 7, 3], [11, 1, 16, 14, 2, 12, 11]]},\n    outputs=[[0], [100, 196, 64, 4, 144, 100, 9], [], [4, 49], [169, 121, 100, 144, 169], [225], [25, 36, 4, 64, 81], [], [9], [49, 196, 121], [225, 225, 0, 1, 9, 256], [49, 64, 1, 81], [256, 225, 1, 144, 16, 0, 0], [196, 196, 196, 0, 49, 9], [121, 1, 256, 196, 4, 144, 121]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6928293835371733,
            "num_unique_values": 282,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.93557422969187,
                "explored_percent_lambda": 30.81232492997199,
                "explored_percent_none": 10.252100840336135,
                "kept_percent_concrete": 54.21245421245421,
                "kept_percent_lambda": 45.78754578754579,
                "num_examples": 15,
                "num_explored_concrete": 1052,
                "num_explored_lambda": 550,
                "num_explored_none": 183,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 125,
                "num_values_explored": 1785,
                "num_values_kept": 273,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='remove-index-k with k=5',\n    inputs_dict={'x1': [[3, 3, 16, 6, 16, 4, 1], [3, 12, 15, 12, 1, 5, 15, 15, 2, 10], [15, 3, 7, 0, 4, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 4, 16, 0, 8, 10, 6], [16, 16, 6, 6, 11, 5, 9, 14], [5, 0, 0, 13, 1, 16, 0, 9, 3], [2, 3, 11, 8, 10], [8, 10, 8, 4, 16, 7, 10, 5, 13], [6, 11, 10, 7, 11], [11, 16, 6, 0, 0, 8, 12], [3, 8, 6, 6, 11, 3, 4, 1, 4], [5, 11, 14, 2, 1, 3, 2, 13], [9, 11, 7, 13, 15, 10, 10, 8], [1, 3, 13, 12, 5, 8, 13, 0, 13, 3], [12, 6, 11, 9, 3]]},\n    outputs=[[3, 3, 16, 6, 4, 1], [3, 12, 15, 12, 5, 15, 15, 2, 10], [15, 3, 7, 0, 7, 13, 6, 12, 4, 11], [12, 5, 13, 11, 16, 0, 8, 10, 6], [16, 16, 6, 6, 5, 9, 14], [5, 0, 0, 13, 16, 0, 9, 3], [2, 3, 11, 8], [8, 10, 8, 4, 7, 10, 5, 13], [6, 11, 10, 7], [11, 16, 6, 0, 8, 12], [3, 8, 6, 6, 3, 4, 1, 4], [5, 11, 14, 2, 3, 2, 13], [9, 11, 7, 13, 10, 10, 8], [1, 3, 13, 12, 8, 13, 0, 13, 3], [12, 6, 11, 9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33504660800099373,
            "num_unique_values": 149,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.80392156862745,
                "explored_percent_lambda": 28.627450980392158,
                "explored_percent_none": 26.568627450980394,
                "kept_percent_concrete": 34.285714285714285,
                "kept_percent_lambda": 65.71428571428571,
                "num_examples": 15,
                "num_explored_concrete": 457,
                "num_explored_lambda": 292,
                "num_explored_none": 271,
                "num_inputs": 1,
                "num_kept_concrete": 48,
                "num_kept_lambda": 92,
                "num_values_explored": 1020,
                "num_values_kept": 140,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=0 and n=1',\n    inputs_dict={'x1': [[0, 0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0], [], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [0, 0, 0, 0, 0, 0], [], []]},\n    outputs=[[0, 0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0], [], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0], [0, 0, 0, 0, 0, 0], [], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.46284402068704367,
            "num_unique_values": 206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.745098039215684,
                "explored_percent_lambda": 30.901960784313726,
                "explored_percent_none": 22.352941176470587,
                "kept_percent_concrete": 41.6243654822335,
                "kept_percent_lambda": 58.3756345177665,
                "num_examples": 15,
                "num_explored_concrete": 596,
                "num_explored_lambda": 394,
                "num_explored_none": 285,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 115,
                "num_values_explored": 1275,
                "num_values_kept": 197,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='reverse',\n    inputs_dict={'x1': [[2, 0, 4], [2, 5, 4, 2, 0, 5, 1, 1], [14, 12], [], [7, 13, 5, 7, 6], [15, 7, 11], [8, 7, 11, 7, 15, 11], [9, 10, 5, 8, 3], [2], [8, 6, 9], [4, 11], [], [], [15, 15, 11, 5, 3], [11, 5, 5, 6]]},\n    outputs=[[4, 0, 2], [1, 1, 5, 0, 2, 4, 5, 2], [12, 14], [], [6, 7, 5, 13, 7], [11, 7, 15], [11, 15, 7, 11, 7, 8], [3, 8, 5, 10, 9], [2], [9, 6, 8], [11, 4], [], [], [3, 5, 11, 15, 15], [6, 5, 5, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4733297247439623,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.13725490196079,
                "explored_percent_lambda": 26.03921568627451,
                "explored_percent_none": 18.823529411764707,
                "kept_percent_concrete": 55.89519650655022,
                "kept_percent_lambda": 44.10480349344978,
                "num_examples": 15,
                "num_explored_concrete": 703,
                "num_explored_lambda": 332,
                "num_explored_none": 240,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 101,
                "num_values_explored": 1275,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='take-k with k=1',\n    inputs_dict={'x1': [[1, 16, 3, 16, 0], [4, 9, 4], [14, 12, 5, 12, 2, 10], [11, 16], [15, 0, 4, 1], [10, 9, 0, 12], [8, 0], [12, 5, 4, 11, 4, 4], [4, 3, 14], [10, 13, 10, 5], [6, 7, 12, 16], [15, 8, 10, 14, 15, 5, 11], [15, 12], [2, 0, 7], [2, 10, 15, 3, 11]]},\n    outputs=[[1], [4], [14], [11], [15], [10], [8], [12], [4], [10], [6], [15], [15], [2], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.512097654864192,
            "num_unique_values": 204,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.79738562091503,
                "explored_percent_lambda": 27.45098039215686,
                "explored_percent_none": 25.751633986928105,
                "kept_percent_concrete": 49.23076923076923,
                "kept_percent_lambda": 50.76923076923077,
                "num_examples": 15,
                "num_explored_concrete": 716,
                "num_explored_lambda": 420,
                "num_explored_none": 394,
                "num_inputs": 1,
                "num_kept_concrete": 96,
                "num_kept_lambda": 99,
                "num_values_explored": 1530,
                "num_values_kept": 195,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=5',\n    inputs_dict={'x1': [[14, 13, 13, 4, 9], [7, 6], [4, 8, 16, 4], [15, 5, 8], [7, 9, 9, 2], [6, 10, 14, 2], [3, 15, 14, 3, 5], [0, 1, 15, 1, 7], [6, 15, 12, 9], [7, 9, 7, 7], [1, 6], [11, 13, 11, 3, 1], [15, 7, 7], [1, 3, 9, 11, 15], []]},\n    outputs=[[14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9, 14, 13, 13, 4, 9], [7, 6, 7, 6, 7, 6, 7, 6, 7, 6], [4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4, 4, 8, 16, 4], [15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8, 15, 5, 8], [7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2, 7, 9, 9, 2], [6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2, 6, 10, 14, 2], [3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5, 3, 15, 14, 3, 5], [0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7, 0, 1, 15, 1, 7], [6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9, 6, 15, 12, 9], [7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7, 7, 9, 7, 7], [1, 6, 1, 6, 1, 6, 1, 6, 1, 6], [11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1, 11, 13, 11, 3, 1], [15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7, 15, 7, 7], [1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15, 1, 3, 9, 11, 15], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.522472751326859,
            "num_unique_values": 237,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.588235294117645,
                "explored_percent_lambda": 36.78431372549019,
                "explored_percent_none": 20.627450980392158,
                "kept_percent_concrete": 41.228070175438596,
                "kept_percent_lambda": 58.771929824561404,
                "num_examples": 15,
                "num_explored_concrete": 543,
                "num_explored_lambda": 469,
                "num_explored_none": 263,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 134,
                "num_values_explored": 1275,
                "num_values_kept": 228,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=3',\n    inputs_dict={'x1': [[0, 0, 0, 2], [0, 0, 2], [2, 0, 1, 0, 2, 1], [1, 1], [0], [0], [1, 1, 2], [0, 1, 0], [2], [], [1, 0, 1, 2, 1, 2, 1], [0, 1, 0, 1, 1, 1], [2, 2, 2], [1, 2, 0], [0, 1, 1, 2]]},\n    outputs=[[0, 0, 0, 2], [0, 0, 2], [2, 0, 1, 0, 2, 1], [1, 1], [0], [0], [1, 1, 2], [0, 1, 0], [2], [], [1, 0, 1, 2, 1, 2, 1], [0, 1, 0, 1, 1, 1], [2, 2, 2], [1, 2, 0], [0, 1, 1, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22276447713375092,
            "num_unique_values": 165,
            "solution": "Map((lambda u1: ((lambda v1: Add(2, ((lambda v1: Mod(v1, Subtract(1, 4))))(v1))))(u1)), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 41.45658263305322,
                "explored_percent_lambda": 36.134453781512605,
                "explored_percent_none": 22.408963585434172,
                "kept_percent_concrete": 33.97435897435897,
                "kept_percent_lambda": 66.02564102564102,
                "num_examples": 15,
                "num_explored_concrete": 148,
                "num_explored_lambda": 129,
                "num_explored_none": 80,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 103,
                "num_values_explored": 357,
                "num_values_kept": 156,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=3',\n    inputs_dict={'x1': [[1, 2, 0], [1, 1, 0, 2], [1, 2, 0, 2, 1], [1, 2, 1, 2], [2, 1, 1, 0, 0, 2, 2], [1, 0, 1, 1], [2, 0], [2], [2], [0, 0, 2, 1, 0, 2, 2], [2, 0, 0], [2], [2, 2, 1, 0, 0], [2], [0, 0, 0, 1, 1, 1]]},\n    outputs=[[0, 1, 2], [0, 0, 2, 1], [0, 1, 2, 1, 0], [0, 1, 0, 1], [1, 0, 0, 2, 2, 1, 1], [0, 2, 0, 0], [1, 2], [1], [1], [2, 2, 1, 0, 2, 1, 1], [1, 2, 2], [1], [1, 1, 0, 2, 2], [1], [2, 2, 2, 0, 0, 0]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34578658919781446,
            "num_unique_values": 169,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.23529411764706,
                "explored_percent_lambda": 18.235294117647058,
                "explored_percent_none": 28.529411764705884,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 15,
                "num_explored_concrete": 543,
                "num_explored_lambda": 186,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 80,
                "num_values_explored": 1020,
                "num_values_kept": 160,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=5',\n    inputs_dict={'x1': [[0, 25, 6], [], [13, 2], [2, 20], [20], [10, 7, 0], [15, 1, 20, 2, 2], [11, 8, 16, 13], [7, 5], [8, 13, 8, 0, 14, 0], [35, 25], [5, 2, 7, 11, 13], [12, 13, 2, 15, 11], [5, 9], [40]]},\n    outputs=[[0, 25], [], [], [20], [20], [10, 0], [15, 20], [], [5], [0, 0], [35, 25], [5], [15], [5], [40]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.49511509388685226,
            "num_unique_values": 217,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.23529411764706,
                "explored_percent_lambda": 29.80392156862745,
                "explored_percent_none": 21.96078431372549,
                "kept_percent_concrete": 45.67307692307692,
                "kept_percent_lambda": 54.32692307692308,
                "num_examples": 15,
                "num_explored_concrete": 738,
                "num_explored_lambda": 456,
                "num_explored_none": 336,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 113,
                "num_values_explored": 1530,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='keep-mod-k with k=3',\n    inputs_dict={'x1': [[5, 16, 12], [0, 0, 15, 4, 16], [], [8, 12, 6, 12], [3, 9, 3, 15, 10], [0, 6, 9, 4, 16], [3, 4, 13, 10, 0], [], [12, 15, 0], [13, 3], [14, 13, 5, 8, 8, 9, 4], [18, 0], [4, 3, 7], [6, 10, 2, 7, 12], []]},\n    outputs=[[12], [0, 0, 15], [], [12, 6, 12], [3, 9, 3, 15], [0, 6, 9], [3, 0], [], [12, 15, 0], [3], [9], [18, 0], [3], [6, 12], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4739574771374464,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.49019607843137,
                "explored_percent_lambda": 11.437908496732026,
                "explored_percent_none": 13.071895424836601,
                "kept_percent_concrete": 75.10917030567686,
                "kept_percent_lambda": 24.890829694323145,
                "num_examples": 15,
                "num_explored_concrete": 1155,
                "num_explored_lambda": 175,
                "num_explored_none": 200,
                "num_inputs": 1,
                "num_kept_concrete": 172,
                "num_kept_lambda": 57,
                "num_values_explored": 1530,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='append-index-k with k=4',\n    inputs_dict={'x1': [[2, 3, 13, 14, 11, 14, 14, 0, 5], [12, 14, 1, 8, 0, 5, 7, 3], [2, 4, 8, 9, 3], [5, 2, 13, 3, 0, 8], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7], [8, 1, 16, 6, 16], [5, 11, 8, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7], [14, 7, 10, 3, 1, 4], [3, 5, 4, 4, 2, 0, 1, 8], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7], [8, 13, 11, 9, 0, 13, 6, 16, 12], [5, 3, 7, 1, 14, 0, 0, 2], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16]]},\n    outputs=[[2, 3, 13, 14, 11, 14, 14, 0, 5, 14], [12, 14, 1, 8, 0, 5, 7, 3, 8], [2, 4, 8, 9, 3, 9], [5, 2, 13, 3, 0, 8, 3], [0, 13, 3, 9, 14, 2, 1, 16, 7, 11, 7, 9], [8, 1, 16, 6, 16, 6], [5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5, 13, 3, 7, 9], [14, 7, 10, 3, 1, 4, 3], [3, 5, 4, 4, 2, 0, 1, 8, 4], [0, 12, 16, 14, 14, 8, 4, 0, 6, 2, 7, 14], [8, 13, 11, 9, 0, 13, 6, 16, 12, 9], [5, 3, 7, 1, 14, 0, 0, 2, 1], [11, 12, 1, 15, 3, 12, 4, 5, 5, 4, 15], [1, 1, 10, 6, 6, 12, 0, 7, 13, 15, 16, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5549525525420904,
            "num_unique_values": 294,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.79738562091503,
                "explored_percent_lambda": 23.202614379084967,
                "explored_percent_none": 20.0,
                "kept_percent_concrete": 59.64912280701754,
                "kept_percent_lambda": 40.35087719298246,
                "num_examples": 15,
                "num_explored_concrete": 869,
                "num_explored_lambda": 355,
                "num_explored_none": 306,
                "num_inputs": 1,
                "num_kept_concrete": 170,
                "num_kept_lambda": 115,
                "num_values_explored": 1530,
                "num_values_kept": 285,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='repeat-many',\n    inputs_dict={'x1': [[1, 1, 2, 3], [2, 1, 2, 3], [4, 1, 2], [5, 7, 0], [3, 3, 2, 5], [5, 1], [2, 15, 1], [4, 3], [1, 7, 16, 2, 2], [0, 13, 5, 2, 6], [2, 12], [0, 10, 11], [1, 0, 1], [0, 11, 11, 2], [2, 4, 4, 1, 5]]},\n    outputs=[[1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 1, 2, 1, 2, 1, 2], [7, 0, 7, 0, 7, 0, 7, 0, 7, 0], [3, 2, 5, 3, 2, 5, 3, 2, 5], [1, 1, 1, 1, 1], [15, 1, 15, 1], [3, 3, 3, 3], [7, 16, 2, 2], [], [12, 12], [], [0, 1], [], [4, 4, 1, 5, 4, 4, 1, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09048751275986433,
            "num_unique_values": 79,
            "solution": "Cdr(x1)",
            "solution_weight": 2,
            "stats": {
                "explored_percent_concrete": 51.239669421487605,
                "explored_percent_lambda": 37.1900826446281,
                "explored_percent_none": 11.570247933884298,
                "kept_percent_concrete": 41.42857142857143,
                "kept_percent_lambda": 58.57142857142857,
                "num_examples": 15,
                "num_explored_concrete": 62,
                "num_explored_lambda": 45,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 41,
                "num_values_explored": 121,
                "num_values_kept": 70,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=1',\n    inputs_dict={'x1': [[15, 1], [15, 8, 10, 1, 14, 1, 3], [6, 8, 8, 1, 9], [11, 2, 10, 10], [13, 2], [4, 7, 11, 4, 2, 5, 13, 5], [12, 0], [0, 1, 2, 7, 16, 3], [16, 2, 1, 12, 1, 11, 15], [9, 9, 15], [6, 4, 15, 0], [5, 16, 16, 9], [8], [16], [3, 13]]},\n    outputs=[[1], [8, 10, 1, 14, 1, 3], [8, 8, 1, 9], [2, 10, 10], [2], [7, 11, 4, 2, 5, 13, 5], [0], [1, 2, 7, 16, 3], [2, 1, 12, 1, 11, 15], [9, 15], [4, 15, 0], [16, 16, 9], [], [], [13]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6886274078860879,
            "num_unique_values": 239,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.81699346405229,
                "explored_percent_lambda": 39.673202614379086,
                "explored_percent_none": 24.50980392156863,
                "kept_percent_concrete": 26.08695652173913,
                "kept_percent_lambda": 73.91304347826087,
                "num_examples": 15,
                "num_explored_concrete": 548,
                "num_explored_lambda": 607,
                "num_explored_none": 375,
                "num_inputs": 1,
                "num_kept_concrete": 60,
                "num_kept_lambda": 170,
                "num_values_explored": 1530,
                "num_values_kept": 230,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=5 and n=2',\n    inputs_dict={'x1': [[1, 1, 0, 0, 1], [1, 1, 1, 1, 0], [1], [1, 1, 0, 1, 1, 0, 0], [0], [], [0, 1, 0], [1, 0, 1, 1], [0, 0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [], [], [1, 1, 1, 0, 1, 1, 0]]},\n    outputs=[[0, 0, 1, 1, 0], [0, 0, 0, 0, 1], [0], [0, 0, 1, 0, 0, 1, 1], [1], [], [1, 0, 1], [0, 1, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0], [1, 1, 0, 0, 1], [1, 0, 1, 0, 1, 0], [], [], [0, 0, 0, 1, 0, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4500356065109372,
            "num_unique_values": 197,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.78431372549019,
                "explored_percent_lambda": 24.470588235294116,
                "explored_percent_none": 18.745098039215687,
                "kept_percent_concrete": 57.4468085106383,
                "kept_percent_lambda": 42.5531914893617,
                "num_examples": 15,
                "num_explored_concrete": 724,
                "num_explored_lambda": 312,
                "num_explored_none": 239,
                "num_inputs": 1,
                "num_kept_concrete": 108,
                "num_kept_lambda": 80,
                "num_values_explored": 1275,
                "num_values_kept": 188,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=5',\n    inputs_dict={'x1': [[7, 4, 11], [6, 13, 0, 2], [3, 6], [7, 7, 0], [5, 14, 10, 15, 6], [16, 12, 15, 7], [7, 6, 11], [10, 8, 4, 7], [12], [5], [16, 13, 9, 13, 0, 3, 10], [4, 5, 4, 0, 8, 9], [3, 14, 15, 0, 12, 0], [13, 8, 10], [9, 6, 5, 0, 7, 7]]},\n    outputs=[[12, 9, 16], [11, 18, 5, 7], [8, 11], [12, 12, 5], [10, 19, 15, 20, 11], [21, 17, 20, 12], [12, 11, 16], [15, 13, 9, 12], [17], [10], [21, 18, 14, 18, 5, 8, 15], [9, 10, 9, 5, 13, 14], [8, 19, 20, 5, 17, 5], [18, 13, 15], [14, 11, 10, 5, 12, 12]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.499393567442894,
            "num_unique_values": 198,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.15686274509804,
                "explored_percent_lambda": 29.88235294117647,
                "explored_percent_none": 29.96078431372549,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 15,
                "num_explored_concrete": 512,
                "num_explored_lambda": 381,
                "num_explored_none": 382,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 108,
                "num_values_explored": 1275,
                "num_values_kept": 189,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='add-k with k=4',\n    inputs_dict={'x1': [[16, 10, 7, 12, 13, 3], [3, 2, 8, 8, 7, 0, 9], [3], [9, 3, 7, 14], [14, 12, 9, 15, 7], [15, 7, 9], [], [0, 3, 8, 15, 3, 3, 0], [9, 10, 10], [], [11, 11, 1, 7, 3, 2], [0], [10, 8], [4, 7, 15, 3, 2], []]},\n    outputs=[[20, 14, 11, 16, 17, 7], [7, 6, 12, 12, 11, 4, 13], [7], [13, 7, 11, 18], [18, 16, 13, 19, 11], [19, 11, 13], [], [4, 7, 12, 19, 7, 7, 4], [13, 14, 14], [], [15, 15, 5, 11, 7, 6], [4], [14, 12], [8, 11, 19, 7, 6], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5708558475598693,
            "num_unique_values": 250,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.01960784313726,
                "explored_percent_lambda": 25.03267973856209,
                "explored_percent_none": 15.947712418300654,
                "kept_percent_concrete": 56.43153526970954,
                "kept_percent_lambda": 43.56846473029046,
                "num_examples": 15,
                "num_explored_concrete": 903,
                "num_explored_lambda": 383,
                "num_explored_none": 244,
                "num_inputs": 1,
                "num_kept_concrete": 136,
                "num_kept_lambda": 105,
                "num_values_explored": 1530,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=4 and n=1',\n    inputs_dict={'x1': [[4, 14, 2, 9, 2, 14, 16], [0, 0, 3, 2, 15, 14, 2], [13, 13, 12, 9, 14, 1, 12, 4, 14, 8, 8, 0, 1], [10, 3, 6, 1, 10, 12, 5], [10, 5, 5, 12, 14, 10, 3, 6, 7, 15, 0], [13, 16, 7, 9, 12, 14, 2, 9], [4, 8, 10, 12, 12, 3, 13, 4, 7, 10, 10], [10, 10, 14, 13, 9, 8, 7, 13, 10, 12, 11, 4, 16], [7, 8, 3, 14, 10, 10], [0, 6, 2, 7, 9, 8, 11, 4, 9, 11, 2], [2, 8, 12, 12, 3, 7, 5, 12, 3, 13], [9, 16, 10, 5, 14, 0, 1, 4], [8, 13, 9, 1, 16, 0, 7, 5, 7, 11, 3, 2, 8], [15, 12, 4, 9, 16, 11, 8], [16, 10, 10, 2, 9, 6, 10, 4, 1, 7, 14, 8]]},\n    outputs=[[9], [2], [9], [1], [12], [9], [12], [13], [14], [7], [12], [5], [1], [9], [2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5609987638890743,
            "num_unique_values": 217,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.03921568627451,
                "explored_percent_lambda": 33.39869281045752,
                "explored_percent_none": 18.562091503267975,
                "kept_percent_concrete": 49.51923076923077,
                "kept_percent_lambda": 50.48076923076923,
                "num_examples": 15,
                "num_explored_concrete": 735,
                "num_explored_lambda": 511,
                "num_explored_none": 284,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 105,
                "num_values_explored": 1530,
                "num_values_kept": 208,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='append-k with k=5',\n    inputs_dict={'x1': [[5], [2, 13], [0], [15, 0, 13], [9], [2, 1, 16, 7, 11, 7], [8], [], [6, 16, 1, 5, 11, 8, 5], [9, 14, 6, 9, 8, 2], [13, 3], [5, 14, 7], [3, 1, 4, 9], [5], [4, 2]]},\n    outputs=[[5, 5], [2, 13, 5], [0, 5], [15, 0, 13, 5], [9, 5], [2, 1, 16, 7, 11, 7, 5], [8, 5], [5], [6, 16, 1, 5, 11, 8, 5, 5], [9, 14, 6, 9, 8, 2, 5], [13, 3, 5], [5, 14, 7, 5], [3, 1, 4, 9, 5], [5, 5], [4, 2, 5]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.48319926764816046,
            "num_unique_values": 255,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.88235294117647,
                "explored_percent_lambda": 24.784313725490197,
                "explored_percent_none": 25.333333333333332,
                "kept_percent_concrete": 49.59349593495935,
                "kept_percent_lambda": 50.40650406504065,
                "num_examples": 15,
                "num_explored_concrete": 636,
                "num_explored_lambda": 316,
                "num_explored_none": 323,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 124,
                "num_values_explored": 1275,
                "num_values_kept": 246,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='pop',\n    inputs_dict={'x1': [[1, 2, 3], [0], [1, 1, 2, 1], [9, 14], [2], [4, 11, 7], [5, 11, 4, 14, 13, 8], [14, 16, 1, 3, 10, 0], [2, 0, 1, 11, 11, 10], [6, 8, 1, 3, 0], [9], [1, 7, 11, 13, 10], [8, 2, 2], [14, 15, 8], [0, 3, 2, 16]]},\n    outputs=[[1, 2], [], [1, 1, 2], [9], [], [4, 11], [5, 11, 4, 14, 13], [14, 16, 1, 3, 10], [2, 0, 1, 11, 11], [6, 8, 1, 3], [], [1, 7, 11, 13], [8, 2], [14, 15], [0, 3, 2]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21803569700568914,
            "num_unique_values": 177,
            "solution": "Map((lambda u1: ((lambda v1: Mod(v1, 3)))(u1)), Map((lambda u1: ((lambda v1: Add(1, v1)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 41.1764705882353,
                "explored_percent_lambda": 38.095238095238095,
                "explored_percent_none": 20.72829131652661,
                "kept_percent_concrete": 35.11904761904762,
                "kept_percent_lambda": 64.88095238095238,
                "num_examples": 15,
                "num_explored_concrete": 147,
                "num_explored_lambda": 136,
                "num_explored_none": 74,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 109,
                "num_values_explored": 357,
                "num_values_kept": 168,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=4 and n=3',\n    inputs_dict={'x1': [[2, 2, 2, 1], [1, 1, 2, 1, 2, 2, 2], [1, 0, 0, 2, 0, 1], [], [], [1, 0, 1, 1], [0, 0, 0, 2, 2], [1, 0, 1, 1, 1], [0], [1, 2, 2, 1], [1, 2, 1], [0, 0], [1, 1, 0, 0], [1, 1, 0, 0, 1, 0, 0], [2, 2, 1, 1, 2, 1, 0]]},\n    outputs=[[0, 0, 0, 2], [2, 2, 0, 2, 0, 0, 0], [2, 1, 1, 0, 1, 2], [], [], [2, 1, 2, 2], [1, 1, 1, 0, 0], [2, 1, 2, 2, 2], [1], [2, 0, 0, 2], [2, 0, 2], [1, 1], [2, 2, 1, 1], [2, 2, 1, 1, 2, 1, 1], [0, 0, 2, 2, 0, 2, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08360171224921942,
            "num_unique_values": 74,
            "solution": "Map((lambda u1: ((lambda v1: Add(2, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 46.236559139784944,
                "explored_percent_lambda": 53.763440860215056,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 24.615384615384617,
                "kept_percent_lambda": 75.38461538461539,
                "num_examples": 15,
                "num_explored_concrete": 43,
                "num_explored_lambda": 50,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 49,
                "num_values_explored": 93,
                "num_values_kept": 65,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='add-k with k=2',\n    inputs_dict={'x1': [[14, 13, 12, 6], [8, 6, 14, 7, 14, 16, 13], [7, 1, 0, 11, 0, 10], [], [], [9, 4, 9, 6], [2, 4, 3, 13, 13], [11, 5, 7, 6, 8], [5], [9, 12, 16, 9], [9, 11, 7], [5, 0], [11, 6, 0, 3], [9, 11, 0, 0, 5, 3, 2], [16, 13, 6, 8, 14, 8, 2]]},\n    outputs=[[16, 15, 14, 8], [10, 8, 16, 9, 16, 18, 15], [9, 3, 2, 13, 2, 12], [], [], [11, 6, 11, 8], [4, 6, 5, 15, 15], [13, 7, 9, 8, 10], [7], [11, 14, 18, 11], [11, 13, 9], [7, 2], [13, 8, 2, 5], [11, 13, 2, 2, 7, 5, 4], [18, 15, 8, 10, 16, 10, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5683443788439035,
            "num_unique_values": 231,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.888888888888886,
                "explored_percent_lambda": 39.869281045751634,
                "explored_percent_none": 21.241830065359476,
                "kept_percent_concrete": 38.288288288288285,
                "kept_percent_lambda": 61.711711711711715,
                "num_examples": 15,
                "num_explored_concrete": 595,
                "num_explored_lambda": 610,
                "num_explored_none": 325,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 137,
                "num_values_explored": 1530,
                "num_values_kept": 222,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='repeat-k with k=1',\n    inputs_dict={'x1': [[], [], [15, 3, 7, 14], [15, 8], [0, 11, 12], [15, 16, 0], [9, 6], [13, 8], [16, 7, 10, 10], [9, 10, 2, 3], [1, 8], [3], [16], [16, 4], []]},\n    outputs=[[], [], [15, 3, 7, 14], [15, 8], [0, 11, 12], [15, 16, 0], [9, 6], [13, 8], [16, 7, 10, 10], [9, 10, 2, 3], [1, 8], [3], [16], [16, 4], []],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7059218436479568,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.14705882352941,
                "explored_percent_lambda": 30.245098039215687,
                "explored_percent_none": 24.607843137254903,
                "kept_percent_concrete": 53.7117903930131,
                "kept_percent_lambda": 46.2882096069869,
                "num_examples": 15,
                "num_explored_concrete": 921,
                "num_explored_lambda": 617,
                "num_explored_none": 502,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 106,
                "num_values_explored": 2040,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='drop-k with k=5',\n    inputs_dict={'x1': [[15, 6, 2, 1, 7, 7, 2, 11, 14, 6, 7, 11], [13, 1, 12, 11, 6, 11, 15, 11, 2, 7, 8], [5, 10, 1, 4, 3, 5, 6, 0, 6, 3, 16], [5, 10, 1, 5, 6, 16, 12, 9, 2, 7, 13], [1, 8, 14, 3, 14, 3, 15, 11, 11, 14], [14, 2, 8, 4, 1, 9, 9, 4], [4, 14, 0, 12, 7], [2, 9, 16, 2, 7, 12], [0, 8, 7, 16, 13, 3, 8, 0, 13], [9, 15, 0, 1, 8, 6, 2, 11, 4, 11], [15, 16, 16, 16, 6, 0, 4, 7], [16, 7, 3, 14, 4, 9, 1, 13, 4, 8, 6], [7, 13, 16, 12, 4, 5], [13, 11, 10, 7, 13, 11, 9], [7, 15, 3, 15, 7, 7, 11]]},\n    outputs=[[7, 2, 11, 14, 6, 7, 11], [11, 15, 11, 2, 7, 8], [5, 6, 0, 6, 3, 16], [16, 12, 9, 2, 7, 13], [3, 15, 11, 11, 14], [9, 9, 4], [], [12], [3, 8, 0, 13], [6, 2, 11, 4, 11], [0, 4, 7], [9, 1, 13, 4, 8, 6], [5], [11, 9], [7, 11]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8709721956402063,
            "num_unique_values": 270,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.72549019607843,
                "explored_percent_lambda": 27.607843137254903,
                "explored_percent_none": 20.666666666666668,
                "kept_percent_concrete": 50.57471264367816,
                "kept_percent_lambda": 49.42528735632184,
                "num_examples": 15,
                "num_explored_concrete": 1319,
                "num_explored_lambda": 704,
                "num_explored_none": 527,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 129,
                "num_values_explored": 2550,
                "num_values_kept": 261,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=2 and n=3',\n    inputs_dict={'x1': [[7, 0, 2, 0, 3, 8, 2, 0, 5, 2], [2, 13, 8, 6, 3, 9, 0, 11, 6, 7, 4], [5, 11, 2, 6, 5, 15, 7, 0, 10, 16], [4, 11, 16, 11, 10, 9, 5, 12, 6, 0, 5], [14, 11, 0, 1, 0, 12, 14, 10, 7], [7, 15, 11, 10, 13, 6, 9, 7, 2, 9, 4, 6, 4], [5, 11, 9, 0, 10, 16, 9, 5, 11], [14, 12, 8, 6, 15, 15, 11, 13, 16, 16, 11, 2, 7], [16, 8, 13, 3, 9, 1, 16, 9, 3, 4], [7, 4, 11, 13, 11, 16, 9, 4, 14, 13, 1, 2, 15], [13, 5, 3, 16, 8, 12], [16, 11, 10, 0, 7, 14], [11, 5, 2, 9, 12, 0, 3, 11, 9, 15], [1, 5, 3, 6, 16, 9], [2, 15, 1, 6, 7, 10, 1, 8, 8, 7, 8]]},\n    outputs=[[0, 2, 0], [13, 8, 6], [11, 2, 6], [11, 16, 11], [11, 0, 1], [15, 11, 10], [11, 9, 0], [12, 8, 6], [8, 13, 3], [4, 11, 13], [5, 3, 16], [11, 10, 0], [5, 2, 9], [5, 3, 6], [15, 1, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5044250339269638,
            "num_unique_values": 226,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.8235294117647,
                "explored_percent_lambda": 23.856209150326798,
                "explored_percent_none": 17.320261437908496,
                "kept_percent_concrete": 55.76036866359447,
                "kept_percent_lambda": 44.23963133640553,
                "num_examples": 15,
                "num_explored_concrete": 900,
                "num_explored_lambda": 365,
                "num_explored_none": 265,
                "num_inputs": 1,
                "num_kept_concrete": 121,
                "num_kept_lambda": 96,
                "num_values_explored": 1530,
                "num_values_kept": 217,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='mult-k with k=1',\n    inputs_dict={'x1': [[0, 8, 1], [10, 16, 14, 6, 8, 6, 14], [4, 15, 2, 13, 15], [], [11, 1, 10, 8, 6], [0, 9, 10], [4, 16, 1, 1, 3], [2, 10, 4, 9], [4], [14, 1, 10], [0, 0, 11, 10, 10], [16, 5, 9], [12, 13, 9, 11], [7, 9, 10, 0, 16, 3], [12, 6, 6, 15, 10]]},\n    outputs=[[0, 8, 1], [10, 16, 14, 6, 8, 6, 14], [4, 15, 2, 13, 15], [], [11, 1, 10, 8, 6], [0, 9, 10], [4, 16, 1, 1, 3], [2, 10, 4, 9], [4], [14, 1, 10], [0, 0, 11, 10, 10], [16, 5, 9], [12, 13, 9, 11], [7, 9, 10, 0, 16, 3], [12, 6, 6, 15, 10]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5545272063463926,
            "num_unique_values": 243,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.69934640522876,
                "explored_percent_lambda": 22.22222222222222,
                "explored_percent_none": 26.07843137254902,
                "kept_percent_concrete": 50.427350427350426,
                "kept_percent_lambda": 49.572649572649574,
                "num_examples": 15,
                "num_explored_concrete": 791,
                "num_explored_lambda": 340,
                "num_explored_none": 399,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 116,
                "num_values_explored": 1530,
                "num_values_kept": 234,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='pow-k with k=3',\n    inputs_dict={'x1': [[15, 9, 8, 8, 4, 3], [1, 16, 6, 4, 6, 12], [], [1, 16, 12], [1, 4, 12], [0, 15, 15, 16, 9], [15, 0, 2, 7, 11, 13], [7, 10, 9, 7, 8, 8], [], [4, 3, 7, 10, 4], [1, 16, 5, 15, 8, 10, 13], [7, 0, 3, 12, 12], [5, 16, 10, 16, 8, 7], [12], [1]]},\n    outputs=[[3375, 729, 512, 512, 64, 27], [1, 4096, 216, 64, 216, 1728], [], [1, 4096, 1728], [1, 64, 1728], [0, 3375, 3375, 4096, 729], [3375, 0, 8, 343, 1331, 2197], [343, 1000, 729, 343, 512, 512], [], [64, 27, 343, 1000, 64], [1, 4096, 125, 3375, 512, 1000, 2197], [343, 0, 27, 1728, 1728], [125, 4096, 1000, 4096, 512, 343], [1728], [1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09028653521090746,
            "num_unique_values": 81,
            "solution": "Cons(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 60.714285714285715,
                "explored_percent_lambda": 38.392857142857146,
                "explored_percent_none": 0.8928571428571429,
                "kept_percent_concrete": 41.666666666666664,
                "kept_percent_lambda": 58.333333333333336,
                "num_examples": 15,
                "num_explored_concrete": 68,
                "num_explored_lambda": 43,
                "num_explored_none": 1,
                "num_inputs": 1,
                "num_kept_concrete": 30,
                "num_kept_lambda": 42,
                "num_values_explored": 112,
                "num_values_kept": 72,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=4',\n    inputs_dict={'x1': [[16, 9, 3], [13, 1, 11, 16, 7], [16, 5, 0, 2, 3], [13, 12], [12, 15, 12, 4], [1, 14, 7, 14, 10], [12, 0, 9, 14, 11], [7, 16, 9, 16, 9], [12, 7], [6, 10, 5, 4], [11, 11, 5, 7], [12, 10, 7, 4, 0, 15, 8], [7, 11, 8, 13], [6, 5, 3, 16, 7, 16, 5], [0, 7, 1, 14]]},\n    outputs=[[4, 16, 9, 3], [4, 13, 1, 11, 16, 7], [4, 16, 5, 0, 2, 3], [4, 13, 12], [4, 12, 15, 12, 4], [4, 1, 14, 7, 14, 10], [4, 12, 0, 9, 14, 11], [4, 7, 16, 9, 16, 9], [4, 12, 7], [4, 6, 10, 5, 4], [4, 11, 11, 5, 7], [4, 12, 10, 7, 4, 0, 15, 8], [4, 7, 11, 8, 13], [4, 6, 5, 3, 16, 7, 16, 5], [4, 0, 7, 1, 14]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31430115550756454,
            "num_unique_values": 153,
            "solution": "Cons(Index(3, x1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 69.29347826086956,
                "explored_percent_lambda": 22.01086956521739,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 68.05555555555556,
                "kept_percent_lambda": 31.944444444444443,
                "num_examples": 15,
                "num_explored_concrete": 255,
                "num_explored_lambda": 81,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 98,
                "num_kept_lambda": 46,
                "num_values_explored": 368,
                "num_values_kept": 144,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-index-k with k=4',\n    inputs_dict={'x1': [[16, 13, 9, 8, 8, 0, 2, 15, 9], [14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [0, 2, 8, 7, 6, 14, 0, 0, 12], [10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [16, 11, 3, 0, 8, 13], [3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [1, 10, 1, 10, 5, 16], [7, 2, 8, 11, 5, 9, 8, 9, 7], [2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [4, 8, 5, 3, 1, 7, 5, 6, 13], [11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [13, 1, 3, 2, 14, 16, 8, 4], [8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [13, 12, 8, 7, 11, 1, 15]]},\n    outputs=[[8, 16, 13, 9, 8, 8, 0, 2, 15, 9], [16, 14, 10, 5, 16, 1, 1, 4, 13, 16, 15], [7, 0, 2, 8, 7, 6, 14, 0, 0, 12], [3, 10, 12, 16, 3, 6, 16, 5, 3, 16, 14, 7], [0, 16, 11, 3, 0, 8, 13], [16, 3, 0, 1, 16, 1, 11, 0, 5, 9], [5, 5, 4, 14, 5, 13, 5, 9, 9, 15, 13], [10, 1, 10, 1, 10, 5, 16], [11, 7, 2, 8, 11, 5, 9, 8, 9, 7], [0, 2, 8, 16, 0, 1, 16, 0, 10, 13, 7], [3, 4, 8, 5, 3, 1, 7, 5, 6, 13], [13, 11, 7, 5, 13, 1, 3, 2, 7, 0, 12], [2, 13, 1, 3, 2, 14, 16, 8, 4], [13, 8, 15, 10, 13, 3, 12, 0, 7, 5, 2, 5], [7, 13, 12, 8, 7, 11, 1, 15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18582109361886978,
            "num_unique_values": 144,
            "solution": "Cdr(Cdr(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 53.191489361702125,
                "explored_percent_lambda": 24.73404255319149,
                "explored_percent_none": 22.074468085106382,
                "kept_percent_concrete": 52.592592592592595,
                "kept_percent_lambda": 47.407407407407405,
                "num_examples": 15,
                "num_explored_concrete": 200,
                "num_explored_lambda": 93,
                "num_explored_none": 83,
                "num_inputs": 1,
                "num_kept_concrete": 71,
                "num_kept_lambda": 64,
                "num_values_explored": 376,
                "num_values_kept": 135,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='drop-k with k=2',\n    inputs_dict={'x1': [[15, 16, 10, 8, 15, 9, 15], [2, 12, 4, 8, 13, 5, 2, 6], [15, 13, 0, 15, 8, 9, 16, 7, 6], [2, 14, 1], [2, 12, 7, 12], [13, 0], [5, 16, 1, 6, 12, 5, 6, 10, 10], [7, 3, 2, 8], [13, 10, 5, 13, 5, 1], [0, 9, 1], [15, 11, 4, 15, 14, 16, 2], [10, 5, 5], [12, 5, 7, 15, 6], [2, 14, 6, 12], [14, 9, 12, 12, 2, 16, 1, 3, 4]]},\n    outputs=[[10, 8, 15, 9, 15], [4, 8, 13, 5, 2, 6], [0, 15, 8, 9, 16, 7, 6], [1], [7, 12], [], [1, 6, 12, 5, 6, 10, 10], [2, 8], [5, 13, 5, 1], [1], [4, 15, 14, 16, 2], [5], [7, 15, 6], [6, 12], [12, 12, 2, 16, 1, 3, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7126236679032445,
            "num_unique_values": 250,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.411764705882355,
                "explored_percent_lambda": 20.11764705882353,
                "explored_percent_none": 24.470588235294116,
                "kept_percent_concrete": 62.655601659751035,
                "kept_percent_lambda": 37.344398340248965,
                "num_examples": 15,
                "num_explored_concrete": 1413,
                "num_explored_lambda": 513,
                "num_explored_none": 624,
                "num_inputs": 1,
                "num_kept_concrete": 151,
                "num_kept_lambda": 90,
                "num_values_explored": 2550,
                "num_values_kept": 241,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=3 and n=1',\n    inputs_dict={'x1': [[16, 9, 5, 7, 3, 5, 12, 1], [7, 7, 11, 6, 12, 5, 5], [3, 1, 10, 10, 16, 4, 9, 14, 15], [12, 5, 11, 0, 2, 6, 2, 10, 16], [1, 1, 11, 16, 7, 2], [3, 4, 14, 6, 13, 1, 6, 5], [3, 6, 16, 2, 7, 8, 16], [5, 6, 10, 0, 13], [5, 9, 2, 16, 15, 0, 5, 10, 3], [15, 3, 7, 9, 10, 9, 13], [10, 13, 5, 8, 16, 1, 4], [10, 16, 10, 8, 15, 1, 14], [4, 15, 6, 12, 8, 9, 8, 16, 16, 5, 4, 16], [1, 13, 4, 0, 8, 4], [12, 4, 7, 0, 3, 9, 10, 5, 0, 10, 10, 14]]},\n    outputs=[[5], [11], [10], [11], [11], [14], [16], [10], [2], [7], [5], [10], [6], [4], [7]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.42922009434551,
            "num_unique_values": 219,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.15686274509804,
                "explored_percent_lambda": 20.941176470588236,
                "explored_percent_none": 10.901960784313726,
                "kept_percent_concrete": 61.904761904761905,
                "kept_percent_lambda": 38.095238095238095,
                "num_examples": 15,
                "num_explored_concrete": 869,
                "num_explored_lambda": 267,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 80,
                "num_values_explored": 1275,
                "num_values_kept": 210,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='rotate-k with k=3',\n    inputs_dict={'x1': [[13, 6, 15, 16, 4], [6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8, 12, 7, 9], [15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13, 15, 14, 8], [8, 13, 9, 6, 8, 6], [4, 3, 12, 6, 2, 11, 16, 10, 9, 10, 13, 6, 3], [5, 4, 5, 2, 14, 6, 9, 15, 1, 1, 7, 3, 11], [0, 6, 9, 4, 16, 10, 12], [12, 16, 4, 8, 4, 0, 0, 16, 14, 7, 13, 4], [6, 0, 10, 14, 5, 13, 11, 2, 7, 7, 12], [2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0, 1, 15, 1], [13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6, 4, 13, 1], [0, 5, 4, 2, 14, 6], [2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3, 11, 8, 14], [4, 10, 7, 5, 7, 1, 2, 14, 10, 13], [4, 13, 10, 0, 1, 2, 6, 4]]},\n    outputs=[[15, 16, 4, 13, 6], [12, 7, 9, 6, 7, 6, 12, 4, 8, 16, 4, 8, 15, 5, 8], [15, 14, 8, 15, 9, 4, 8, 5, 5, 11, 4, 5, 11, 4, 11, 13], [6, 8, 6, 8, 13, 9], [13, 6, 3, 4, 3, 12, 6, 2, 11, 16, 10, 9, 10], [7, 3, 11, 5, 4, 5, 2, 14, 6, 9, 15, 1, 1], [16, 10, 12, 0, 6, 9, 4], [7, 13, 4, 12, 16, 4, 8, 4, 0, 0, 16, 14], [7, 7, 12, 6, 0, 10, 14, 5, 13, 11, 2], [1, 15, 1, 2, 11, 6, 10, 14, 2, 14, 3, 15, 14, 3, 5, 15, 0], [4, 13, 1, 13, 12, 0, 3, 11, 2, 9, 13, 0, 10, 2, 5, 7, 6], [2, 14, 6, 0, 5, 4], [11, 8, 14, 2, 6, 1, 11, 4, 8, 15, 15, 16, 13, 3], [14, 10, 13, 4, 10, 7, 5, 7, 1, 2], [2, 6, 4, 4, 13, 10, 0, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.699204770848155,
            "num_unique_values": 226,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.294117647058826,
                "explored_percent_lambda": 27.107843137254903,
                "explored_percent_none": 22.598039215686274,
                "kept_percent_concrete": 47.004608294930875,
                "kept_percent_lambda": 52.995391705069125,
                "num_examples": 15,
                "num_explored_concrete": 1026,
                "num_explored_lambda": 553,
                "num_explored_none": 461,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 115,
                "num_values_explored": 2040,
                "num_values_kept": 217,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='caesar-cipher-k-modulo-n with k=3 and n=5',\n    inputs_dict={'x1': [[3, 1, 1, 4, 1, 2], [2, 1, 0, 3], [0, 1, 3, 2, 4], [1, 1], [4, 0], [], [2], [4, 2, 2, 0, 2], [], [], [2, 0, 1, 2, 4, 3], [1, 2], [1, 2, 2, 4], [3, 0, 3, 4, 3, 3], [1]]},\n    outputs=[[1, 4, 4, 2, 4, 0], [0, 4, 3, 1], [3, 4, 1, 0, 2], [4, 4], [2, 3], [], [0], [2, 0, 0, 3, 0], [], [], [0, 3, 4, 0, 2, 1], [4, 0], [4, 0, 0, 2], [1, 3, 1, 2, 1, 1], [4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6476104855537415,
            "num_unique_values": 243,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.1764705882353,
                "explored_percent_lambda": 24.41176470588235,
                "explored_percent_none": 19.41176470588235,
                "kept_percent_concrete": 61.53846153846154,
                "kept_percent_lambda": 38.46153846153846,
                "num_examples": 15,
                "num_explored_concrete": 1146,
                "num_explored_lambda": 498,
                "num_explored_none": 396,
                "num_inputs": 1,
                "num_kept_concrete": 144,
                "num_kept_lambda": 90,
                "num_values_explored": 2040,
                "num_values_kept": 234,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='pow-k with k=1',\n    inputs_dict={'x1': [[6, 1], [0, 4, 6, 9], [1, 16, 6, 12], [2, 4, 3, 1, 2, 16], [7, 3, 1, 9, 9, 5], [6, 4, 7], [7, 0, 12, 7], [15], [], [2, 2, 8, 7], [10, 11, 8, 16], [5, 5, 8, 7, 4, 16], [14], [8, 13, 8, 0, 14, 0, 5], [9]]},\n    outputs=[[6, 1], [0, 4, 6, 9], [1, 16, 6, 12], [2, 4, 3, 1, 2, 16], [7, 3, 1, 9, 9, 5], [6, 4, 7], [7, 0, 12, 7], [15], [], [2, 2, 8, 7], [10, 11, 8, 16], [5, 5, 8, 7, 4, 16], [14], [8, 13, 8, 0, 14, 0, 5], [9]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6391329849138856,
            "num_unique_values": 289,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.13165266106443,
                "explored_percent_lambda": 29.747899159663866,
                "explored_percent_none": 21.12044817927171,
                "kept_percent_concrete": 52.857142857142854,
                "kept_percent_lambda": 47.142857142857146,
                "num_examples": 15,
                "num_explored_concrete": 877,
                "num_explored_lambda": 531,
                "num_explored_none": 377,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 132,
                "num_values_explored": 1785,
                "num_values_kept": 280,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=1 and n=1',\n    inputs_dict={'x1': [[5, 14, 5, 2, 13, 1, 7, 13, 1, 1], [15, 0, 1, 9, 3, 14, 6, 10, 12, 5], [16, 14, 0, 6, 8, 4, 0, 0, 11], [8, 6, 15, 14], [4, 9, 0, 9, 13], [0, 11, 13, 1, 16, 11, 3, 4, 11, 4], [12, 0, 13, 16, 10], [9, 9, 14, 10], [9, 2, 11, 7], [8, 5, 0], [16, 4, 9, 6, 6, 1], [10, 3, 10, 11, 4, 16, 7], [15, 13, 8], [14, 1, 5, 9, 0, 15, 14, 9, 12, 13], [15, 11, 7, 8, 10, 16]]},\n    outputs=[[5], [15], [16], [8], [4], [0], [12], [9], [9], [8], [16], [10], [15], [14], [15]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09342293534427881,
            "num_unique_values": 81,
            "solution": "Cons(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 51.886792452830186,
                "explored_percent_lambda": 46.22641509433962,
                "explored_percent_none": 1.8867924528301887,
                "kept_percent_concrete": 31.944444444444443,
                "kept_percent_lambda": 68.05555555555556,
                "num_examples": 15,
                "num_explored_concrete": 55,
                "num_explored_lambda": 49,
                "num_explored_none": 2,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 49,
                "num_values_explored": 106,
                "num_values_kept": 72,
                "temperature": 1.0
            },
            "success": true,
            "task": "Task(\n    name='prepend-k with k=2',\n    inputs_dict={'x1': [[6, 6, 8, 3, 12], [], [4, 3, 16, 15, 0], [], [], [14], [], [13, 1, 0], [1, 12], [], [13], [14], [10, 0], [15, 12, 1, 10, 5, 1], [12, 5, 15, 10, 6]]},\n    outputs=[[2, 6, 6, 8, 3, 12], [2], [2, 4, 3, 16, 15, 0], [2], [2], [2, 14], [2], [2, 13, 1, 0], [2, 1, 12], [2], [2, 13], [2, 14], [2, 10, 0], [2, 15, 12, 1, 10, 5, 1], [2, 12, 5, 15, 10, 6]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5325137013569474,
            "num_unique_values": 238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.248366013071895,
                "explored_percent_lambda": 29.869281045751634,
                "explored_percent_none": 25.88235294117647,
                "kept_percent_concrete": 50.21834061135371,
                "kept_percent_lambda": 49.78165938864629,
                "num_examples": 15,
                "num_explored_concrete": 677,
                "num_explored_lambda": 457,
                "num_explored_none": 396,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 114,
                "num_values_explored": 1530,
                "num_values_kept": 229,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='remove-mod-k with k=3',\n    inputs_dict={'x1': [[6], [3], [6, 3, 11, 12], [], [0, 0, 7, 11, 27, 24, 7], [12], [13, 9, 6, 15, 14, 11, 13], [11, 9, 10, 15, 0, 1, 13], [10, 5, 6], [3], [7, 15, 6], [7], [5, 3, 11], [1, 1], [4, 15, 1, 6]]},\n    outputs=[[], [], [11], [], [7, 11, 7], [], [13, 14, 11, 13], [11, 10, 1, 13], [10, 5], [], [7], [7], [5, 11], [1, 1], [4, 1]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4726681336760521,
            "num_unique_values": 206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.72549019607843,
                "explored_percent_lambda": 23.725490196078432,
                "explored_percent_none": 22.54901960784314,
                "kept_percent_concrete": 63.95939086294416,
                "kept_percent_lambda": 36.04060913705584,
                "num_examples": 15,
                "num_explored_concrete": 822,
                "num_explored_lambda": 363,
                "num_explored_none": 345,
                "num_inputs": 1,
                "num_kept_concrete": 126,
                "num_kept_lambda": 71,
                "num_values_explored": 1530,
                "num_values_kept": 197,
                "temperature": 1.0
            },
            "success": false,
            "task": "Task(\n    name='slice-k-n with k=5 and n=5',\n    inputs_dict={'x1': [[11, 6, 2, 10, 12, 4, 9, 5, 7, 10, 5], [12, 15, 3, 13, 4, 13, 4, 11, 8, 1, 3, 9, 13, 13], [4, 4, 13, 12, 10, 10, 3, 2, 10, 4, 10, 1, 0, 4, 4], [14, 2, 11, 14, 15, 6, 12, 8, 12, 4, 3, 2, 3, 1, 1], [13, 11, 2, 2, 14, 5, 13, 9, 10, 2, 11], [12, 15, 0, 13, 13, 9, 2, 11, 6, 7, 3, 3, 12, 10, 2, 10], [8, 0, 5, 2, 1, 6, 13, 16, 14, 6, 13, 16, 6], [5, 0, 6, 7, 6, 2, 8, 6, 13, 3, 6], [10, 3, 11, 16, 10, 4, 8, 12, 0, 15, 9, 4, 4, 8, 11, 11, 9, 1], [12, 0, 10, 14, 10, 8, 12, 8, 7, 16, 0, 8, 5, 3, 10], [10, 9, 6, 15, 6, 12, 6, 7, 5, 9, 6, 5, 13], [0, 13, 5, 7, 16, 11, 12, 2, 0, 3, 9, 14, 6, 2], [13, 5, 3, 2, 12, 3, 9, 10, 9, 16, 15, 6, 9, 0, 7, 16], [4, 5, 3, 2, 6, 16, 16, 15, 11, 11, 16, 3, 16], [4, 13, 3, 15, 11, 5, 0, 16, 4, 9, 8, 7, 16, 4, 9, 6]]},\n    outputs=[[12, 4, 9, 5, 7], [4, 13, 4, 11, 8], [10, 10, 3, 2, 10], [15, 6, 12, 8, 12], [14, 5, 13, 9, 10], [13, 9, 2, 11, 6], [1, 6, 13, 16, 14], [6, 2, 8, 6, 13], [10, 4, 8, 12, 0], [10, 8, 12, 8, 7], [6, 12, 6, 7, 5], [16, 11, 12, 2, 0], [12, 3, 9, 10, 9], [6, 16, 16, 15, 11], [11, 5, 0, 16, 4]],\n    solution=None\n)",
            "task_solution": null,
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.18666666666666668
}