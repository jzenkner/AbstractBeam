{
    "num_tasks": 100,
    "num_tasks_solved": 55,
    "results": [
        {
            "elapsed_time": 0.5206505849491805,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.80168776371308,
                "explored_percent_lambda": 48.9451476793249,
                "explored_percent_none": 20.253164556962027,
                "kept_percent_concrete": 23.076923076923077,
                "kept_percent_lambda": 76.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 73,
                "num_explored_lambda": 116,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 90,
                "num_values_explored": 237,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18055723106954247,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.285714285714285,
                "explored_percent_lambda": 38.92857142857143,
                "explored_percent_none": 16.785714285714285,
                "kept_percent_concrete": 45.67901234567901,
                "kept_percent_lambda": 54.32098765432099,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 109,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11315950797870755,
            "num_unique_values": 106,
            "solution": "Access(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 50.0,
                "explored_percent_none": 16.27906976744186,
                "kept_percent_concrete": 24.752475247524753,
                "kept_percent_lambda": 75.24752475247524,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 86,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 76,
                "num_values_explored": 172,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13128434401005507,
            "num_unique_values": 113,
            "solution": "Drop(Square(Add(1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 68.51851851851852,
                "explored_percent_none": 9.25925925925926,
                "kept_percent_concrete": 15.74074074074074,
                "kept_percent_lambda": 84.25925925925925,
                "num_examples": 5,
                "num_explored_concrete": 36,
                "num_explored_lambda": 111,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 91,
                "num_values_explored": 162,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1371770940022543,
            "num_unique_values": 65,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.88741721854305,
                "explored_percent_lambda": 19.205298013245034,
                "explored_percent_none": 13.907284768211921,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 101,
                "num_explored_lambda": 29,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 23,
                "num_values_explored": 151,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13250198704190552,
            "num_unique_values": 113,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 13.08411214953271,
                "kept_percent_lambda": 86.91588785046729,
                "num_examples": 4,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 93,
                "num_values_explored": 161,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1259700150694698,
            "num_unique_values": 114,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 15.596330275229358,
                "kept_percent_lambda": 84.40366972477064,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 92,
                "num_values_explored": 161,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1320861129788682,
            "num_unique_values": 116,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.47239263803681,
                "explored_percent_lambda": 66.87116564417178,
                "explored_percent_none": 11.656441717791411,
                "kept_percent_concrete": 13.513513513513514,
                "kept_percent_lambda": 86.48648648648648,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 109,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 96,
                "num_values_explored": 163,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3221939349314198,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 50.72202166064982,
                "explored_percent_lambda": 35.55956678700361,
                "explored_percent_none": 13.71841155234657,
                "kept_percent_concrete": 44.140625,
                "kept_percent_lambda": 55.859375,
                "num_examples": 4,
                "num_explored_concrete": 281,
                "num_explored_lambda": 197,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 143,
                "num_values_explored": 554,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 554
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07537689595483243,
            "num_unique_values": 84,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.34502923976608,
                "explored_percent_lambda": 12.865497076023392,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 79.48717948717949,
                "kept_percent_lambda": 20.512820512820515,
                "num_examples": 5,
                "num_explored_concrete": 122,
                "num_explored_lambda": 22,
                "num_explored_none": 27,
                "num_inputs": 2,
                "num_kept_concrete": 62,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 78,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15948342508636415,
            "num_unique_values": 165,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.00636942675159,
                "explored_percent_lambda": 23.248407643312103,
                "explored_percent_none": 19.745222929936304,
                "kept_percent_concrete": 63.522012578616355,
                "kept_percent_lambda": 36.477987421383645,
                "num_examples": 4,
                "num_explored_concrete": 179,
                "num_explored_lambda": 73,
                "num_explored_none": 62,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 58,
                "num_values_explored": 314,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 314
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12469257193151861,
            "num_unique_values": 74,
            "solution": "Max(x1, Square(Square(Add(1, 1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.16129032258065,
                "explored_percent_lambda": 18.7683284457478,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 49.27536231884058,
                "kept_percent_lambda": 50.72463768115942,
                "num_examples": 2,
                "num_explored_concrete": 154,
                "num_explored_lambda": 64,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1971828859532252,
            "num_unique_values": 170,
            "solution": "Multiply(Minimum(x1), Square(Add(1, 1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.88925081433225,
                "explored_percent_lambda": 27.68729641693811,
                "explored_percent_none": 10.423452768729641,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 190,
                "num_explored_lambda": 85,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 66,
                "num_values_explored": 307,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 307
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.202318966970779,
            "num_unique_values": 178,
            "solution": "IntDivide(Square(Add(1, 1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.03514376996805,
                "explored_percent_lambda": 34.185303514377,
                "explored_percent_none": 12.779552715654953,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 2,
                "num_explored_concrete": 166,
                "num_explored_lambda": 107,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 83,
                "num_values_explored": 313,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19564769696444273,
            "num_unique_values": 192,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.142857142857146,
                "explored_percent_lambda": 41.07142857142857,
                "explored_percent_none": 11.785714285714286,
                "kept_percent_concrete": 46.774193548387096,
                "kept_percent_lambda": 53.225806451612904,
                "num_examples": 5,
                "num_explored_concrete": 132,
                "num_explored_lambda": 115,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 99,
                "num_values_explored": 280,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2394118079682812,
            "num_unique_values": 203,
            "solution": "Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u1)), x1, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.49301397205589,
                "explored_percent_lambda": 30.93812375249501,
                "explored_percent_none": 15.568862275449101,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 3,
                "num_explored_concrete": 268,
                "num_explored_lambda": 155,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 99,
                "num_values_explored": 501,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2608949700370431,
            "num_unique_values": 196,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.544117647058826,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 113,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 102,
                "num_values_explored": 272,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2553752139210701,
            "num_unique_values": 213,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.56380510440835,
                "explored_percent_lambda": 41.29930394431555,
                "explored_percent_none": 11.136890951276103,
                "kept_percent_concrete": 36.53846153846154,
                "kept_percent_lambda": 63.46153846153846,
                "num_examples": 3,
                "num_explored_concrete": 205,
                "num_explored_lambda": 178,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 132,
                "num_values_explored": 431,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10957821598276496,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.44343891402715,
                "explored_percent_lambda": 22.171945701357465,
                "explored_percent_none": 15.384615384615385,
                "kept_percent_concrete": 65.11627906976744,
                "kept_percent_lambda": 34.883720930232556,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 49,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 45,
                "num_values_explored": 221,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21137884503696114,
            "num_unique_values": 177,
            "solution": "Take(Sum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.2691415313225,
                "explored_percent_lambda": 28.53828306264501,
                "explored_percent_none": 7.192575406032483,
                "kept_percent_concrete": 43.27485380116959,
                "kept_percent_lambda": 56.72514619883041,
                "num_examples": 2,
                "num_explored_concrete": 277,
                "num_explored_lambda": 123,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 97,
                "num_values_explored": 431,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2897459310479462,
            "num_unique_values": 243,
            "solution": "Take(Head(x1), Reverse(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.97911832946636,
                "explored_percent_lambda": 48.25986078886311,
                "explored_percent_none": 12.761020881670534,
                "kept_percent_concrete": 29.957805907172997,
                "kept_percent_lambda": 70.042194092827,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 208,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 166,
                "num_values_explored": 431,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3246080919634551,
            "num_unique_values": 337,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 71.05643994211287,
                "explored_percent_lambda": 21.1287988422576,
                "explored_percent_none": 7.814761215629522,
                "kept_percent_concrete": 67.37160120845921,
                "kept_percent_lambda": 32.62839879154078,
                "num_examples": 4,
                "num_explored_concrete": 491,
                "num_explored_lambda": 146,
                "num_explored_none": 54,
                "num_inputs": 2,
                "num_kept_concrete": 223,
                "num_kept_lambda": 108,
                "num_values_explored": 691,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.19647799595259,
            "num_unique_values": 990,
            "solution": "IntDivide(Square(Square(Add(1, 1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.41508104298802,
                "explored_percent_lambda": 14.411557434813249,
                "explored_percent_none": 16.173361522198732,
                "kept_percent_concrete": 74.21319796954315,
                "kept_percent_lambda": 25.78680203045685,
                "num_examples": 5,
                "num_explored_concrete": 3940,
                "num_explored_lambda": 818,
                "num_explored_none": 918,
                "num_inputs": 1,
                "num_kept_concrete": 731,
                "num_kept_lambda": 254,
                "num_values_explored": 5676,
                "num_values_kept": 985,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 14043
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32678431388922036,
            "num_unique_values": 327,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.22182468694096,
                "explored_percent_lambda": 26.833631484794275,
                "explored_percent_none": 8.94454382826476,
                "kept_percent_concrete": 64.797507788162,
                "kept_percent_lambda": 35.202492211838006,
                "num_examples": 5,
                "num_explored_concrete": 359,
                "num_explored_lambda": 150,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 113,
                "num_values_explored": 559,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14935544994659722,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98194945848375,
                "explored_percent_lambda": 26.71480144404332,
                "explored_percent_none": 8.303249097472925,
                "kept_percent_concrete": 61.267605633802816,
                "kept_percent_lambda": 38.732394366197184,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 74,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 55,
                "num_values_explored": 277,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07452677807305008,
            "num_unique_values": 80,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 74.53416149068323,
                "explored_percent_lambda": 17.391304347826086,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 71.23287671232876,
                "kept_percent_lambda": 28.767123287671232,
                "num_examples": 2,
                "num_explored_concrete": 120,
                "num_explored_lambda": 28,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 52,
                "num_kept_lambda": 21,
                "num_values_explored": 161,
                "num_values_kept": 73,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.7682682160520926,
            "num_unique_values": 549,
            "solution": "Multiply(-1, Subtract(Last(x1), Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.811764705882354,
                "explored_percent_lambda": 23.529411764705884,
                "explored_percent_none": 32.65882352941176,
                "kept_percent_concrete": 73.48066298342542,
                "kept_percent_lambda": 26.519337016574585,
                "num_examples": 5,
                "num_explored_concrete": 931,
                "num_explored_lambda": 500,
                "num_explored_none": 694,
                "num_inputs": 2,
                "num_kept_concrete": 399,
                "num_kept_lambda": 144,
                "num_values_explored": 2125,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3525
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.44428036909085,
            "num_unique_values": 356,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.68288346533053,
                "explored_percent_lambda": 14.191045741069985,
                "explored_percent_none": 60.12607079359948,
                "kept_percent_concrete": 67.52136752136752,
                "kept_percent_lambda": 32.47863247863248,
                "num_examples": 5,
                "num_explored_concrete": 1589,
                "num_explored_lambda": 878,
                "num_explored_none": 3720,
                "num_inputs": 1,
                "num_kept_concrete": 237,
                "num_kept_lambda": 114,
                "num_values_explored": 6187,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63763
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18708325491752476,
            "num_unique_values": 176,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 40.66390041493776,
                "explored_percent_lambda": 52.697095435684645,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 36.25730994152047,
                "kept_percent_lambda": 63.74269005847953,
                "num_examples": 3,
                "num_explored_concrete": 98,
                "num_explored_lambda": 127,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 109,
                "num_values_explored": 241,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.963161738938652,
            "num_unique_values": 293,
            "solution": "Multiply(-1, Subtract(Square(x1), Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.78959810874704,
                "explored_percent_lambda": 20.803782505910167,
                "explored_percent_none": 36.406619385342786,
                "kept_percent_concrete": 76.65505226480836,
                "kept_percent_lambda": 23.34494773519164,
                "num_examples": 5,
                "num_explored_concrete": 362,
                "num_explored_lambda": 176,
                "num_explored_none": 308,
                "num_inputs": 2,
                "num_kept_concrete": 220,
                "num_kept_lambda": 67,
                "num_values_explored": 846,
                "num_values_kept": 287,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17188
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3726417210418731,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Multiply(-1, Last(x1)))))(u1)), Scanl1((lambda u1, u2: -1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.5875486381323,
                "explored_percent_lambda": 34.24124513618677,
                "explored_percent_none": 8.171206225680933,
                "kept_percent_concrete": 51.07142857142857,
                "kept_percent_lambda": 48.92857142857143,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 176,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 143,
                "num_kept_lambda": 137,
                "num_values_explored": 514,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.272071573068388,
            "num_unique_values": 307,
            "solution": "Max(Square(Add(x1, x1)), Subtract(Multiply(Add(x1, x1), Square(x1)), Square(x1)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 31.789848619768478,
                "explored_percent_lambda": 16.76313446126447,
                "explored_percent_none": 51.44701691896705,
                "kept_percent_concrete": 67.21854304635761,
                "kept_percent_lambda": 32.78145695364238,
                "num_examples": 2,
                "num_explored_concrete": 1428,
                "num_explored_lambda": 753,
                "num_explored_none": 2311,
                "num_inputs": 1,
                "num_kept_concrete": 203,
                "num_kept_lambda": 99,
                "num_values_explored": 4492,
                "num_values_kept": 302,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5612
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16689232597127557,
            "num_unique_values": 142,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.5735294117647,
                "explored_percent_lambda": 36.029411764705884,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 5,
                "num_explored_concrete": 143,
                "num_explored_lambda": 98,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25974230805877596,
            "num_unique_values": 316,
            "solution": "Square(Minimum(Scanl1((lambda u1, u2: Last(x2)), x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 73.21131447587355,
                "explored_percent_lambda": 16.306156405990016,
                "explored_percent_none": 10.482529118136439,
                "kept_percent_concrete": 73.2258064516129,
                "kept_percent_lambda": 26.774193548387096,
                "num_examples": 3,
                "num_explored_concrete": 440,
                "num_explored_lambda": 98,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 83,
                "num_values_explored": 601,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78084806411061,
            "num_unique_values": 1131,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.24681933842239,
                "explored_percent_lambda": 30.229007633587788,
                "explored_percent_none": 18.52417302798982,
                "kept_percent_concrete": 41.296625222024865,
                "kept_percent_lambda": 58.703374777975135,
                "num_examples": 2,
                "num_explored_concrete": 3021,
                "num_explored_lambda": 1782,
                "num_explored_none": 1092,
                "num_inputs": 1,
                "num_kept_concrete": 465,
                "num_kept_lambda": 661,
                "num_values_explored": 5895,
                "num_values_kept": 1126,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59625
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.0964456499787048,
            "num_unique_values": 240,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), -1, Add(-1, -1))))(u2)), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 17.522935779816514,
                "explored_percent_lambda": 48.07339449541284,
                "explored_percent_none": 34.403669724770644,
                "kept_percent_concrete": 25.95744680851064,
                "kept_percent_lambda": 74.04255319148936,
                "num_examples": 4,
                "num_explored_concrete": 191,
                "num_explored_lambda": 524,
                "num_explored_none": 375,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 174,
                "num_values_explored": 1090,
                "num_values_kept": 235,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2770
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31073512497823685,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(Sum(x1), ((lambda v1: Max(x2, v1)))(v1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.88747731397459,
                "explored_percent_lambda": 30.127041742286753,
                "explored_percent_none": 7.985480943738657,
                "kept_percent_concrete": 54.435483870967744,
                "kept_percent_lambda": 45.564516129032256,
                "num_examples": 5,
                "num_explored_concrete": 341,
                "num_explored_lambda": 166,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 113,
                "num_values_explored": 551,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 35.338122294982895,
            "num_unique_values": 438,
            "solution": "Min(Subtract(x1, Sum(x2)), Subtract(x3, Sum(x2)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 51.55210643015521,
                "explored_percent_lambda": 15.659645232815965,
                "explored_percent_none": 32.788248337028826,
                "kept_percent_concrete": 76.79814385150812,
                "kept_percent_lambda": 23.201856148491878,
                "num_examples": 2,
                "num_explored_concrete": 1860,
                "num_explored_lambda": 565,
                "num_explored_none": 1183,
                "num_inputs": 3,
                "num_kept_concrete": 331,
                "num_kept_lambda": 100,
                "num_values_explored": 3608,
                "num_values_kept": 431,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 27881
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.13620841503143,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 14.78494623655914,
                "explored_percent_lambda": 43.10035842293907,
                "explored_percent_none": 42.11469534050179,
                "kept_percent_concrete": 32.53012048192771,
                "kept_percent_lambda": 67.46987951807229,
                "num_examples": 2,
                "num_explored_concrete": 165,
                "num_explored_lambda": 481,
                "num_explored_none": 470,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 168,
                "num_values_explored": 1116,
                "num_values_kept": 249,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 24853
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.474013675004244,
            "num_unique_values": 790,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(1, 1)), v1)))(u1)), Map((lambda u1: Head(x1)), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 57.70637408568443,
                "explored_percent_lambda": 22.622779519331242,
                "explored_percent_none": 19.670846394984327,
                "kept_percent_concrete": 51.847133757961785,
                "kept_percent_lambda": 48.152866242038215,
                "num_examples": 2,
                "num_explored_concrete": 2209,
                "num_explored_lambda": 866,
                "num_explored_none": 753,
                "num_inputs": 1,
                "num_kept_concrete": 407,
                "num_kept_lambda": 378,
                "num_values_explored": 3828,
                "num_values_kept": 785,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5788
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 90.46429048804566,
            "num_unique_values": 339,
            "solution": "Add(Subtract(x1, x2), Square(Multiply(x2, IntDivide(1, x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 28.651685393258425,
                "explored_percent_lambda": 15.714731585518102,
                "explored_percent_none": 55.63358302122347,
                "kept_percent_concrete": 65.46546546546547,
                "kept_percent_lambda": 34.53453453453454,
                "num_examples": 2,
                "num_explored_concrete": 1836,
                "num_explored_lambda": 1007,
                "num_explored_none": 3565,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 115,
                "num_values_explored": 6408,
                "num_values_kept": 333,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 57930
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73713129607495,
            "num_unique_values": 558,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.019904879337677,
                "explored_percent_lambda": 26.580940637660735,
                "explored_percent_none": 42.39915448300159,
                "kept_percent_concrete": 44.56521739130435,
                "kept_percent_lambda": 55.43478260869565,
                "num_examples": 4,
                "num_explored_concrete": 1761,
                "num_explored_lambda": 1509,
                "num_explored_none": 2407,
                "num_inputs": 2,
                "num_kept_concrete": 246,
                "num_kept_lambda": 306,
                "num_values_explored": 5677,
                "num_values_kept": 552,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57806
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38994777493644506,
            "num_unique_values": 313,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Access(1, x1))), Map((lambda u1: Add(-1, Head(x1))), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.5,
                "explored_percent_lambda": 21.547619047619047,
                "explored_percent_none": 10.952380952380953,
                "kept_percent_concrete": 61.56351791530945,
                "kept_percent_lambda": 38.43648208469055,
                "num_examples": 3,
                "num_explored_concrete": 567,
                "num_explored_lambda": 181,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 189,
                "num_kept_lambda": 118,
                "num_values_explored": 840,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55580609699246,
            "num_unique_values": 896,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.25315694527961,
                "explored_percent_lambda": 16.02525556223692,
                "explored_percent_none": 25.721587492483465,
                "kept_percent_concrete": 64.75869809203142,
                "kept_percent_lambda": 35.24130190796858,
                "num_examples": 4,
                "num_explored_concrete": 3875,
                "num_explored_lambda": 1066,
                "num_explored_none": 1711,
                "num_inputs": 1,
                "num_kept_concrete": 577,
                "num_kept_lambda": 314,
                "num_values_explored": 6652,
                "num_values_kept": 891,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69019
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 87.44822239899077,
            "num_unique_values": 278,
            "solution": "Multiply(Add(-1, IntDivide(x1, Add(-1, -1))), Multiply(-1, Add(1, If(IsEven(x1), -1, 1))))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 22.68825116507236,
                "explored_percent_lambda": 21.290164336521954,
                "explored_percent_none": 56.02158449840569,
                "kept_percent_concrete": 45.05494505494506,
                "kept_percent_lambda": 54.94505494505494,
                "num_examples": 5,
                "num_explored_concrete": 925,
                "num_explored_lambda": 868,
                "num_explored_none": 2284,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 150,
                "num_values_explored": 4077,
                "num_values_kept": 273,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 54404
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2650569970719516,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.65900383141762,
                "explored_percent_lambda": 40.99616858237548,
                "explored_percent_none": 10.344827586206897,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 127,
                "num_explored_lambda": 107,
                "num_explored_none": 27,
                "num_inputs": 3,
                "num_kept_concrete": 66,
                "num_kept_lambda": 88,
                "num_values_explored": 261,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.967632672050968,
            "num_unique_values": 305,
            "solution": "Min(If(IsEven(x1), Subtract(x1, x2), x2), IntDivide(x1, Square(Add(-1, -1))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 28.376148951213764,
                "explored_percent_lambda": 15.48432712703276,
                "explored_percent_none": 56.13952392175348,
                "kept_percent_concrete": 63.54515050167224,
                "kept_percent_lambda": 36.45484949832776,
                "num_examples": 2,
                "num_explored_concrete": 1204,
                "num_explored_lambda": 657,
                "num_explored_none": 2382,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 109,
                "num_values_explored": 4243,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12361
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19422628404572606,
            "num_unique_values": 170,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.72623574144487,
                "explored_percent_lambda": 44.866920152091254,
                "explored_percent_none": 11.406844106463879,
                "kept_percent_concrete": 37.423312883435585,
                "kept_percent_lambda": 62.576687116564415,
                "num_examples": 4,
                "num_explored_concrete": 115,
                "num_explored_lambda": 118,
                "num_explored_none": 30,
                "num_inputs": 3,
                "num_kept_concrete": 61,
                "num_kept_lambda": 102,
                "num_values_explored": 263,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37683415808714926,
            "num_unique_values": 382,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.87373737373737,
                "explored_percent_lambda": 19.82323232323232,
                "explored_percent_none": 5.303030303030303,
                "kept_percent_concrete": 71.46666666666667,
                "kept_percent_lambda": 28.533333333333335,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 157,
                "num_explored_none": 42,
                "num_inputs": 3,
                "num_kept_concrete": 268,
                "num_kept_lambda": 107,
                "num_values_explored": 792,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53199059702456,
            "num_unique_values": 360,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.196452933151434,
                "explored_percent_lambda": 11.550704865848113,
                "explored_percent_none": 56.252842201000455,
                "kept_percent_concrete": 77.11864406779661,
                "kept_percent_lambda": 22.88135593220339,
                "num_examples": 4,
                "num_explored_concrete": 2124,
                "num_explored_lambda": 762,
                "num_explored_none": 3711,
                "num_inputs": 2,
                "num_kept_concrete": 273,
                "num_kept_lambda": 81,
                "num_values_explored": 6597,
                "num_values_kept": 354,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70909
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8432274729712,
            "num_unique_values": 936,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.78826895565093,
                "explored_percent_lambda": 24.409871244635195,
                "explored_percent_none": 23.801859799713878,
                "kept_percent_concrete": 53.16863587540279,
                "kept_percent_lambda": 46.83136412459721,
                "num_examples": 5,
                "num_explored_concrete": 2896,
                "num_explored_lambda": 1365,
                "num_explored_none": 1331,
                "num_inputs": 1,
                "num_kept_concrete": 495,
                "num_kept_lambda": 436,
                "num_values_explored": 5592,
                "num_values_kept": 931,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57442
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3168642340460792,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.861759425493716,
                "explored_percent_lambda": 24.416517055655298,
                "explored_percent_none": 14.721723518850988,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 339,
                "num_explored_lambda": 136,
                "num_explored_none": 82,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 557,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81663522706367,
            "num_unique_values": 897,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.75482093663912,
                "explored_percent_lambda": 24.242424242424242,
                "explored_percent_none": 33.00275482093664,
                "kept_percent_concrete": 53.36322869955157,
                "kept_percent_lambda": 46.63677130044843,
                "num_examples": 3,
                "num_explored_concrete": 2328,
                "num_explored_lambda": 1320,
                "num_explored_none": 1797,
                "num_inputs": 1,
                "num_kept_concrete": 476,
                "num_kept_lambda": 416,
                "num_values_explored": 5445,
                "num_values_kept": 892,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58003
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19424851308576763,
            "num_unique_values": 144,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 44.11764705882353,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 18.38235294117647,
                "kept_percent_concrete": 37.68115942028985,
                "kept_percent_lambda": 62.31884057971015,
                "num_examples": 4,
                "num_explored_concrete": 120,
                "num_explored_lambda": 102,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 86,
                "num_values_explored": 272,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7165514350636,
            "num_unique_values": 1344,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.04903889813833,
                "explored_percent_lambda": 13.515967912819736,
                "explored_percent_none": 18.434993189041926,
                "kept_percent_concrete": 76.96335078534031,
                "kept_percent_lambda": 23.036649214659686,
                "num_examples": 5,
                "num_explored_concrete": 4496,
                "num_explored_lambda": 893,
                "num_explored_none": 1218,
                "num_inputs": 3,
                "num_kept_concrete": 1029,
                "num_kept_lambda": 308,
                "num_values_explored": 6607,
                "num_values_kept": 1337,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68359
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2604668469866738,
            "num_unique_values": 222,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 60.91954022988506,
                "explored_percent_lambda": 31.03448275862069,
                "explored_percent_none": 8.045977011494253,
                "kept_percent_concrete": 56.48148148148148,
                "kept_percent_lambda": 43.51851851851852,
                "num_examples": 5,
                "num_explored_concrete": 265,
                "num_explored_lambda": 135,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 122,
                "num_kept_lambda": 94,
                "num_values_explored": 435,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48796307004523,
            "num_unique_values": 429,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.566360052562416,
                "explored_percent_lambda": 15.78515111695138,
                "explored_percent_none": 54.6484888304862,
                "kept_percent_concrete": 64.53900709219859,
                "kept_percent_lambda": 35.46099290780142,
                "num_examples": 5,
                "num_explored_concrete": 1800,
                "num_explored_lambda": 961,
                "num_explored_none": 3327,
                "num_inputs": 2,
                "num_kept_concrete": 273,
                "num_kept_lambda": 150,
                "num_values_explored": 6088,
                "num_values_kept": 423,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62405
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.58068091608584,
            "num_unique_values": 695,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Map((lambda u1: ((lambda v1: IntDivide(((lambda v1: IntDivide(v1, x1)))(v1), x1)))(u1)), x2))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 42.944919903445246,
                "explored_percent_lambda": 29.646697388632873,
                "explored_percent_none": 27.408382707921877,
                "kept_percent_concrete": 35.55878084179971,
                "kept_percent_lambda": 64.44121915820028,
                "num_examples": 2,
                "num_explored_concrete": 1957,
                "num_explored_lambda": 1351,
                "num_explored_none": 1249,
                "num_inputs": 2,
                "num_kept_concrete": 245,
                "num_kept_lambda": 444,
                "num_values_explored": 4557,
                "num_values_kept": 689,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11638
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50892976403702,
            "num_unique_values": 362,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.38794854434665,
                "explored_percent_lambda": 23.256601218686527,
                "explored_percent_none": 50.355450236966824,
                "kept_percent_concrete": 45.09803921568628,
                "kept_percent_lambda": 54.90196078431372,
                "num_examples": 4,
                "num_explored_concrete": 1559,
                "num_explored_lambda": 1374,
                "num_explored_none": 2975,
                "num_inputs": 1,
                "num_kept_concrete": 161,
                "num_kept_lambda": 196,
                "num_values_explored": 5908,
                "num_values_kept": 357,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59897
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93664736498613,
            "num_unique_values": 1125,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.624861674658796,
                "explored_percent_lambda": 28.69789745481372,
                "explored_percent_none": 24.67724087052748,
                "kept_percent_concrete": 49.508489722966935,
                "kept_percent_lambda": 50.491510277033065,
                "num_examples": 4,
                "num_explored_concrete": 2528,
                "num_explored_lambda": 1556,
                "num_explored_none": 1338,
                "num_inputs": 2,
                "num_kept_concrete": 554,
                "num_kept_lambda": 565,
                "num_values_explored": 5422,
                "num_values_kept": 1119,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56459
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77333203097805,
            "num_unique_values": 1003,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.552708751350515,
                "explored_percent_lambda": 16.70010804136441,
                "explored_percent_none": 21.747183207285076,
                "kept_percent_concrete": 62.5250501002004,
                "kept_percent_lambda": 37.4749498997996,
                "num_examples": 3,
                "num_explored_concrete": 3988,
                "num_explored_lambda": 1082,
                "num_explored_none": 1409,
                "num_inputs": 1,
                "num_kept_concrete": 624,
                "num_kept_lambda": 374,
                "num_values_explored": 6479,
                "num_values_kept": 998,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66190
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3166396040469408,
            "num_unique_values": 218,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.84782608695652,
                "explored_percent_lambda": 39.492753623188406,
                "explored_percent_none": 18.659420289855074,
                "kept_percent_concrete": 35.37735849056604,
                "kept_percent_lambda": 64.62264150943396,
                "num_examples": 2,
                "num_explored_concrete": 231,
                "num_explored_lambda": 218,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 75,
                "num_kept_lambda": 137,
                "num_values_explored": 552,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58695284102578,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.326750448833035,
                "explored_percent_lambda": 24.308797127468583,
                "explored_percent_none": 51.36445242369838,
                "kept_percent_concrete": 45.205479452054796,
                "kept_percent_lambda": 54.794520547945204,
                "num_examples": 4,
                "num_explored_concrete": 1355,
                "num_explored_lambda": 1354,
                "num_explored_none": 2861,
                "num_inputs": 1,
                "num_kept_concrete": 165,
                "num_kept_lambda": 200,
                "num_values_explored": 5570,
                "num_values_kept": 365,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59667
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75082769501023,
            "num_unique_values": 991,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.77668730182697,
                "explored_percent_lambda": 11.867733655443153,
                "explored_percent_none": 15.35557904272988,
                "kept_percent_concrete": 72.69035532994924,
                "kept_percent_lambda": 27.309644670050762,
                "num_examples": 2,
                "num_explored_concrete": 4820,
                "num_explored_lambda": 786,
                "num_explored_none": 1017,
                "num_inputs": 2,
                "num_kept_concrete": 716,
                "num_kept_lambda": 269,
                "num_values_explored": 6623,
                "num_values_kept": 985,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67718
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75410871696658,
            "num_unique_values": 1292,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.79028204412175,
                "explored_percent_lambda": 8.824350740016754,
                "explored_percent_none": 20.385367215861493,
                "kept_percent_concrete": 82.03732503888025,
                "kept_percent_lambda": 17.962674961119752,
                "num_examples": 5,
                "num_explored_concrete": 5070,
                "num_explored_lambda": 632,
                "num_explored_none": 1460,
                "num_inputs": 2,
                "num_kept_concrete": 1055,
                "num_kept_lambda": 231,
                "num_values_explored": 7162,
                "num_values_kept": 1286,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73056
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7411979980534,
            "num_unique_values": 971,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.067618076792385,
                "explored_percent_lambda": 22.477064220183486,
                "explored_percent_none": 20.455317703024125,
                "kept_percent_concrete": 57.7639751552795,
                "kept_percent_lambda": 42.2360248447205,
                "num_examples": 3,
                "num_explored_concrete": 3359,
                "num_explored_lambda": 1323,
                "num_explored_none": 1204,
                "num_inputs": 1,
                "num_kept_concrete": 558,
                "num_kept_lambda": 408,
                "num_values_explored": 5886,
                "num_values_kept": 966,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60019
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89726708398666,
            "num_unique_values": 1429,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.65763426902483,
                "explored_percent_lambda": 13.045594677916599,
                "explored_percent_none": 17.296771053058574,
                "kept_percent_concrete": 76.3879128601546,
                "kept_percent_lambda": 23.612087139845396,
                "num_examples": 5,
                "num_explored_concrete": 4293,
                "num_explored_lambda": 804,
                "num_explored_none": 1066,
                "num_inputs": 2,
                "num_kept_concrete": 1087,
                "num_kept_lambda": 336,
                "num_values_explored": 6163,
                "num_values_kept": 1423,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64542
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.00224542606156,
            "num_unique_values": 1009,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.2472917444901,
                "explored_percent_lambda": 27.418752334703026,
                "explored_percent_none": 28.333955920806872,
                "kept_percent_concrete": 49.50199203187251,
                "kept_percent_lambda": 50.49800796812749,
                "num_examples": 2,
                "num_explored_concrete": 2369,
                "num_explored_lambda": 1468,
                "num_explored_none": 1517,
                "num_inputs": 1,
                "num_kept_concrete": 497,
                "num_kept_lambda": 507,
                "num_values_explored": 5354,
                "num_values_kept": 1004,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55551
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81381825497374,
            "num_unique_values": 1096,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.11505098158575,
                "explored_percent_lambda": 13.361740983107595,
                "explored_percent_none": 22.523208035306652,
                "kept_percent_concrete": 68.13590449954086,
                "kept_percent_lambda": 31.864095500459136,
                "num_examples": 4,
                "num_explored_concrete": 4213,
                "num_explored_lambda": 878,
                "num_explored_none": 1480,
                "num_inputs": 3,
                "num_kept_concrete": 742,
                "num_kept_lambda": 347,
                "num_values_explored": 6571,
                "num_values_kept": 1089,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66827
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61186980106868,
            "num_unique_values": 530,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.631684358101342,
                "explored_percent_lambda": 39.43520929301022,
                "explored_percent_none": 37.933106348888444,
                "kept_percent_concrete": 15.619047619047619,
                "kept_percent_lambda": 84.38095238095238,
                "num_examples": 2,
                "num_explored_concrete": 1130,
                "num_explored_lambda": 1969,
                "num_explored_none": 1894,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 443,
                "num_values_explored": 4993,
                "num_values_kept": 525,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50793
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80734219693113,
            "num_unique_values": 1431,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.66313814819777,
                "explored_percent_lambda": 8.950824065389254,
                "explored_percent_none": 13.38603778641297,
                "kept_percent_concrete": 84.5505617977528,
                "kept_percent_lambda": 15.44943820224719,
                "num_examples": 4,
                "num_explored_concrete": 5796,
                "num_explored_lambda": 668,
                "num_explored_none": 999,
                "num_inputs": 3,
                "num_kept_concrete": 1204,
                "num_kept_lambda": 220,
                "num_values_explored": 7463,
                "num_values_kept": 1424,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77196
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.06259585893713,
            "num_unique_values": 983,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.49719698434178,
                "explored_percent_lambda": 33.40421418905857,
                "explored_percent_none": 30.098588826599652,
                "kept_percent_concrete": 41.513292433537835,
                "kept_percent_lambda": 58.486707566462165,
                "num_examples": 3,
                "num_explored_concrete": 1888,
                "num_explored_lambda": 1728,
                "num_explored_none": 1557,
                "num_inputs": 1,
                "num_kept_concrete": 406,
                "num_kept_lambda": 572,
                "num_values_explored": 5173,
                "num_values_kept": 978,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54567
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68345976097044,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.912280701754387,
                "explored_percent_lambda": 23.789473684210527,
                "explored_percent_none": 53.29824561403509,
                "kept_percent_concrete": 43.56164383561644,
                "kept_percent_lambda": 56.43835616438356,
                "num_examples": 4,
                "num_explored_concrete": 1306,
                "num_explored_lambda": 1356,
                "num_explored_none": 3038,
                "num_inputs": 1,
                "num_kept_concrete": 159,
                "num_kept_lambda": 206,
                "num_values_explored": 5700,
                "num_values_kept": 365,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57454
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.776959128910676,
            "num_unique_values": 797,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(1, 1))), x1)))), Reverse(Scanl1((lambda u1, u2: Square(Head(x1))), x1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 41.765214883184306,
                "explored_percent_lambda": 33.0833573694837,
                "explored_percent_none": 25.151427747331986,
                "kept_percent_concrete": 47.97979797979798,
                "kept_percent_lambda": 52.02020202020202,
                "num_examples": 2,
                "num_explored_concrete": 1448,
                "num_explored_lambda": 1147,
                "num_explored_none": 872,
                "num_inputs": 1,
                "num_kept_concrete": 380,
                "num_kept_lambda": 412,
                "num_values_explored": 3467,
                "num_values_kept": 792,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10841
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.5630308589898,
            "num_unique_values": 1065,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), ZipWith((lambda u1, u2: Add(1, Last(x1))), x3, x3))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 72.18515429524604,
                "explored_percent_lambda": 12.635529608006673,
                "explored_percent_none": 15.17931609674729,
                "kept_percent_concrete": 74.10207939508507,
                "kept_percent_lambda": 25.897920604914933,
                "num_examples": 5,
                "num_explored_concrete": 5193,
                "num_explored_lambda": 909,
                "num_explored_none": 1092,
                "num_inputs": 3,
                "num_kept_concrete": 784,
                "num_kept_lambda": 274,
                "num_values_explored": 7194,
                "num_values_kept": 1058,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 58799
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24759806494694203,
            "num_unique_values": 195,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.273972602739725,
                "explored_percent_lambda": 31.050228310502284,
                "explored_percent_none": 8.67579908675799,
                "kept_percent_concrete": 41.7989417989418,
                "kept_percent_lambda": 58.2010582010582,
                "num_examples": 2,
                "num_explored_concrete": 264,
                "num_explored_lambda": 136,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 110,
                "num_values_explored": 438,
                "num_values_kept": 189,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 438
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7430049169343,
            "num_unique_values": 512,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.01314571375671,
                "explored_percent_lambda": 32.27180151823736,
                "explored_percent_none": 38.715052768005926,
                "kept_percent_concrete": 34.319526627218934,
                "kept_percent_lambda": 65.68047337278107,
                "num_examples": 3,
                "num_explored_concrete": 1567,
                "num_explored_lambda": 1743,
                "num_explored_none": 2091,
                "num_inputs": 1,
                "num_kept_concrete": 174,
                "num_kept_lambda": 333,
                "num_values_explored": 5401,
                "num_values_kept": 507,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55758
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.73341608897317,
            "num_unique_values": 1276,
            "solution": "Min(Sum(Scanl1((lambda u1, u2: Add(x2, -1)), x1)), IntDivide(Sum(x1), Head(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 77.68595041322314,
                "explored_percent_lambda": 5.308328035600763,
                "explored_percent_none": 17.005721551176098,
                "kept_percent_concrete": 89.2828999211978,
                "kept_percent_lambda": 10.717100078802206,
                "num_examples": 5,
                "num_explored_concrete": 4888,
                "num_explored_lambda": 334,
                "num_explored_none": 1070,
                "num_inputs": 3,
                "num_kept_concrete": 1133,
                "num_kept_lambda": 136,
                "num_values_explored": 6292,
                "num_values_kept": 1269,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 31074
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.554882280062884,
            "num_unique_values": 485,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: ((lambda v1: Min(x1, v1)))(u1)), Scanl1((lambda u1, u2: -1), x2)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 45.693950177935946,
                "explored_percent_lambda": 20.99644128113879,
                "explored_percent_none": 33.30960854092527,
                "kept_percent_concrete": 66.94560669456067,
                "kept_percent_lambda": 33.05439330543933,
                "num_examples": 4,
                "num_explored_concrete": 1284,
                "num_explored_lambda": 590,
                "num_explored_none": 936,
                "num_inputs": 3,
                "num_kept_concrete": 320,
                "num_kept_lambda": 158,
                "num_values_explored": 2810,
                "num_values_kept": 478,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4210
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76244332909118,
            "num_unique_values": 1109,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.81512605042017,
                "explored_percent_lambda": 25.008403361344538,
                "explored_percent_none": 15.176470588235293,
                "kept_percent_concrete": 54.43840579710145,
                "kept_percent_lambda": 45.56159420289855,
                "num_examples": 2,
                "num_explored_concrete": 3559,
                "num_explored_lambda": 1488,
                "num_explored_none": 903,
                "num_inputs": 1,
                "num_kept_concrete": 601,
                "num_kept_lambda": 503,
                "num_values_explored": 5950,
                "num_values_kept": 1104,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60609
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.54479828604963,
            "num_unique_values": 892,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.5021747726374,
                "explored_percent_lambda": 10.623434822723079,
                "explored_percent_none": 18.874390404639517,
                "kept_percent_concrete": 78.1038374717833,
                "kept_percent_lambda": 21.896162528216703,
                "num_examples": 3,
                "num_explored_concrete": 5349,
                "num_explored_lambda": 806,
                "num_explored_none": 1432,
                "num_inputs": 2,
                "num_kept_concrete": 692,
                "num_kept_lambda": 194,
                "num_values_explored": 7587,
                "num_values_kept": 886,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 78721
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.38658194907475,
            "num_unique_values": 368,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.445233866193014,
                "explored_percent_lambda": 12.625814091178212,
                "explored_percent_none": 54.92895204262877,
                "kept_percent_concrete": 72.65193370165746,
                "kept_percent_lambda": 27.34806629834254,
                "num_examples": 4,
                "num_explored_concrete": 2192,
                "num_explored_lambda": 853,
                "num_explored_none": 3711,
                "num_inputs": 2,
                "num_kept_concrete": 263,
                "num_kept_lambda": 99,
                "num_values_explored": 6756,
                "num_values_kept": 362,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68741
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75035179709084,
            "num_unique_values": 1171,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.14999315724647,
                "explored_percent_lambda": 11.27685780758177,
                "explored_percent_none": 16.573149035171753,
                "kept_percent_concrete": 78.55917667238423,
                "kept_percent_lambda": 21.44082332761578,
                "num_examples": 5,
                "num_explored_concrete": 5272,
                "num_explored_lambda": 824,
                "num_explored_none": 1211,
                "num_inputs": 1,
                "num_kept_concrete": 916,
                "num_kept_lambda": 250,
                "num_values_explored": 7307,
                "num_values_kept": 1166,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74456
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5999048560625,
            "num_unique_values": 813,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.17874396135266,
                "explored_percent_lambda": 10.88298443370907,
                "explored_percent_none": 29.938271604938272,
                "kept_percent_concrete": 80.42131350681537,
                "kept_percent_lambda": 19.578686493184634,
                "num_examples": 4,
                "num_explored_concrete": 4410,
                "num_explored_lambda": 811,
                "num_explored_none": 2231,
                "num_inputs": 2,
                "num_kept_concrete": 649,
                "num_kept_lambda": 158,
                "num_values_explored": 7452,
                "num_values_kept": 807,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75309
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45432808506303,
            "num_unique_values": 348,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.034712950600802,
                "explored_percent_lambda": 18.775033377837115,
                "explored_percent_none": 55.19025367156208,
                "kept_percent_concrete": 60.05830903790088,
                "kept_percent_lambda": 39.94169096209912,
                "num_examples": 3,
                "num_explored_concrete": 1560,
                "num_explored_lambda": 1125,
                "num_explored_none": 3307,
                "num_inputs": 1,
                "num_kept_concrete": 206,
                "num_kept_lambda": 137,
                "num_values_explored": 5992,
                "num_values_kept": 343,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61797
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63515223993454,
            "num_unique_values": 911,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.80202742993441,
                "explored_percent_lambda": 16.025641025641026,
                "explored_percent_none": 18.17233154442457,
                "kept_percent_concrete": 64.08839779005525,
                "kept_percent_lambda": 35.91160220994475,
                "num_examples": 3,
                "num_explored_concrete": 4414,
                "num_explored_lambda": 1075,
                "num_explored_none": 1219,
                "num_inputs": 2,
                "num_kept_concrete": 580,
                "num_kept_lambda": 325,
                "num_values_explored": 6708,
                "num_values_kept": 905,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68412
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1317216809839,
            "num_unique_values": 1078,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.50805622214604,
                "explored_percent_lambda": 25.454233801851217,
                "explored_percent_none": 20.03770997600274,
                "kept_percent_concrete": 52.84249767008388,
                "kept_percent_lambda": 47.15750232991612,
                "num_examples": 5,
                "num_explored_concrete": 3180,
                "num_explored_lambda": 1485,
                "num_explored_none": 1169,
                "num_inputs": 1,
                "num_kept_concrete": 567,
                "num_kept_lambda": 506,
                "num_values_explored": 5834,
                "num_values_kept": 1073,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59856
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72059842501767,
            "num_unique_values": 1030,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.931789737171464,
                "explored_percent_lambda": 14.705882352941176,
                "explored_percent_none": 27.36232790988736,
                "kept_percent_concrete": 72.8780487804878,
                "kept_percent_lambda": 27.121951219512194,
                "num_examples": 5,
                "num_explored_concrete": 3703,
                "num_explored_lambda": 940,
                "num_explored_none": 1749,
                "num_inputs": 1,
                "num_kept_concrete": 747,
                "num_kept_lambda": 278,
                "num_values_explored": 6392,
                "num_values_kept": 1025,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65841
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70043226203416,
            "num_unique_values": 675,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.16937831820517,
                "explored_percent_lambda": 23.873951019010104,
                "explored_percent_none": 26.956670662784724,
                "kept_percent_concrete": 45.52238805970149,
                "kept_percent_lambda": 54.47761194029851,
                "num_examples": 2,
                "num_explored_concrete": 2871,
                "num_explored_lambda": 1394,
                "num_explored_none": 1574,
                "num_inputs": 1,
                "num_kept_concrete": 305,
                "num_kept_lambda": 365,
                "num_values_explored": 5839,
                "num_values_kept": 670,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61051
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82601795101073,
            "num_unique_values": 1018,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.58081705150977,
                "explored_percent_lambda": 18.898756660746002,
                "explored_percent_none": 29.52042628774423,
                "kept_percent_concrete": 57.74925962487661,
                "kept_percent_lambda": 42.25074037512339,
                "num_examples": 4,
                "num_explored_concrete": 2904,
                "num_explored_lambda": 1064,
                "num_explored_none": 1662,
                "num_inputs": 1,
                "num_kept_concrete": 585,
                "num_kept_lambda": 428,
                "num_values_explored": 5630,
                "num_values_kept": 1013,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57639
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63265061401762,
            "num_unique_values": 596,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.483168715984682,
                "explored_percent_lambda": 36.48457972183028,
                "explored_percent_none": 40.032251562185046,
                "kept_percent_concrete": 19.4585448392555,
                "kept_percent_lambda": 80.5414551607445,
                "num_examples": 2,
                "num_explored_concrete": 1165,
                "num_explored_lambda": 1810,
                "num_explored_none": 1986,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 476,
                "num_values_explored": 4961,
                "num_values_kept": 591,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50191
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78532505594194,
            "num_unique_values": 789,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.518474374255064,
                "explored_percent_lambda": 36.90901867302344,
                "explored_percent_none": 27.572506952721493,
                "kept_percent_concrete": 21.683673469387756,
                "kept_percent_lambda": 78.31632653061224,
                "num_examples": 2,
                "num_explored_concrete": 1788,
                "num_explored_lambda": 1858,
                "num_explored_none": 1388,
                "num_inputs": 1,
                "num_kept_concrete": 170,
                "num_kept_lambda": 614,
                "num_values_explored": 5034,
                "num_values_kept": 784,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52284
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.41564229107462,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.77935943060498,
                "explored_percent_lambda": 24.768683274021353,
                "explored_percent_none": 48.45195729537367,
                "kept_percent_concrete": 35.67567567567568,
                "kept_percent_lambda": 64.32432432432432,
                "num_examples": 2,
                "num_explored_concrete": 1505,
                "num_explored_lambda": 1392,
                "num_explored_none": 2723,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 238,
                "num_values_explored": 5620,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57727
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51527990400791,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.906709152062312,
                "explored_percent_lambda": 25.969198088157196,
                "explored_percent_none": 51.124092759780495,
                "kept_percent_concrete": 40.84880636604775,
                "kept_percent_lambda": 59.15119363395225,
                "num_examples": 2,
                "num_explored_concrete": 1294,
                "num_explored_lambda": 1467,
                "num_explored_none": 2888,
                "num_inputs": 1,
                "num_kept_concrete": 154,
                "num_kept_lambda": 223,
                "num_values_explored": 5649,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57113
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63780848693568,
            "num_unique_values": 388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.273655810368087,
                "explored_percent_lambda": 35.0163808055502,
                "explored_percent_none": 44.70996338408171,
                "kept_percent_concrete": 26.17801047120419,
                "kept_percent_lambda": 73.82198952879581,
                "num_examples": 2,
                "num_explored_concrete": 1052,
                "num_explored_lambda": 1817,
                "num_explored_none": 2320,
                "num_inputs": 2,
                "num_kept_concrete": 100,
                "num_kept_lambda": 282,
                "num_values_explored": 5189,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54435
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45697501697578,
            "num_unique_values": 394,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.479426198565495,
                "explored_percent_lambda": 33.80520951302378,
                "explored_percent_none": 45.71536428841072,
                "kept_percent_concrete": 27.577319587628867,
                "kept_percent_lambda": 72.42268041237114,
                "num_examples": 2,
                "num_explored_concrete": 1085,
                "num_explored_lambda": 1791,
                "num_explored_none": 2422,
                "num_inputs": 2,
                "num_kept_concrete": 107,
                "num_kept_lambda": 281,
                "num_values_explored": 5298,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54669
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53261559689417,
            "num_unique_values": 393,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.410880730454632,
                "explored_percent_lambda": 35.115084649039375,
                "explored_percent_none": 44.47403462050599,
                "kept_percent_concrete": 28.165374677002585,
                "kept_percent_lambda": 71.83462532299741,
                "num_examples": 2,
                "num_explored_concrete": 1073,
                "num_explored_lambda": 1846,
                "num_explored_none": 2338,
                "num_inputs": 2,
                "num_kept_concrete": 109,
                "num_kept_lambda": 278,
                "num_values_explored": 5257,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53518
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45157602604013,
            "num_unique_values": 390,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.340832395950507,
                "explored_percent_lambda": 32.30221222347207,
                "explored_percent_none": 44.356955380577425,
                "kept_percent_concrete": 28.385416666666668,
                "kept_percent_lambda": 71.61458333333333,
                "num_examples": 2,
                "num_explored_concrete": 1245,
                "num_explored_lambda": 1723,
                "num_explored_none": 2366,
                "num_inputs": 2,
                "num_kept_concrete": 109,
                "num_kept_lambda": 275,
                "num_values_explored": 5334,
                "num_values_kept": 384,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55268
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65898830804508,
            "num_unique_values": 553,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.060956790123456,
                "explored_percent_lambda": 35.82175925925926,
                "explored_percent_none": 38.117283950617285,
                "kept_percent_concrete": 22.080291970802918,
                "kept_percent_lambda": 77.91970802919708,
                "num_examples": 2,
                "num_explored_concrete": 1351,
                "num_explored_lambda": 1857,
                "num_explored_none": 1976,
                "num_inputs": 1,
                "num_kept_concrete": 121,
                "num_kept_lambda": 427,
                "num_values_explored": 5184,
                "num_values_kept": 548,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53311
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51186457101721,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.094664066654847,
                "explored_percent_lambda": 25.22602375465343,
                "explored_percent_none": 48.679312178691724,
                "kept_percent_concrete": 38.91891891891892,
                "kept_percent_lambda": 61.08108108108108,
                "num_examples": 3,
                "num_explored_concrete": 1472,
                "num_explored_lambda": 1423,
                "num_explored_none": 2746,
                "num_inputs": 1,
                "num_kept_concrete": 144,
                "num_kept_lambda": 226,
                "num_values_explored": 5641,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59335
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.55
}