{
    "num_tasks": 100,
    "num_tasks_solved": 53,
    "results": [
        {
            "elapsed_time": 0.5166663449490443,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.80168776371308,
                "explored_percent_lambda": 48.9451476793249,
                "explored_percent_none": 20.253164556962027,
                "kept_percent_concrete": 23.076923076923077,
                "kept_percent_lambda": 76.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 73,
                "num_explored_lambda": 116,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 90,
                "num_values_explored": 237,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1813832869520411,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.285714285714285,
                "explored_percent_lambda": 38.92857142857143,
                "explored_percent_none": 16.785714285714285,
                "kept_percent_concrete": 45.67901234567901,
                "kept_percent_lambda": 54.32098765432099,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 109,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11260882392525673,
            "num_unique_values": 106,
            "solution": "Access(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 50.0,
                "explored_percent_none": 16.27906976744186,
                "kept_percent_concrete": 24.752475247524753,
                "kept_percent_lambda": 75.24752475247524,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 86,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 76,
                "num_values_explored": 172,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.133692660019733,
            "num_unique_values": 113,
            "solution": "Drop(Square(Add(1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 68.51851851851852,
                "explored_percent_none": 9.25925925925926,
                "kept_percent_concrete": 15.74074074074074,
                "kept_percent_lambda": 84.25925925925925,
                "num_examples": 5,
                "num_explored_concrete": 36,
                "num_explored_lambda": 111,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 91,
                "num_values_explored": 162,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17455510306172073,
            "num_unique_values": 65,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.88741721854305,
                "explored_percent_lambda": 19.205298013245034,
                "explored_percent_none": 13.907284768211921,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 101,
                "num_explored_lambda": 29,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 23,
                "num_values_explored": 151,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1579937729984522,
            "num_unique_values": 113,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 13.08411214953271,
                "kept_percent_lambda": 86.91588785046729,
                "num_examples": 4,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 93,
                "num_values_explored": 161,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1288972080219537,
            "num_unique_values": 114,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 15.596330275229358,
                "kept_percent_lambda": 84.40366972477064,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 92,
                "num_values_explored": 161,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1330516890157014,
            "num_unique_values": 116,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.47239263803681,
                "explored_percent_lambda": 66.87116564417178,
                "explored_percent_none": 11.656441717791411,
                "kept_percent_concrete": 13.513513513513514,
                "kept_percent_lambda": 86.48648648648648,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 109,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 96,
                "num_values_explored": 163,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3218743030447513,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 50.72202166064982,
                "explored_percent_lambda": 35.55956678700361,
                "explored_percent_none": 13.71841155234657,
                "kept_percent_concrete": 44.140625,
                "kept_percent_lambda": 55.859375,
                "num_examples": 4,
                "num_explored_concrete": 281,
                "num_explored_lambda": 197,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 143,
                "num_values_explored": 554,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 554
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07462664297781885,
            "num_unique_values": 84,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.34502923976608,
                "explored_percent_lambda": 12.865497076023392,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 79.48717948717949,
                "kept_percent_lambda": 20.512820512820515,
                "num_examples": 5,
                "num_explored_concrete": 122,
                "num_explored_lambda": 22,
                "num_explored_none": 27,
                "num_inputs": 2,
                "num_kept_concrete": 62,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 78,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15478719701059163,
            "num_unique_values": 165,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.00636942675159,
                "explored_percent_lambda": 23.248407643312103,
                "explored_percent_none": 19.745222929936304,
                "kept_percent_concrete": 63.522012578616355,
                "kept_percent_lambda": 36.477987421383645,
                "num_examples": 4,
                "num_explored_concrete": 179,
                "num_explored_lambda": 73,
                "num_explored_none": 62,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 58,
                "num_values_explored": 314,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 314
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12695822294335812,
            "num_unique_values": 74,
            "solution": "Max(x1, Square(Square(Add(1, 1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.16129032258065,
                "explored_percent_lambda": 18.7683284457478,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 49.27536231884058,
                "kept_percent_lambda": 50.72463768115942,
                "num_examples": 2,
                "num_explored_concrete": 154,
                "num_explored_lambda": 64,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15564263495616615,
            "num_unique_values": 170,
            "solution": "Multiply(Minimum(x1), Square(Add(1, 1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.88925081433225,
                "explored_percent_lambda": 27.68729641693811,
                "explored_percent_none": 10.423452768729641,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 190,
                "num_explored_lambda": 85,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 66,
                "num_values_explored": 307,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 307
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1699739859905094,
            "num_unique_values": 178,
            "solution": "IntDivide(Square(Add(1, 1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.03514376996805,
                "explored_percent_lambda": 34.185303514377,
                "explored_percent_none": 12.779552715654953,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 2,
                "num_explored_concrete": 166,
                "num_explored_lambda": 107,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 83,
                "num_values_explored": 313,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19166012504138052,
            "num_unique_values": 192,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.142857142857146,
                "explored_percent_lambda": 41.07142857142857,
                "explored_percent_none": 11.785714285714286,
                "kept_percent_concrete": 46.774193548387096,
                "kept_percent_lambda": 53.225806451612904,
                "num_examples": 5,
                "num_explored_concrete": 132,
                "num_explored_lambda": 115,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 99,
                "num_values_explored": 280,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23939898994285613,
            "num_unique_values": 203,
            "solution": "Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u1)), x1, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.49301397205589,
                "explored_percent_lambda": 30.93812375249501,
                "explored_percent_none": 15.568862275449101,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 3,
                "num_explored_concrete": 268,
                "num_explored_lambda": 155,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 99,
                "num_values_explored": 501,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26450235105585307,
            "num_unique_values": 196,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.544117647058826,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 113,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 102,
                "num_values_explored": 272,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2538013400044292,
            "num_unique_values": 213,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.56380510440835,
                "explored_percent_lambda": 41.29930394431555,
                "explored_percent_none": 11.136890951276103,
                "kept_percent_concrete": 36.53846153846154,
                "kept_percent_lambda": 63.46153846153846,
                "num_examples": 3,
                "num_explored_concrete": 205,
                "num_explored_lambda": 178,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 132,
                "num_values_explored": 431,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10851105104666203,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.44343891402715,
                "explored_percent_lambda": 22.171945701357465,
                "explored_percent_none": 15.384615384615385,
                "kept_percent_concrete": 65.11627906976744,
                "kept_percent_lambda": 34.883720930232556,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 49,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 45,
                "num_values_explored": 221,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27173181099351496,
            "num_unique_values": 177,
            "solution": "Take(Sum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.2691415313225,
                "explored_percent_lambda": 28.53828306264501,
                "explored_percent_none": 7.192575406032483,
                "kept_percent_concrete": 43.27485380116959,
                "kept_percent_lambda": 56.72514619883041,
                "num_examples": 2,
                "num_explored_concrete": 277,
                "num_explored_lambda": 123,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 97,
                "num_values_explored": 431,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29730938596185297,
            "num_unique_values": 243,
            "solution": "Take(Head(x1), Reverse(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.97911832946636,
                "explored_percent_lambda": 48.25986078886311,
                "explored_percent_none": 12.761020881670534,
                "kept_percent_concrete": 29.957805907172997,
                "kept_percent_lambda": 70.042194092827,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 208,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 166,
                "num_values_explored": 431,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3240092439809814,
            "num_unique_values": 337,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 71.05643994211287,
                "explored_percent_lambda": 21.1287988422576,
                "explored_percent_none": 7.814761215629522,
                "kept_percent_concrete": 67.37160120845921,
                "kept_percent_lambda": 32.62839879154078,
                "num_examples": 4,
                "num_explored_concrete": 491,
                "num_explored_lambda": 146,
                "num_explored_none": 54,
                "num_inputs": 2,
                "num_kept_concrete": 223,
                "num_kept_lambda": 108,
                "num_values_explored": 691,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.412429899908602,
            "num_unique_values": 532,
            "solution": "IntDivide(Square(Square(Add(1, 1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 55.68034557235421,
                "explored_percent_lambda": 25.87473002159827,
                "explored_percent_none": 18.444924406047516,
                "kept_percent_concrete": 66.6034155597723,
                "kept_percent_lambda": 33.396584440227706,
                "num_examples": 5,
                "num_explored_concrete": 1289,
                "num_explored_lambda": 599,
                "num_explored_none": 427,
                "num_inputs": 1,
                "num_kept_concrete": 351,
                "num_kept_lambda": 176,
                "num_values_explored": 2315,
                "num_values_kept": 527,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10735
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32527342694811523,
            "num_unique_values": 327,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.22182468694096,
                "explored_percent_lambda": 26.833631484794275,
                "explored_percent_none": 8.94454382826476,
                "kept_percent_concrete": 64.797507788162,
                "kept_percent_lambda": 35.202492211838006,
                "num_examples": 5,
                "num_explored_concrete": 359,
                "num_explored_lambda": 150,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 113,
                "num_values_explored": 559,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14890087896492332,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98194945848375,
                "explored_percent_lambda": 26.71480144404332,
                "explored_percent_none": 8.303249097472925,
                "kept_percent_concrete": 61.267605633802816,
                "kept_percent_lambda": 38.732394366197184,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 74,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 55,
                "num_values_explored": 277,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07468199194408953,
            "num_unique_values": 80,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 74.53416149068323,
                "explored_percent_lambda": 17.391304347826086,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 71.23287671232876,
                "kept_percent_lambda": 28.767123287671232,
                "num_examples": 2,
                "num_explored_concrete": 120,
                "num_explored_lambda": 28,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 52,
                "num_kept_lambda": 21,
                "num_values_explored": 161,
                "num_values_kept": 73,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.13742673501838,
            "num_unique_values": 279,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 25.989304812834224,
                "explored_percent_lambda": 46.844919786096256,
                "explored_percent_none": 27.165775401069517,
                "kept_percent_concrete": 53.11355311355312,
                "kept_percent_lambda": 46.88644688644688,
                "num_examples": 5,
                "num_explored_concrete": 243,
                "num_explored_lambda": 438,
                "num_explored_none": 254,
                "num_inputs": 2,
                "num_kept_concrete": 145,
                "num_kept_lambda": 128,
                "num_values_explored": 935,
                "num_values_kept": 273,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2335
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51625304005574,
            "num_unique_values": 365,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.902975420439844,
                "explored_percent_lambda": 14.472833117723157,
                "explored_percent_none": 60.624191461837,
                "kept_percent_concrete": 66.38888888888889,
                "kept_percent_lambda": 33.611111111111114,
                "num_examples": 5,
                "num_explored_concrete": 1540,
                "num_explored_lambda": 895,
                "num_explored_none": 3749,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 121,
                "num_values_explored": 6184,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64381
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1863452111138031,
            "num_unique_values": 176,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 40.66390041493776,
                "explored_percent_lambda": 52.697095435684645,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 36.25730994152047,
                "kept_percent_lambda": 63.74269005847953,
                "num_examples": 3,
                "num_explored_concrete": 98,
                "num_explored_lambda": 127,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 109,
                "num_values_explored": 241,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9071089719654992,
            "num_unique_values": 283,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.77671068427371,
                "explored_percent_lambda": 18.607442977190875,
                "explored_percent_none": 39.61584633853541,
                "kept_percent_concrete": 77.25631768953069,
                "kept_percent_lambda": 22.743682310469314,
                "num_examples": 5,
                "num_explored_concrete": 348,
                "num_explored_lambda": 155,
                "num_explored_none": 330,
                "num_inputs": 2,
                "num_kept_concrete": 214,
                "num_kept_lambda": 63,
                "num_values_explored": 833,
                "num_values_kept": 277,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2513
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31262200500350446,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Multiply(-1, Last(x1)))))(u1)), Scanl1((lambda u1, u2: -1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.5875486381323,
                "explored_percent_lambda": 34.24124513618677,
                "explored_percent_none": 8.171206225680933,
                "kept_percent_concrete": 51.07142857142857,
                "kept_percent_lambda": 48.92857142857143,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 176,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 143,
                "num_kept_lambda": 137,
                "num_values_explored": 514,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.39304147695657,
            "num_unique_values": 332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.05561513712272,
                "explored_percent_lambda": 17.51187375517083,
                "explored_percent_none": 51.43251110770645,
                "kept_percent_concrete": 63.30275229357798,
                "kept_percent_lambda": 36.69724770642202,
                "num_examples": 2,
                "num_explored_concrete": 2027,
                "num_explored_lambda": 1143,
                "num_explored_none": 3357,
                "num_inputs": 1,
                "num_kept_concrete": 207,
                "num_kept_lambda": 120,
                "num_values_explored": 6527,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66116
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25221717706881464,
            "num_unique_values": 142,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.5735294117647,
                "explored_percent_lambda": 36.029411764705884,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 5,
                "num_explored_concrete": 143,
                "num_explored_lambda": 98,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26247358799446374,
            "num_unique_values": 316,
            "solution": "Square(Minimum(Scanl1((lambda u1, u2: Last(x2)), x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 73.21131447587355,
                "explored_percent_lambda": 16.306156405990016,
                "explored_percent_none": 10.482529118136439,
                "kept_percent_concrete": 73.2258064516129,
                "kept_percent_lambda": 26.774193548387096,
                "num_examples": 3,
                "num_explored_concrete": 440,
                "num_explored_lambda": 98,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 83,
                "num_values_explored": 601,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77906448789872,
            "num_unique_values": 1129,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.162404516771836,
                "explored_percent_lambda": 29.508468947193624,
                "explored_percent_none": 19.32912653603454,
                "kept_percent_concrete": 42.97153024911032,
                "kept_percent_lambda": 57.02846975088968,
                "num_examples": 2,
                "num_explored_concrete": 3081,
                "num_explored_lambda": 1777,
                "num_explored_none": 1164,
                "num_inputs": 1,
                "num_kept_concrete": 483,
                "num_kept_lambda": 641,
                "num_values_explored": 6022,
                "num_values_kept": 1124,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61154
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.1572624390246347,
            "num_unique_values": 239,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 16.10555050045496,
                "explored_percent_lambda": 47.67970882620564,
                "explored_percent_none": 36.2147406733394,
                "kept_percent_concrete": 29.487179487179485,
                "kept_percent_lambda": 70.51282051282051,
                "num_examples": 4,
                "num_explored_concrete": 177,
                "num_explored_lambda": 524,
                "num_explored_none": 398,
                "num_inputs": 1,
                "num_kept_concrete": 69,
                "num_kept_lambda": 165,
                "num_values_explored": 1099,
                "num_values_kept": 234,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2779
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38066782895475626,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(Sum(x1), ((lambda v1: Max(x2, v1)))(v1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.88747731397459,
                "explored_percent_lambda": 30.127041742286753,
                "explored_percent_none": 7.985480943738657,
                "kept_percent_concrete": 54.435483870967744,
                "kept_percent_lambda": 45.564516129032256,
                "num_examples": 5,
                "num_explored_concrete": 341,
                "num_explored_lambda": 166,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 113,
                "num_values_explored": 551,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.37670247303322,
            "num_unique_values": 726,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.368608950656636,
                "explored_percent_lambda": 9.40966466913171,
                "explored_percent_none": 27.221726380211653,
                "kept_percent_concrete": 83.03198887343532,
                "kept_percent_lambda": 16.968011126564672,
                "num_examples": 2,
                "num_explored_concrete": 4970,
                "num_explored_lambda": 738,
                "num_explored_none": 2135,
                "num_inputs": 3,
                "num_kept_concrete": 597,
                "num_kept_lambda": 122,
                "num_values_explored": 7843,
                "num_values_kept": 719,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79958
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93391746503767,
            "num_unique_values": 1128,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.6967241986615,
                "explored_percent_lambda": 29.74638957379359,
                "explored_percent_none": 21.55688622754491,
                "kept_percent_concrete": 42.653606411398044,
                "kept_percent_lambda": 57.346393588601956,
                "num_examples": 2,
                "num_explored_concrete": 2765,
                "num_explored_lambda": 1689,
                "num_explored_none": 1224,
                "num_inputs": 1,
                "num_kept_concrete": 479,
                "num_kept_lambda": 644,
                "num_values_explored": 5678,
                "num_values_kept": 1123,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57382
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.944688890944235,
            "num_unique_values": 1000,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(1, 1)), v1)))(u1)), Scanl1((lambda u1, u2: ((lambda v1: Subtract(IntDivide(Head(x1), Minimum(x1)), v1)))(u1)), x1))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 63.24556689951639,
                "explored_percent_lambda": 19.290703922622246,
                "explored_percent_none": 17.463729177861364,
                "kept_percent_concrete": 52.462311557788944,
                "kept_percent_lambda": 47.537688442211056,
                "num_examples": 2,
                "num_explored_concrete": 3531,
                "num_explored_lambda": 1077,
                "num_explored_none": 975,
                "num_inputs": 1,
                "num_kept_concrete": 522,
                "num_kept_lambda": 473,
                "num_values_explored": 5583,
                "num_values_kept": 995,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 25479
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5665910410462,
            "num_unique_values": 351,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.40069193269382,
                "explored_percent_lambda": 17.046705456832836,
                "explored_percent_none": 54.55260261047334,
                "kept_percent_concrete": 62.028985507246375,
                "kept_percent_lambda": 37.971014492753625,
                "num_examples": 2,
                "num_explored_concrete": 1806,
                "num_explored_lambda": 1084,
                "num_explored_none": 3469,
                "num_inputs": 2,
                "num_kept_concrete": 214,
                "num_kept_lambda": 131,
                "num_values_explored": 6359,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65613
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60105789103545,
            "num_unique_values": 663,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.41855368882396,
                "explored_percent_lambda": 26.862673484295104,
                "explored_percent_none": 39.71877282688094,
                "kept_percent_concrete": 41.0958904109589,
                "kept_percent_lambda": 58.9041095890411,
                "num_examples": 4,
                "num_explored_concrete": 1830,
                "num_explored_lambda": 1471,
                "num_explored_none": 2175,
                "num_inputs": 2,
                "num_kept_concrete": 270,
                "num_kept_lambda": 387,
                "num_values_explored": 5476,
                "num_values_kept": 657,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57981
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39601597003638744,
            "num_unique_values": 313,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Access(1, x1))), Map((lambda u1: Add(-1, Head(x1))), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.5,
                "explored_percent_lambda": 21.547619047619047,
                "explored_percent_none": 10.952380952380953,
                "kept_percent_concrete": 61.56351791530945,
                "kept_percent_lambda": 38.43648208469055,
                "num_examples": 3,
                "num_explored_concrete": 567,
                "num_explored_lambda": 181,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 189,
                "num_kept_lambda": 118,
                "num_values_explored": 840,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.13543412706349,
            "num_unique_values": 904,
            "solution": "Multiply(Add(Head(x1), Square(Square(Add(1, 1)))), Add(1, 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 56.0870213082998,
                "explored_percent_lambda": 16.942333482342423,
                "explored_percent_none": 26.97064520935777,
                "kept_percent_concrete": 64.62736373748609,
                "kept_percent_lambda": 35.37263626251391,
                "num_examples": 4,
                "num_explored_concrete": 3764,
                "num_explored_lambda": 1137,
                "num_explored_none": 1810,
                "num_inputs": 1,
                "num_kept_concrete": 581,
                "num_kept_lambda": 318,
                "num_values_explored": 6711,
                "num_values_kept": 899,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 21883
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.48420995892957,
            "num_unique_values": 280,
            "solution": "Multiply(Add(-1, IntDivide(x1, Add(-1, -1))), Add(-1, If(IsOdd(x1), -1, 1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 24.826762246117084,
                "explored_percent_lambda": 20.3584229390681,
                "explored_percent_none": 54.81481481481482,
                "kept_percent_concrete": 49.45454545454545,
                "kept_percent_lambda": 50.54545454545455,
                "num_examples": 5,
                "num_explored_concrete": 1039,
                "num_explored_lambda": 852,
                "num_explored_none": 2294,
                "num_inputs": 1,
                "num_kept_concrete": 136,
                "num_kept_lambda": 139,
                "num_values_explored": 4185,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 30219
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17590592498891056,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.65900383141762,
                "explored_percent_lambda": 40.99616858237548,
                "explored_percent_none": 10.344827586206897,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 127,
                "num_explored_lambda": 107,
                "num_explored_none": 27,
                "num_inputs": 3,
                "num_kept_concrete": 66,
                "num_kept_lambda": 88,
                "num_values_explored": 261,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.85536302998662,
            "num_unique_values": 310,
            "solution": "Min(Multiply(Add(1, 1), IntDivide(Subtract(x2, x1), x2)), IntDivide(x1, Square(Add(1, 1))))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 27.703984819734345,
                "explored_percent_lambda": 16.840607210626185,
                "explored_percent_none": 55.45540796963947,
                "kept_percent_concrete": 61.51315789473684,
                "kept_percent_lambda": 38.48684210526316,
                "num_examples": 2,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 710,
                "num_explored_none": 2338,
                "num_inputs": 2,
                "num_kept_concrete": 187,
                "num_kept_lambda": 117,
                "num_values_explored": 4216,
                "num_values_kept": 304,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12538
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18969571904744953,
            "num_unique_values": 170,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.72623574144487,
                "explored_percent_lambda": 44.866920152091254,
                "explored_percent_none": 11.406844106463879,
                "kept_percent_concrete": 37.423312883435585,
                "kept_percent_lambda": 62.576687116564415,
                "num_examples": 4,
                "num_explored_concrete": 115,
                "num_explored_lambda": 118,
                "num_explored_none": 30,
                "num_inputs": 3,
                "num_kept_concrete": 61,
                "num_kept_lambda": 102,
                "num_values_explored": 263,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.44379010901320726,
            "num_unique_values": 382,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.87373737373737,
                "explored_percent_lambda": 19.82323232323232,
                "explored_percent_none": 5.303030303030303,
                "kept_percent_concrete": 71.46666666666667,
                "kept_percent_lambda": 28.533333333333335,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 157,
                "num_explored_none": 42,
                "num_inputs": 3,
                "num_kept_concrete": 268,
                "num_kept_lambda": 107,
                "num_values_explored": 792,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.58400409994647,
            "num_unique_values": 374,
            "solution": "Max(Min(Add(1, Add(x1, IntDivide(x1, x2))), IntDivide(Square(x1), x2)), Add(x1, 1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 34.283183227521036,
                "explored_percent_lambda": 10.615679905507161,
                "explored_percent_none": 55.1011368669718,
                "kept_percent_concrete": 80.70652173913044,
                "kept_percent_lambda": 19.293478260869566,
                "num_examples": 4,
                "num_explored_concrete": 2322,
                "num_explored_lambda": 719,
                "num_explored_none": 3732,
                "num_inputs": 2,
                "num_kept_concrete": 297,
                "num_kept_lambda": 71,
                "num_values_explored": 6773,
                "num_values_kept": 368,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 15751
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83312711305916,
            "num_unique_values": 941,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.21245023525154,
                "explored_percent_lambda": 23.615635179153095,
                "explored_percent_none": 25.171914585595367,
                "kept_percent_concrete": 54.38034188034188,
                "kept_percent_lambda": 45.61965811965812,
                "num_examples": 5,
                "num_explored_concrete": 2830,
                "num_explored_lambda": 1305,
                "num_explored_none": 1391,
                "num_inputs": 1,
                "num_kept_concrete": 509,
                "num_kept_lambda": 427,
                "num_values_explored": 5526,
                "num_values_kept": 936,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57665
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35490420006681234,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.861759425493716,
                "explored_percent_lambda": 24.416517055655298,
                "explored_percent_none": 14.721723518850988,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 339,
                "num_explored_lambda": 136,
                "num_explored_none": 82,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 557,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79078803898301,
            "num_unique_values": 972,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.62402088772846,
                "explored_percent_lambda": 22.402088772845953,
                "explored_percent_none": 29.973890339425587,
                "kept_percent_concrete": 53.25749741468459,
                "kept_percent_lambda": 46.74250258531541,
                "num_examples": 3,
                "num_explored_concrete": 2736,
                "num_explored_lambda": 1287,
                "num_explored_none": 1722,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 452,
                "num_values_explored": 5745,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58819
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18937109294347465,
            "num_unique_values": 144,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 44.11764705882353,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 18.38235294117647,
                "kept_percent_concrete": 37.68115942028985,
                "kept_percent_lambda": 62.31884057971015,
                "num_examples": 4,
                "num_explored_concrete": 120,
                "num_explored_lambda": 102,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 86,
                "num_values_explored": 272,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 67.49113967001904,
            "num_unique_values": 1026,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.794960155072154,
                "explored_percent_lambda": 15.033383588197287,
                "explored_percent_none": 21.17165625673056,
                "kept_percent_concrete": 77.13444553483808,
                "kept_percent_lambda": 22.865554465161924,
                "num_examples": 5,
                "num_explored_concrete": 2962,
                "num_explored_lambda": 698,
                "num_explored_none": 983,
                "num_inputs": 3,
                "num_kept_concrete": 786,
                "num_kept_lambda": 233,
                "num_values_explored": 4643,
                "num_values_kept": 1019,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 47347
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.250448071048595,
            "num_unique_values": 222,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 60.91954022988506,
                "explored_percent_lambda": 31.03448275862069,
                "explored_percent_none": 8.045977011494253,
                "kept_percent_concrete": 56.48148148148148,
                "kept_percent_lambda": 43.51851851851852,
                "num_examples": 5,
                "num_explored_concrete": 265,
                "num_explored_lambda": 135,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 122,
                "num_kept_lambda": 94,
                "num_values_explored": 435,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47650867607445,
            "num_unique_values": 413,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.97414512093411,
                "explored_percent_lambda": 16.246872393661384,
                "explored_percent_none": 54.778982485404505,
                "kept_percent_concrete": 60.93366093366093,
                "kept_percent_lambda": 39.06633906633907,
                "num_examples": 5,
                "num_explored_concrete": 1737,
                "num_explored_lambda": 974,
                "num_explored_none": 3284,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 159,
                "num_values_explored": 5995,
                "num_values_kept": 407,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62538
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.40434289898258,
            "num_unique_values": 692,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Map((lambda u1: ((lambda v1: IntDivide(((lambda v1: IntDivide(v1, x1)))(v1), x1)))(u1)), x2))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 42.64513312963771,
                "explored_percent_lambda": 29.65953731994762,
                "explored_percent_none": 27.695329550414666,
                "kept_percent_concrete": 36.44314868804665,
                "kept_percent_lambda": 63.55685131195335,
                "num_examples": 2,
                "num_explored_concrete": 1954,
                "num_explored_lambda": 1359,
                "num_explored_none": 1269,
                "num_inputs": 2,
                "num_kept_concrete": 250,
                "num_kept_lambda": 436,
                "num_values_explored": 4582,
                "num_values_kept": 686,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49984563002363,
            "num_unique_values": 369,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.496915695681974,
                "explored_percent_lambda": 23.13228238519534,
                "explored_percent_none": 51.370801919122684,
                "kept_percent_concrete": 45.604395604395606,
                "kept_percent_lambda": 54.395604395604394,
                "num_examples": 4,
                "num_explored_concrete": 1488,
                "num_explored_lambda": 1350,
                "num_explored_none": 2998,
                "num_inputs": 1,
                "num_kept_concrete": 166,
                "num_kept_lambda": 198,
                "num_values_explored": 5836,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58691
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93804407201242,
            "num_unique_values": 1130,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.232668901040746,
                "explored_percent_lambda": 27.712118539424942,
                "explored_percent_none": 23.055212559534308,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 4,
                "num_explored_concrete": 2791,
                "num_explored_lambda": 1571,
                "num_explored_none": 1307,
                "num_inputs": 2,
                "num_kept_concrete": 562,
                "num_kept_lambda": 562,
                "num_values_explored": 5669,
                "num_values_kept": 1124,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59465
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75412652106024,
            "num_unique_values": 1011,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.81843616551318,
                "explored_percent_lambda": 16.580768664408776,
                "explored_percent_none": 20.600795170078044,
                "kept_percent_concrete": 62.62425447316103,
                "kept_percent_lambda": 37.37574552683897,
                "num_examples": 3,
                "num_explored_concrete": 4266,
                "num_explored_lambda": 1126,
                "num_explored_none": 1399,
                "num_inputs": 1,
                "num_kept_concrete": 630,
                "num_kept_lambda": 376,
                "num_values_explored": 6791,
                "num_values_kept": 1006,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68242
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31115807208698243,
            "num_unique_values": 218,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.84782608695652,
                "explored_percent_lambda": 39.492753623188406,
                "explored_percent_none": 18.659420289855074,
                "kept_percent_concrete": 35.37735849056604,
                "kept_percent_lambda": 64.62264150943396,
                "num_examples": 2,
                "num_explored_concrete": 231,
                "num_explored_lambda": 218,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 75,
                "num_kept_lambda": 137,
                "num_values_explored": 552,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5761514659971,
            "num_unique_values": 369,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.093264248704664,
                "explored_percent_lambda": 22.677029360967186,
                "explored_percent_none": 53.229706390328154,
                "kept_percent_concrete": 45.604395604395606,
                "kept_percent_lambda": 54.395604395604394,
                "num_examples": 4,
                "num_explored_concrete": 1395,
                "num_explored_lambda": 1313,
                "num_explored_none": 3082,
                "num_inputs": 1,
                "num_kept_concrete": 166,
                "num_kept_lambda": 198,
                "num_values_explored": 5790,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59919
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73190886992961,
            "num_unique_values": 976,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.72537223642654,
                "explored_percent_lambda": 11.655888103474206,
                "explored_percent_none": 14.618739660099264,
                "kept_percent_concrete": 73.6082474226804,
                "kept_percent_lambda": 26.391752577319586,
                "num_examples": 2,
                "num_explored_concrete": 4902,
                "num_explored_lambda": 775,
                "num_explored_none": 972,
                "num_inputs": 2,
                "num_kept_concrete": 714,
                "num_kept_lambda": 256,
                "num_values_explored": 6649,
                "num_values_kept": 970,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68947
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74691723601427,
            "num_unique_values": 1317,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.05738960858058,
                "explored_percent_lambda": 9.541718902354088,
                "explored_percent_none": 18.40089148906533,
                "kept_percent_concrete": 81.23569794050343,
                "kept_percent_lambda": 18.76430205949657,
                "num_examples": 5,
                "num_explored_concrete": 5173,
                "num_explored_lambda": 685,
                "num_explored_none": 1321,
                "num_inputs": 2,
                "num_kept_concrete": 1065,
                "num_kept_lambda": 246,
                "num_values_explored": 7179,
                "num_values_kept": 1311,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73638
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74289365799632,
            "num_unique_values": 980,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.762002743484224,
                "explored_percent_lambda": 22.599451303155007,
                "explored_percent_none": 18.63854595336077,
                "kept_percent_concrete": 59.58974358974359,
                "kept_percent_lambda": 40.41025641025641,
                "num_examples": 3,
                "num_explored_concrete": 3427,
                "num_explored_lambda": 1318,
                "num_explored_none": 1087,
                "num_inputs": 1,
                "num_kept_concrete": 581,
                "num_kept_lambda": 394,
                "num_values_explored": 5832,
                "num_values_kept": 975,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60591
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98748935596086,
            "num_unique_values": 1474,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.21166977032898,
                "explored_percent_lambda": 14.30788330229671,
                "explored_percent_none": 16.480446927374302,
                "kept_percent_concrete": 76.08991825613079,
                "kept_percent_lambda": 23.91008174386921,
                "num_examples": 5,
                "num_explored_concrete": 4460,
                "num_explored_lambda": 922,
                "num_explored_none": 1062,
                "num_inputs": 2,
                "num_kept_concrete": 1117,
                "num_kept_lambda": 351,
                "num_values_explored": 6444,
                "num_values_kept": 1468,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65772
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.00284603505861,
            "num_unique_values": 1021,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.11805686311429,
                "explored_percent_lambda": 28.544530220297496,
                "explored_percent_none": 28.337412916588214,
                "kept_percent_concrete": 46.35826771653543,
                "kept_percent_lambda": 53.64173228346457,
                "num_examples": 2,
                "num_explored_concrete": 2290,
                "num_explored_lambda": 1516,
                "num_explored_none": 1505,
                "num_inputs": 1,
                "num_kept_concrete": 471,
                "num_kept_lambda": 545,
                "num_values_explored": 5311,
                "num_values_kept": 1016,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55926
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71067848301027,
            "num_unique_values": 1065,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.34988363072149,
                "explored_percent_lambda": 13.622963537626067,
                "explored_percent_none": 25.027152831652444,
                "kept_percent_concrete": 67.95841209829868,
                "kept_percent_lambda": 32.04158790170133,
                "num_examples": 4,
                "num_explored_concrete": 3954,
                "num_explored_lambda": 878,
                "num_explored_none": 1613,
                "num_inputs": 3,
                "num_kept_concrete": 719,
                "num_kept_lambda": 339,
                "num_values_explored": 6445,
                "num_values_kept": 1058,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67025
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61096029402688,
            "num_unique_values": 543,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.78257394084732,
                "explored_percent_lambda": 39.26858513189448,
                "explored_percent_none": 38.948840927258196,
                "kept_percent_concrete": 15.055762081784387,
                "kept_percent_lambda": 84.94423791821562,
                "num_examples": 2,
                "num_explored_concrete": 1090,
                "num_explored_lambda": 1965,
                "num_explored_none": 1949,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 457,
                "num_values_explored": 5004,
                "num_values_kept": 538,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51148
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84994094597641,
            "num_unique_values": 1456,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.89392179636081,
                "explored_percent_lambda": 8.94308943089431,
                "explored_percent_none": 13.162988772744871,
                "kept_percent_concrete": 84.26501035196688,
                "kept_percent_lambda": 15.734989648033126,
                "num_examples": 4,
                "num_explored_concrete": 6036,
                "num_explored_lambda": 693,
                "num_explored_none": 1020,
                "num_inputs": 3,
                "num_kept_concrete": 1221,
                "num_kept_lambda": 228,
                "num_values_explored": 7749,
                "num_values_kept": 1449,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 78043
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95586568501312,
            "num_unique_values": 948,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.089079934150355,
                "explored_percent_lambda": 33.839400036583136,
                "explored_percent_none": 27.07152002926651,
                "kept_percent_concrete": 44.114528101802755,
                "kept_percent_lambda": 55.885471898197245,
                "num_examples": 3,
                "num_explored_concrete": 2137,
                "num_explored_lambda": 1850,
                "num_explored_none": 1480,
                "num_inputs": 1,
                "num_kept_concrete": 416,
                "num_kept_lambda": 527,
                "num_values_explored": 5467,
                "num_values_kept": 943,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55486
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67962124897167,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.923696937130575,
                "explored_percent_lambda": 24.00143292136844,
                "explored_percent_none": 54.07487014150099,
                "kept_percent_concrete": 42.465753424657535,
                "kept_percent_lambda": 57.534246575342465,
                "num_examples": 4,
                "num_explored_concrete": 1224,
                "num_explored_lambda": 1340,
                "num_explored_none": 3019,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 210,
                "num_values_explored": 5583,
                "num_values_kept": 365,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57067
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.218321975087747,
            "num_unique_values": 1045,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(1, 1))), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 50.368305793350586,
                "explored_percent_lambda": 27.25462870794346,
                "explored_percent_none": 22.377065498705953,
                "kept_percent_concrete": 47.98076923076923,
                "kept_percent_lambda": 52.01923076923077,
                "num_examples": 2,
                "num_explored_concrete": 2530,
                "num_explored_lambda": 1369,
                "num_explored_none": 1124,
                "num_inputs": 1,
                "num_kept_concrete": 499,
                "num_kept_lambda": 541,
                "num_values_explored": 5023,
                "num_values_kept": 1040,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 18015
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.707281969022,
            "num_unique_values": 1056,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.49930342713849,
                "explored_percent_lambda": 12.217887991083867,
                "explored_percent_none": 15.282808581777655,
                "kept_percent_concrete": 74.35653002859867,
                "kept_percent_lambda": 25.643469971401334,
                "num_examples": 5,
                "num_explored_concrete": 5204,
                "num_explored_lambda": 877,
                "num_explored_none": 1097,
                "num_inputs": 3,
                "num_kept_concrete": 780,
                "num_kept_lambda": 269,
                "num_values_explored": 7178,
                "num_values_kept": 1049,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73131
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2560005000559613,
            "num_unique_values": 195,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.273972602739725,
                "explored_percent_lambda": 31.050228310502284,
                "explored_percent_none": 8.67579908675799,
                "kept_percent_concrete": 41.7989417989418,
                "kept_percent_lambda": 58.2010582010582,
                "num_examples": 2,
                "num_explored_concrete": 264,
                "num_explored_lambda": 136,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 110,
                "num_values_explored": 438,
                "num_values_kept": 189,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 438
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.12940416298807,
            "num_unique_values": 379,
            "solution": "Map((lambda u1: ((lambda v1: Subtract(Add(1, 1), ((lambda v1: Square(v1)))(v1))))(u1)), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 21.971252566735114,
                "explored_percent_lambda": 37.097878165639976,
                "explored_percent_none": 40.930869267624914,
                "kept_percent_concrete": 27.005347593582886,
                "kept_percent_lambda": 72.99465240641712,
                "num_examples": 3,
                "num_explored_concrete": 642,
                "num_explored_lambda": 1084,
                "num_explored_none": 1196,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 273,
                "num_values_explored": 2922,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 20457
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62720875092782,
            "num_unique_values": 1441,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.57597758247357,
                "explored_percent_lambda": 4.470768055024838,
                "explored_percent_none": 16.953254362501593,
                "kept_percent_concrete": 90.5857740585774,
                "kept_percent_lambda": 9.414225941422593,
                "num_examples": 5,
                "num_explored_concrete": 6169,
                "num_explored_lambda": 351,
                "num_explored_none": 1331,
                "num_inputs": 3,
                "num_kept_concrete": 1299,
                "num_kept_lambda": 135,
                "num_values_explored": 7851,
                "num_values_kept": 1434,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79252
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.803888055961579,
            "num_unique_values": 697,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.8299841950779,
                "explored_percent_lambda": 16.7080605102732,
                "explored_percent_none": 26.461955294648906,
                "kept_percent_concrete": 70.57971014492753,
                "kept_percent_lambda": 29.420289855072465,
                "num_examples": 4,
                "num_explored_concrete": 2517,
                "num_explored_lambda": 740,
                "num_explored_none": 1172,
                "num_inputs": 3,
                "num_kept_concrete": 487,
                "num_kept_lambda": 203,
                "num_values_explored": 4429,
                "num_values_kept": 690,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5829
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76105456391815,
            "num_unique_values": 1116,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.282051282051285,
                "explored_percent_lambda": 25.641025641025642,
                "explored_percent_none": 15.076923076923077,
                "kept_percent_concrete": 52.475247524752476,
                "kept_percent_lambda": 47.524752475247524,
                "num_examples": 2,
                "num_explored_concrete": 3468,
                "num_explored_lambda": 1500,
                "num_explored_none": 882,
                "num_inputs": 1,
                "num_kept_concrete": 583,
                "num_kept_lambda": 528,
                "num_values_explored": 5850,
                "num_values_kept": 1111,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60317
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52875932201277,
            "num_unique_values": 898,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.58590133580215,
                "explored_percent_lambda": 11.030286999074196,
                "explored_percent_none": 18.383811665123662,
                "kept_percent_concrete": 78.25112107623319,
                "kept_percent_lambda": 21.748878923766817,
                "num_examples": 3,
                "num_explored_concrete": 5337,
                "num_explored_lambda": 834,
                "num_explored_none": 1390,
                "num_inputs": 2,
                "num_kept_concrete": 698,
                "num_kept_lambda": 194,
                "num_values_explored": 7561,
                "num_values_kept": 892,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77952
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.37774860602804,
            "num_unique_values": 332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.081697854860796,
                "explored_percent_lambda": 13.585881636999847,
                "explored_percent_none": 55.33242050813936,
                "kept_percent_concrete": 69.93865030674847,
                "kept_percent_lambda": 30.061349693251532,
                "num_examples": 4,
                "num_explored_concrete": 2043,
                "num_explored_lambda": 893,
                "num_explored_none": 3637,
                "num_inputs": 2,
                "num_kept_concrete": 228,
                "num_kept_lambda": 98,
                "num_values_explored": 6573,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67454
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74543138197623,
            "num_unique_values": 1214,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.65652467883706,
                "explored_percent_lambda": 11.142663962136579,
                "explored_percent_none": 17.200811359026368,
                "kept_percent_concrete": 80.3970223325062,
                "kept_percent_lambda": 19.602977667493796,
                "num_examples": 5,
                "num_explored_concrete": 5299,
                "num_explored_lambda": 824,
                "num_explored_none": 1272,
                "num_inputs": 1,
                "num_kept_concrete": 972,
                "num_kept_lambda": 237,
                "num_values_explored": 7395,
                "num_values_kept": 1209,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73037
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62961461802479,
            "num_unique_values": 827,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.76620905260296,
                "explored_percent_lambda": 10.833220062525486,
                "explored_percent_none": 29.400570884871552,
                "kept_percent_concrete": 80.38976857490864,
                "kept_percent_lambda": 19.610231425091353,
                "num_examples": 4,
                "num_explored_concrete": 4397,
                "num_explored_lambda": 797,
                "num_explored_none": 2163,
                "num_inputs": 2,
                "num_kept_concrete": 660,
                "num_kept_lambda": 161,
                "num_values_explored": 7357,
                "num_values_kept": 821,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74402
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4582098069368,
            "num_unique_values": 343,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.480541455160743,
                "explored_percent_lambda": 19.001692047377325,
                "explored_percent_none": 54.51776649746193,
                "kept_percent_concrete": 60.35502958579882,
                "kept_percent_lambda": 39.64497041420118,
                "num_examples": 3,
                "num_explored_concrete": 1565,
                "num_explored_lambda": 1123,
                "num_explored_none": 3222,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 134,
                "num_values_explored": 5910,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60947
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66376326302998,
            "num_unique_values": 867,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.04753416518122,
                "explored_percent_lambda": 16.473559120617946,
                "explored_percent_none": 18.478906714200832,
                "kept_percent_concrete": 65.96980255516841,
                "kept_percent_lambda": 34.03019744483159,
                "num_examples": 3,
                "num_explored_concrete": 4379,
                "num_explored_lambda": 1109,
                "num_explored_none": 1244,
                "num_inputs": 2,
                "num_kept_concrete": 568,
                "num_kept_lambda": 293,
                "num_values_explored": 6732,
                "num_values_kept": 861,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67973
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08871788601391,
            "num_unique_values": 1061,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.9167254763585,
                "explored_percent_lambda": 24.576570218772055,
                "explored_percent_none": 21.50670430486944,
                "kept_percent_concrete": 53.503787878787875,
                "kept_percent_lambda": 46.496212121212125,
                "num_examples": 5,
                "num_explored_concrete": 3056,
                "num_explored_lambda": 1393,
                "num_explored_none": 1219,
                "num_inputs": 1,
                "num_kept_concrete": 565,
                "num_kept_lambda": 491,
                "num_values_explored": 5668,
                "num_values_kept": 1056,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58969
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76739773596637,
            "num_unique_values": 1071,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.9993502274204,
                "explored_percent_lambda": 13.710201429499675,
                "explored_percent_none": 27.290448343079923,
                "kept_percent_concrete": 74.39024390243902,
                "kept_percent_lambda": 25.609756097560975,
                "num_examples": 5,
                "num_explored_concrete": 3632,
                "num_explored_lambda": 844,
                "num_explored_none": 1680,
                "num_inputs": 1,
                "num_kept_concrete": 793,
                "num_kept_lambda": 273,
                "num_values_explored": 6156,
                "num_values_kept": 1066,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63741
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7155264079338,
            "num_unique_values": 671,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.62667129710019,
                "explored_percent_lambda": 22.24344504254211,
                "explored_percent_none": 28.129883660357702,
                "kept_percent_concrete": 46.6966966966967,
                "kept_percent_lambda": 53.3033033033033,
                "num_examples": 2,
                "num_explored_concrete": 2858,
                "num_explored_lambda": 1281,
                "num_explored_none": 1620,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 355,
                "num_values_explored": 5759,
                "num_values_kept": 666,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59536
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86190706992056,
            "num_unique_values": 994,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.046553590761455,
                "explored_percent_lambda": 19.307109346806207,
                "explored_percent_none": 29.646337062432334,
                "kept_percent_concrete": 57.836198179979775,
                "kept_percent_lambda": 42.163801820020225,
                "num_examples": 4,
                "num_explored_concrete": 2829,
                "num_explored_lambda": 1070,
                "num_explored_none": 1643,
                "num_inputs": 1,
                "num_kept_concrete": 572,
                "num_kept_lambda": 417,
                "num_values_explored": 5542,
                "num_values_kept": 989,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56988
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65621393593028,
            "num_unique_values": 598,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.49800796812749,
                "explored_percent_lambda": 36.00335500104844,
                "explored_percent_none": 38.49863703082407,
                "kept_percent_concrete": 19.05564924114671,
                "kept_percent_lambda": 80.94435075885329,
                "num_examples": 2,
                "num_explored_concrete": 1216,
                "num_explored_lambda": 1717,
                "num_explored_none": 1836,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 480,
                "num_values_explored": 4769,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49102
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79718029906508,
            "num_unique_values": 774,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.11788372560853,
                "explored_percent_lambda": 37.41701870850935,
                "explored_percent_none": 28.465097565882115,
                "kept_percent_concrete": 20.806241872561767,
                "kept_percent_lambda": 79.19375812743823,
                "num_examples": 2,
                "num_explored_concrete": 1696,
                "num_explored_lambda": 1860,
                "num_explored_none": 1415,
                "num_inputs": 1,
                "num_kept_concrete": 160,
                "num_kept_lambda": 609,
                "num_values_explored": 4971,
                "num_values_kept": 769,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51198
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.44094979204237,
            "num_unique_values": 352,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.256478999106346,
                "explored_percent_lambda": 24.343163538873995,
                "explored_percent_none": 48.40035746201966,
                "kept_percent_concrete": 40.05763688760807,
                "kept_percent_lambda": 59.94236311239193,
                "num_examples": 2,
                "num_explored_concrete": 1525,
                "num_explored_lambda": 1362,
                "num_explored_none": 2708,
                "num_inputs": 1,
                "num_kept_concrete": 139,
                "num_kept_lambda": 208,
                "num_values_explored": 5595,
                "num_values_kept": 347,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56761
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51080905809067,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.12177985948478,
                "explored_percent_lambda": 24.968474148802017,
                "explored_percent_none": 50.9097459917132,
                "kept_percent_concrete": 41.891891891891895,
                "kept_percent_lambda": 58.108108108108105,
                "num_examples": 2,
                "num_explored_concrete": 1339,
                "num_explored_lambda": 1386,
                "num_explored_none": 2826,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 215,
                "num_values_explored": 5551,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56512
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64503827295266,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.07101727447217,
                "explored_percent_lambda": 30.115163147792707,
                "explored_percent_none": 46.813819577735124,
                "kept_percent_concrete": 30.183727034120736,
                "kept_percent_lambda": 69.81627296587926,
                "num_examples": 2,
                "num_explored_concrete": 1202,
                "num_explored_lambda": 1569,
                "num_explored_none": 2439,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 266,
                "num_values_explored": 5210,
                "num_values_kept": 381,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53120
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46435736794956,
            "num_unique_values": 396,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.967423494570582,
                "explored_percent_lambda": 32.04343534057256,
                "explored_percent_none": 46.98914116485686,
                "kept_percent_concrete": 30.0,
                "kept_percent_lambda": 70.0,
                "num_examples": 2,
                "num_explored_concrete": 1062,
                "num_explored_lambda": 1623,
                "num_explored_none": 2380,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 273,
                "num_values_explored": 5065,
                "num_values_kept": 390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52835
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47144620807376,
            "num_unique_values": 393,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.623762376237625,
                "explored_percent_lambda": 34.79207920792079,
                "explored_percent_none": 45.584158415841586,
                "kept_percent_concrete": 26.356589147286822,
                "kept_percent_lambda": 73.64341085271317,
                "num_examples": 2,
                "num_explored_concrete": 991,
                "num_explored_lambda": 1757,
                "num_explored_none": 2302,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 285,
                "num_values_explored": 5050,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52103
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46749533899128,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.870211549456833,
                "explored_percent_lambda": 31.065370688012198,
                "explored_percent_none": 46.06441776253097,
                "kept_percent_concrete": 29.25531914893617,
                "kept_percent_lambda": 70.74468085106383,
                "num_examples": 2,
                "num_explored_concrete": 1200,
                "num_explored_lambda": 1630,
                "num_explored_none": 2417,
                "num_inputs": 2,
                "num_kept_concrete": 110,
                "num_kept_lambda": 266,
                "num_values_explored": 5247,
                "num_values_kept": 376,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53463
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66112461895682,
            "num_unique_values": 552,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.847540662355478,
                "explored_percent_lambda": 36.096413874191654,
                "explored_percent_none": 38.05604546345287,
                "kept_percent_concrete": 25.411334552102378,
                "kept_percent_lambda": 74.58866544789763,
                "num_examples": 2,
                "num_explored_concrete": 1319,
                "num_explored_lambda": 1842,
                "num_explored_none": 1942,
                "num_inputs": 1,
                "num_kept_concrete": 139,
                "num_kept_lambda": 408,
                "num_values_explored": 5103,
                "num_values_kept": 547,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52118
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55915990599897,
            "num_unique_values": 366,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.549912434325744,
                "explored_percent_lambda": 24.46584938704028,
                "explored_percent_none": 48.98423817863397,
                "kept_percent_concrete": 37.119113573407205,
                "kept_percent_lambda": 62.880886426592795,
                "num_examples": 3,
                "num_explored_concrete": 1516,
                "num_explored_lambda": 1397,
                "num_explored_none": 2797,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 227,
                "num_values_explored": 5710,
                "num_values_kept": 361,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57574
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.53
}