{
    "num_tasks": 100,
    "num_tasks_solved": 52,
    "results": [
        {
            "elapsed_time": 0.6296061789616942,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.80168776371308,
                "explored_percent_lambda": 48.9451476793249,
                "explored_percent_none": 20.253164556962027,
                "kept_percent_concrete": 23.076923076923077,
                "kept_percent_lambda": 76.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 73,
                "num_explored_lambda": 116,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 90,
                "num_values_explored": 237,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.183939317939803,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.285714285714285,
                "explored_percent_lambda": 38.92857142857143,
                "explored_percent_none": 16.785714285714285,
                "kept_percent_concrete": 45.67901234567901,
                "kept_percent_lambda": 54.32098765432099,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 109,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11369784292764962,
            "num_unique_values": 106,
            "solution": "Access(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 50.0,
                "explored_percent_none": 16.27906976744186,
                "kept_percent_concrete": 24.752475247524753,
                "kept_percent_lambda": 75.24752475247524,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 86,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 76,
                "num_values_explored": 172,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1309406259097159,
            "num_unique_values": 113,
            "solution": "Drop(Square(Add(1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 68.51851851851852,
                "explored_percent_none": 9.25925925925926,
                "kept_percent_concrete": 15.74074074074074,
                "kept_percent_lambda": 84.25925925925925,
                "num_examples": 5,
                "num_explored_concrete": 36,
                "num_explored_lambda": 111,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 91,
                "num_values_explored": 162,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12768870894797146,
            "num_unique_values": 65,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.88741721854305,
                "explored_percent_lambda": 19.205298013245034,
                "explored_percent_none": 13.907284768211921,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 101,
                "num_explored_lambda": 29,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 23,
                "num_values_explored": 151,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1291562089463696,
            "num_unique_values": 113,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 13.08411214953271,
                "kept_percent_lambda": 86.91588785046729,
                "num_examples": 4,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 93,
                "num_values_explored": 161,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13009808689821512,
            "num_unique_values": 114,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 15.596330275229358,
                "kept_percent_lambda": 84.40366972477064,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 92,
                "num_values_explored": 161,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13131717103533447,
            "num_unique_values": 116,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.47239263803681,
                "explored_percent_lambda": 66.87116564417178,
                "explored_percent_none": 11.656441717791411,
                "kept_percent_concrete": 13.513513513513514,
                "kept_percent_lambda": 86.48648648648648,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 109,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 96,
                "num_values_explored": 163,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3235846880124882,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 50.72202166064982,
                "explored_percent_lambda": 35.55956678700361,
                "explored_percent_none": 13.71841155234657,
                "kept_percent_concrete": 44.140625,
                "kept_percent_lambda": 55.859375,
                "num_examples": 4,
                "num_explored_concrete": 281,
                "num_explored_lambda": 197,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 143,
                "num_values_explored": 554,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 554
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07494070299435407,
            "num_unique_values": 84,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.34502923976608,
                "explored_percent_lambda": 12.865497076023392,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 79.48717948717949,
                "kept_percent_lambda": 20.512820512820515,
                "num_examples": 5,
                "num_explored_concrete": 122,
                "num_explored_lambda": 22,
                "num_explored_none": 27,
                "num_inputs": 2,
                "num_kept_concrete": 62,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 78,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20284173893742263,
            "num_unique_values": 165,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.00636942675159,
                "explored_percent_lambda": 23.248407643312103,
                "explored_percent_none": 19.745222929936304,
                "kept_percent_concrete": 63.522012578616355,
                "kept_percent_lambda": 36.477987421383645,
                "num_examples": 4,
                "num_explored_concrete": 179,
                "num_explored_lambda": 73,
                "num_explored_none": 62,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 58,
                "num_values_explored": 314,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 314
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1434606909751892,
            "num_unique_values": 74,
            "solution": "Max(x1, Square(Square(Add(1, 1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.16129032258065,
                "explored_percent_lambda": 18.7683284457478,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 49.27536231884058,
                "kept_percent_lambda": 50.72463768115942,
                "num_examples": 2,
                "num_explored_concrete": 154,
                "num_explored_lambda": 64,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15803228900767863,
            "num_unique_values": 170,
            "solution": "Multiply(Minimum(x1), Square(Add(1, 1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.88925081433225,
                "explored_percent_lambda": 27.68729641693811,
                "explored_percent_none": 10.423452768729641,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 190,
                "num_explored_lambda": 85,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 66,
                "num_values_explored": 307,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 307
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.172501118038781,
            "num_unique_values": 178,
            "solution": "IntDivide(Square(Add(1, 1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.03514376996805,
                "explored_percent_lambda": 34.185303514377,
                "explored_percent_none": 12.779552715654953,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 2,
                "num_explored_concrete": 166,
                "num_explored_lambda": 107,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 83,
                "num_values_explored": 313,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19447598897386342,
            "num_unique_values": 192,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.142857142857146,
                "explored_percent_lambda": 41.07142857142857,
                "explored_percent_none": 11.785714285714286,
                "kept_percent_concrete": 46.774193548387096,
                "kept_percent_lambda": 53.225806451612904,
                "num_examples": 5,
                "num_explored_concrete": 132,
                "num_explored_lambda": 115,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 99,
                "num_values_explored": 280,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23975383199285716,
            "num_unique_values": 203,
            "solution": "Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u1)), x1, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.49301397205589,
                "explored_percent_lambda": 30.93812375249501,
                "explored_percent_none": 15.568862275449101,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 3,
                "num_explored_concrete": 268,
                "num_explored_lambda": 155,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 99,
                "num_values_explored": 501,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2561923359753564,
            "num_unique_values": 196,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.544117647058826,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 113,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 102,
                "num_values_explored": 272,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28814906592015177,
            "num_unique_values": 213,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.56380510440835,
                "explored_percent_lambda": 41.29930394431555,
                "explored_percent_none": 11.136890951276103,
                "kept_percent_concrete": 36.53846153846154,
                "kept_percent_lambda": 63.46153846153846,
                "num_examples": 3,
                "num_explored_concrete": 205,
                "num_explored_lambda": 178,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 132,
                "num_values_explored": 431,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1441341619938612,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.44343891402715,
                "explored_percent_lambda": 22.171945701357465,
                "explored_percent_none": 15.384615384615385,
                "kept_percent_concrete": 65.11627906976744,
                "kept_percent_lambda": 34.883720930232556,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 49,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 45,
                "num_values_explored": 221,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21465972298756242,
            "num_unique_values": 177,
            "solution": "Take(Sum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.2691415313225,
                "explored_percent_lambda": 28.53828306264501,
                "explored_percent_none": 7.192575406032483,
                "kept_percent_concrete": 43.27485380116959,
                "kept_percent_lambda": 56.72514619883041,
                "num_examples": 2,
                "num_explored_concrete": 277,
                "num_explored_lambda": 123,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 97,
                "num_values_explored": 431,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28686407301574945,
            "num_unique_values": 243,
            "solution": "Take(Head(x1), Reverse(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.97911832946636,
                "explored_percent_lambda": 48.25986078886311,
                "explored_percent_none": 12.761020881670534,
                "kept_percent_concrete": 29.957805907172997,
                "kept_percent_lambda": 70.042194092827,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 208,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 166,
                "num_values_explored": 431,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3248375919647515,
            "num_unique_values": 337,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 71.05643994211287,
                "explored_percent_lambda": 21.1287988422576,
                "explored_percent_none": 7.814761215629522,
                "kept_percent_concrete": 67.37160120845921,
                "kept_percent_lambda": 32.62839879154078,
                "num_examples": 4,
                "num_explored_concrete": 491,
                "num_explored_lambda": 146,
                "num_explored_none": 54,
                "num_inputs": 2,
                "num_kept_concrete": 223,
                "num_kept_lambda": 108,
                "num_values_explored": 691,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.697235513012856,
            "num_unique_values": 977,
            "solution": "IntDivide(Square(Square(Add(1, 1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 70.19950124688279,
                "explored_percent_lambda": 14.731029568934806,
                "explored_percent_none": 15.0694691841824,
                "kept_percent_concrete": 74.17695473251028,
                "kept_percent_lambda": 25.82304526748971,
                "num_examples": 5,
                "num_explored_concrete": 3941,
                "num_explored_lambda": 827,
                "num_explored_none": 846,
                "num_inputs": 1,
                "num_kept_concrete": 721,
                "num_kept_lambda": 251,
                "num_values_explored": 5614,
                "num_values_kept": 972,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 20779
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33091098302975297,
            "num_unique_values": 327,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.22182468694096,
                "explored_percent_lambda": 26.833631484794275,
                "explored_percent_none": 8.94454382826476,
                "kept_percent_concrete": 64.797507788162,
                "kept_percent_lambda": 35.202492211838006,
                "num_examples": 5,
                "num_explored_concrete": 359,
                "num_explored_lambda": 150,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 113,
                "num_values_explored": 559,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15152402501553297,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98194945848375,
                "explored_percent_lambda": 26.71480144404332,
                "explored_percent_none": 8.303249097472925,
                "kept_percent_concrete": 61.267605633802816,
                "kept_percent_lambda": 38.732394366197184,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 74,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 55,
                "num_values_explored": 277,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07569413294550031,
            "num_unique_values": 80,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 74.53416149068323,
                "explored_percent_lambda": 17.391304347826086,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 71.23287671232876,
                "kept_percent_lambda": 28.767123287671232,
                "num_examples": 2,
                "num_explored_concrete": 120,
                "num_explored_lambda": 28,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 52,
                "num_kept_lambda": 21,
                "num_values_explored": 161,
                "num_values_kept": 73,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.7009301849175245,
            "num_unique_values": 791,
            "solution": "Multiply(-1, Subtract(Last(x1), Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 52.97770251199548,
                "explored_percent_lambda": 16.257408975444537,
                "explored_percent_none": 30.764888512559978,
                "kept_percent_concrete": 77.45222929936305,
                "kept_percent_lambda": 22.547770700636942,
                "num_examples": 5,
                "num_explored_concrete": 1877,
                "num_explored_lambda": 576,
                "num_explored_none": 1090,
                "num_inputs": 2,
                "num_kept_concrete": 608,
                "num_kept_lambda": 177,
                "num_values_explored": 3543,
                "num_values_kept": 785,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4943
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46230833500158,
            "num_unique_values": 426,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.57587064676617,
                "explored_percent_lambda": 13.930348258706468,
                "explored_percent_none": 57.493781094527364,
                "kept_percent_concrete": 71.25890736342043,
                "kept_percent_lambda": 28.741092636579573,
                "num_examples": 5,
                "num_explored_concrete": 1838,
                "num_explored_lambda": 896,
                "num_explored_none": 3698,
                "num_inputs": 1,
                "num_kept_concrete": 300,
                "num_kept_lambda": 121,
                "num_values_explored": 6432,
                "num_values_kept": 421,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64149
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18663921498227865,
            "num_unique_values": 176,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 40.66390041493776,
                "explored_percent_lambda": 52.697095435684645,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 36.25730994152047,
                "kept_percent_lambda": 63.74269005847953,
                "num_examples": 3,
                "num_explored_concrete": 98,
                "num_explored_lambda": 127,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 109,
                "num_values_explored": 241,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.23489228496328,
            "num_unique_values": 553,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 58.170310701956275,
                "explored_percent_lambda": 11.737629459148447,
                "explored_percent_none": 30.09205983889528,
                "kept_percent_concrete": 83.18098720292505,
                "kept_percent_lambda": 16.819012797074954,
                "num_examples": 5,
                "num_explored_concrete": 1011,
                "num_explored_lambda": 204,
                "num_explored_none": 523,
                "num_inputs": 2,
                "num_kept_concrete": 455,
                "num_kept_lambda": 92,
                "num_values_explored": 1738,
                "num_values_kept": 547,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3418
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.30750003294087946,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Multiply(-1, Last(x1)))))(u1)), Scanl1((lambda u1, u2: -1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.5875486381323,
                "explored_percent_lambda": 34.24124513618677,
                "explored_percent_none": 8.171206225680933,
                "kept_percent_concrete": 51.07142857142857,
                "kept_percent_lambda": 48.92857142857143,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 176,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 143,
                "num_kept_lambda": 137,
                "num_values_explored": 514,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.35684756306,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.783223374175307,
                "explored_percent_lambda": 19.022934338674208,
                "explored_percent_none": 51.19384228715049,
                "kept_percent_concrete": 62.5,
                "kept_percent_lambda": 37.5,
                "num_examples": 2,
                "num_explored_concrete": 1896,
                "num_explored_lambda": 1211,
                "num_explored_none": 3259,
                "num_inputs": 1,
                "num_kept_concrete": 210,
                "num_kept_lambda": 126,
                "num_values_explored": 6366,
                "num_values_kept": 336,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66526
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17341656901407987,
            "num_unique_values": 142,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.5735294117647,
                "explored_percent_lambda": 36.029411764705884,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 5,
                "num_explored_concrete": 143,
                "num_explored_lambda": 98,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2627008140552789,
            "num_unique_values": 316,
            "solution": "Square(Minimum(Scanl1((lambda u1, u2: Last(x2)), x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 73.21131447587355,
                "explored_percent_lambda": 16.306156405990016,
                "explored_percent_none": 10.482529118136439,
                "kept_percent_concrete": 73.2258064516129,
                "kept_percent_lambda": 26.774193548387096,
                "num_examples": 3,
                "num_explored_concrete": 440,
                "num_explored_lambda": 98,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 83,
                "num_values_explored": 601,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84610350301955,
            "num_unique_values": 1162,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.79528838342811,
                "explored_percent_lambda": 29.861900893582455,
                "explored_percent_none": 18.34281072298944,
                "kept_percent_concrete": 42.61019878997407,
                "kept_percent_lambda": 57.38980121002593,
                "num_examples": 2,
                "num_explored_concrete": 3188,
                "num_explored_lambda": 1838,
                "num_explored_none": 1129,
                "num_inputs": 1,
                "num_kept_concrete": 493,
                "num_kept_lambda": 664,
                "num_values_explored": 6155,
                "num_values_kept": 1157,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61449
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7955297209555283,
            "num_unique_values": 240,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 16.750756811301716,
                "explored_percent_lambda": 47.426841574167504,
                "explored_percent_none": 35.822401614530776,
                "kept_percent_concrete": 28.085106382978722,
                "kept_percent_lambda": 71.91489361702128,
                "num_examples": 4,
                "num_explored_concrete": 166,
                "num_explored_lambda": 470,
                "num_explored_none": 355,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 169,
                "num_values_explored": 991,
                "num_values_kept": 235,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2671
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37644098000600934,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(Sum(x1), ((lambda v1: Max(x2, v1)))(v1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.88747731397459,
                "explored_percent_lambda": 30.127041742286753,
                "explored_percent_none": 7.985480943738657,
                "kept_percent_concrete": 54.435483870967744,
                "kept_percent_lambda": 45.564516129032256,
                "num_examples": 5,
                "num_explored_concrete": 341,
                "num_explored_lambda": 166,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 113,
                "num_values_explored": 551,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.36911202198826,
            "num_unique_values": 637,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.0415982484948,
                "explored_percent_lambda": 10.440613026819923,
                "explored_percent_none": 27.517788724685275,
                "kept_percent_concrete": 80.47619047619048,
                "kept_percent_lambda": 19.523809523809526,
                "num_examples": 2,
                "num_explored_concrete": 4534,
                "num_explored_lambda": 763,
                "num_explored_none": 2011,
                "num_inputs": 3,
                "num_kept_concrete": 507,
                "num_kept_lambda": 123,
                "num_values_explored": 7308,
                "num_values_kept": 630,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79717
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96608161600307,
            "num_unique_values": 1127,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.80265095729013,
                "explored_percent_lambda": 30.007363770250368,
                "explored_percent_none": 24.1899852724595,
                "kept_percent_concrete": 41.97860962566845,
                "kept_percent_lambda": 58.02139037433155,
                "num_examples": 2,
                "num_explored_concrete": 2488,
                "num_explored_lambda": 1630,
                "num_explored_none": 1314,
                "num_inputs": 1,
                "num_kept_concrete": 471,
                "num_kept_lambda": 651,
                "num_values_explored": 5432,
                "num_values_kept": 1122,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89565107796807,
            "num_unique_values": 1102,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.50258204231218,
                "explored_percent_lambda": 21.87239713476595,
                "explored_percent_none": 16.625020822921872,
                "kept_percent_concrete": 52.233363719234276,
                "kept_percent_lambda": 47.766636280765724,
                "num_examples": 2,
                "num_explored_concrete": 3692,
                "num_explored_lambda": 1313,
                "num_explored_none": 998,
                "num_inputs": 1,
                "num_kept_concrete": 573,
                "num_kept_lambda": 524,
                "num_values_explored": 6003,
                "num_values_kept": 1097,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62549
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.06951828300953,
            "num_unique_values": 342,
            "solution": "Add(Subtract(x1, x2), Square(IntDivide(Square(Add(1, 1)), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 30.887035633055344,
                "explored_percent_lambda": 14.632297194844579,
                "explored_percent_none": 54.48066717210008,
                "kept_percent_concrete": 67.85714285714286,
                "kept_percent_lambda": 32.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 2037,
                "num_explored_lambda": 965,
                "num_explored_none": 3593,
                "num_inputs": 2,
                "num_kept_concrete": 228,
                "num_kept_lambda": 108,
                "num_values_explored": 6595,
                "num_values_kept": 336,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 8275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60628078295849,
            "num_unique_values": 641,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.9721059972106,
                "explored_percent_lambda": 25.592747559274756,
                "explored_percent_none": 39.43514644351465,
                "kept_percent_concrete": 44.56692913385827,
                "kept_percent_lambda": 55.43307086614173,
                "num_examples": 4,
                "num_explored_concrete": 2006,
                "num_explored_lambda": 1468,
                "num_explored_none": 2262,
                "num_inputs": 2,
                "num_kept_concrete": 283,
                "num_kept_lambda": 352,
                "num_values_explored": 5736,
                "num_values_kept": 635,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58539
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4016442970605567,
            "num_unique_values": 313,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Access(1, x1))), Map((lambda u1: Add(-1, Head(x1))), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.5,
                "explored_percent_lambda": 21.547619047619047,
                "explored_percent_none": 10.952380952380953,
                "kept_percent_concrete": 61.56351791530945,
                "kept_percent_lambda": 38.43648208469055,
                "num_examples": 3,
                "num_explored_concrete": 567,
                "num_explored_lambda": 181,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 189,
                "num_kept_lambda": 118,
                "num_values_explored": 840,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.18940290203318,
            "num_unique_values": 872,
            "solution": "Multiply(Add(1, 1), Add(Head(x1), Square(Square(Add(1, 1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 56.29029839556156,
                "explored_percent_lambda": 16.374269005847953,
                "explored_percent_none": 27.335432598590494,
                "kept_percent_concrete": 65.16724336793541,
                "kept_percent_lambda": 34.83275663206459,
                "num_examples": 4,
                "num_explored_concrete": 3754,
                "num_explored_lambda": 1092,
                "num_explored_none": 1823,
                "num_inputs": 1,
                "num_kept_concrete": 565,
                "num_kept_lambda": 302,
                "num_values_explored": 6669,
                "num_values_kept": 867,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 35429
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47236900497228,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.579203109815353,
                "explored_percent_lambda": 21.817298347910594,
                "explored_percent_none": 51.60349854227405,
                "kept_percent_concrete": 45.62841530054645,
                "kept_percent_lambda": 54.37158469945355,
                "num_examples": 5,
                "num_explored_concrete": 1641,
                "num_explored_lambda": 1347,
                "num_explored_none": 3186,
                "num_inputs": 1,
                "num_kept_concrete": 167,
                "num_kept_lambda": 199,
                "num_values_explored": 6174,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63362
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24107014609035105,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.65900383141762,
                "explored_percent_lambda": 40.99616858237548,
                "explored_percent_none": 10.344827586206897,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 127,
                "num_explored_lambda": 107,
                "num_explored_none": 27,
                "num_inputs": 3,
                "num_kept_concrete": 66,
                "num_kept_lambda": 88,
                "num_values_explored": 261,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.30897996609565,
            "num_unique_values": 187,
            "solution": "Min(If(IsOdd(x1), x2, Subtract(x1, x2)), IntDivide(x1, Square(Add(1, 1))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 24.605998983223184,
                "explored_percent_lambda": 14.74326385358414,
                "explored_percent_none": 60.65073716319268,
                "kept_percent_concrete": 66.29834254143647,
                "kept_percent_lambda": 33.70165745856354,
                "num_examples": 2,
                "num_explored_concrete": 484,
                "num_explored_lambda": 290,
                "num_explored_none": 1193,
                "num_inputs": 2,
                "num_kept_concrete": 120,
                "num_kept_lambda": 61,
                "num_values_explored": 1967,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 23691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19402400392573327,
            "num_unique_values": 170,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.72623574144487,
                "explored_percent_lambda": 44.866920152091254,
                "explored_percent_none": 11.406844106463879,
                "kept_percent_concrete": 37.423312883435585,
                "kept_percent_lambda": 62.576687116564415,
                "num_examples": 4,
                "num_explored_concrete": 115,
                "num_explored_lambda": 118,
                "num_explored_none": 30,
                "num_inputs": 3,
                "num_kept_concrete": 61,
                "num_kept_lambda": 102,
                "num_values_explored": 263,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3934001890011132,
            "num_unique_values": 382,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.87373737373737,
                "explored_percent_lambda": 19.82323232323232,
                "explored_percent_none": 5.303030303030303,
                "kept_percent_concrete": 71.46666666666667,
                "kept_percent_lambda": 28.533333333333335,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 157,
                "num_explored_none": 42,
                "num_inputs": 3,
                "num_kept_concrete": 268,
                "num_kept_lambda": 107,
                "num_values_explored": 792,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47284616599791,
            "num_unique_values": 408,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.07795698924731,
                "explored_percent_lambda": 10.887096774193548,
                "explored_percent_none": 51.034946236559136,
                "kept_percent_concrete": 78.60696517412936,
                "kept_percent_lambda": 21.393034825870647,
                "num_examples": 4,
                "num_explored_concrete": 2833,
                "num_explored_lambda": 810,
                "num_explored_none": 3797,
                "num_inputs": 2,
                "num_kept_concrete": 316,
                "num_kept_lambda": 86,
                "num_values_explored": 7440,
                "num_values_kept": 402,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74654
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84244041400962,
            "num_unique_values": 958,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.82819383259912,
                "explored_percent_lambda": 22.889867841409693,
                "explored_percent_none": 24.281938325991188,
                "kept_percent_concrete": 55.50891920251836,
                "kept_percent_lambda": 44.49108079748164,
                "num_examples": 5,
                "num_explored_concrete": 2998,
                "num_explored_lambda": 1299,
                "num_explored_none": 1378,
                "num_inputs": 1,
                "num_kept_concrete": 529,
                "num_kept_lambda": 424,
                "num_values_explored": 5675,
                "num_values_kept": 953,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58407
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3106514780083671,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.861759425493716,
                "explored_percent_lambda": 24.416517055655298,
                "explored_percent_none": 14.721723518850988,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 339,
                "num_explored_lambda": 136,
                "num_explored_none": 82,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 557,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75741213897709,
            "num_unique_values": 908,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.59619184479971,
                "explored_percent_lambda": 25.11226872642357,
                "explored_percent_none": 31.29153942877672,
                "kept_percent_concrete": 51.05204872646733,
                "kept_percent_lambda": 48.94795127353267,
                "num_examples": 3,
                "num_explored_concrete": 2427,
                "num_explored_lambda": 1398,
                "num_explored_none": 1742,
                "num_inputs": 1,
                "num_kept_concrete": 461,
                "num_kept_lambda": 442,
                "num_values_explored": 5567,
                "num_values_kept": 903,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59420
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1907459539361298,
            "num_unique_values": 144,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 44.11764705882353,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 18.38235294117647,
                "kept_percent_concrete": 37.68115942028985,
                "kept_percent_lambda": 62.31884057971015,
                "num_examples": 4,
                "num_explored_concrete": 120,
                "num_explored_lambda": 102,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 86,
                "num_values_explored": 272,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.42955181200523,
            "num_unique_values": 535,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 51.44009216589862,
                "explored_percent_lambda": 25.63364055299539,
                "explored_percent_none": 22.92626728110599,
                "kept_percent_concrete": 72.72727272727273,
                "kept_percent_lambda": 27.272727272727273,
                "num_examples": 5,
                "num_explored_concrete": 893,
                "num_explored_lambda": 445,
                "num_explored_none": 398,
                "num_inputs": 3,
                "num_kept_concrete": 384,
                "num_kept_lambda": 144,
                "num_values_explored": 1736,
                "num_values_kept": 528,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 38723
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24525556003209203,
            "num_unique_values": 222,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 60.91954022988506,
                "explored_percent_lambda": 31.03448275862069,
                "explored_percent_none": 8.045977011494253,
                "kept_percent_concrete": 56.48148148148148,
                "kept_percent_lambda": 43.51851851851852,
                "num_examples": 5,
                "num_explored_concrete": 265,
                "num_explored_lambda": 135,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 122,
                "num_kept_lambda": 94,
                "num_values_explored": 435,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47899063804653,
            "num_unique_values": 433,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.024092354023757,
                "explored_percent_lambda": 17.667726284089007,
                "explored_percent_none": 54.308181361887236,
                "kept_percent_concrete": 58.07962529274005,
                "kept_percent_lambda": 41.92037470725995,
                "num_examples": 5,
                "num_explored_concrete": 1675,
                "num_explored_lambda": 1056,
                "num_explored_none": 3246,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 179,
                "num_values_explored": 5977,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62761
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90193361591082,
            "num_unique_values": 845,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.26470588235294,
                "explored_percent_lambda": 30.330882352941178,
                "explored_percent_none": 25.404411764705884,
                "kept_percent_concrete": 31.108462455303933,
                "kept_percent_lambda": 68.89153754469606,
                "num_examples": 2,
                "num_explored_concrete": 2408,
                "num_explored_lambda": 1650,
                "num_explored_none": 1382,
                "num_inputs": 2,
                "num_kept_concrete": 261,
                "num_kept_lambda": 578,
                "num_values_explored": 5440,
                "num_values_kept": 839,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55667
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51107219606638,
            "num_unique_values": 369,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.73875083948959,
                "explored_percent_lambda": 22.56548018804567,
                "explored_percent_none": 51.69576897246474,
                "kept_percent_concrete": 45.32967032967033,
                "kept_percent_lambda": 54.67032967032967,
                "num_examples": 4,
                "num_explored_concrete": 1533,
                "num_explored_lambda": 1344,
                "num_explored_none": 3079,
                "num_inputs": 1,
                "num_kept_concrete": 165,
                "num_kept_lambda": 199,
                "num_values_explored": 5956,
                "num_values_kept": 364,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60712
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.19214229309,
            "num_unique_values": 1132,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.487031700288185,
                "explored_percent_lambda": 28.314121037463977,
                "explored_percent_none": 23.19884726224784,
                "kept_percent_concrete": 49.644760213143876,
                "kept_percent_lambda": 50.355239786856124,
                "num_examples": 4,
                "num_explored_concrete": 2692,
                "num_explored_lambda": 1572,
                "num_explored_none": 1288,
                "num_inputs": 2,
                "num_kept_concrete": 559,
                "num_kept_lambda": 567,
                "num_values_explored": 5552,
                "num_values_kept": 1126,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58135
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79710004292428,
            "num_unique_values": 1032,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.816782140107776,
                "explored_percent_lambda": 16.058506543494996,
                "explored_percent_none": 22.124711316397228,
                "kept_percent_concrete": 62.0253164556962,
                "kept_percent_lambda": 37.9746835443038,
                "num_examples": 3,
                "num_explored_concrete": 4015,
                "num_explored_lambda": 1043,
                "num_explored_none": 1437,
                "num_inputs": 1,
                "num_kept_concrete": 637,
                "num_kept_lambda": 390,
                "num_values_explored": 6495,
                "num_values_kept": 1027,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67737
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33164309803396463,
            "num_unique_values": 218,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.84782608695652,
                "explored_percent_lambda": 39.492753623188406,
                "explored_percent_none": 18.659420289855074,
                "kept_percent_concrete": 35.37735849056604,
                "kept_percent_lambda": 64.62264150943396,
                "num_examples": 2,
                "num_explored_concrete": 231,
                "num_explored_lambda": 218,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 75,
                "num_kept_lambda": 137,
                "num_values_explored": 552,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58606869901996,
            "num_unique_values": 374,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.284971398855955,
                "explored_percent_lambda": 24.648985959438377,
                "explored_percent_none": 51.06604264170567,
                "kept_percent_concrete": 43.90243902439025,
                "kept_percent_lambda": 56.09756097560975,
                "num_examples": 4,
                "num_explored_concrete": 1401,
                "num_explored_lambda": 1422,
                "num_explored_none": 2946,
                "num_inputs": 1,
                "num_kept_concrete": 162,
                "num_kept_lambda": 207,
                "num_values_explored": 5769,
                "num_values_kept": 369,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59917
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.91243354906328,
            "num_unique_values": 991,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.9258889047551,
                "explored_percent_lambda": 11.780665429101813,
                "explored_percent_none": 15.293445666143082,
                "kept_percent_concrete": 73.09644670050761,
                "kept_percent_lambda": 26.903553299492387,
                "num_examples": 2,
                "num_explored_concrete": 5107,
                "num_explored_lambda": 825,
                "num_explored_none": 1071,
                "num_inputs": 2,
                "num_kept_concrete": 720,
                "num_kept_lambda": 265,
                "num_values_explored": 7003,
                "num_values_kept": 985,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70543
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8038015209604,
            "num_unique_values": 1326,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.99453551912568,
                "explored_percent_lambda": 9.53551912568306,
                "explored_percent_none": 18.469945355191257,
                "kept_percent_concrete": 81.66666666666667,
                "kept_percent_lambda": 18.333333333333332,
                "num_examples": 5,
                "num_explored_concrete": 5270,
                "num_explored_lambda": 698,
                "num_explored_none": 1352,
                "num_inputs": 2,
                "num_kept_concrete": 1078,
                "num_kept_lambda": 242,
                "num_values_explored": 7320,
                "num_values_kept": 1320,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74171
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.000355039024726,
            "num_unique_values": 767,
            "solution": "Scanl1((lambda u1, u2: Subtract(-1, Add(1, 1))), Map((lambda u1: Sum(Take(-1, Scanl1((lambda u1, u2: -1), Sort(x1))))), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 52.40302512808002,
                "explored_percent_lambda": 24.64015613564284,
                "explored_percent_none": 22.956818736277143,
                "kept_percent_concrete": 56.43044619422572,
                "kept_percent_lambda": 43.56955380577428,
                "num_examples": 3,
                "num_explored_concrete": 2148,
                "num_explored_lambda": 1010,
                "num_explored_none": 941,
                "num_inputs": 1,
                "num_kept_concrete": 430,
                "num_kept_lambda": 332,
                "num_values_explored": 4099,
                "num_values_kept": 762,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 35603
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 28.52735125995241,
            "num_unique_values": 1301,
            "solution": "Map((lambda u1: Max(Max(Multiply(Add(1, 1), Access(1, x2)), Square(Minimum(x1))), Count((lambda u1: ((lambda v1: Greater(v1, -1)))(u1)), x2))), x1)",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 68.29656131981713,
                "explored_percent_lambda": 15.106340687736036,
                "explored_percent_none": 16.59709799244683,
                "kept_percent_concrete": 76.75675675675676,
                "kept_percent_lambda": 23.243243243243242,
                "num_examples": 5,
                "num_explored_concrete": 3436,
                "num_explored_lambda": 760,
                "num_explored_none": 835,
                "num_inputs": 2,
                "num_kept_concrete": 994,
                "num_kept_lambda": 301,
                "num_values_explored": 5031,
                "num_values_kept": 1295,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 20103
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0291900819866,
            "num_unique_values": 1071,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.11611416415529,
                "explored_percent_lambda": 28.877858535720616,
                "explored_percent_none": 26.006027300124092,
                "kept_percent_concrete": 45.21575984990619,
                "kept_percent_lambda": 54.78424015009381,
                "num_examples": 2,
                "num_explored_concrete": 2545,
                "num_explored_lambda": 1629,
                "num_explored_none": 1467,
                "num_inputs": 1,
                "num_kept_concrete": 482,
                "num_kept_lambda": 584,
                "num_values_explored": 5641,
                "num_values_kept": 1066,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57872
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7493274708977,
            "num_unique_values": 1107,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.80891719745223,
                "explored_percent_lambda": 13.477127967573827,
                "explored_percent_none": 21.713954834973944,
                "kept_percent_concrete": 67.18181818181819,
                "kept_percent_lambda": 32.81818181818182,
                "num_examples": 4,
                "num_explored_concrete": 4477,
                "num_explored_lambda": 931,
                "num_explored_none": 1500,
                "num_inputs": 3,
                "num_kept_concrete": 739,
                "num_kept_lambda": 361,
                "num_values_explored": 6908,
                "num_values_kept": 1100,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72964
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6073859060416,
            "num_unique_values": 546,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.888496962571036,
                "explored_percent_lambda": 36.62551440329218,
                "explored_percent_none": 40.48598863413678,
                "kept_percent_concrete": 15.711645101663587,
                "kept_percent_lambda": 84.28835489833641,
                "num_examples": 2,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 1869,
                "num_explored_none": 2066,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 456,
                "num_values_explored": 5103,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52865
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8646017810097,
            "num_unique_values": 1359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.17855168601437,
                "explored_percent_lambda": 9.010503040353786,
                "explored_percent_none": 12.810945273631841,
                "kept_percent_concrete": 83.94970414201184,
                "kept_percent_lambda": 16.050295857988164,
                "num_examples": 4,
                "num_explored_concrete": 5657,
                "num_explored_lambda": 652,
                "num_explored_none": 927,
                "num_inputs": 3,
                "num_kept_concrete": 1135,
                "num_kept_lambda": 217,
                "num_values_explored": 7236,
                "num_values_kept": 1352,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79334
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.92160555103328,
            "num_unique_values": 1061,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.294620591378695,
                "explored_percent_lambda": 33.042394014962596,
                "explored_percent_none": 27.662985393658712,
                "kept_percent_concrete": 43.75,
                "kept_percent_lambda": 56.25,
                "num_examples": 3,
                "num_explored_concrete": 2206,
                "num_explored_lambda": 1855,
                "num_explored_none": 1553,
                "num_inputs": 1,
                "num_kept_concrete": 462,
                "num_kept_lambda": 594,
                "num_values_explored": 5614,
                "num_values_kept": 1056,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56795
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65947382396553,
            "num_unique_values": 374,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.19954489760196,
                "explored_percent_lambda": 26.640994223700332,
                "explored_percent_none": 53.15946087869771,
                "kept_percent_concrete": 38.75338753387534,
                "kept_percent_lambda": 61.24661246612466,
                "num_examples": 4,
                "num_explored_concrete": 1154,
                "num_explored_lambda": 1522,
                "num_explored_none": 3037,
                "num_inputs": 1,
                "num_kept_concrete": 143,
                "num_kept_lambda": 226,
                "num_values_explored": 5713,
                "num_values_kept": 369,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59538
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.825028110062703,
            "num_unique_values": 1039,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(1, 1))), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 48.93574297188755,
                "explored_percent_lambda": 28.373493975903614,
                "explored_percent_none": 22.690763052208837,
                "kept_percent_concrete": 48.06576402321083,
                "kept_percent_lambda": 51.93423597678917,
                "num_examples": 2,
                "num_explored_concrete": 2437,
                "num_explored_lambda": 1413,
                "num_explored_none": 1130,
                "num_inputs": 1,
                "num_kept_concrete": 497,
                "num_kept_lambda": 537,
                "num_values_explored": 4980,
                "num_values_kept": 1034,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12855
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.08520640898496,
            "num_unique_values": 1070,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), ZipWith((lambda u1, u2: ((lambda v1: Subtract(v1, Sum(x2))))(u2)), x3, x2))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 71.43461104847802,
                "explored_percent_lambda": 12.485907553551296,
                "explored_percent_none": 16.07948139797069,
                "kept_percent_concrete": 72.81279397930386,
                "kept_percent_lambda": 27.18720602069614,
                "num_examples": 5,
                "num_explored_concrete": 5069,
                "num_explored_lambda": 886,
                "num_explored_none": 1141,
                "num_inputs": 3,
                "num_kept_concrete": 774,
                "num_kept_lambda": 289,
                "num_values_explored": 7096,
                "num_values_kept": 1063,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 37943
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24162154307123274,
            "num_unique_values": 195,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.273972602739725,
                "explored_percent_lambda": 31.050228310502284,
                "explored_percent_none": 8.67579908675799,
                "kept_percent_concrete": 41.7989417989418,
                "kept_percent_lambda": 58.2010582010582,
                "num_examples": 2,
                "num_explored_concrete": 264,
                "num_explored_lambda": 136,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 110,
                "num_values_explored": 438,
                "num_values_kept": 189,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 438
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60544512199704,
            "num_unique_values": 529,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.340724716062738,
                "explored_percent_lambda": 30.412835767081305,
                "explored_percent_none": 39.24643951685596,
                "kept_percent_concrete": 36.06870229007634,
                "kept_percent_lambda": 63.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 1683,
                "num_explored_lambda": 1687,
                "num_explored_none": 2177,
                "num_inputs": 1,
                "num_kept_concrete": 189,
                "num_kept_lambda": 335,
                "num_values_explored": 5547,
                "num_values_kept": 524,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57419
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6246279940242,
            "num_unique_values": 1402,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.31585518102372,
                "explored_percent_lambda": 5.0062421972534334,
                "explored_percent_none": 17.677902621722847,
                "kept_percent_concrete": 89.03225806451613,
                "kept_percent_lambda": 10.96774193548387,
                "num_examples": 5,
                "num_explored_concrete": 6193,
                "num_explored_lambda": 401,
                "num_explored_none": 1416,
                "num_inputs": 3,
                "num_kept_concrete": 1242,
                "num_kept_lambda": 153,
                "num_values_explored": 8010,
                "num_values_kept": 1395,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 81522
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.379356827004813,
            "num_unique_values": 481,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 47.0211161387632,
                "explored_percent_lambda": 23.114630467571644,
                "explored_percent_none": 29.86425339366516,
                "kept_percent_concrete": 65.61181434599156,
                "kept_percent_lambda": 34.38818565400844,
                "num_examples": 4,
                "num_explored_concrete": 1247,
                "num_explored_lambda": 613,
                "num_explored_none": 792,
                "num_inputs": 3,
                "num_kept_concrete": 311,
                "num_kept_lambda": 163,
                "num_values_explored": 2652,
                "num_values_kept": 474,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4052
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73796297900844,
            "num_unique_values": 1148,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.31293817718292,
                "explored_percent_lambda": 24.02804333970682,
                "explored_percent_none": 14.65901848311026,
                "kept_percent_concrete": 55.46806649168854,
                "kept_percent_lambda": 44.53193350831146,
                "num_examples": 2,
                "num_explored_concrete": 3848,
                "num_explored_lambda": 1508,
                "num_explored_none": 920,
                "num_inputs": 1,
                "num_kept_concrete": 634,
                "num_kept_lambda": 509,
                "num_values_explored": 6276,
                "num_values_kept": 1143,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64213
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51111722900532,
            "num_unique_values": 943,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.92473639558841,
                "explored_percent_lambda": 9.792752393649254,
                "explored_percent_none": 19.282511210762333,
                "kept_percent_concrete": 79.08217716115261,
                "kept_percent_lambda": 20.917822838847385,
                "num_examples": 3,
                "num_explored_concrete": 5852,
                "num_explored_lambda": 808,
                "num_explored_none": 1591,
                "num_inputs": 2,
                "num_kept_concrete": 741,
                "num_kept_lambda": 196,
                "num_values_explored": 8251,
                "num_values_kept": 937,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 83293
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.35240382398479,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.202188940092164,
                "explored_percent_lambda": 12.932027649769585,
                "explored_percent_none": 52.86578341013825,
                "kept_percent_concrete": 72.55936675461741,
                "kept_percent_lambda": 27.440633245382585,
                "num_examples": 4,
                "num_explored_concrete": 2375,
                "num_explored_lambda": 898,
                "num_explored_none": 3671,
                "num_inputs": 2,
                "num_kept_concrete": 275,
                "num_kept_lambda": 104,
                "num_values_explored": 6944,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70014
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74797453195788,
            "num_unique_values": 1214,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.80301826846704,
                "explored_percent_lambda": 11.305268731797723,
                "explored_percent_none": 16.89171299973524,
                "kept_percent_concrete": 79.23904052936311,
                "kept_percent_lambda": 20.76095947063689,
                "num_examples": 5,
                "num_explored_concrete": 5424,
                "num_explored_lambda": 854,
                "num_explored_none": 1276,
                "num_inputs": 1,
                "num_kept_concrete": 958,
                "num_kept_lambda": 251,
                "num_values_explored": 7554,
                "num_values_kept": 1209,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75861
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61221410904545,
            "num_unique_values": 828,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.63146889702039,
                "explored_percent_lambda": 11.552535284892839,
                "explored_percent_none": 28.815995818086776,
                "kept_percent_concrete": 79.31873479318735,
                "kept_percent_lambda": 20.68126520681265,
                "num_examples": 4,
                "num_explored_concrete": 4563,
                "num_explored_lambda": 884,
                "num_explored_none": 2205,
                "num_inputs": 2,
                "num_kept_concrete": 652,
                "num_kept_lambda": 170,
                "num_values_explored": 7652,
                "num_values_kept": 822,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77795
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45283833704889,
            "num_unique_values": 339,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.4204074871625,
                "explored_percent_lambda": 19.28109988404837,
                "explored_percent_none": 54.298492628789134,
                "kept_percent_concrete": 58.68263473053892,
                "kept_percent_lambda": 41.31736526946108,
                "num_examples": 3,
                "num_explored_concrete": 1595,
                "num_explored_lambda": 1164,
                "num_explored_none": 3278,
                "num_inputs": 1,
                "num_kept_concrete": 196,
                "num_kept_lambda": 138,
                "num_values_explored": 6037,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62630
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64779860491399,
            "num_unique_values": 964,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.8377186535352,
                "explored_percent_lambda": 15.081581655152139,
                "explored_percent_none": 17.080699691312656,
                "kept_percent_concrete": 65.34446764091858,
                "kept_percent_lambda": 34.65553235908142,
                "num_examples": 3,
                "num_explored_concrete": 4615,
                "num_explored_lambda": 1026,
                "num_explored_none": 1162,
                "num_inputs": 2,
                "num_kept_concrete": 626,
                "num_kept_lambda": 332,
                "num_values_explored": 6803,
                "num_values_kept": 958,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69590
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08286148798652,
            "num_unique_values": 1093,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.33410826967785,
                "explored_percent_lambda": 25.37363002324809,
                "explored_percent_none": 20.29226170707406,
                "kept_percent_concrete": 52.38970588235294,
                "kept_percent_lambda": 47.61029411764706,
                "num_examples": 5,
                "num_explored_concrete": 3272,
                "num_explored_lambda": 1528,
                "num_explored_none": 1222,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 518,
                "num_values_explored": 6022,
                "num_values_kept": 1088,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61455
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77323175501078,
            "num_unique_values": 1148,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.015838732901365,
                "explored_percent_lambda": 12.037437005039596,
                "explored_percent_none": 25.946724262059035,
                "kept_percent_concrete": 75.15310586176727,
                "kept_percent_lambda": 24.84689413823272,
                "num_examples": 5,
                "num_explored_concrete": 4307,
                "num_explored_lambda": 836,
                "num_explored_none": 1802,
                "num_inputs": 1,
                "num_kept_concrete": 859,
                "num_kept_lambda": 284,
                "num_values_explored": 6945,
                "num_values_kept": 1143,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68663
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67288607091177,
            "num_unique_values": 662,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.758825470141865,
                "explored_percent_lambda": 22.962718574727813,
                "explored_percent_none": 26.27845595513032,
                "kept_percent_concrete": 47.945205479452056,
                "kept_percent_lambda": 52.054794520547944,
                "num_examples": 2,
                "num_explored_concrete": 3077,
                "num_explored_lambda": 1392,
                "num_explored_none": 1593,
                "num_inputs": 1,
                "num_kept_concrete": 315,
                "num_kept_lambda": 342,
                "num_values_explored": 6062,
                "num_values_kept": 657,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61671
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85649720800575,
            "num_unique_values": 1008,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.53089643167972,
                "explored_percent_lambda": 18.36379460400348,
                "explored_percent_none": 31.105308964316798,
                "kept_percent_concrete": 58.0259222333001,
                "kept_percent_lambda": 41.9740777666999,
                "num_examples": 4,
                "num_explored_concrete": 2903,
                "num_explored_lambda": 1055,
                "num_explored_none": 1787,
                "num_inputs": 1,
                "num_kept_concrete": 582,
                "num_kept_lambda": 421,
                "num_values_explored": 5745,
                "num_values_kept": 1003,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59289
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62011219596025,
            "num_unique_values": 571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.0300360432519,
                "explored_percent_lambda": 35.92310772927513,
                "explored_percent_none": 39.046856227472965,
                "kept_percent_concrete": 18.374558303886925,
                "kept_percent_lambda": 81.62544169611307,
                "num_examples": 2,
                "num_explored_concrete": 1250,
                "num_explored_lambda": 1794,
                "num_explored_none": 1950,
                "num_inputs": 1,
                "num_kept_concrete": 104,
                "num_kept_lambda": 462,
                "num_values_explored": 4994,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50641
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84354657994118,
            "num_unique_values": 777,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.262052877138416,
                "explored_percent_lambda": 36.66407465007776,
                "explored_percent_none": 30.073872472783826,
                "kept_percent_concrete": 19.818652849740932,
                "kept_percent_lambda": 80.18134715025907,
                "num_examples": 2,
                "num_explored_concrete": 1711,
                "num_explored_lambda": 1886,
                "num_explored_none": 1547,
                "num_inputs": 1,
                "num_kept_concrete": 153,
                "num_kept_lambda": 619,
                "num_values_explored": 5144,
                "num_values_kept": 772,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53434
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.42138519394211,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.351397121083828,
                "explored_percent_lambda": 25.06350550381033,
                "explored_percent_none": 49.58509737510584,
                "kept_percent_concrete": 34.69945355191257,
                "kept_percent_lambda": 65.30054644808743,
                "num_examples": 2,
                "num_explored_concrete": 1497,
                "num_explored_lambda": 1480,
                "num_explored_none": 2928,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 239,
                "num_values_explored": 5905,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60682
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48668902902864,
            "num_unique_values": 386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.544878563885955,
                "explored_percent_lambda": 26.381555790214712,
                "explored_percent_none": 51.07356564589933,
                "kept_percent_concrete": 39.63254593175853,
                "kept_percent_lambda": 60.36745406824147,
                "num_examples": 2,
                "num_explored_concrete": 1281,
                "num_explored_lambda": 1499,
                "num_explored_none": 2902,
                "num_inputs": 1,
                "num_kept_concrete": 151,
                "num_kept_lambda": 230,
                "num_values_explored": 5682,
                "num_values_kept": 381,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59388
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60377567796968,
            "num_unique_values": 381,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.246786166938257,
                "explored_percent_lambda": 32.500452652543906,
                "explored_percent_none": 48.25276118051784,
                "kept_percent_concrete": 27.2,
                "kept_percent_lambda": 72.8,
                "num_examples": 2,
                "num_explored_concrete": 1063,
                "num_explored_lambda": 1795,
                "num_explored_none": 2665,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 273,
                "num_values_explored": 5523,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56618
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46059213404078,
            "num_unique_values": 396,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.791853579759554,
                "explored_percent_lambda": 34.03911717207967,
                "explored_percent_none": 46.169029248160776,
                "kept_percent_concrete": 27.94871794871795,
                "kept_percent_lambda": 72.05128205128206,
                "num_examples": 2,
                "num_explored_concrete": 1103,
                "num_explored_lambda": 1897,
                "num_explored_none": 2573,
                "num_inputs": 2,
                "num_kept_concrete": 109,
                "num_kept_lambda": 281,
                "num_values_explored": 5573,
                "num_values_kept": 390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56167
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.44471892109141,
            "num_unique_values": 395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.950709484690066,
                "explored_percent_lambda": 34.69006721433906,
                "explored_percent_none": 46.359223300970875,
                "kept_percent_concrete": 26.73521850899743,
                "kept_percent_lambda": 73.26478149100257,
                "num_examples": 2,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 1858,
                "num_explored_none": 2483,
                "num_inputs": 2,
                "num_kept_concrete": 104,
                "num_kept_lambda": 285,
                "num_values_explored": 5356,
                "num_values_kept": 389,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55431
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45049686904531,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.01801801801802,
                "explored_percent_lambda": 30.55855855855856,
                "explored_percent_none": 47.42342342342342,
                "kept_percent_concrete": 29.551451187335093,
                "kept_percent_lambda": 70.44854881266491,
                "num_examples": 2,
                "num_explored_concrete": 1222,
                "num_explored_lambda": 1696,
                "num_explored_none": 2632,
                "num_inputs": 2,
                "num_kept_concrete": 112,
                "num_kept_lambda": 267,
                "num_values_explored": 5550,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57075
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68537074199412,
            "num_unique_values": 571,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.35905156191193,
                "explored_percent_lambda": 33.70342491531803,
                "explored_percent_none": 37.93752352277004,
                "kept_percent_concrete": 22.43816254416961,
                "kept_percent_lambda": 77.56183745583039,
                "num_examples": 2,
                "num_explored_concrete": 1507,
                "num_explored_lambda": 1791,
                "num_explored_none": 2016,
                "num_inputs": 1,
                "num_kept_concrete": 127,
                "num_kept_lambda": 439,
                "num_values_explored": 5314,
                "num_values_kept": 566,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54120
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50369529891759,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.849762066621345,
                "explored_percent_lambda": 25.76478585995921,
                "explored_percent_none": 48.385452073419444,
                "kept_percent_concrete": 37.15846994535519,
                "kept_percent_lambda": 62.84153005464481,
                "num_examples": 3,
                "num_explored_concrete": 1521,
                "num_explored_lambda": 1516,
                "num_explored_none": 2847,
                "num_inputs": 1,
                "num_kept_concrete": 136,
                "num_kept_lambda": 230,
                "num_values_explored": 5884,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59841
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.52
}