{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.5717856360133737,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.80168776371308,
                "explored_percent_lambda": 48.9451476793249,
                "explored_percent_none": 20.253164556962027,
                "kept_percent_concrete": 23.076923076923077,
                "kept_percent_lambda": 76.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 73,
                "num_explored_lambda": 116,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 90,
                "num_values_explored": 237,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18136363697703928,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.285714285714285,
                "explored_percent_lambda": 38.92857142857143,
                "explored_percent_none": 16.785714285714285,
                "kept_percent_concrete": 45.67901234567901,
                "kept_percent_lambda": 54.32098765432099,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 109,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1172457990469411,
            "num_unique_values": 106,
            "solution": "Access(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 50.0,
                "explored_percent_none": 16.27906976744186,
                "kept_percent_concrete": 24.752475247524753,
                "kept_percent_lambda": 75.24752475247524,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 86,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 76,
                "num_values_explored": 172,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13084845000412315,
            "num_unique_values": 113,
            "solution": "Drop(Square(Add(1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 68.51851851851852,
                "explored_percent_none": 9.25925925925926,
                "kept_percent_concrete": 15.74074074074074,
                "kept_percent_lambda": 84.25925925925925,
                "num_examples": 5,
                "num_explored_concrete": 36,
                "num_explored_lambda": 111,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 91,
                "num_values_explored": 162,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14230033999774605,
            "num_unique_values": 65,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.88741721854305,
                "explored_percent_lambda": 19.205298013245034,
                "explored_percent_none": 13.907284768211921,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 101,
                "num_explored_lambda": 29,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 23,
                "num_values_explored": 151,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12892565596848726,
            "num_unique_values": 113,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 13.08411214953271,
                "kept_percent_lambda": 86.91588785046729,
                "num_examples": 4,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 93,
                "num_values_explored": 161,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12601787701714784,
            "num_unique_values": 114,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 15.596330275229358,
                "kept_percent_lambda": 84.40366972477064,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 92,
                "num_values_explored": 161,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13525473792105913,
            "num_unique_values": 116,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.47239263803681,
                "explored_percent_lambda": 66.87116564417178,
                "explored_percent_none": 11.656441717791411,
                "kept_percent_concrete": 13.513513513513514,
                "kept_percent_lambda": 86.48648648648648,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 109,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 96,
                "num_values_explored": 163,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3307882089866325,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 50.72202166064982,
                "explored_percent_lambda": 35.55956678700361,
                "explored_percent_none": 13.71841155234657,
                "kept_percent_concrete": 44.140625,
                "kept_percent_lambda": 55.859375,
                "num_examples": 4,
                "num_explored_concrete": 281,
                "num_explored_lambda": 197,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 143,
                "num_values_explored": 554,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 554
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07508899492677301,
            "num_unique_values": 84,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.34502923976608,
                "explored_percent_lambda": 12.865497076023392,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 79.48717948717949,
                "kept_percent_lambda": 20.512820512820515,
                "num_examples": 5,
                "num_explored_concrete": 122,
                "num_explored_lambda": 22,
                "num_explored_none": 27,
                "num_inputs": 2,
                "num_kept_concrete": 62,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 78,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15590871102176607,
            "num_unique_values": 165,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.00636942675159,
                "explored_percent_lambda": 23.248407643312103,
                "explored_percent_none": 19.745222929936304,
                "kept_percent_concrete": 63.522012578616355,
                "kept_percent_lambda": 36.477987421383645,
                "num_examples": 4,
                "num_explored_concrete": 179,
                "num_explored_lambda": 73,
                "num_explored_none": 62,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 58,
                "num_values_explored": 314,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 314
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12503699003718793,
            "num_unique_values": 74,
            "solution": "Max(x1, Square(Square(Add(1, 1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.16129032258065,
                "explored_percent_lambda": 18.7683284457478,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 49.27536231884058,
                "kept_percent_lambda": 50.72463768115942,
                "num_examples": 2,
                "num_explored_concrete": 154,
                "num_explored_lambda": 64,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20742770400829613,
            "num_unique_values": 170,
            "solution": "Multiply(Minimum(x1), Square(Add(1, 1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.88925081433225,
                "explored_percent_lambda": 27.68729641693811,
                "explored_percent_none": 10.423452768729641,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 190,
                "num_explored_lambda": 85,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 66,
                "num_values_explored": 307,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 307
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1941927489824593,
            "num_unique_values": 178,
            "solution": "IntDivide(Square(Add(1, 1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.03514376996805,
                "explored_percent_lambda": 34.185303514377,
                "explored_percent_none": 12.779552715654953,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 2,
                "num_explored_concrete": 166,
                "num_explored_lambda": 107,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 83,
                "num_values_explored": 313,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19306423503439873,
            "num_unique_values": 192,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.142857142857146,
                "explored_percent_lambda": 41.07142857142857,
                "explored_percent_none": 11.785714285714286,
                "kept_percent_concrete": 46.774193548387096,
                "kept_percent_lambda": 53.225806451612904,
                "num_examples": 5,
                "num_explored_concrete": 132,
                "num_explored_lambda": 115,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 99,
                "num_values_explored": 280,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23689025489147753,
            "num_unique_values": 203,
            "solution": "Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u1)), x1, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.49301397205589,
                "explored_percent_lambda": 30.93812375249501,
                "explored_percent_none": 15.568862275449101,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 3,
                "num_explored_concrete": 268,
                "num_explored_lambda": 155,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 99,
                "num_values_explored": 501,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2691702760057524,
            "num_unique_values": 196,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.544117647058826,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 113,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 102,
                "num_values_explored": 272,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2539279870688915,
            "num_unique_values": 213,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.56380510440835,
                "explored_percent_lambda": 41.29930394431555,
                "explored_percent_none": 11.136890951276103,
                "kept_percent_concrete": 36.53846153846154,
                "kept_percent_lambda": 63.46153846153846,
                "num_examples": 3,
                "num_explored_concrete": 205,
                "num_explored_lambda": 178,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 132,
                "num_values_explored": 431,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10858690890017897,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.44343891402715,
                "explored_percent_lambda": 22.171945701357465,
                "explored_percent_none": 15.384615384615385,
                "kept_percent_concrete": 65.11627906976744,
                "kept_percent_lambda": 34.883720930232556,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 49,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 45,
                "num_values_explored": 221,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2155351210385561,
            "num_unique_values": 177,
            "solution": "Take(Sum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.2691415313225,
                "explored_percent_lambda": 28.53828306264501,
                "explored_percent_none": 7.192575406032483,
                "kept_percent_concrete": 43.27485380116959,
                "kept_percent_lambda": 56.72514619883041,
                "num_examples": 2,
                "num_explored_concrete": 277,
                "num_explored_lambda": 123,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 97,
                "num_values_explored": 431,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2887332340469584,
            "num_unique_values": 243,
            "solution": "Take(Head(x1), Reverse(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.97911832946636,
                "explored_percent_lambda": 48.25986078886311,
                "explored_percent_none": 12.761020881670534,
                "kept_percent_concrete": 29.957805907172997,
                "kept_percent_lambda": 70.042194092827,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 208,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 166,
                "num_values_explored": 431,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3241282809758559,
            "num_unique_values": 337,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 71.05643994211287,
                "explored_percent_lambda": 21.1287988422576,
                "explored_percent_none": 7.814761215629522,
                "kept_percent_concrete": 67.37160120845921,
                "kept_percent_lambda": 32.62839879154078,
                "num_examples": 4,
                "num_explored_concrete": 491,
                "num_explored_lambda": 146,
                "num_explored_none": 54,
                "num_inputs": 2,
                "num_kept_concrete": 223,
                "num_kept_lambda": 108,
                "num_values_explored": 691,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.655524365021847,
            "num_unique_values": 535,
            "solution": "IntDivide(Square(Square(Add(1, 1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.23509075194468,
                "explored_percent_lambda": 26.83664649956785,
                "explored_percent_none": 18.928262748487466,
                "kept_percent_concrete": 64.90566037735849,
                "kept_percent_lambda": 35.094339622641506,
                "num_examples": 5,
                "num_explored_concrete": 1255,
                "num_explored_lambda": 621,
                "num_explored_none": 438,
                "num_inputs": 1,
                "num_kept_concrete": 344,
                "num_kept_lambda": 186,
                "num_values_explored": 2314,
                "num_values_kept": 530,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10911
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33417241205461323,
            "num_unique_values": 327,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.22182468694096,
                "explored_percent_lambda": 26.833631484794275,
                "explored_percent_none": 8.94454382826476,
                "kept_percent_concrete": 64.797507788162,
                "kept_percent_lambda": 35.202492211838006,
                "num_examples": 5,
                "num_explored_concrete": 359,
                "num_explored_lambda": 150,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 113,
                "num_values_explored": 559,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15077536297030747,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98194945848375,
                "explored_percent_lambda": 26.71480144404332,
                "explored_percent_none": 8.303249097472925,
                "kept_percent_concrete": 61.267605633802816,
                "kept_percent_lambda": 38.732394366197184,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 74,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 55,
                "num_values_explored": 277,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07432372600305825,
            "num_unique_values": 80,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 74.53416149068323,
                "explored_percent_lambda": 17.391304347826086,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 71.23287671232876,
                "kept_percent_lambda": 28.767123287671232,
                "num_examples": 2,
                "num_explored_concrete": 120,
                "num_explored_lambda": 28,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 52,
                "num_kept_lambda": 21,
                "num_values_explored": 161,
                "num_values_kept": 73,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.590083466959186,
            "num_unique_values": 778,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 52.85800240673887,
                "explored_percent_lambda": 16.48616125150421,
                "explored_percent_none": 30.65583634175692,
                "kept_percent_concrete": 78.10880829015544,
                "kept_percent_lambda": 21.89119170984456,
                "num_examples": 5,
                "num_explored_concrete": 1757,
                "num_explored_lambda": 548,
                "num_explored_none": 1019,
                "num_inputs": 2,
                "num_kept_concrete": 603,
                "num_kept_lambda": 169,
                "num_values_explored": 3324,
                "num_values_kept": 772,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4724
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48599406098947,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.81907090464548,
                "explored_percent_lambda": 14.376528117359413,
                "explored_percent_none": 59.80440097799511,
                "kept_percent_concrete": 66.38418079096046,
                "kept_percent_lambda": 33.61581920903955,
                "num_examples": 5,
                "num_explored_concrete": 1584,
                "num_explored_lambda": 882,
                "num_explored_none": 3669,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 119,
                "num_values_explored": 6135,
                "num_values_kept": 354,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63801
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2764095771126449,
            "num_unique_values": 176,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 40.66390041493776,
                "explored_percent_lambda": 52.697095435684645,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 36.25730994152047,
                "kept_percent_lambda": 63.74269005847953,
                "num_examples": 3,
                "num_explored_concrete": 98,
                "num_explored_lambda": 127,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 109,
                "num_values_explored": 241,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.27152178902179,
            "num_unique_values": 553,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 55.43945912722803,
                "explored_percent_lambda": 15.550092194222495,
                "explored_percent_none": 29.010448678549476,
                "kept_percent_concrete": 79.89031078610603,
                "kept_percent_lambda": 20.10968921389397,
                "num_examples": 5,
                "num_explored_concrete": 902,
                "num_explored_lambda": 253,
                "num_explored_none": 472,
                "num_inputs": 2,
                "num_kept_concrete": 437,
                "num_kept_lambda": 110,
                "num_values_explored": 1627,
                "num_values_kept": 547,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 39792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3393699930747971,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Multiply(-1, Last(x1)))))(u1)), Scanl1((lambda u1, u2: -1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.5875486381323,
                "explored_percent_lambda": 34.24124513618677,
                "explored_percent_none": 8.171206225680933,
                "kept_percent_concrete": 51.07142857142857,
                "kept_percent_lambda": 48.92857142857143,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 176,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 143,
                "num_kept_lambda": 137,
                "num_values_explored": 514,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.07540653203614,
            "num_unique_values": 302,
            "solution": "Max(IntDivide(Square(Add(-1, Square(x1))), Add(1, 1)), Square(Add(x1, x1)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 32.356231819198925,
                "explored_percent_lambda": 16.603266950100693,
                "explored_percent_none": 51.04050123070038,
                "kept_percent_concrete": 67.003367003367,
                "kept_percent_lambda": 32.996632996633,
                "num_examples": 2,
                "num_explored_concrete": 1446,
                "num_explored_lambda": 742,
                "num_explored_none": 2281,
                "num_inputs": 1,
                "num_kept_concrete": 199,
                "num_kept_lambda": 98,
                "num_values_explored": 4469,
                "num_values_kept": 297,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 37709
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17200011992827058,
            "num_unique_values": 142,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.5735294117647,
                "explored_percent_lambda": 36.029411764705884,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 5,
                "num_explored_concrete": 143,
                "num_explored_lambda": 98,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3334284619195387,
            "num_unique_values": 316,
            "solution": "Square(Minimum(Scanl1((lambda u1, u2: Last(x2)), x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 73.21131447587355,
                "explored_percent_lambda": 16.306156405990016,
                "explored_percent_none": 10.482529118136439,
                "kept_percent_concrete": 73.2258064516129,
                "kept_percent_lambda": 26.774193548387096,
                "num_examples": 3,
                "num_explored_concrete": 440,
                "num_explored_lambda": 98,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 83,
                "num_values_explored": 601,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89519980200566,
            "num_unique_values": 1120,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.37521222410866,
                "explored_percent_lambda": 30.169779286926996,
                "explored_percent_none": 18.455008488964346,
                "kept_percent_concrete": 42.600896860986545,
                "kept_percent_lambda": 57.399103139013455,
                "num_examples": 2,
                "num_explored_concrete": 3026,
                "num_explored_lambda": 1777,
                "num_explored_none": 1087,
                "num_inputs": 1,
                "num_kept_concrete": 475,
                "num_kept_lambda": 640,
                "num_values_explored": 5890,
                "num_values_kept": 1115,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59999
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9887489430839196,
            "num_unique_values": 235,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 15.530303030303031,
                "explored_percent_lambda": 46.11742424242424,
                "explored_percent_none": 38.35227272727273,
                "kept_percent_concrete": 27.391304347826086,
                "kept_percent_lambda": 72.6086956521739,
                "num_examples": 4,
                "num_explored_concrete": 164,
                "num_explored_lambda": 487,
                "num_explored_none": 405,
                "num_inputs": 1,
                "num_kept_concrete": 63,
                "num_kept_lambda": 167,
                "num_values_explored": 1056,
                "num_values_kept": 230,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2736
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31104788603261113,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(Sum(x1), ((lambda v1: Max(x2, v1)))(v1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.88747731397459,
                "explored_percent_lambda": 30.127041742286753,
                "explored_percent_none": 7.985480943738657,
                "kept_percent_concrete": 54.435483870967744,
                "kept_percent_lambda": 45.564516129032256,
                "num_examples": 5,
                "num_explored_concrete": 341,
                "num_explored_lambda": 166,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 113,
                "num_values_explored": 551,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.37710733199492,
            "num_unique_values": 736,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.52728670253651,
                "explored_percent_lambda": 9.467076607737638,
                "explored_percent_none": 26.00563668972585,
                "kept_percent_concrete": 81.61865569272976,
                "kept_percent_lambda": 18.381344307270233,
                "num_examples": 2,
                "num_explored_concrete": 5037,
                "num_explored_lambda": 739,
                "num_explored_none": 2030,
                "num_inputs": 3,
                "num_kept_concrete": 595,
                "num_kept_lambda": 134,
                "num_values_explored": 7806,
                "num_values_kept": 729,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79190
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.91160972299986,
            "num_unique_values": 1111,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.51682953311618,
                "explored_percent_lambda": 32.30184581976113,
                "explored_percent_none": 23.181324647122693,
                "kept_percent_concrete": 43.037974683544306,
                "kept_percent_lambda": 56.962025316455694,
                "num_examples": 2,
                "num_explored_concrete": 2460,
                "num_explored_lambda": 1785,
                "num_explored_none": 1281,
                "num_inputs": 1,
                "num_kept_concrete": 476,
                "num_kept_lambda": 630,
                "num_values_explored": 5526,
                "num_values_kept": 1106,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56058
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97397664794698,
            "num_unique_values": 1004,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.86015389762462,
                "explored_percent_lambda": 20.759451321512213,
                "explored_percent_none": 17.380394780863163,
                "kept_percent_concrete": 52.652652652652655,
                "kept_percent_lambda": 47.347347347347345,
                "num_examples": 2,
                "num_explored_concrete": 3698,
                "num_explored_lambda": 1241,
                "num_explored_none": 1039,
                "num_inputs": 1,
                "num_kept_concrete": 526,
                "num_kept_lambda": 473,
                "num_values_explored": 5978,
                "num_values_kept": 999,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61419
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.22074856702238,
            "num_unique_values": 346,
            "solution": "Add(Add(Subtract(x1, x2), Square(Min(x2, 1))), IntDivide(x2, x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 29.98009493186342,
                "explored_percent_lambda": 14.836931557188793,
                "explored_percent_none": 55.18297351094779,
                "kept_percent_concrete": 65.88235294117646,
                "kept_percent_lambda": 34.11764705882353,
                "num_examples": 2,
                "num_explored_concrete": 1958,
                "num_explored_lambda": 969,
                "num_explored_none": 3604,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 116,
                "num_values_explored": 6531,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 52796
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60645888303407,
            "num_unique_values": 602,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.11024157876829,
                "explored_percent_lambda": 26.046274242939777,
                "explored_percent_none": 39.84348417829194,
                "kept_percent_concrete": 47.651006711409394,
                "kept_percent_lambda": 52.348993288590606,
                "num_examples": 4,
                "num_explored_concrete": 2005,
                "num_explored_lambda": 1531,
                "num_explored_none": 2342,
                "num_inputs": 2,
                "num_kept_concrete": 284,
                "num_kept_lambda": 312,
                "num_values_explored": 5878,
                "num_values_kept": 596,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57591
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.40266700903885067,
            "num_unique_values": 313,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Access(1, x1))), Map((lambda u1: Add(-1, Head(x1))), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.5,
                "explored_percent_lambda": 21.547619047619047,
                "explored_percent_none": 10.952380952380953,
                "kept_percent_concrete": 61.56351791530945,
                "kept_percent_lambda": 38.43648208469055,
                "num_examples": 3,
                "num_explored_concrete": 567,
                "num_explored_lambda": 181,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 189,
                "num_kept_lambda": 118,
                "num_values_explored": 840,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55821225396357,
            "num_unique_values": 882,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.50446694460989,
                "explored_percent_lambda": 15.723645026801668,
                "explored_percent_none": 26.771888028588446,
                "kept_percent_concrete": 66.36259977194983,
                "kept_percent_lambda": 33.63740022805017,
                "num_examples": 4,
                "num_explored_concrete": 3862,
                "num_explored_lambda": 1056,
                "num_explored_none": 1798,
                "num_inputs": 1,
                "num_kept_concrete": 582,
                "num_kept_lambda": 295,
                "num_values_explored": 6716,
                "num_values_kept": 877,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69538
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.41563636995852,
            "num_unique_values": 279,
            "solution": "Multiply(Subtract(Subtract(1, x1), Square(Add(1, 1))), If(IsEven(x1), Add(1, -1), -1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 22.559171597633135,
                "explored_percent_lambda": 21.720907297830376,
                "explored_percent_none": 55.71992110453649,
                "kept_percent_concrete": 44.52554744525548,
                "kept_percent_lambda": 55.47445255474452,
                "num_examples": 5,
                "num_explored_concrete": 915,
                "num_explored_lambda": 881,
                "num_explored_none": 2260,
                "num_inputs": 1,
                "num_kept_concrete": 122,
                "num_kept_lambda": 152,
                "num_values_explored": 4056,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17704
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17342234903480858,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.65900383141762,
                "explored_percent_lambda": 40.99616858237548,
                "explored_percent_none": 10.344827586206897,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 127,
                "num_explored_lambda": 107,
                "num_explored_none": 27,
                "num_inputs": 3,
                "num_kept_concrete": 66,
                "num_kept_lambda": 88,
                "num_values_explored": 261,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 26.87630847003311,
            "num_unique_values": 305,
            "solution": "Min(If(IsOdd(x1), x2, Subtract(x1, x2)), Subtract(Square(Square(Add(1, 1))), x2))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 29.47856315179606,
                "explored_percent_lambda": 16.037079953650057,
                "explored_percent_none": 54.48435689455388,
                "kept_percent_concrete": 65.55183946488295,
                "kept_percent_lambda": 34.448160535117054,
                "num_examples": 2,
                "num_explored_concrete": 1272,
                "num_explored_lambda": 692,
                "num_explored_none": 2351,
                "num_inputs": 2,
                "num_kept_concrete": 196,
                "num_kept_lambda": 103,
                "num_values_explored": 4315,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1943009759997949,
            "num_unique_values": 170,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.72623574144487,
                "explored_percent_lambda": 44.866920152091254,
                "explored_percent_none": 11.406844106463879,
                "kept_percent_concrete": 37.423312883435585,
                "kept_percent_lambda": 62.576687116564415,
                "num_examples": 4,
                "num_explored_concrete": 115,
                "num_explored_lambda": 118,
                "num_explored_none": 30,
                "num_inputs": 3,
                "num_kept_concrete": 61,
                "num_kept_lambda": 102,
                "num_values_explored": 263,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.44371594104450196,
            "num_unique_values": 382,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.87373737373737,
                "explored_percent_lambda": 19.82323232323232,
                "explored_percent_none": 5.303030303030303,
                "kept_percent_concrete": 71.46666666666667,
                "kept_percent_lambda": 28.533333333333335,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 157,
                "num_explored_none": 42,
                "num_inputs": 3,
                "num_kept_concrete": 268,
                "num_kept_lambda": 107,
                "num_values_explored": 792,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 66.34005511901341,
            "num_unique_values": 251,
            "solution": "Subtract(Add(x1, IntDivide(Add(x1, x1), x2)), IntDivide(x1, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 27.896786757546252,
                "explored_percent_lambda": 11.660175267770205,
                "explored_percent_none": 60.44303797468354,
                "kept_percent_concrete": 73.46938775510205,
                "kept_percent_lambda": 26.53061224489796,
                "num_examples": 4,
                "num_explored_concrete": 1146,
                "num_explored_lambda": 479,
                "num_explored_none": 2483,
                "num_inputs": 2,
                "num_kept_concrete": 180,
                "num_kept_lambda": 65,
                "num_values_explored": 4108,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 48043
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88641545607243,
            "num_unique_values": 936,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.53079387682449,
                "explored_percent_lambda": 23.389106443574224,
                "explored_percent_none": 25.080099679601283,
                "kept_percent_concrete": 54.242749731471534,
                "kept_percent_lambda": 45.757250268528466,
                "num_examples": 5,
                "num_explored_concrete": 2895,
                "num_explored_lambda": 1314,
                "num_explored_none": 1409,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 426,
                "num_values_explored": 5618,
                "num_values_kept": 931,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57956
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.323083202005364,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.861759425493716,
                "explored_percent_lambda": 24.416517055655298,
                "explored_percent_none": 14.721723518850988,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 339,
                "num_explored_lambda": 136,
                "num_explored_none": 82,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 557,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73335664102342,
            "num_unique_values": 954,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.62872628726287,
                "explored_percent_lambda": 21.747967479674795,
                "explored_percent_none": 30.62330623306233,
                "kept_percent_concrete": 54.267650158061116,
                "kept_percent_lambda": 45.732349841938884,
                "num_examples": 3,
                "num_explored_concrete": 2812,
                "num_explored_lambda": 1284,
                "num_explored_none": 1808,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 434,
                "num_values_explored": 5904,
                "num_values_kept": 949,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59659
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.191410823026672,
            "num_unique_values": 144,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 44.11764705882353,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 18.38235294117647,
                "kept_percent_concrete": 37.68115942028985,
                "kept_percent_lambda": 62.31884057971015,
                "num_examples": 4,
                "num_explored_concrete": 120,
                "num_explored_lambda": 102,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 86,
                "num_values_explored": 272,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 26.98222580004949,
            "num_unique_values": 1034,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.11456665904414,
                "explored_percent_lambda": 17.104962268465584,
                "explored_percent_none": 19.780471072490283,
                "kept_percent_concrete": 75.0730282375852,
                "kept_percent_lambda": 24.9269717624148,
                "num_examples": 5,
                "num_explored_concrete": 2760,
                "num_explored_lambda": 748,
                "num_explored_none": 865,
                "num_inputs": 3,
                "num_kept_concrete": 771,
                "num_kept_lambda": 256,
                "num_values_explored": 4373,
                "num_values_kept": 1027,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19831
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3391787610016763,
            "num_unique_values": 222,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 60.91954022988506,
                "explored_percent_lambda": 31.03448275862069,
                "explored_percent_none": 8.045977011494253,
                "kept_percent_concrete": 56.48148148148148,
                "kept_percent_lambda": 43.51851851851852,
                "num_examples": 5,
                "num_explored_concrete": 265,
                "num_explored_lambda": 135,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 122,
                "num_kept_lambda": 94,
                "num_values_explored": 435,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48134791699704,
            "num_unique_values": 434,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.673418562178316,
                "explored_percent_lambda": 16.038519010459904,
                "explored_percent_none": 55.28806242736178,
                "kept_percent_concrete": 61.21495327102804,
                "kept_percent_lambda": 38.78504672897196,
                "num_examples": 5,
                "num_explored_concrete": 1727,
                "num_explored_lambda": 966,
                "num_explored_none": 3330,
                "num_inputs": 2,
                "num_kept_concrete": 262,
                "num_kept_lambda": 166,
                "num_values_explored": 6023,
                "num_values_kept": 428,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62775
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.732759420992807,
            "num_unique_values": 674,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Map((lambda u1: Count((lambda u1: ((lambda v1: IsEven(((lambda v1: IntDivide(Last(x2), v1)))(v1))))(u1)), x2)), x2))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 39.34426229508197,
                "explored_percent_lambda": 32.95502311895755,
                "explored_percent_none": 27.700714585960487,
                "kept_percent_concrete": 34.131736526946106,
                "kept_percent_lambda": 65.86826347305389,
                "num_examples": 2,
                "num_explored_concrete": 1872,
                "num_explored_lambda": 1568,
                "num_explored_none": 1318,
                "num_inputs": 2,
                "num_kept_concrete": 228,
                "num_kept_lambda": 440,
                "num_values_explored": 4758,
                "num_values_kept": 668,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6718
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53858867904637,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.33249791144528,
                "explored_percent_lambda": 21.336675020885547,
                "explored_percent_none": 52.330827067669176,
                "kept_percent_concrete": 47.353760445682454,
                "kept_percent_lambda": 52.646239554317546,
                "num_examples": 4,
                "num_explored_concrete": 1576,
                "num_explored_lambda": 1277,
                "num_explored_none": 3132,
                "num_inputs": 1,
                "num_kept_concrete": 170,
                "num_kept_lambda": 189,
                "num_values_explored": 5985,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60444
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90862360002939,
            "num_unique_values": 1206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.63089403413892,
                "explored_percent_lambda": 27.108331924961973,
                "explored_percent_none": 21.260774040899104,
                "kept_percent_concrete": 51.583333333333336,
                "kept_percent_lambda": 48.416666666666664,
                "num_examples": 4,
                "num_explored_concrete": 3055,
                "num_explored_lambda": 1604,
                "num_explored_none": 1258,
                "num_inputs": 2,
                "num_kept_concrete": 619,
                "num_kept_lambda": 581,
                "num_values_explored": 5917,
                "num_values_kept": 1200,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59541
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82568406302016,
            "num_unique_values": 1010,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.604790419161674,
                "explored_percent_lambda": 15.928143712574851,
                "explored_percent_none": 21.46706586826347,
                "kept_percent_concrete": 61.39303482587065,
                "kept_percent_lambda": 38.60696517412935,
                "num_examples": 3,
                "num_explored_concrete": 4182,
                "num_explored_lambda": 1064,
                "num_explored_none": 1434,
                "num_inputs": 1,
                "num_kept_concrete": 617,
                "num_kept_lambda": 388,
                "num_values_explored": 6680,
                "num_values_kept": 1005,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68126
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36858975095674396,
            "num_unique_values": 218,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.84782608695652,
                "explored_percent_lambda": 39.492753623188406,
                "explored_percent_none": 18.659420289855074,
                "kept_percent_concrete": 35.37735849056604,
                "kept_percent_lambda": 64.62264150943396,
                "num_examples": 2,
                "num_explored_concrete": 231,
                "num_explored_lambda": 218,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 75,
                "num_kept_lambda": 137,
                "num_values_explored": 552,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56101519602817,
            "num_unique_values": 372,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.61933276304534,
                "explored_percent_lambda": 22.446535500427714,
                "explored_percent_none": 52.93413173652694,
                "kept_percent_concrete": 45.776566757493185,
                "kept_percent_lambda": 54.223433242506815,
                "num_examples": 4,
                "num_explored_concrete": 1439,
                "num_explored_lambda": 1312,
                "num_explored_none": 3094,
                "num_inputs": 1,
                "num_kept_concrete": 168,
                "num_kept_lambda": 199,
                "num_values_explored": 5845,
                "num_values_kept": 367,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60217
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67956299707294,
            "num_unique_values": 1027,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.04577968526466,
                "explored_percent_lambda": 11.874105865522175,
                "explored_percent_none": 16.080114449213163,
                "kept_percent_concrete": 71.00881488736533,
                "kept_percent_lambda": 28.99118511263467,
                "num_examples": 2,
                "num_explored_concrete": 5036,
                "num_explored_lambda": 830,
                "num_explored_none": 1124,
                "num_inputs": 2,
                "num_kept_concrete": 725,
                "num_kept_lambda": 296,
                "num_values_explored": 6990,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70416
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81217961898074,
            "num_unique_values": 1333,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.37652209604597,
                "explored_percent_lambda": 9.46777944999316,
                "explored_percent_none": 18.15569845396087,
                "kept_percent_concrete": 81.00979653353428,
                "kept_percent_lambda": 18.99020346646571,
                "num_examples": 5,
                "num_explored_concrete": 5290,
                "num_explored_lambda": 692,
                "num_explored_none": 1327,
                "num_inputs": 2,
                "num_kept_concrete": 1075,
                "num_kept_lambda": 252,
                "num_values_explored": 7309,
                "num_values_kept": 1327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75290
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72058789199218,
            "num_unique_values": 1034,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.85160758450124,
                "explored_percent_lambda": 19.75267930750206,
                "explored_percent_none": 20.395713107996702,
                "kept_percent_concrete": 58.89212827988338,
                "kept_percent_lambda": 41.10787172011662,
                "num_examples": 3,
                "num_explored_concrete": 3630,
                "num_explored_lambda": 1198,
                "num_explored_none": 1237,
                "num_inputs": 1,
                "num_kept_concrete": 606,
                "num_kept_lambda": 423,
                "num_values_explored": 6065,
                "num_values_kept": 1029,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61933
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97214551107027,
            "num_unique_values": 1562,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.26742788461539,
                "explored_percent_lambda": 13.837139423076923,
                "explored_percent_none": 15.895432692307692,
                "kept_percent_concrete": 77.24935732647815,
                "kept_percent_lambda": 22.750642673521853,
                "num_examples": 5,
                "num_explored_concrete": 4677,
                "num_explored_lambda": 921,
                "num_explored_none": 1058,
                "num_inputs": 2,
                "num_kept_concrete": 1202,
                "num_kept_lambda": 354,
                "num_values_explored": 6656,
                "num_values_kept": 1556,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67433
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09613892692141,
            "num_unique_values": 1105,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.98489480309297,
                "explored_percent_lambda": 29.97662290954864,
                "explored_percent_none": 26.038482287358388,
                "kept_percent_concrete": 45.54545454545455,
                "kept_percent_lambda": 54.45454545454545,
                "num_examples": 2,
                "num_explored_concrete": 2446,
                "num_explored_lambda": 1667,
                "num_explored_none": 1448,
                "num_inputs": 1,
                "num_kept_concrete": 501,
                "num_kept_lambda": 599,
                "num_values_explored": 5561,
                "num_values_kept": 1100,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56735
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74411206494551,
            "num_unique_values": 1150,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.03535353535354,
                "explored_percent_lambda": 12.991021324354657,
                "explored_percent_none": 20.97362514029181,
                "kept_percent_concrete": 69.90376202974628,
                "kept_percent_lambda": 30.096237970253718,
                "num_examples": 4,
                "num_explored_concrete": 4707,
                "num_explored_lambda": 926,
                "num_explored_none": 1495,
                "num_inputs": 3,
                "num_kept_concrete": 799,
                "num_kept_lambda": 344,
                "num_values_explored": 7128,
                "num_values_kept": 1143,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70039
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59543472004589,
            "num_unique_values": 565,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.739837398373982,
                "explored_percent_lambda": 36.52439024390244,
                "explored_percent_none": 39.735772357723576,
                "kept_percent_concrete": 13.928571428571429,
                "kept_percent_lambda": 86.07142857142857,
                "num_examples": 2,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 1797,
                "num_explored_none": 1955,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 482,
                "num_values_explored": 4920,
                "num_values_kept": 560,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51988
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79014648206066,
            "num_unique_values": 1418,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.03118712273641,
                "explored_percent_lambda": 9.180080482897385,
                "explored_percent_none": 14.788732394366198,
                "kept_percent_concrete": 84.19560595322466,
                "kept_percent_lambda": 15.804394046775336,
                "num_examples": 4,
                "num_explored_concrete": 6046,
                "num_explored_lambda": 730,
                "num_explored_none": 1176,
                "num_inputs": 3,
                "num_kept_concrete": 1188,
                "num_kept_lambda": 223,
                "num_values_explored": 7952,
                "num_values_kept": 1411,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79150
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04468313301913,
            "num_unique_values": 1067,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.78943560057887,
                "explored_percent_lambda": 32.8328509406657,
                "explored_percent_none": 29.377713458755427,
                "kept_percent_concrete": 42.93785310734463,
                "kept_percent_lambda": 57.06214689265537,
                "num_examples": 3,
                "num_explored_concrete": 2089,
                "num_explored_lambda": 1815,
                "num_explored_none": 1624,
                "num_inputs": 1,
                "num_kept_concrete": 456,
                "num_kept_lambda": 606,
                "num_values_explored": 5528,
                "num_values_kept": 1062,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56755
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64785309007857,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.006243114212268,
                "explored_percent_lambda": 26.441424899008446,
                "explored_percent_none": 52.552331986779286,
                "kept_percent_concrete": 38.62433862433863,
                "kept_percent_lambda": 61.37566137566137,
                "num_examples": 4,
                "num_explored_concrete": 1144,
                "num_explored_lambda": 1440,
                "num_explored_none": 2862,
                "num_inputs": 1,
                "num_kept_concrete": 146,
                "num_kept_lambda": 232,
                "num_values_explored": 5446,
                "num_values_kept": 378,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58763
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.59418838704005,
            "num_unique_values": 1033,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(-1, -1))), x1)))), ZipWith((lambda u1, u2: ((lambda v1: Multiply(v1, Head(x1))))(u2)), x1, Scanl1((lambda u1, u2: 1), x1)))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 51.58326817826427,
                "explored_percent_lambda": 26.3096168881939,
                "explored_percent_none": 22.10711493354183,
                "kept_percent_concrete": 50.09727626459144,
                "kept_percent_lambda": 49.90272373540856,
                "num_examples": 2,
                "num_explored_concrete": 2639,
                "num_explored_lambda": 1346,
                "num_explored_none": 1131,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 513,
                "num_values_explored": 5116,
                "num_values_kept": 1028,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 18534
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 90.23059181496501,
            "num_unique_values": 1079,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), ZipWith((lambda u1, u2: Sum(Drop(Last(x1), x1))), x3, x3))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 71.87368421052632,
                "explored_percent_lambda": 13.010526315789473,
                "explored_percent_none": 15.115789473684211,
                "kept_percent_concrete": 73.88059701492537,
                "kept_percent_lambda": 26.119402985074625,
                "num_examples": 5,
                "num_explored_concrete": 5121,
                "num_explored_lambda": 927,
                "num_explored_none": 1077,
                "num_inputs": 3,
                "num_kept_concrete": 792,
                "num_kept_lambda": 280,
                "num_values_explored": 7125,
                "num_values_kept": 1072,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 67099
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23995185596868396,
            "num_unique_values": 195,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.273972602739725,
                "explored_percent_lambda": 31.050228310502284,
                "explored_percent_none": 8.67579908675799,
                "kept_percent_concrete": 41.7989417989418,
                "kept_percent_lambda": 58.2010582010582,
                "num_examples": 2,
                "num_explored_concrete": 264,
                "num_explored_lambda": 136,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 110,
                "num_values_explored": 438,
                "num_values_kept": 189,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 438
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5921362650115,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.66088840736728,
                "explored_percent_lambda": 30.065005417118094,
                "explored_percent_none": 39.274106175514625,
                "kept_percent_concrete": 34.79087452471483,
                "kept_percent_lambda": 65.20912547528518,
                "num_examples": 3,
                "num_explored_concrete": 1698,
                "num_explored_lambda": 1665,
                "num_explored_none": 2175,
                "num_inputs": 1,
                "num_kept_concrete": 183,
                "num_kept_lambda": 343,
                "num_values_explored": 5538,
                "num_values_kept": 526,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57046
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.35189110203646,
            "num_unique_values": 1482,
            "solution": "Min(Sum(Scanl1((lambda u1, u2: Add(x2, -1)), x1)), IntDivide(Sum(x1), Head(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 79.24337957124843,
                "explored_percent_lambda": 4.577553593947036,
                "explored_percent_none": 16.17906683480454,
                "kept_percent_concrete": 90.91525423728814,
                "kept_percent_lambda": 9.084745762711865,
                "num_examples": 5,
                "num_explored_concrete": 6284,
                "num_explored_lambda": 363,
                "num_explored_none": 1283,
                "num_inputs": 3,
                "num_kept_concrete": 1341,
                "num_kept_lambda": 134,
                "num_values_explored": 7930,
                "num_values_kept": 1475,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 25141
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.64580829301849,
            "num_unique_values": 503,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 44.235634260932414,
                "explored_percent_lambda": 22.55149981929888,
                "explored_percent_none": 33.2128659197687,
                "kept_percent_concrete": 63.50806451612903,
                "kept_percent_lambda": 36.49193548387097,
                "num_examples": 4,
                "num_explored_concrete": 1224,
                "num_explored_lambda": 624,
                "num_explored_none": 919,
                "num_inputs": 3,
                "num_kept_concrete": 315,
                "num_kept_lambda": 181,
                "num_values_explored": 2767,
                "num_values_kept": 496,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4167
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74671220697928,
            "num_unique_values": 1099,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.665330312009765,
                "explored_percent_lambda": 24.838765905525538,
                "explored_percent_none": 15.495903782464703,
                "kept_percent_concrete": 54.844606946983546,
                "kept_percent_lambda": 45.155393053016454,
                "num_examples": 2,
                "num_explored_concrete": 3423,
                "num_explored_lambda": 1425,
                "num_explored_none": 889,
                "num_inputs": 1,
                "num_kept_concrete": 600,
                "num_kept_lambda": 494,
                "num_values_explored": 5737,
                "num_values_kept": 1094,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61332
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52507041592617,
            "num_unique_values": 900,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.45877378435517,
                "explored_percent_lambda": 10.399048625792812,
                "explored_percent_none": 18.142177589852007,
                "kept_percent_concrete": 78.41163310961969,
                "kept_percent_lambda": 21.588366890380314,
                "num_examples": 3,
                "num_explored_concrete": 5408,
                "num_explored_lambda": 787,
                "num_explored_none": 1373,
                "num_inputs": 2,
                "num_kept_concrete": 701,
                "num_kept_lambda": 193,
                "num_values_explored": 7568,
                "num_values_kept": 894,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77751
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45223095198162,
            "num_unique_values": 352,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.663658243080626,
                "explored_percent_lambda": 13.176895306859207,
                "explored_percent_none": 55.159446450060166,
                "kept_percent_concrete": 71.67630057803468,
                "kept_percent_lambda": 28.32369942196532,
                "num_examples": 4,
                "num_explored_concrete": 2105,
                "num_explored_lambda": 876,
                "num_explored_none": 3667,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 98,
                "num_values_explored": 6648,
                "num_values_kept": 346,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68001
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7858658330515,
            "num_unique_values": 1084,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.08480364257257,
                "explored_percent_lambda": 12.464428002276607,
                "explored_percent_none": 19.450768355150824,
                "kept_percent_concrete": 76.36700648748841,
                "kept_percent_lambda": 23.632993512511586,
                "num_examples": 5,
                "num_explored_concrete": 4785,
                "num_explored_lambda": 876,
                "num_explored_none": 1367,
                "num_inputs": 1,
                "num_kept_concrete": 824,
                "num_kept_lambda": 255,
                "num_values_explored": 7028,
                "num_values_kept": 1079,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72821
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63385276100598,
            "num_unique_values": 848,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.073517354468436,
                "explored_percent_lambda": 11.246242142661929,
                "explored_percent_none": 29.680240502869637,
                "kept_percent_concrete": 80.04750593824228,
                "kept_percent_lambda": 19.95249406175772,
                "num_examples": 4,
                "num_explored_concrete": 4323,
                "num_explored_lambda": 823,
                "num_explored_none": 2172,
                "num_inputs": 2,
                "num_kept_concrete": 674,
                "num_kept_lambda": 168,
                "num_values_explored": 7318,
                "num_values_kept": 842,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74270
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4880500510335,
            "num_unique_values": 343,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.374301675977655,
                "explored_percent_lambda": 18.452185343411106,
                "explored_percent_none": 54.173512980611235,
                "kept_percent_concrete": 62.1301775147929,
                "kept_percent_lambda": 37.8698224852071,
                "num_examples": 3,
                "num_explored_concrete": 1666,
                "num_explored_lambda": 1123,
                "num_explored_none": 3297,
                "num_inputs": 1,
                "num_kept_concrete": 210,
                "num_kept_lambda": 128,
                "num_values_explored": 6086,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60931
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65065228694584,
            "num_unique_values": 889,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.85329341317366,
                "explored_percent_lambda": 16.152694610778443,
                "explored_percent_none": 17.994011976047904,
                "kept_percent_concrete": 62.967157417893546,
                "kept_percent_lambda": 37.032842582106454,
                "num_examples": 3,
                "num_explored_concrete": 4399,
                "num_explored_lambda": 1079,
                "num_explored_none": 1202,
                "num_inputs": 2,
                "num_kept_concrete": 556,
                "num_kept_lambda": 327,
                "num_values_explored": 6680,
                "num_values_kept": 883,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67306
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13190395897254,
            "num_unique_values": 1016,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.5279805352798,
                "explored_percent_lambda": 24.38303788668752,
                "explored_percent_none": 22.088981578032673,
                "kept_percent_concrete": 54.797230464886255,
                "kept_percent_lambda": 45.202769535113745,
                "num_examples": 5,
                "num_explored_concrete": 3080,
                "num_explored_lambda": 1403,
                "num_explored_none": 1271,
                "num_inputs": 1,
                "num_kept_concrete": 554,
                "num_kept_lambda": 457,
                "num_values_explored": 5754,
                "num_values_kept": 1011,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59473
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80062564904802,
            "num_unique_values": 1065,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.546042003231015,
                "explored_percent_lambda": 14.474959612277868,
                "explored_percent_none": 26.978998384491113,
                "kept_percent_concrete": 73.20754716981132,
                "kept_percent_lambda": 26.79245283018868,
                "num_examples": 5,
                "num_explored_concrete": 3624,
                "num_explored_lambda": 896,
                "num_explored_none": 1670,
                "num_inputs": 1,
                "num_kept_concrete": 776,
                "num_kept_lambda": 284,
                "num_values_explored": 6190,
                "num_values_kept": 1060,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63788
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71118704800028,
            "num_unique_values": 658,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.237435008665514,
                "explored_percent_lambda": 22.253032928942808,
                "explored_percent_none": 28.50953206239168,
                "kept_percent_concrete": 49.77029096477795,
                "kept_percent_lambda": 50.22970903522205,
                "num_examples": 2,
                "num_explored_concrete": 2841,
                "num_explored_lambda": 1284,
                "num_explored_none": 1645,
                "num_inputs": 1,
                "num_kept_concrete": 325,
                "num_kept_lambda": 328,
                "num_values_explored": 5770,
                "num_values_kept": 653,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59235
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86192272196058,
            "num_unique_values": 1032,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.526296432511955,
                "explored_percent_lambda": 18.97756528135344,
                "explored_percent_none": 29.49613828613461,
                "kept_percent_concrete": 59.20155793573515,
                "kept_percent_lambda": 40.79844206426485,
                "num_examples": 4,
                "num_explored_concrete": 2802,
                "num_explored_lambda": 1032,
                "num_explored_none": 1604,
                "num_inputs": 1,
                "num_kept_concrete": 608,
                "num_kept_lambda": 419,
                "num_values_explored": 5438,
                "num_values_kept": 1027,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56243
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69213778397534,
            "num_unique_values": 603,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.440259468508057,
                "explored_percent_lambda": 35.84431889516635,
                "explored_percent_none": 39.715421636325594,
                "kept_percent_concrete": 20.568561872909697,
                "kept_percent_lambda": 79.4314381270903,
                "num_examples": 2,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 1713,
                "num_explored_none": 1898,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 475,
                "num_values_explored": 4779,
                "num_values_kept": 598,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49269
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82211524702143,
            "num_unique_values": 763,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.70763152422541,
                "explored_percent_lambda": 37.61696818465377,
                "explored_percent_none": 28.675400291120816,
                "kept_percent_concrete": 22.29551451187335,
                "kept_percent_lambda": 77.70448548812665,
                "num_examples": 2,
                "num_explored_concrete": 1621,
                "num_explored_lambda": 1809,
                "num_explored_none": 1379,
                "num_inputs": 1,
                "num_kept_concrete": 169,
                "num_kept_lambda": 589,
                "num_values_explored": 4809,
                "num_values_kept": 758,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50884
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4687023909064,
            "num_unique_values": 355,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.603063295811037,
                "explored_percent_lambda": 21.646060158700866,
                "explored_percent_none": 49.7508765454881,
                "kept_percent_concrete": 39.714285714285715,
                "kept_percent_lambda": 60.285714285714285,
                "num_examples": 2,
                "num_explored_concrete": 1550,
                "num_explored_lambda": 1173,
                "num_explored_none": 2696,
                "num_inputs": 1,
                "num_kept_concrete": 139,
                "num_kept_lambda": 211,
                "num_values_explored": 5419,
                "num_values_kept": 350,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55733
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4856189279817,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.556120595713768,
                "explored_percent_lambda": 25.699237195786417,
                "explored_percent_none": 50.74464220849982,
                "kept_percent_concrete": 41.42480211081794,
                "kept_percent_lambda": 58.57519788918206,
                "num_examples": 2,
                "num_explored_concrete": 1297,
                "num_explored_lambda": 1415,
                "num_explored_none": 2794,
                "num_inputs": 1,
                "num_kept_concrete": 157,
                "num_kept_lambda": 222,
                "num_values_explored": 5506,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54713
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67222570697777,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.86176642620394,
                "explored_percent_lambda": 33.2423474361474,
                "explored_percent_none": 45.89588613764867,
                "kept_percent_concrete": 27.034120734908136,
                "kept_percent_lambda": 72.96587926509186,
                "num_examples": 2,
                "num_explored_concrete": 1070,
                "num_explored_lambda": 1705,
                "num_explored_none": 2354,
                "num_inputs": 2,
                "num_kept_concrete": 103,
                "num_kept_lambda": 278,
                "num_values_explored": 5129,
                "num_values_kept": 381,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51663
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53628606395796,
            "num_unique_values": 389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.392735300020068,
                "explored_percent_lambda": 32.550672285771626,
                "explored_percent_none": 46.05659241420831,
                "kept_percent_concrete": 27.93733681462141,
                "kept_percent_lambda": 72.0626631853786,
                "num_examples": 2,
                "num_explored_concrete": 1066,
                "num_explored_lambda": 1622,
                "num_explored_none": 2295,
                "num_inputs": 2,
                "num_kept_concrete": 107,
                "num_kept_lambda": 276,
                "num_values_explored": 4983,
                "num_values_kept": 383,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52099
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48053889593575,
            "num_unique_values": 388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.762383900928793,
                "explored_percent_lambda": 34.38467492260062,
                "explored_percent_none": 44.85294117647059,
                "kept_percent_concrete": 27.74869109947644,
                "kept_percent_lambda": 72.25130890052355,
                "num_examples": 2,
                "num_explored_concrete": 1073,
                "num_explored_lambda": 1777,
                "num_explored_none": 2318,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 276,
                "num_values_explored": 5168,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52483
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49122048506979,
            "num_unique_values": 377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.786324786324787,
                "explored_percent_lambda": 28.41405508072175,
                "explored_percent_none": 46.799620132953464,
                "kept_percent_concrete": 31.805929919137466,
                "kept_percent_lambda": 68.19407008086253,
                "num_examples": 2,
                "num_explored_concrete": 1305,
                "num_explored_lambda": 1496,
                "num_explored_none": 2464,
                "num_inputs": 2,
                "num_kept_concrete": 118,
                "num_kept_lambda": 253,
                "num_values_explored": 5265,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54005
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67323827801738,
            "num_unique_values": 538,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.497560975609755,
                "explored_percent_lambda": 35.35609756097561,
                "explored_percent_none": 38.146341463414636,
                "kept_percent_concrete": 24.015009380863038,
                "kept_percent_lambda": 75.98499061913697,
                "num_examples": 2,
                "num_explored_concrete": 1358,
                "num_explored_lambda": 1812,
                "num_explored_none": 1955,
                "num_inputs": 1,
                "num_kept_concrete": 128,
                "num_kept_lambda": 405,
                "num_values_explored": 5125,
                "num_values_kept": 533,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52174
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55747277697083,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.768188302425106,
                "explored_percent_lambda": 26.283880171184023,
                "explored_percent_none": 48.94793152639087,
                "kept_percent_concrete": 38.440111420612816,
                "kept_percent_lambda": 61.559888579387184,
                "num_examples": 3,
                "num_explored_concrete": 1389,
                "num_explored_lambda": 1474,
                "num_explored_none": 2745,
                "num_inputs": 1,
                "num_kept_concrete": 138,
                "num_kept_lambda": 221,
                "num_values_explored": 5608,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56811
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}