{
    "num_tasks": 100,
    "num_tasks_solved": 55,
    "results": [
        {
            "elapsed_time": 0.6216815090738237,
            "num_unique_values": 122,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 30.80168776371308,
                "explored_percent_lambda": 48.9451476793249,
                "explored_percent_none": 20.253164556962027,
                "kept_percent_concrete": 23.076923076923077,
                "kept_percent_lambda": 76.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 73,
                "num_explored_lambda": 116,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 90,
                "num_values_explored": 237,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21680672897491604,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.285714285714285,
                "explored_percent_lambda": 38.92857142857143,
                "explored_percent_none": 16.785714285714285,
                "kept_percent_concrete": 45.67901234567901,
                "kept_percent_lambda": 54.32098765432099,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 109,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1224084299756214,
            "num_unique_values": 106,
            "solution": "Access(Add(1, 1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 50.0,
                "explored_percent_none": 16.27906976744186,
                "kept_percent_concrete": 24.752475247524753,
                "kept_percent_lambda": 75.24752475247524,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 86,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 25,
                "num_kept_lambda": 76,
                "num_values_explored": 172,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13568581093568355,
            "num_unique_values": 113,
            "solution": "Drop(Square(Add(1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 22.22222222222222,
                "explored_percent_lambda": 68.51851851851852,
                "explored_percent_none": 9.25925925925926,
                "kept_percent_concrete": 15.74074074074074,
                "kept_percent_lambda": 84.25925925925925,
                "num_examples": 5,
                "num_explored_concrete": 36,
                "num_explored_lambda": 111,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 91,
                "num_values_explored": 162,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14301707793492824,
            "num_unique_values": 65,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.88741721854305,
                "explored_percent_lambda": 19.205298013245034,
                "explored_percent_none": 13.907284768211921,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 101,
                "num_explored_lambda": 29,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 23,
                "num_values_explored": 151,
                "num_values_kept": 59,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1332393429474905,
            "num_unique_values": 113,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 13.08411214953271,
                "kept_percent_lambda": 86.91588785046729,
                "num_examples": 4,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 93,
                "num_values_explored": 161,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12969506706576794,
            "num_unique_values": 114,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 24.22360248447205,
                "explored_percent_lambda": 62.732919254658384,
                "explored_percent_none": 13.043478260869565,
                "kept_percent_concrete": 15.596330275229358,
                "kept_percent_lambda": 84.40366972477064,
                "num_examples": 2,
                "num_explored_concrete": 39,
                "num_explored_lambda": 101,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 17,
                "num_kept_lambda": 92,
                "num_values_explored": 161,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14387362694833428,
            "num_unique_values": 116,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 21.47239263803681,
                "explored_percent_lambda": 66.87116564417178,
                "explored_percent_none": 11.656441717791411,
                "kept_percent_concrete": 13.513513513513514,
                "kept_percent_lambda": 86.48648648648648,
                "num_examples": 2,
                "num_explored_concrete": 35,
                "num_explored_lambda": 109,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 15,
                "num_kept_lambda": 96,
                "num_values_explored": 163,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36681679694447666,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 50.72202166064982,
                "explored_percent_lambda": 35.55956678700361,
                "explored_percent_none": 13.71841155234657,
                "kept_percent_concrete": 44.140625,
                "kept_percent_lambda": 55.859375,
                "num_examples": 4,
                "num_explored_concrete": 281,
                "num_explored_lambda": 197,
                "num_explored_none": 76,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 143,
                "num_values_explored": 554,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 554
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08093365898821503,
            "num_unique_values": 84,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 71.34502923976608,
                "explored_percent_lambda": 12.865497076023392,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 79.48717948717949,
                "kept_percent_lambda": 20.512820512820515,
                "num_examples": 5,
                "num_explored_concrete": 122,
                "num_explored_lambda": 22,
                "num_explored_none": 27,
                "num_inputs": 2,
                "num_kept_concrete": 62,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 78,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16028224804904312,
            "num_unique_values": 165,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.00636942675159,
                "explored_percent_lambda": 23.248407643312103,
                "explored_percent_none": 19.745222929936304,
                "kept_percent_concrete": 63.522012578616355,
                "kept_percent_lambda": 36.477987421383645,
                "num_examples": 4,
                "num_explored_concrete": 179,
                "num_explored_lambda": 73,
                "num_explored_none": 62,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 58,
                "num_values_explored": 314,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 314
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12535348301753402,
            "num_unique_values": 74,
            "solution": "Max(x1, Square(Square(Add(1, 1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.16129032258065,
                "explored_percent_lambda": 18.7683284457478,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 49.27536231884058,
                "kept_percent_lambda": 50.72463768115942,
                "num_examples": 2,
                "num_explored_concrete": 154,
                "num_explored_lambda": 64,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 34,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 69,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1561620399588719,
            "num_unique_values": 170,
            "solution": "Multiply(Minimum(x1), Square(Add(1, 1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.88925081433225,
                "explored_percent_lambda": 27.68729641693811,
                "explored_percent_none": 10.423452768729641,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 190,
                "num_explored_lambda": 85,
                "num_explored_none": 32,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 66,
                "num_values_explored": 307,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 307
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17674419796094298,
            "num_unique_values": 178,
            "solution": "IntDivide(Square(Add(1, 1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.03514376996805,
                "explored_percent_lambda": 34.185303514377,
                "explored_percent_none": 12.779552715654953,
                "kept_percent_concrete": 52.02312138728324,
                "kept_percent_lambda": 47.97687861271676,
                "num_examples": 2,
                "num_explored_concrete": 166,
                "num_explored_lambda": 107,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 83,
                "num_values_explored": 313,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 313
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19761751196347177,
            "num_unique_values": 192,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.142857142857146,
                "explored_percent_lambda": 41.07142857142857,
                "explored_percent_none": 11.785714285714286,
                "kept_percent_concrete": 46.774193548387096,
                "kept_percent_lambda": 53.225806451612904,
                "num_examples": 5,
                "num_explored_concrete": 132,
                "num_explored_lambda": 115,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 99,
                "num_values_explored": 280,
                "num_values_kept": 186,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26419237500522286,
            "num_unique_values": 203,
            "solution": "Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u1)), x1, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.49301397205589,
                "explored_percent_lambda": 30.93812375249501,
                "explored_percent_none": 15.568862275449101,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 3,
                "num_explored_concrete": 268,
                "num_explored_lambda": 155,
                "num_explored_none": 78,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 99,
                "num_values_explored": 501,
                "num_values_kept": 198,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27414138696622103,
            "num_unique_values": 196,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.05882352941177,
                "explored_percent_lambda": 41.544117647058826,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 46.31578947368421,
                "kept_percent_lambda": 53.68421052631579,
                "num_examples": 2,
                "num_explored_concrete": 128,
                "num_explored_lambda": 113,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 102,
                "num_values_explored": 272,
                "num_values_kept": 190,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2651065120007843,
            "num_unique_values": 213,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 47.56380510440835,
                "explored_percent_lambda": 41.29930394431555,
                "explored_percent_none": 11.136890951276103,
                "kept_percent_concrete": 36.53846153846154,
                "kept_percent_lambda": 63.46153846153846,
                "num_examples": 3,
                "num_explored_concrete": 205,
                "num_explored_lambda": 178,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 132,
                "num_values_explored": 431,
                "num_values_kept": 208,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1113931400468573,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.44343891402715,
                "explored_percent_lambda": 22.171945701357465,
                "explored_percent_none": 15.384615384615385,
                "kept_percent_concrete": 65.11627906976744,
                "kept_percent_lambda": 34.883720930232556,
                "num_examples": 3,
                "num_explored_concrete": 138,
                "num_explored_lambda": 49,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 45,
                "num_values_explored": 221,
                "num_values_kept": 129,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2244027010165155,
            "num_unique_values": 177,
            "solution": "Take(Sum(x1), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 64.2691415313225,
                "explored_percent_lambda": 28.53828306264501,
                "explored_percent_none": 7.192575406032483,
                "kept_percent_concrete": 43.27485380116959,
                "kept_percent_lambda": 56.72514619883041,
                "num_examples": 2,
                "num_explored_concrete": 277,
                "num_explored_lambda": 123,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 74,
                "num_kept_lambda": 97,
                "num_values_explored": 431,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29740267992019653,
            "num_unique_values": 243,
            "solution": "Take(Head(x1), Reverse(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.97911832946636,
                "explored_percent_lambda": 48.25986078886311,
                "explored_percent_none": 12.761020881670534,
                "kept_percent_concrete": 29.957805907172997,
                "kept_percent_lambda": 70.042194092827,
                "num_examples": 3,
                "num_explored_concrete": 168,
                "num_explored_lambda": 208,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 166,
                "num_values_explored": 431,
                "num_values_kept": 237,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3388794820057228,
            "num_unique_values": 337,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 71.05643994211287,
                "explored_percent_lambda": 21.1287988422576,
                "explored_percent_none": 7.814761215629522,
                "kept_percent_concrete": 67.37160120845921,
                "kept_percent_lambda": 32.62839879154078,
                "num_examples": 4,
                "num_explored_concrete": 491,
                "num_explored_lambda": 146,
                "num_explored_none": 54,
                "num_inputs": 2,
                "num_kept_concrete": 223,
                "num_kept_lambda": 108,
                "num_values_explored": 691,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 691
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.14445397607051,
            "num_unique_values": 770,
            "solution": "IntDivide(Square(Square(Add(1, 1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.61550229474758,
                "explored_percent_lambda": 18.58745537990821,
                "explored_percent_none": 17.79704232534421,
                "kept_percent_concrete": 70.45751633986929,
                "kept_percent_lambda": 29.54248366013072,
                "num_examples": 5,
                "num_explored_concrete": 2495,
                "num_explored_lambda": 729,
                "num_explored_none": 698,
                "num_inputs": 1,
                "num_kept_concrete": 539,
                "num_kept_lambda": 226,
                "num_values_explored": 3922,
                "num_values_kept": 765,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19170
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3444401000160724,
            "num_unique_values": 327,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 64.22182468694096,
                "explored_percent_lambda": 26.833631484794275,
                "explored_percent_none": 8.94454382826476,
                "kept_percent_concrete": 64.797507788162,
                "kept_percent_lambda": 35.202492211838006,
                "num_examples": 5,
                "num_explored_concrete": 359,
                "num_explored_lambda": 150,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 113,
                "num_values_explored": 559,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 559
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1524262570310384,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 64.98194945848375,
                "explored_percent_lambda": 26.71480144404332,
                "explored_percent_none": 8.303249097472925,
                "kept_percent_concrete": 61.267605633802816,
                "kept_percent_lambda": 38.732394366197184,
                "num_examples": 2,
                "num_explored_concrete": 180,
                "num_explored_lambda": 74,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 55,
                "num_values_explored": 277,
                "num_values_kept": 142,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 277
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07679899199865758,
            "num_unique_values": 80,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 74.53416149068323,
                "explored_percent_lambda": 17.391304347826086,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 71.23287671232876,
                "kept_percent_lambda": 28.767123287671232,
                "num_examples": 2,
                "num_explored_concrete": 120,
                "num_explored_lambda": 28,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 52,
                "num_kept_lambda": 21,
                "num_values_explored": 161,
                "num_values_kept": 73,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 22.2610816139495,
            "num_unique_values": 280,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 26.131687242798353,
                "explored_percent_lambda": 43.10699588477366,
                "explored_percent_none": 30.761316872427983,
                "kept_percent_concrete": 54.37956204379562,
                "kept_percent_lambda": 45.62043795620438,
                "num_examples": 5,
                "num_explored_concrete": 254,
                "num_explored_lambda": 419,
                "num_explored_none": 299,
                "num_inputs": 2,
                "num_kept_concrete": 149,
                "num_kept_lambda": 125,
                "num_values_explored": 972,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 16977
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46944241190795,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.06373193166886,
                "explored_percent_lambda": 14.783180026281208,
                "explored_percent_none": 61.15308804204994,
                "kept_percent_concrete": 67.80104712041884,
                "kept_percent_lambda": 32.19895287958115,
                "num_examples": 5,
                "num_explored_concrete": 1465,
                "num_explored_lambda": 900,
                "num_explored_none": 3723,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 123,
                "num_values_explored": 6088,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62265
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19036721996963024,
            "num_unique_values": 176,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 40.66390041493776,
                "explored_percent_lambda": 52.697095435684645,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 36.25730994152047,
                "kept_percent_lambda": 63.74269005847953,
                "num_examples": 3,
                "num_explored_concrete": 98,
                "num_explored_lambda": 127,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 109,
                "num_values_explored": 241,
                "num_values_kept": 171,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.320825409027748,
            "num_unique_values": 552,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 57.56521739130435,
                "explored_percent_lambda": 13.91304347826087,
                "explored_percent_none": 28.52173913043478,
                "kept_percent_concrete": 82.6007326007326,
                "kept_percent_lambda": 17.399267399267398,
                "num_examples": 5,
                "num_explored_concrete": 993,
                "num_explored_lambda": 240,
                "num_explored_none": 492,
                "num_inputs": 2,
                "num_kept_concrete": 451,
                "num_kept_lambda": 95,
                "num_values_explored": 1725,
                "num_values_kept": 546,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3405
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3030607709661126,
            "num_unique_values": 286,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Multiply(-1, Last(x1)))))(u1)), Scanl1((lambda u1, u2: -1), x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 57.5875486381323,
                "explored_percent_lambda": 34.24124513618677,
                "explored_percent_none": 8.171206225680933,
                "kept_percent_concrete": 51.07142857142857,
                "kept_percent_lambda": 48.92857142857143,
                "num_examples": 3,
                "num_explored_concrete": 296,
                "num_explored_lambda": 176,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 143,
                "num_kept_lambda": 137,
                "num_values_explored": 514,
                "num_values_kept": 280,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.19570224301424,
            "num_unique_values": 312,
            "solution": "Max(Square(Add(x1, x1)), Multiply(Square(x1), Add(x1, Add(-1, x1))))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 30.371900826446282,
                "explored_percent_lambda": 18.365472910927455,
                "explored_percent_none": 51.26262626262626,
                "kept_percent_concrete": 62.86644951140065,
                "kept_percent_lambda": 37.13355048859935,
                "num_examples": 2,
                "num_explored_concrete": 1323,
                "num_explored_lambda": 800,
                "num_explored_none": 2233,
                "num_inputs": 1,
                "num_kept_concrete": 193,
                "num_kept_lambda": 114,
                "num_values_explored": 4356,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 24245
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1924445319455117,
            "num_unique_values": 142,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 52.5735294117647,
                "explored_percent_lambda": 36.029411764705884,
                "explored_percent_none": 11.397058823529411,
                "kept_percent_concrete": 47.05882352941177,
                "kept_percent_lambda": 52.94117647058823,
                "num_examples": 5,
                "num_explored_concrete": 143,
                "num_explored_lambda": 98,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 64,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33847103791777045,
            "num_unique_values": 316,
            "solution": "Square(Minimum(Scanl1((lambda u1, u2: Last(x2)), x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 73.21131447587355,
                "explored_percent_lambda": 16.306156405990016,
                "explored_percent_none": 10.482529118136439,
                "kept_percent_concrete": 73.2258064516129,
                "kept_percent_lambda": 26.774193548387096,
                "num_examples": 3,
                "num_explored_concrete": 440,
                "num_explored_lambda": 98,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 83,
                "num_values_explored": 601,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 601
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02278052107431,
            "num_unique_values": 960,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.72515559124674,
                "explored_percent_lambda": 30.27504517165228,
                "explored_percent_none": 20.999799237100984,
                "kept_percent_concrete": 43.769633507853406,
                "kept_percent_lambda": 56.230366492146594,
                "num_examples": 2,
                "num_explored_concrete": 2427,
                "num_explored_lambda": 1508,
                "num_explored_none": 1046,
                "num_inputs": 1,
                "num_kept_concrete": 418,
                "num_kept_lambda": 537,
                "num_values_explored": 4981,
                "num_values_kept": 955,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52315
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.548020291957073,
            "num_unique_values": 244,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), -1, Add(-1, -1))))(u2)), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 16.172734970364097,
                "explored_percent_lambda": 49.11092294665538,
                "explored_percent_none": 34.716342082980525,
                "kept_percent_concrete": 30.96234309623431,
                "kept_percent_lambda": 69.0376569037657,
                "num_examples": 4,
                "num_explored_concrete": 191,
                "num_explored_lambda": 580,
                "num_explored_none": 410,
                "num_inputs": 1,
                "num_kept_concrete": 74,
                "num_kept_lambda": 165,
                "num_values_explored": 1181,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2861
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33441502309869975,
            "num_unique_values": 254,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(Sum(x1), ((lambda v1: Max(x2, v1)))(v1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 61.88747731397459,
                "explored_percent_lambda": 30.127041742286753,
                "explored_percent_none": 7.985480943738657,
                "kept_percent_concrete": 54.435483870967744,
                "kept_percent_lambda": 45.564516129032256,
                "num_examples": 5,
                "num_explored_concrete": 341,
                "num_explored_lambda": 166,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 135,
                "num_kept_lambda": 113,
                "num_values_explored": 551,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 88.3225788269192,
            "num_unique_values": 541,
            "solution": "Subtract(Min(x1, x3), Sum(x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 57.69092219020173,
                "explored_percent_lambda": 11.797550432276656,
                "explored_percent_none": 30.511527377521613,
                "kept_percent_concrete": 79.21348314606742,
                "kept_percent_lambda": 20.786516853932586,
                "num_examples": 2,
                "num_explored_concrete": 3203,
                "num_explored_lambda": 655,
                "num_explored_none": 1694,
                "num_inputs": 3,
                "num_kept_concrete": 423,
                "num_kept_lambda": 111,
                "num_values_explored": 5552,
                "num_values_kept": 534,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 65163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02484345296398,
            "num_unique_values": 1096,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.36943907156673,
                "explored_percent_lambda": 30.174081237911025,
                "explored_percent_none": 22.456479690522244,
                "kept_percent_concrete": 44.087992667277724,
                "kept_percent_lambda": 55.912007332722276,
                "num_examples": 2,
                "num_explored_concrete": 2449,
                "num_explored_lambda": 1560,
                "num_explored_none": 1161,
                "num_inputs": 1,
                "num_kept_concrete": 481,
                "num_kept_lambda": 610,
                "num_values_explored": 5170,
                "num_values_kept": 1091,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52441
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.739235979039222,
            "num_unique_values": 1014,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(1, 1)), v1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.88083648819182,
                "explored_percent_lambda": 21.038399134667387,
                "explored_percent_none": 16.080764377140795,
                "kept_percent_concrete": 51.83349851337958,
                "kept_percent_lambda": 48.16650148662042,
                "num_examples": 2,
                "num_explored_concrete": 3488,
                "num_explored_lambda": 1167,
                "num_explored_none": 892,
                "num_inputs": 1,
                "num_kept_concrete": 523,
                "num_kept_lambda": 486,
                "num_values_explored": 5547,
                "num_values_kept": 1009,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 18860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.50368202396203,
            "num_unique_values": 254,
            "solution": "Add(Subtract(x1, x2), Square(Min(x2, Subtract(x1, x1))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 23.00375469336671,
                "explored_percent_lambda": 17.04630788485607,
                "explored_percent_none": 59.94993742177722,
                "kept_percent_concrete": 58.87096774193548,
                "kept_percent_lambda": 41.12903225806452,
                "num_examples": 2,
                "num_explored_concrete": 919,
                "num_explored_lambda": 681,
                "num_explored_none": 2395,
                "num_inputs": 2,
                "num_kept_concrete": 146,
                "num_kept_lambda": 102,
                "num_values_explored": 3995,
                "num_values_kept": 248,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 23891
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63978923903778,
            "num_unique_values": 555,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.444444444444443,
                "explored_percent_lambda": 29.42528735632184,
                "explored_percent_none": 41.13026819923372,
                "kept_percent_concrete": 40.07285974499089,
                "kept_percent_lambda": 59.92714025500911,
                "num_examples": 4,
                "num_explored_concrete": 1537,
                "num_explored_lambda": 1536,
                "num_explored_none": 2147,
                "num_inputs": 2,
                "num_kept_concrete": 220,
                "num_kept_lambda": 329,
                "num_values_explored": 5220,
                "num_values_kept": 549,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53420
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4288102040300146,
            "num_unique_values": 313,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Access(1, x1))), Map((lambda u1: Add(-1, Head(x1))), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 67.5,
                "explored_percent_lambda": 21.547619047619047,
                "explored_percent_none": 10.952380952380953,
                "kept_percent_concrete": 61.56351791530945,
                "kept_percent_lambda": 38.43648208469055,
                "num_examples": 3,
                "num_explored_concrete": 567,
                "num_explored_lambda": 181,
                "num_explored_none": 92,
                "num_inputs": 2,
                "num_kept_concrete": 189,
                "num_kept_lambda": 118,
                "num_values_explored": 840,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 840
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73585765005555,
            "num_unique_values": 814,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.31028095091077,
                "explored_percent_lambda": 16.471133065761038,
                "explored_percent_none": 28.218585983328186,
                "kept_percent_concrete": 63.53522867737948,
                "kept_percent_lambda": 36.46477132262052,
                "num_examples": 4,
                "num_explored_concrete": 3583,
                "num_explored_lambda": 1067,
                "num_explored_none": 1828,
                "num_inputs": 1,
                "num_kept_concrete": 514,
                "num_kept_lambda": 295,
                "num_values_explored": 6478,
                "num_values_kept": 809,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65620
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 94.24884334404487,
            "num_unique_values": 165,
            "solution": "Multiply(Subtract(-1, Add(1, Add(x1, 1))), If(IsEven(x1), Add(-1, 1), -1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 14.849921011058452,
                "explored_percent_lambda": 25.75039494470774,
                "explored_percent_none": 59.39968404423381,
                "kept_percent_concrete": 38.125,
                "kept_percent_lambda": 61.875,
                "num_examples": 5,
                "num_explored_concrete": 282,
                "num_explored_lambda": 489,
                "num_explored_none": 1128,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 99,
                "num_values_explored": 1899,
                "num_values_kept": 160,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55340
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18624466401524842,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.65900383141762,
                "explored_percent_lambda": 40.99616858237548,
                "explored_percent_none": 10.344827586206897,
                "kept_percent_concrete": 42.857142857142854,
                "kept_percent_lambda": 57.142857142857146,
                "num_examples": 2,
                "num_explored_concrete": 127,
                "num_explored_lambda": 107,
                "num_explored_none": 27,
                "num_inputs": 3,
                "num_kept_concrete": 66,
                "num_kept_lambda": 88,
                "num_values_explored": 261,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.469822642975487,
            "num_unique_values": 305,
            "solution": "Min(If(IsOdd(x1), x2, Subtract(x1, x2)), IntDivide(x1, Square(Add(1, 1))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 27.494089834515368,
                "explored_percent_lambda": 16.264775413711583,
                "explored_percent_none": 56.241134751773046,
                "kept_percent_concrete": 63.87959866220736,
                "kept_percent_lambda": 36.12040133779264,
                "num_examples": 2,
                "num_explored_concrete": 1163,
                "num_explored_lambda": 688,
                "num_explored_none": 2379,
                "num_inputs": 2,
                "num_kept_concrete": 191,
                "num_kept_lambda": 108,
                "num_values_explored": 4230,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12153
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20762798807118088,
            "num_unique_values": 170,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 43.72623574144487,
                "explored_percent_lambda": 44.866920152091254,
                "explored_percent_none": 11.406844106463879,
                "kept_percent_concrete": 37.423312883435585,
                "kept_percent_lambda": 62.576687116564415,
                "num_examples": 4,
                "num_explored_concrete": 115,
                "num_explored_lambda": 118,
                "num_explored_none": 30,
                "num_inputs": 3,
                "num_kept_concrete": 61,
                "num_kept_lambda": 102,
                "num_values_explored": 263,
                "num_values_kept": 163,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5114059799816459,
            "num_unique_values": 382,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 74.87373737373737,
                "explored_percent_lambda": 19.82323232323232,
                "explored_percent_none": 5.303030303030303,
                "kept_percent_concrete": 71.46666666666667,
                "kept_percent_lambda": 28.533333333333335,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 157,
                "num_explored_none": 42,
                "num_inputs": 3,
                "num_kept_concrete": 268,
                "num_kept_lambda": 107,
                "num_values_explored": 792,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.223612993955612,
            "num_unique_values": 288,
            "solution": "Max(Min(Add(1, Add(x1, IntDivide(x1, x2))), IntDivide(Square(x1), x2)), Add(x1, 1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 34.018113540976366,
                "explored_percent_lambda": 10.823945217583388,
                "explored_percent_none": 55.15794124144025,
                "kept_percent_concrete": 80.49645390070921,
                "kept_percent_lambda": 19.50354609929078,
                "num_examples": 4,
                "num_explored_concrete": 1540,
                "num_explored_lambda": 490,
                "num_explored_none": 2497,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 55,
                "num_values_explored": 4527,
                "num_values_kept": 282,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6207
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99999972002115,
            "num_unique_values": 927,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.46571749718996,
                "explored_percent_lambda": 24.896965155488946,
                "explored_percent_none": 21.637317347321094,
                "kept_percent_concrete": 53.14533622559653,
                "kept_percent_lambda": 46.85466377440347,
                "num_examples": 5,
                "num_explored_concrete": 2854,
                "num_explored_lambda": 1329,
                "num_explored_none": 1155,
                "num_inputs": 1,
                "num_kept_concrete": 490,
                "num_kept_lambda": 432,
                "num_values_explored": 5338,
                "num_values_kept": 922,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55219
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33381100092083216,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 60.861759425493716,
                "explored_percent_lambda": 24.416517055655298,
                "explored_percent_none": 14.721723518850988,
                "kept_percent_concrete": 63.6,
                "kept_percent_lambda": 36.4,
                "num_examples": 5,
                "num_explored_concrete": 339,
                "num_explored_lambda": 136,
                "num_explored_none": 82,
                "num_inputs": 3,
                "num_kept_concrete": 159,
                "num_kept_lambda": 91,
                "num_values_explored": 557,
                "num_values_kept": 250,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85362226993311,
            "num_unique_values": 874,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.646491051679064,
                "explored_percent_lambda": 24.15041222602051,
                "explored_percent_none": 30.203096722300423,
                "kept_percent_concrete": 52.12888377445339,
                "kept_percent_lambda": 47.87111622554661,
                "num_examples": 3,
                "num_explored_concrete": 2270,
                "num_explored_lambda": 1201,
                "num_explored_none": 1502,
                "num_inputs": 1,
                "num_kept_concrete": 453,
                "num_kept_lambda": 416,
                "num_values_explored": 4973,
                "num_values_kept": 869,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52044
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20328661799430847,
            "num_unique_values": 144,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 44.11764705882353,
                "explored_percent_lambda": 37.5,
                "explored_percent_none": 18.38235294117647,
                "kept_percent_concrete": 37.68115942028985,
                "kept_percent_lambda": 62.31884057971015,
                "num_examples": 4,
                "num_explored_concrete": 120,
                "num_explored_lambda": 102,
                "num_explored_none": 50,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 86,
                "num_values_explored": 272,
                "num_values_kept": 138,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.644026711001061,
            "num_unique_values": 539,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.18906605922551,
                "explored_percent_lambda": 23.861047835990888,
                "explored_percent_none": 22.949886104783598,
                "kept_percent_concrete": 74.62406015037594,
                "kept_percent_lambda": 25.37593984962406,
                "num_examples": 5,
                "num_explored_concrete": 934,
                "num_explored_lambda": 419,
                "num_explored_none": 403,
                "num_inputs": 3,
                "num_kept_concrete": 397,
                "num_kept_lambda": 135,
                "num_values_explored": 1756,
                "num_values_kept": 532,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2633254339452833,
            "num_unique_values": 222,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 60.91954022988506,
                "explored_percent_lambda": 31.03448275862069,
                "explored_percent_none": 8.045977011494253,
                "kept_percent_concrete": 56.48148148148148,
                "kept_percent_lambda": 43.51851851851852,
                "num_examples": 5,
                "num_explored_concrete": 265,
                "num_explored_lambda": 135,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 122,
                "num_kept_lambda": 94,
                "num_values_explored": 435,
                "num_values_kept": 216,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51012420700863,
            "num_unique_values": 419,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.74596635770683,
                "explored_percent_lambda": 16.821146584277376,
                "explored_percent_none": 53.432887058015794,
                "kept_percent_concrete": 60.77481840193705,
                "kept_percent_lambda": 39.22518159806295,
                "num_examples": 5,
                "num_explored_concrete": 1733,
                "num_explored_lambda": 980,
                "num_explored_none": 3113,
                "num_inputs": 2,
                "num_kept_concrete": 251,
                "num_kept_lambda": 162,
                "num_values_explored": 5826,
                "num_values_kept": 413,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59382
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.56815927894786,
            "num_unique_values": 693,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Map((lambda u1: ((lambda v1: IntDivide(IntDivide(Last(x2), x1), v1)))(u1)), x2))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 42.673141891891895,
                "explored_percent_lambda": 28.50506756756757,
                "explored_percent_none": 28.82179054054054,
                "kept_percent_concrete": 35.80786026200873,
                "kept_percent_lambda": 64.19213973799127,
                "num_examples": 2,
                "num_explored_concrete": 2021,
                "num_explored_lambda": 1350,
                "num_explored_none": 1365,
                "num_inputs": 2,
                "num_kept_concrete": 246,
                "num_kept_lambda": 441,
                "num_values_explored": 4736,
                "num_values_kept": 687,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 20973
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5243299169233,
            "num_unique_values": 368,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.43534901808283,
                "explored_percent_lambda": 22.632704647093135,
                "explored_percent_none": 49.93194633482403,
                "kept_percent_concrete": 43.52617079889807,
                "kept_percent_lambda": 56.47382920110193,
                "num_examples": 4,
                "num_explored_concrete": 1411,
                "num_explored_lambda": 1164,
                "num_explored_none": 2568,
                "num_inputs": 1,
                "num_kept_concrete": 158,
                "num_kept_lambda": 205,
                "num_values_explored": 5143,
                "num_values_kept": 363,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54930
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03016287006903,
            "num_unique_values": 1063,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.26560951437067,
                "explored_percent_lambda": 27.234886025768088,
                "explored_percent_none": 24.49950445986125,
                "kept_percent_concrete": 51.27719962157048,
                "kept_percent_lambda": 48.72280037842952,
                "num_examples": 4,
                "num_explored_concrete": 2435,
                "num_explored_lambda": 1374,
                "num_explored_none": 1236,
                "num_inputs": 2,
                "num_kept_concrete": 542,
                "num_kept_lambda": 515,
                "num_values_explored": 5045,
                "num_values_kept": 1057,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53058
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83966735296417,
            "num_unique_values": 910,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.486577181208055,
                "explored_percent_lambda": 16.325503355704697,
                "explored_percent_none": 23.187919463087248,
                "kept_percent_concrete": 62.09944751381215,
                "kept_percent_lambda": 37.90055248618785,
                "num_examples": 3,
                "num_explored_concrete": 3605,
                "num_explored_lambda": 973,
                "num_explored_none": 1382,
                "num_inputs": 1,
                "num_kept_concrete": 562,
                "num_kept_lambda": 343,
                "num_values_explored": 5960,
                "num_values_kept": 905,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61486
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3453811550280079,
            "num_unique_values": 218,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 41.84782608695652,
                "explored_percent_lambda": 39.492753623188406,
                "explored_percent_none": 18.659420289855074,
                "kept_percent_concrete": 35.37735849056604,
                "kept_percent_lambda": 64.62264150943396,
                "num_examples": 2,
                "num_explored_concrete": 231,
                "num_explored_lambda": 218,
                "num_explored_none": 103,
                "num_inputs": 2,
                "num_kept_concrete": 75,
                "num_kept_lambda": 137,
                "num_values_explored": 552,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66560840501916,
            "num_unique_values": 367,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.355359200922013,
                "explored_percent_lambda": 23.568958893584327,
                "explored_percent_none": 51.07568190549366,
                "kept_percent_concrete": 44.47513812154696,
                "kept_percent_lambda": 55.52486187845304,
                "num_examples": 4,
                "num_explored_concrete": 1320,
                "num_explored_lambda": 1227,
                "num_explored_none": 2659,
                "num_inputs": 1,
                "num_kept_concrete": 161,
                "num_kept_lambda": 201,
                "num_values_explored": 5206,
                "num_values_kept": 362,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54097
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78760898800101,
            "num_unique_values": 919,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.11396881530301,
                "explored_percent_lambda": 12.361356695065101,
                "explored_percent_none": 16.52467448963189,
                "kept_percent_concrete": 72.3986856516977,
                "kept_percent_lambda": 27.6013143483023,
                "num_examples": 2,
                "num_explored_concrete": 4424,
                "num_explored_lambda": 769,
                "num_explored_none": 1028,
                "num_inputs": 2,
                "num_kept_concrete": 661,
                "num_kept_lambda": 252,
                "num_values_explored": 6221,
                "num_values_kept": 913,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63845
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7874865810154,
            "num_unique_values": 1206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.10340669279469,
                "explored_percent_lambda": 9.149834187518842,
                "explored_percent_none": 19.746759119686462,
                "kept_percent_concrete": 82.83333333333333,
                "kept_percent_lambda": 17.166666666666668,
                "num_examples": 5,
                "num_explored_concrete": 4717,
                "num_explored_lambda": 607,
                "num_explored_none": 1310,
                "num_inputs": 2,
                "num_kept_concrete": 994,
                "num_kept_lambda": 206,
                "num_values_explored": 6634,
                "num_values_kept": 1200,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67854
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78717283904552,
            "num_unique_values": 902,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.33802816901409,
                "explored_percent_lambda": 24.826291079812208,
                "explored_percent_none": 18.835680751173708,
                "kept_percent_concrete": 55.96432552954292,
                "kept_percent_lambda": 44.03567447045708,
                "num_examples": 3,
                "num_explored_concrete": 3000,
                "num_explored_lambda": 1322,
                "num_explored_none": 1003,
                "num_inputs": 1,
                "num_kept_concrete": 502,
                "num_kept_lambda": 395,
                "num_values_explored": 5325,
                "num_values_kept": 897,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56467
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95877636200748,
            "num_unique_values": 1425,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.10872868478812,
                "explored_percent_lambda": 12.17288536214756,
                "explored_percent_none": 15.718385953064326,
                "kept_percent_concrete": 78.43551797040169,
                "kept_percent_lambda": 21.56448202959831,
                "num_examples": 5,
                "num_explored_concrete": 4271,
                "num_explored_lambda": 721,
                "num_explored_none": 931,
                "num_inputs": 2,
                "num_kept_concrete": 1113,
                "num_kept_lambda": 306,
                "num_values_explored": 5923,
                "num_values_kept": 1419,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60085
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.14381662302185,
            "num_unique_values": 1030,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.57159578618806,
                "explored_percent_lambda": 27.331252438548574,
                "explored_percent_none": 27.097151775263363,
                "kept_percent_concrete": 46.829268292682926,
                "kept_percent_lambda": 53.170731707317074,
                "num_examples": 2,
                "num_explored_concrete": 2336,
                "num_explored_lambda": 1401,
                "num_explored_none": 1389,
                "num_inputs": 1,
                "num_kept_concrete": 480,
                "num_kept_lambda": 545,
                "num_values_explored": 5126,
                "num_values_kept": 1025,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52986
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78779196401592,
            "num_unique_values": 1089,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.24939817043813,
                "explored_percent_lambda": 13.432835820895523,
                "explored_percent_none": 20.317766008666347,
                "kept_percent_concrete": 70.51756007393715,
                "kept_percent_lambda": 29.482439926062845,
                "num_examples": 4,
                "num_explored_concrete": 4128,
                "num_explored_lambda": 837,
                "num_explored_none": 1266,
                "num_inputs": 3,
                "num_kept_concrete": 763,
                "num_kept_lambda": 319,
                "num_values_explored": 6231,
                "num_values_kept": 1082,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62687
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63678631407674,
            "num_unique_values": 520,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.559624832514515,
                "explored_percent_lambda": 37.18177757927646,
                "explored_percent_none": 39.25859758820902,
                "kept_percent_concrete": 16.116504854368934,
                "kept_percent_lambda": 83.88349514563107,
                "num_examples": 2,
                "num_explored_concrete": 1055,
                "num_explored_lambda": 1665,
                "num_explored_none": 1758,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 432,
                "num_values_explored": 4478,
                "num_values_kept": 515,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46821
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84700384794269,
            "num_unique_values": 1318,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.76622630672027,
                "explored_percent_lambda": 9.046524985640437,
                "explored_percent_none": 14.187248707639288,
                "kept_percent_concrete": 83.90541571319604,
                "kept_percent_lambda": 16.094584286803965,
                "num_examples": 4,
                "num_explored_concrete": 5346,
                "num_explored_lambda": 630,
                "num_explored_none": 988,
                "num_inputs": 3,
                "num_kept_concrete": 1100,
                "num_kept_lambda": 211,
                "num_values_explored": 6964,
                "num_values_kept": 1311,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70720
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.06883616000414,
            "num_unique_values": 934,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.45854246135314,
                "explored_percent_lambda": 36.25777956233688,
                "explored_percent_none": 27.283677976309978,
                "kept_percent_concrete": 41.442411194833156,
                "kept_percent_lambda": 58.557588805166844,
                "num_examples": 3,
                "num_explored_concrete": 1816,
                "num_explored_lambda": 1806,
                "num_explored_none": 1359,
                "num_inputs": 1,
                "num_kept_concrete": 385,
                "num_kept_lambda": 544,
                "num_values_explored": 4981,
                "num_values_kept": 929,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50718
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71246258902829,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.585099814776704,
                "explored_percent_lambda": 25.787199012142416,
                "explored_percent_none": 50.62770117308088,
                "kept_percent_concrete": 38.7434554973822,
                "kept_percent_lambda": 61.2565445026178,
                "num_examples": 4,
                "num_explored_concrete": 1146,
                "num_explored_lambda": 1253,
                "num_explored_none": 2460,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 234,
                "num_values_explored": 4859,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51682
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 88.03969235997647,
            "num_unique_values": 783,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(1, 1))), x1)))), Map((lambda u1: Square(Head(x1))), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 42.802246526751404,
                "explored_percent_lambda": 31.39225539462016,
                "explored_percent_none": 25.805498078628435,
                "kept_percent_concrete": 45.886889460154244,
                "kept_percent_lambda": 54.113110539845756,
                "num_examples": 2,
                "num_explored_concrete": 1448,
                "num_explored_lambda": 1062,
                "num_explored_none": 873,
                "num_inputs": 1,
                "num_kept_concrete": 357,
                "num_kept_lambda": 421,
                "num_values_explored": 3383,
                "num_values_kept": 778,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 46039
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 78.88283418002538,
            "num_unique_values": 882,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), ZipWith((lambda u1, u2: Sum(Drop(Head(x2), x1))), x3, x3))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 69.3338365729383,
                "explored_percent_lambda": 15.682204189469712,
                "explored_percent_none": 14.983959237591998,
                "kept_percent_concrete": 70.17142857142858,
                "kept_percent_lambda": 29.82857142857143,
                "num_examples": 5,
                "num_explored_concrete": 3674,
                "num_explored_lambda": 831,
                "num_explored_none": 794,
                "num_inputs": 3,
                "num_kept_concrete": 614,
                "num_kept_lambda": 261,
                "num_values_explored": 5299,
                "num_values_kept": 875,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 52352
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2580395640106872,
            "num_unique_values": 195,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.273972602739725,
                "explored_percent_lambda": 31.050228310502284,
                "explored_percent_none": 8.67579908675799,
                "kept_percent_concrete": 41.7989417989418,
                "kept_percent_lambda": 58.2010582010582,
                "num_examples": 2,
                "num_explored_concrete": 264,
                "num_explored_lambda": 136,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 110,
                "num_values_explored": 438,
                "num_values_kept": 189,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 438
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66820139694028,
            "num_unique_values": 512,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.320502749410842,
                "explored_percent_lambda": 31.952081696779263,
                "explored_percent_none": 38.7274155538099,
                "kept_percent_concrete": 32.938856015779095,
                "kept_percent_lambda": 67.0611439842209,
                "num_examples": 3,
                "num_explored_concrete": 1493,
                "num_explored_lambda": 1627,
                "num_explored_none": 1972,
                "num_inputs": 1,
                "num_kept_concrete": 167,
                "num_kept_lambda": 340,
                "num_values_explored": 5092,
                "num_values_kept": 507,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52117
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76113491307478,
            "num_unique_values": 1301,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.84573398448721,
                "explored_percent_lambda": 4.969836253950015,
                "explored_percent_none": 18.184429761562768,
                "kept_percent_concrete": 89.25811437403401,
                "kept_percent_lambda": 10.741885625965997,
                "num_examples": 5,
                "num_explored_concrete": 5350,
                "num_explored_lambda": 346,
                "num_explored_none": 1266,
                "num_inputs": 3,
                "num_kept_concrete": 1155,
                "num_kept_lambda": 139,
                "num_values_explored": 6962,
                "num_values_kept": 1294,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73535
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.65292479400523,
            "num_unique_values": 706,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 54.57371225577265,
                "explored_percent_lambda": 17.27353463587922,
                "explored_percent_none": 28.152753108348136,
                "kept_percent_concrete": 68.81258941344778,
                "kept_percent_lambda": 31.187410586552218,
                "num_examples": 4,
                "num_explored_concrete": 2458,
                "num_explored_lambda": 778,
                "num_explored_none": 1268,
                "num_inputs": 3,
                "num_kept_concrete": 481,
                "num_kept_lambda": 218,
                "num_values_explored": 4504,
                "num_values_kept": 699,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5904
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86467898194678,
            "num_unique_values": 1045,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.73573132684896,
                "explored_percent_lambda": 25.270691870067903,
                "explored_percent_none": 14.993576803083135,
                "kept_percent_concrete": 56.63461538461539,
                "kept_percent_lambda": 43.36538461538461,
                "num_examples": 2,
                "num_explored_concrete": 3255,
                "num_explored_lambda": 1377,
                "num_explored_none": 817,
                "num_inputs": 1,
                "num_kept_concrete": 589,
                "num_kept_lambda": 451,
                "num_values_explored": 5449,
                "num_values_kept": 1040,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56502
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61435979197267,
            "num_unique_values": 884,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.26027592092163,
                "explored_percent_lambda": 10.325700469350021,
                "explored_percent_none": 19.414023609728346,
                "kept_percent_concrete": 79.38496583143508,
                "kept_percent_lambda": 20.61503416856492,
                "num_examples": 3,
                "num_explored_concrete": 4940,
                "num_explored_lambda": 726,
                "num_explored_none": 1365,
                "num_inputs": 2,
                "num_kept_concrete": 697,
                "num_kept_lambda": 181,
                "num_values_explored": 7031,
                "num_values_kept": 878,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72795
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5173436650075,
            "num_unique_values": 326,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.038285804317,
                "explored_percent_lambda": 13.675752323932567,
                "explored_percent_none": 55.28596187175043,
                "kept_percent_concrete": 70.0,
                "kept_percent_lambda": 30.0,
                "num_examples": 4,
                "num_explored_concrete": 1970,
                "num_explored_lambda": 868,
                "num_explored_none": 3509,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 96,
                "num_values_explored": 6347,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65677
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8005718489876,
            "num_unique_values": 1048,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.75812222699298,
                "explored_percent_lambda": 11.19221411192214,
                "explored_percent_none": 19.04966366108487,
                "kept_percent_concrete": 78.90699904122722,
                "kept_percent_lambda": 21.09300095877277,
                "num_examples": 5,
                "num_explored_concrete": 4874,
                "num_explored_lambda": 782,
                "num_explored_none": 1331,
                "num_inputs": 1,
                "num_kept_concrete": 823,
                "num_kept_lambda": 220,
                "num_values_explored": 6987,
                "num_values_kept": 1043,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67542
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72457450209185,
            "num_unique_values": 746,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.23895875987131,
                "explored_percent_lambda": 11.377595788242177,
                "explored_percent_none": 31.383445451886516,
                "kept_percent_concrete": 78.64864864864865,
                "kept_percent_lambda": 21.35135135135135,
                "num_examples": 4,
                "num_explored_concrete": 3914,
                "num_explored_lambda": 778,
                "num_explored_none": 2146,
                "num_inputs": 2,
                "num_kept_concrete": 582,
                "num_kept_lambda": 158,
                "num_values_explored": 6838,
                "num_values_kept": 740,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70734
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49044177192263,
            "num_unique_values": 333,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.06368392567202,
                "explored_percent_lambda": 19.502074688796682,
                "explored_percent_none": 51.4342413855313,
                "kept_percent_concrete": 63.41463414634146,
                "kept_percent_lambda": 36.58536585365854,
                "num_examples": 3,
                "num_explored_concrete": 1611,
                "num_explored_lambda": 1081,
                "num_explored_none": 2851,
                "num_inputs": 1,
                "num_kept_concrete": 208,
                "num_kept_lambda": 120,
                "num_values_explored": 5543,
                "num_values_kept": 328,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57595
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66294789104722,
            "num_unique_values": 882,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.16427358344913,
                "explored_percent_lambda": 14.759919715917864,
                "explored_percent_none": 17.07580670063301,
                "kept_percent_concrete": 66.55251141552512,
                "kept_percent_lambda": 33.44748858447488,
                "num_examples": 3,
                "num_explored_concrete": 4415,
                "num_explored_lambda": 956,
                "num_explored_none": 1106,
                "num_inputs": 2,
                "num_kept_concrete": 583,
                "num_kept_lambda": 293,
                "num_values_explored": 6477,
                "num_values_kept": 876,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64959
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.10049514402635,
            "num_unique_values": 1050,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.09461426491994,
                "explored_percent_lambda": 26.055312954876275,
                "explored_percent_none": 18.850072780203785,
                "kept_percent_concrete": 53.110047846889955,
                "kept_percent_lambda": 46.889952153110045,
                "num_examples": 5,
                "num_explored_concrete": 3028,
                "num_explored_lambda": 1432,
                "num_explored_none": 1036,
                "num_inputs": 1,
                "num_kept_concrete": 555,
                "num_kept_lambda": 490,
                "num_values_explored": 5496,
                "num_values_kept": 1045,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56709
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76706282794476,
            "num_unique_values": 1075,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.81657608695652,
                "explored_percent_lambda": 14.605978260869565,
                "explored_percent_none": 25.577445652173914,
                "kept_percent_concrete": 73.55140186915888,
                "kept_percent_lambda": 26.44859813084112,
                "num_examples": 5,
                "num_explored_concrete": 3522,
                "num_explored_lambda": 860,
                "num_explored_none": 1506,
                "num_inputs": 1,
                "num_kept_concrete": 787,
                "num_kept_lambda": 283,
                "num_values_explored": 5888,
                "num_values_kept": 1070,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61393
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88733665994368,
            "num_unique_values": 644,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.302919708029194,
                "explored_percent_lambda": 23.521897810218977,
                "explored_percent_none": 28.175182481751825,
                "kept_percent_concrete": 48.98278560250391,
                "kept_percent_lambda": 51.01721439749609,
                "num_examples": 2,
                "num_explored_concrete": 2647,
                "num_explored_lambda": 1289,
                "num_explored_none": 1544,
                "num_inputs": 1,
                "num_kept_concrete": 313,
                "num_kept_lambda": 326,
                "num_values_explored": 5480,
                "num_values_kept": 639,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56795
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.00384636502713,
            "num_unique_values": 1003,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.03985711599925,
                "explored_percent_lambda": 19.232938522278623,
                "explored_percent_none": 28.72720436172213,
                "kept_percent_concrete": 58.016032064128254,
                "kept_percent_lambda": 41.983967935871746,
                "num_examples": 4,
                "num_explored_concrete": 2768,
                "num_explored_lambda": 1023,
                "num_explored_none": 1528,
                "num_inputs": 1,
                "num_kept_concrete": 579,
                "num_kept_lambda": 419,
                "num_values_explored": 5319,
                "num_values_kept": 998,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55330
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68178287998307,
            "num_unique_values": 593,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.025027203482047,
                "explored_percent_lambda": 38.193688792165396,
                "explored_percent_none": 38.78128400435256,
                "kept_percent_concrete": 16.666666666666668,
                "kept_percent_lambda": 83.33333333333333,
                "num_examples": 2,
                "num_explored_concrete": 1058,
                "num_explored_lambda": 1755,
                "num_explored_none": 1782,
                "num_inputs": 1,
                "num_kept_concrete": 98,
                "num_kept_lambda": 490,
                "num_values_explored": 4595,
                "num_values_kept": 588,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46884
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83199603797402,
            "num_unique_values": 711,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.808384501376246,
                "explored_percent_lambda": 36.03641753123015,
                "explored_percent_none": 29.155197967393605,
                "kept_percent_concrete": 23.087818696883854,
                "kept_percent_lambda": 76.91218130311614,
                "num_examples": 2,
                "num_explored_concrete": 1644,
                "num_explored_lambda": 1702,
                "num_explored_none": 1377,
                "num_inputs": 1,
                "num_kept_concrete": 163,
                "num_kept_lambda": 543,
                "num_values_explored": 4723,
                "num_values_kept": 706,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48735
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55543047003448,
            "num_unique_values": 360,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.920061491160645,
                "explored_percent_lambda": 23.232129131437357,
                "explored_percent_none": 47.847809377402,
                "kept_percent_concrete": 37.183098591549296,
                "kept_percent_lambda": 62.816901408450704,
                "num_examples": 2,
                "num_explored_concrete": 1505,
                "num_explored_lambda": 1209,
                "num_explored_none": 2490,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 223,
                "num_values_explored": 5204,
                "num_values_kept": 355,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53806
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53861758997664,
            "num_unique_values": 374,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.01448715472281,
                "explored_percent_lambda": 24.04867683986865,
                "explored_percent_none": 50.93683600540854,
                "kept_percent_concrete": 42.00542005420054,
                "kept_percent_lambda": 57.99457994579946,
                "num_examples": 2,
                "num_explored_concrete": 1295,
                "num_explored_lambda": 1245,
                "num_explored_none": 2637,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 214,
                "num_values_explored": 5177,
                "num_values_kept": 369,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53814
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68247813102789,
            "num_unique_values": 389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.799163179916317,
                "explored_percent_lambda": 33.87029288702929,
                "explored_percent_none": 44.33054393305439,
                "kept_percent_concrete": 25.587467362924283,
                "kept_percent_lambda": 74.41253263707571,
                "num_examples": 2,
                "num_explored_concrete": 1042,
                "num_explored_lambda": 1619,
                "num_explored_none": 2119,
                "num_inputs": 2,
                "num_kept_concrete": 98,
                "num_kept_lambda": 285,
                "num_values_explored": 4780,
                "num_values_kept": 383,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50293
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4911368509056,
            "num_unique_values": 389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.880614893192252,
                "explored_percent_lambda": 30.92433619484927,
                "explored_percent_none": 47.19504891195847,
                "kept_percent_concrete": 29.503916449086162,
                "kept_percent_lambda": 70.49608355091384,
                "num_examples": 2,
                "num_explored_concrete": 1096,
                "num_explored_lambda": 1549,
                "num_explored_none": 2364,
                "num_inputs": 2,
                "num_kept_concrete": 113,
                "num_kept_lambda": 270,
                "num_values_explored": 5009,
                "num_values_kept": 383,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50226
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50197535695042,
            "num_unique_values": 394,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.732217573221757,
                "explored_percent_lambda": 35.37656903765691,
                "explored_percent_none": 43.89121338912134,
                "kept_percent_concrete": 27.061855670103093,
                "kept_percent_lambda": 72.9381443298969,
                "num_examples": 2,
                "num_explored_concrete": 991,
                "num_explored_lambda": 1691,
                "num_explored_none": 2098,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 283,
                "num_values_explored": 4780,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49941
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49018987093586,
            "num_unique_values": 387,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.712082764005466,
                "explored_percent_lambda": 28.537966035526058,
                "explored_percent_none": 46.74995120046847,
                "kept_percent_concrete": 30.183727034120736,
                "kept_percent_lambda": 69.81627296587926,
                "num_examples": 2,
                "num_explored_concrete": 1266,
                "num_explored_lambda": 1462,
                "num_explored_none": 2395,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 266,
                "num_values_explored": 5123,
                "num_values_kept": 381,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51331
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69742645393126,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.20259319286872,
                "explored_percent_lambda": 36.97325769854133,
                "explored_percent_none": 37.82414910858995,
                "kept_percent_concrete": 21.0727969348659,
                "kept_percent_lambda": 78.9272030651341,
                "num_examples": 2,
                "num_explored_concrete": 1244,
                "num_explored_lambda": 1825,
                "num_explored_none": 1867,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 412,
                "num_values_explored": 4936,
                "num_values_kept": 522,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50598
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55229367199354,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.85412667946257,
                "explored_percent_lambda": 25.62380038387716,
                "explored_percent_none": 48.522072936660265,
                "kept_percent_concrete": 34.15300546448088,
                "kept_percent_lambda": 65.84699453551913,
                "num_examples": 3,
                "num_explored_concrete": 1347,
                "num_explored_lambda": 1335,
                "num_explored_none": 2528,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 241,
                "num_values_explored": 5210,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53723
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.55
}