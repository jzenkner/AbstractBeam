{
    "num_tasks": 100,
    "num_tasks_solved": 52,
    "results": [
        {
            "elapsed_time": 1.247579287039116,
            "num_unique_values": 117,
            "solution": "Map((lambda u1: ((lambda v1: Max(1, ((lambda v1: IntDivide(v1, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 39.49579831932773,
                "explored_percent_none": 16.80672268907563,
                "kept_percent_concrete": 35.714285714285715,
                "kept_percent_lambda": 64.28571428571429,
                "num_examples": 2,
                "num_explored_concrete": 104,
                "num_explored_lambda": 94,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 72,
                "num_values_explored": 238,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7843009231146425,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), v1, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.83453237410072,
                "explored_percent_lambda": 31.294964028776977,
                "explored_percent_none": 11.870503597122303,
                "kept_percent_concrete": 55.033557046979865,
                "kept_percent_lambda": 44.966442953020135,
                "num_examples": 3,
                "num_explored_concrete": 158,
                "num_explored_lambda": 87,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 67,
                "num_values_explored": 278,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 278
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6114043588750064,
            "num_unique_values": 107,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 54.06976744186046,
                "explored_percent_none": 12.209302325581396,
                "kept_percent_concrete": 23.529411764705884,
                "kept_percent_lambda": 76.47058823529412,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 93,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 78,
                "num_values_explored": 172,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6457427081186324,
            "num_unique_values": 112,
            "solution": "Drop(Square(Add(-1, -1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.766871165644172,
                "explored_percent_lambda": 65.03067484662577,
                "explored_percent_none": 9.202453987730062,
                "kept_percent_concrete": 17.757009345794394,
                "kept_percent_lambda": 82.24299065420561,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 106,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 88,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5553817888721824,
            "num_unique_values": 69,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.2251655629139,
                "explored_percent_lambda": 22.516556291390728,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 50.79365079365079,
                "kept_percent_lambda": 49.20634920634921,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 34,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 31,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.672645109007135,
            "num_unique_values": 94,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.267080745341616,
                "explored_percent_lambda": 53.41614906832298,
                "explored_percent_none": 9.316770186335404,
                "kept_percent_concrete": 18.181818181818183,
                "kept_percent_lambda": 81.81818181818181,
                "num_examples": 4,
                "num_explored_concrete": 60,
                "num_explored_lambda": 86,
                "num_explored_none": 15,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 72,
                "num_values_explored": 161,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6272487910464406,
            "num_unique_values": 97,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.95061728395062,
                "explored_percent_lambda": 54.93827160493827,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 17.391304347826086,
                "kept_percent_lambda": 82.6086956521739,
                "num_examples": 2,
                "num_explored_concrete": 55,
                "num_explored_lambda": 89,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 76,
                "num_values_explored": 162,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2816551709547639,
            "num_unique_values": 104,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.061349693251532,
                "explored_percent_lambda": 59.50920245398773,
                "explored_percent_none": 10.429447852760736,
                "kept_percent_concrete": 16.161616161616163,
                "kept_percent_lambda": 83.83838383838383,
                "num_examples": 2,
                "num_explored_concrete": 49,
                "num_explored_lambda": 97,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 83,
                "num_values_explored": 163,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3206587340682745,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.166666666666664,
                "explored_percent_lambda": 34.78260869565217,
                "explored_percent_none": 11.05072463768116,
                "kept_percent_concrete": 46.82539682539682,
                "kept_percent_lambda": 53.17460317460318,
                "num_examples": 4,
                "num_explored_concrete": 299,
                "num_explored_lambda": 192,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 134,
                "num_values_explored": 552,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07707225112244487,
            "num_unique_values": 83,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 74.26900584795321,
                "explored_percent_lambda": 11.11111111111111,
                "explored_percent_none": 14.619883040935672,
                "kept_percent_concrete": 79.22077922077922,
                "kept_percent_lambda": 20.77922077922078,
                "num_examples": 5,
                "num_explored_concrete": 127,
                "num_explored_lambda": 19,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 61,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 77,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14015320409089327,
            "num_unique_values": 155,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.52380952380952,
                "explored_percent_lambda": 15.555555555555555,
                "explored_percent_none": 14.920634920634921,
                "kept_percent_concrete": 77.18120805369128,
                "kept_percent_lambda": 22.818791946308725,
                "num_examples": 4,
                "num_explored_concrete": 219,
                "num_explored_lambda": 49,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 34,
                "num_values_explored": 315,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 315
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1225577259901911,
            "num_unique_values": 68,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.81524926686217,
                "explored_percent_lambda": 21.114369501466275,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 146,
                "num_explored_lambda": 72,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17364672292023897,
            "num_unique_values": 186,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.39344262295082,
                "explored_percent_lambda": 32.131147540983605,
                "explored_percent_none": 11.475409836065573,
                "kept_percent_concrete": 54.69613259668508,
                "kept_percent_lambda": 45.30386740331492,
                "num_examples": 4,
                "num_explored_concrete": 172,
                "num_explored_lambda": 98,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 82,
                "num_values_explored": 305,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18140527792274952,
            "num_unique_values": 181,
            "solution": "Square(IntDivide(Add(1, 1), Sum(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.14018691588785,
                "explored_percent_lambda": 33.021806853582554,
                "explored_percent_none": 11.838006230529595,
                "kept_percent_concrete": 51.13636363636363,
                "kept_percent_lambda": 48.86363636363637,
                "num_examples": 2,
                "num_explored_concrete": 177,
                "num_explored_lambda": 106,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 86,
                "num_values_explored": 321,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 321
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1613590030465275,
            "num_unique_values": 162,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.35294117647059,
                "explored_percent_lambda": 33.088235294117645,
                "explored_percent_none": 9.558823529411764,
                "kept_percent_concrete": 53.84615384615385,
                "kept_percent_lambda": 46.15384615384615,
                "num_examples": 5,
                "num_explored_concrete": 156,
                "num_explored_lambda": 90,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 156,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2615102471318096,
            "num_unique_values": 224,
            "solution": "Add(1, Subtract(1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.745098039215684,
                "explored_percent_lambda": 25.846702317290553,
                "explored_percent_none": 11.408199643493761,
                "kept_percent_concrete": 56.62100456621005,
                "kept_percent_lambda": 43.37899543378995,
                "num_examples": 3,
                "num_explored_concrete": 352,
                "num_explored_lambda": 145,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 95,
                "num_values_explored": 561,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 561
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18955971486866474,
            "num_unique_values": 180,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 44.688644688644686,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 12.454212454212454,
                "kept_percent_concrete": 43.67816091954023,
                "kept_percent_lambda": 56.32183908045977,
                "num_examples": 2,
                "num_explored_concrete": 122,
                "num_explored_lambda": 117,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 98,
                "num_values_explored": 273,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31911870487965643,
            "num_unique_values": 208,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.20417633410673,
                "explored_percent_lambda": 39.21113689095127,
                "explored_percent_none": 8.584686774941995,
                "kept_percent_concrete": 39.90147783251231,
                "kept_percent_lambda": 60.09852216748769,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 169,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 122,
                "num_values_explored": 431,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10091285384260118,
            "num_unique_values": 122,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 17.647058823529413,
                "explored_percent_none": 14.479638009049774,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 39,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 32,
                "num_values_explored": 221,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08561033406294882,
            "num_unique_values": 73,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.717948717948715,
                "explored_percent_lambda": 39.743589743589745,
                "explored_percent_none": 11.538461538461538,
                "kept_percent_concrete": 26.865671641791046,
                "kept_percent_lambda": 73.13432835820896,
                "num_examples": 2,
                "num_explored_concrete": 76,
                "num_explored_lambda": 62,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 49,
                "num_values_explored": 156,
                "num_values_kept": 67,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1698035269510001,
            "num_unique_values": 143,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1, v2: Min(v1, v2)))(u2, u2)), x1, Reverse(x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.29501915708812,
                "explored_percent_lambda": 42.1455938697318,
                "explored_percent_none": 14.559386973180077,
                "kept_percent_concrete": 30.656934306569344,
                "kept_percent_lambda": 69.34306569343066,
                "num_examples": 3,
                "num_explored_concrete": 113,
                "num_explored_lambda": 110,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 42,
                "num_kept_lambda": 95,
                "num_values_explored": 261,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.422814742894843,
            "num_unique_values": 301,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.80487804878049,
                "explored_percent_lambda": 46.78492239467849,
                "explored_percent_none": 15.41019955654102,
                "kept_percent_concrete": 53.898305084745765,
                "kept_percent_lambda": 46.101694915254235,
                "num_examples": 4,
                "num_explored_concrete": 341,
                "num_explored_lambda": 422,
                "num_explored_none": 139,
                "num_inputs": 2,
                "num_kept_concrete": 159,
                "num_kept_lambda": 136,
                "num_values_explored": 902,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2862
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 64.59630260197446,
            "num_unique_values": 558,
            "solution": "IntDivide(Square(Square(Add(-1, -1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.245149911816576,
                "explored_percent_lambda": 28.04232804232804,
                "explored_percent_none": 13.71252204585538,
                "kept_percent_concrete": 63.833634719710666,
                "kept_percent_lambda": 36.166365280289334,
                "num_examples": 5,
                "num_explored_concrete": 1321,
                "num_explored_lambda": 636,
                "num_explored_none": 311,
                "num_inputs": 1,
                "num_kept_concrete": 353,
                "num_kept_lambda": 200,
                "num_values_explored": 2268,
                "num_values_kept": 553,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 43523
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3041699461173266,
            "num_unique_values": 319,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.55797101449275,
                "explored_percent_lambda": 22.463768115942027,
                "explored_percent_none": 5.978260869565218,
                "kept_percent_concrete": 71.8849840255591,
                "kept_percent_lambda": 28.115015974440894,
                "num_examples": 5,
                "num_explored_concrete": 395,
                "num_explored_lambda": 124,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 88,
                "num_values_explored": 552,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1420236611738801,
            "num_unique_values": 139,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(-1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.594202898550726,
                "explored_percent_lambda": 24.27536231884058,
                "explored_percent_none": 14.130434782608695,
                "kept_percent_concrete": 61.65413533834587,
                "kept_percent_lambda": 38.34586466165413,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 67,
                "num_explored_none": 39,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 51,
                "num_values_explored": 276,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07374462811276317,
            "num_unique_values": 79,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.91304347826087,
                "explored_percent_lambda": 18.633540372670808,
                "explored_percent_none": 7.453416149068323,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 2,
                "num_explored_concrete": 119,
                "num_explored_lambda": 30,
                "num_explored_none": 12,
                "num_inputs": 3,
                "num_kept_concrete": 50,
                "num_kept_lambda": 22,
                "num_values_explored": 161,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.92180729098618,
            "num_unique_values": 1473,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.52165184972756,
                "explored_percent_lambda": 11.987381703470032,
                "explored_percent_none": 24.49096644680241,
                "kept_percent_concrete": 81.11792774369461,
                "kept_percent_lambda": 18.882072256305385,
                "num_examples": 5,
                "num_explored_concrete": 4430,
                "num_explored_lambda": 836,
                "num_explored_none": 1708,
                "num_inputs": 2,
                "num_kept_concrete": 1190,
                "num_kept_lambda": 277,
                "num_values_explored": 6974,
                "num_values_kept": 1467,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72670
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64632703200914,
            "num_unique_values": 360,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.535360322526458,
                "explored_percent_lambda": 20.611456408533513,
                "explored_percent_none": 57.85318326894003,
                "kept_percent_concrete": 64.50704225352112,
                "kept_percent_lambda": 35.49295774647887,
                "num_examples": 5,
                "num_explored_concrete": 1282,
                "num_explored_lambda": 1227,
                "num_explored_none": 3444,
                "num_inputs": 1,
                "num_kept_concrete": 229,
                "num_kept_lambda": 126,
                "num_values_explored": 5953,
                "num_values_kept": 355,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62129
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17597605311311781,
            "num_unique_values": 154,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.1522633744856,
                "explored_percent_lambda": 46.09053497942387,
                "explored_percent_none": 12.757201646090534,
                "kept_percent_concrete": 35.57046979865772,
                "kept_percent_lambda": 64.42953020134229,
                "num_examples": 3,
                "num_explored_concrete": 100,
                "num_explored_lambda": 112,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 96,
                "num_values_explored": 243,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 243
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33258830197155476,
            "num_unique_values": 326,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 87.20930232558139,
                "explored_percent_lambda": 5.6976744186046515,
                "explored_percent_none": 7.093023255813954,
                "kept_percent_concrete": 90.0,
                "kept_percent_lambda": 10.0,
                "num_examples": 5,
                "num_explored_concrete": 750,
                "num_explored_lambda": 49,
                "num_explored_none": 61,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 32,
                "num_values_explored": 860,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3806743149179965,
            "num_unique_values": 299,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 68.84057971014492,
                "explored_percent_lambda": 24.818840579710145,
                "explored_percent_none": 6.340579710144928,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 3,
                "num_explored_concrete": 380,
                "num_explored_lambda": 137,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 103,
                "num_values_explored": 552,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.37923592119478,
            "num_unique_values": 354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.612034837688043,
                "explored_percent_lambda": 22.15360253365004,
                "explored_percent_none": 48.23436262866191,
                "kept_percent_concrete": 58.16618911174785,
                "kept_percent_lambda": 41.83381088825215,
                "num_examples": 2,
                "num_explored_concrete": 1870,
                "num_explored_lambda": 1399,
                "num_explored_none": 3046,
                "num_inputs": 1,
                "num_kept_concrete": 203,
                "num_kept_lambda": 146,
                "num_values_explored": 6315,
                "num_values_kept": 349,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64122
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1702801149804145,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.51660516605166,
                "explored_percent_lambda": 29.88929889298893,
                "explored_percent_none": 9.59409594095941,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 164,
                "num_explored_lambda": 81,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 63,
                "num_values_explored": 271,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35145645192824304,
            "num_unique_values": 328,
            "solution": "Square(Min(Last(x2), Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 80.27210884353741,
                "explored_percent_lambda": 15.532879818594104,
                "explored_percent_none": 4.195011337868481,
                "kept_percent_concrete": 69.56521739130434,
                "kept_percent_lambda": 30.434782608695652,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 137,
                "num_explored_none": 37,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 98,
                "num_values_explored": 882,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03904423280619,
            "num_unique_values": 113,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.638297872340425,
                "explored_percent_lambda": 66.48936170212765,
                "explored_percent_none": 22.872340425531913,
                "kept_percent_concrete": 4.62962962962963,
                "kept_percent_lambda": 95.37037037037037,
                "num_examples": 2,
                "num_explored_concrete": 20,
                "num_explored_lambda": 125,
                "num_explored_none": 43,
                "num_inputs": 1,
                "num_kept_concrete": 5,
                "num_kept_lambda": 103,
                "num_values_explored": 188,
                "num_values_kept": 108,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 33976
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8068303239997476,
            "num_unique_values": 150,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 45.38745387453874,
                "explored_percent_none": 15.498154981549815,
                "kept_percent_concrete": 30.344827586206897,
                "kept_percent_lambda": 69.65517241379311,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 123,
                "num_explored_none": 42,
                "num_inputs": 1,
                "num_kept_concrete": 44,
                "num_kept_lambda": 101,
                "num_values_explored": 271,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 1.9987742381636053,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.84684684684684,
                "explored_percent_lambda": 23.603603603603602,
                "explored_percent_none": 9.54954954954955,
                "kept_percent_concrete": 60.273972602739725,
                "kept_percent_lambda": 39.726027397260275,
                "num_examples": 5,
                "num_explored_concrete": 371,
                "num_explored_lambda": 131,
                "num_explored_none": 53,
                "num_inputs": 2,
                "num_kept_concrete": 132,
                "num_kept_lambda": 87,
                "num_values_explored": 555,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 103.0400136448443,
            "num_unique_values": 91,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.0,
                "explored_percent_lambda": 11.538461538461538,
                "explored_percent_none": 8.461538461538462,
                "kept_percent_concrete": 70.23809523809524,
                "kept_percent_lambda": 29.761904761904763,
                "num_examples": 2,
                "num_explored_concrete": 208,
                "num_explored_lambda": 30,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 59,
                "num_kept_lambda": 25,
                "num_values_explored": 260,
                "num_values_kept": 84,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 3769
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 104.40686916513368,
            "num_unique_values": 93,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.973262032085561,
                "explored_percent_lambda": 59.35828877005348,
                "explored_percent_none": 25.668449197860962,
                "kept_percent_concrete": 6.818181818181818,
                "kept_percent_lambda": 93.18181818181819,
                "num_examples": 2,
                "num_explored_concrete": 28,
                "num_explored_lambda": 111,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 6,
                "num_kept_lambda": 82,
                "num_values_explored": 187,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 3312
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 105.30746884900145,
            "num_unique_values": 1044,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.40811455847255,
                "explored_percent_lambda": 18.870326173428797,
                "explored_percent_none": 9.721559268098648,
                "kept_percent_concrete": 58.61405197305101,
                "kept_percent_lambda": 41.38594802694899,
                "num_examples": 2,
                "num_explored_concrete": 4488,
                "num_explored_lambda": 1186,
                "num_explored_none": 611,
                "num_inputs": 1,
                "num_kept_concrete": 609,
                "num_kept_lambda": 430,
                "num_values_explored": 6285,
                "num_values_kept": 1039,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 15509
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.269295093137771,
            "num_unique_values": 313,
            "solution": "Max(Subtract(x1, x2), Add(Multiply(x2, Add(-1, -1)), Subtract(x1, x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 26.125703564727957,
                "explored_percent_lambda": 19.465290806754222,
                "explored_percent_none": 54.409005628517825,
                "kept_percent_concrete": 61.88925081433225,
                "kept_percent_lambda": 38.11074918566775,
                "num_examples": 2,
                "num_explored_concrete": 1114,
                "num_explored_lambda": 830,
                "num_explored_none": 2320,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 117,
                "num_values_explored": 4264,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5384
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68527318211272,
            "num_unique_values": 637,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.11182720780352,
                "explored_percent_lambda": 23.549904197874934,
                "explored_percent_none": 38.33826859432155,
                "kept_percent_concrete": 52.456418383518226,
                "kept_percent_lambda": 47.543581616481774,
                "num_examples": 4,
                "num_explored_concrete": 2188,
                "num_explored_lambda": 1352,
                "num_explored_none": 2201,
                "num_inputs": 2,
                "num_kept_concrete": 331,
                "num_kept_lambda": 300,
                "num_values_explored": 5741,
                "num_values_kept": 631,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58838
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2743111520539969,
            "num_unique_values": 263,
            "solution": "Take(Add(1, 1), Map((lambda u1: ((lambda v1: Add(v1, -1)))(u1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.7816091954023,
                "explored_percent_lambda": 35.40229885057471,
                "explored_percent_none": 7.816091954022989,
                "kept_percent_concrete": 52.91828793774319,
                "kept_percent_lambda": 47.08171206225681,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 154,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 136,
                "num_kept_lambda": 121,
                "num_values_explored": 435,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6233494579792,
            "num_unique_values": 947,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.38745387453874,
                "explored_percent_lambda": 16.81180811808118,
                "explored_percent_none": 21.800738007380073,
                "kept_percent_concrete": 65.28662420382166,
                "kept_percent_lambda": 34.71337579617835,
                "num_examples": 4,
                "num_explored_concrete": 4159,
                "num_explored_lambda": 1139,
                "num_explored_none": 1477,
                "num_inputs": 1,
                "num_kept_concrete": 615,
                "num_kept_lambda": 327,
                "num_values_explored": 6775,
                "num_values_kept": 942,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67438
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.305302725872025,
            "num_unique_values": 273,
            "solution": "Multiply(Add(1, Subtract(1, Subtract(-1, x1))), IntDivide(If(IsEven(x1), 1, x1), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 23.139079333986288,
                "explored_percent_lambda": 26.27326150832517,
                "explored_percent_none": 50.58765915768854,
                "kept_percent_concrete": 42.91044776119403,
                "kept_percent_lambda": 57.08955223880597,
                "num_examples": 5,
                "num_explored_concrete": 945,
                "num_explored_lambda": 1073,
                "num_explored_none": 2066,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 153,
                "num_values_explored": 4084,
                "num_values_kept": 268,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11140
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1842672280035913,
            "num_unique_values": 182,
            "solution": "Take(IntDivide(Add(x1, x1), x1), Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.39080459770115,
                "explored_percent_lambda": 16.551724137931036,
                "explored_percent_none": 5.057471264367816,
                "kept_percent_concrete": 70.85714285714286,
                "kept_percent_lambda": 29.142857142857142,
                "num_examples": 2,
                "num_explored_concrete": 341,
                "num_explored_lambda": 72,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 124,
                "num_kept_lambda": 51,
                "num_values_explored": 435,
                "num_values_kept": 175,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 86.98262506281026,
            "num_unique_values": 288,
            "solution": "Min(Add(Add(x2, x1), Square(Add(-1, -1))), Subtract(Square(Square(Add(-1, -1))), x2))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 30.00229726625316,
                "explored_percent_lambda": 16.21869974730071,
                "explored_percent_none": 53.77900298644613,
                "kept_percent_concrete": 72.69503546099291,
                "kept_percent_lambda": 27.30496453900709,
                "num_examples": 2,
                "num_explored_concrete": 1306,
                "num_explored_lambda": 706,
                "num_explored_none": 2341,
                "num_inputs": 2,
                "num_kept_concrete": 205,
                "num_kept_lambda": 77,
                "num_values_explored": 4353,
                "num_values_kept": 282,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 56694
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18918688013218343,
            "num_unique_values": 165,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u1)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.15985130111524,
                "explored_percent_lambda": 39.405204460966544,
                "explored_percent_none": 7.434944237918216,
                "kept_percent_concrete": 42.40506329113924,
                "kept_percent_lambda": 57.59493670886076,
                "num_examples": 4,
                "num_explored_concrete": 143,
                "num_explored_lambda": 106,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 67,
                "num_kept_lambda": 91,
                "num_values_explored": 269,
                "num_values_kept": 158,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2562451029662043,
            "num_unique_values": 282,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.48062015503876,
                "explored_percent_lambda": 20.73643410852713,
                "explored_percent_none": 6.782945736434108,
                "kept_percent_concrete": 69.45454545454545,
                "kept_percent_lambda": 30.545454545454547,
                "num_examples": 4,
                "num_explored_concrete": 374,
                "num_explored_lambda": 107,
                "num_explored_none": 35,
                "num_inputs": 3,
                "num_kept_concrete": 191,
                "num_kept_lambda": 84,
                "num_values_explored": 516,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 66.4269996441435,
            "num_unique_values": 290,
            "solution": "Min(Max(Add(x2, 1), IntDivide(Square(x1), x2)), Add(x1, Add(1, IntDivide(x1, x2))))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 29.02532250358337,
                "explored_percent_lambda": 13.23459149546106,
                "explored_percent_none": 57.740086000955564,
                "kept_percent_concrete": 79.5774647887324,
                "kept_percent_lambda": 20.422535211267604,
                "num_examples": 4,
                "num_explored_concrete": 1215,
                "num_explored_lambda": 554,
                "num_explored_none": 2417,
                "num_inputs": 2,
                "num_kept_concrete": 226,
                "num_kept_lambda": 58,
                "num_values_explored": 4186,
                "num_values_kept": 284,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 42500
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75597371091135,
            "num_unique_values": 1052,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.05678340700442,
                "explored_percent_lambda": 20.945256715402923,
                "explored_percent_none": 15.997959877592656,
                "kept_percent_concrete": 53.19961795606495,
                "kept_percent_lambda": 46.80038204393505,
                "num_examples": 5,
                "num_explored_concrete": 3709,
                "num_explored_lambda": 1232,
                "num_explored_none": 941,
                "num_inputs": 1,
                "num_kept_concrete": 557,
                "num_kept_lambda": 490,
                "num_values_explored": 5882,
                "num_values_kept": 1047,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60661
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2640850809402764,
            "num_unique_values": 236,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 75.35971223021583,
                "explored_percent_lambda": 14.568345323741006,
                "explored_percent_none": 10.071942446043165,
                "kept_percent_concrete": 81.6593886462882,
                "kept_percent_lambda": 18.34061135371179,
                "num_examples": 5,
                "num_explored_concrete": 419,
                "num_explored_lambda": 81,
                "num_explored_none": 56,
                "num_inputs": 3,
                "num_kept_concrete": 187,
                "num_kept_lambda": 42,
                "num_values_explored": 556,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 556
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79276494588703,
            "num_unique_values": 1179,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.00170357751278,
                "explored_percent_lambda": 25.87734241908007,
                "explored_percent_none": 17.120954003407157,
                "kept_percent_concrete": 52.0442930153322,
                "kept_percent_lambda": 47.9557069846678,
                "num_examples": 3,
                "num_explored_concrete": 3346,
                "num_explored_lambda": 1519,
                "num_explored_none": 1005,
                "num_inputs": 1,
                "num_kept_concrete": 611,
                "num_kept_lambda": 563,
                "num_values_explored": 5870,
                "num_values_kept": 1174,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60093
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18544470984488726,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 50.91575091575091,
                "explored_percent_lambda": 32.967032967032964,
                "explored_percent_none": 16.117216117216117,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 4,
                "num_explored_concrete": 139,
                "num_explored_lambda": 90,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 72,
                "num_values_explored": 273,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74099145410582,
            "num_unique_values": 1425,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.73266145073597,
                "explored_percent_lambda": 10.661715952791408,
                "explored_percent_none": 13.605622596472616,
                "kept_percent_concrete": 81.45275035260931,
                "kept_percent_lambda": 18.54724964739069,
                "num_examples": 5,
                "num_explored_concrete": 5711,
                "num_explored_lambda": 804,
                "num_explored_none": 1026,
                "num_inputs": 3,
                "num_kept_concrete": 1155,
                "num_kept_lambda": 263,
                "num_values_explored": 7541,
                "num_values_kept": 1418,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76502
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.251665404997766,
            "num_unique_values": 205,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.2183908045977,
                "explored_percent_lambda": 29.195402298850574,
                "explored_percent_none": 7.586206896551724,
                "kept_percent_concrete": 53.266331658291456,
                "kept_percent_lambda": 46.733668341708544,
                "num_examples": 5,
                "num_explored_concrete": 275,
                "num_explored_lambda": 127,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 93,
                "num_values_explored": 435,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50132423592731,
            "num_unique_values": 587,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.22134387351779,
                "explored_percent_lambda": 16.083916083916083,
                "explored_percent_none": 35.69474004256613,
                "kept_percent_concrete": 66.09294320137694,
                "kept_percent_lambda": 33.90705679862307,
                "num_examples": 5,
                "num_explored_concrete": 3172,
                "num_explored_lambda": 1058,
                "num_explored_none": 2348,
                "num_inputs": 2,
                "num_kept_concrete": 384,
                "num_kept_lambda": 197,
                "num_values_explored": 6578,
                "num_values_kept": 581,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66193
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 70.55586296715774,
            "num_unique_values": 859,
            "solution": "Sort(Scanl1((lambda u1, u2: 1), Map((lambda u1: IntDivide(IntDivide(Last(x2), x1), x1)), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 54.71947194719472,
                "explored_percent_lambda": 25.957095709570957,
                "explored_percent_none": 19.323432343234323,
                "kept_percent_concrete": 38.68698710433763,
                "kept_percent_lambda": 61.31301289566237,
                "num_examples": 2,
                "num_explored_concrete": 3316,
                "num_explored_lambda": 1573,
                "num_explored_none": 1171,
                "num_inputs": 2,
                "num_kept_concrete": 330,
                "num_kept_lambda": 523,
                "num_values_explored": 6060,
                "num_values_kept": 853,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 43660
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51705839415081,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.66041108132261,
                "explored_percent_lambda": 33.45844504021448,
                "explored_percent_none": 46.881143878462915,
                "kept_percent_concrete": 39.41798941798942,
                "kept_percent_lambda": 60.58201058201058,
                "num_examples": 4,
                "num_explored_concrete": 1100,
                "num_explored_lambda": 1872,
                "num_explored_none": 2623,
                "num_inputs": 1,
                "num_kept_concrete": 149,
                "num_kept_lambda": 229,
                "num_values_explored": 5595,
                "num_values_kept": 378,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56996
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93061386491172,
            "num_unique_values": 1451,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.913217623498,
                "explored_percent_lambda": 25.784379172229638,
                "explored_percent_none": 14.302403204272363,
                "kept_percent_concrete": 47.40484429065744,
                "kept_percent_lambda": 52.59515570934256,
                "num_examples": 4,
                "num_explored_concrete": 3590,
                "num_explored_lambda": 1545,
                "num_explored_none": 857,
                "num_inputs": 2,
                "num_kept_concrete": 685,
                "num_kept_lambda": 760,
                "num_values_explored": 5992,
                "num_values_kept": 1445,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61687
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75956693501212,
            "num_unique_values": 1018,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.80517082179132,
                "explored_percent_lambda": 17.405355493998155,
                "explored_percent_none": 15.789473684210526,
                "kept_percent_concrete": 63.1786771964462,
                "kept_percent_lambda": 36.8213228035538,
                "num_examples": 3,
                "num_explored_concrete": 4341,
                "num_explored_lambda": 1131,
                "num_explored_none": 1026,
                "num_inputs": 1,
                "num_kept_concrete": 640,
                "num_kept_lambda": 373,
                "num_values_explored": 6498,
                "num_values_kept": 1013,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67440
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26640330301597714,
            "num_unique_values": 190,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.964093357271096,
                "explored_percent_lambda": 25.673249551166965,
                "explored_percent_none": 14.362657091561939,
                "kept_percent_concrete": 52.71739130434783,
                "kept_percent_lambda": 47.28260869565217,
                "num_examples": 2,
                "num_explored_concrete": 334,
                "num_explored_lambda": 143,
                "num_explored_none": 80,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 87,
                "num_values_explored": 557,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48929362394847,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.04165921687824,
                "explored_percent_lambda": 31.682460218129805,
                "explored_percent_none": 49.27588056499195,
                "kept_percent_concrete": 39.15343915343915,
                "kept_percent_lambda": 60.84656084656085,
                "num_examples": 4,
                "num_explored_concrete": 1065,
                "num_explored_lambda": 1772,
                "num_explored_none": 2756,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 230,
                "num_values_explored": 5593,
                "num_values_kept": 378,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56889
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86566977598704,
            "num_unique_values": 1175,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.2027972027972,
                "explored_percent_lambda": 14.909090909090908,
                "explored_percent_none": 11.888111888111888,
                "kept_percent_concrete": 68.52010265183918,
                "kept_percent_lambda": 31.479897348160822,
                "num_examples": 2,
                "num_explored_concrete": 5234,
                "num_explored_lambda": 1066,
                "num_explored_none": 850,
                "num_inputs": 2,
                "num_kept_concrete": 801,
                "num_kept_lambda": 368,
                "num_values_explored": 7150,
                "num_values_kept": 1169,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73122
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71307416609488,
            "num_unique_values": 1423,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.58387568070128,
                "explored_percent_lambda": 9.788816575906495,
                "explored_percent_none": 13.627307743392217,
                "kept_percent_concrete": 81.22794636556104,
                "kept_percent_lambda": 18.772053634438954,
                "num_examples": 5,
                "num_explored_concrete": 5766,
                "num_explored_lambda": 737,
                "num_explored_none": 1026,
                "num_inputs": 2,
                "num_kept_concrete": 1151,
                "num_kept_lambda": 266,
                "num_values_explored": 7529,
                "num_values_kept": 1417,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77218
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.91844136104919,
            "num_unique_values": 1021,
            "solution": "Scanl1((lambda u1, u2: Subtract(Add(-1, -1), 1)), Map((lambda u1: Sum(Take(-1, Scanl1((lambda u1, u2: -1), Sort(x1))))), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 69.45462384134511,
                "explored_percent_lambda": 21.427031687863764,
                "explored_percent_none": 9.118344470791119,
                "kept_percent_concrete": 58.85826771653543,
                "kept_percent_lambda": 41.14173228346457,
                "num_examples": 3,
                "num_explored_concrete": 3222,
                "num_explored_lambda": 994,
                "num_explored_none": 423,
                "num_inputs": 1,
                "num_kept_concrete": 598,
                "num_kept_lambda": 418,
                "num_values_explored": 4639,
                "num_values_kept": 1016,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19548
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81337564205751,
            "num_unique_values": 1477,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.07977207977208,
                "explored_percent_lambda": 12.720797720797721,
                "explored_percent_none": 15.1994301994302,
                "kept_percent_concrete": 79.53772943575798,
                "kept_percent_lambda": 20.46227056424201,
                "num_examples": 5,
                "num_explored_concrete": 5060,
                "num_explored_lambda": 893,
                "num_explored_none": 1067,
                "num_inputs": 2,
                "num_kept_concrete": 1170,
                "num_kept_lambda": 301,
                "num_values_explored": 7020,
                "num_values_kept": 1471,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73263
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98142604902387,
            "num_unique_values": 1336,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.717451523545705,
                "explored_percent_lambda": 29.8303324099723,
                "explored_percent_none": 13.452216066481995,
                "kept_percent_concrete": 42.82494365138993,
                "kept_percent_lambda": 57.17505634861007,
                "num_examples": 2,
                "num_explored_concrete": 3276,
                "num_explored_lambda": 1723,
                "num_explored_none": 777,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 761,
                "num_values_explored": 5776,
                "num_values_kept": 1331,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58885
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68591496814042,
            "num_unique_values": 1200,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.85714285714286,
                "explored_percent_lambda": 10.727611940298507,
                "explored_percent_none": 21.415245202558637,
                "kept_percent_concrete": 77.03269069572507,
                "kept_percent_lambda": 22.967309304274938,
                "num_examples": 4,
                "num_explored_concrete": 5092,
                "num_explored_lambda": 805,
                "num_explored_none": 1607,
                "num_inputs": 3,
                "num_kept_concrete": 919,
                "num_kept_lambda": 274,
                "num_values_explored": 7504,
                "num_values_kept": 1193,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76806
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70665793307126,
            "num_unique_values": 558,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.54609929078014,
                "explored_percent_lambda": 41.62107396149949,
                "explored_percent_none": 34.83282674772037,
                "kept_percent_concrete": 14.828209764918626,
                "kept_percent_lambda": 85.17179023508137,
                "num_examples": 2,
                "num_explored_concrete": 1162,
                "num_explored_lambda": 2054,
                "num_explored_none": 1719,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 471,
                "num_values_explored": 4935,
                "num_values_kept": 553,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50429
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70585276489146,
            "num_unique_values": 1402,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.01465917419985,
                "explored_percent_lambda": 8.441241143415587,
                "explored_percent_none": 11.544099682384559,
                "kept_percent_concrete": 87.31182795698925,
                "kept_percent_lambda": 12.688172043010752,
                "num_examples": 4,
                "num_explored_concrete": 6550,
                "num_explored_lambda": 691,
                "num_explored_none": 945,
                "num_inputs": 3,
                "num_kept_concrete": 1218,
                "num_kept_lambda": 177,
                "num_values_explored": 8186,
                "num_values_kept": 1395,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 84014
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85242587910034,
            "num_unique_values": 1150,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.26382509645416,
                "explored_percent_lambda": 34.19070365607202,
                "explored_percent_none": 17.54547124747382,
                "kept_percent_concrete": 38.60262008733624,
                "kept_percent_lambda": 61.39737991266376,
                "num_examples": 3,
                "num_explored_concrete": 2627,
                "num_explored_lambda": 1861,
                "num_explored_none": 955,
                "num_inputs": 1,
                "num_kept_concrete": 442,
                "num_kept_lambda": 703,
                "num_values_explored": 5443,
                "num_values_kept": 1145,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57002
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45997762796469,
            "num_unique_values": 379,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.056747650292603,
                "explored_percent_lambda": 32.080156056038305,
                "explored_percent_none": 47.86309629366909,
                "kept_percent_concrete": 36.63101604278075,
                "kept_percent_lambda": 63.36898395721925,
                "num_examples": 4,
                "num_explored_concrete": 1131,
                "num_explored_lambda": 1809,
                "num_explored_none": 2699,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 237,
                "num_values_explored": 5639,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57640
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 26.34528736700304,
            "num_unique_values": 800,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(-1, -1))), x1)))), Map((lambda u1: Square(Head(x1))), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 58.71313672922252,
                "explored_percent_lambda": 23.97974381888591,
                "explored_percent_none": 17.30711945189157,
                "kept_percent_concrete": 52.57861635220126,
                "kept_percent_lambda": 47.42138364779874,
                "num_examples": 2,
                "num_explored_concrete": 1971,
                "num_explored_lambda": 805,
                "num_explored_none": 581,
                "num_inputs": 1,
                "num_kept_concrete": 418,
                "num_kept_lambda": 377,
                "num_values_explored": 3357,
                "num_values_kept": 795,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17922
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 90.23587669897825,
            "num_unique_values": 1029,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(Last(x1), ((lambda v1: IsOdd(v1)))(v1))))(u1)), x2))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 77.1845347684464,
                "explored_percent_lambda": 11.683897464948307,
                "explored_percent_none": 11.131567766605297,
                "kept_percent_concrete": 76.71232876712328,
                "kept_percent_lambda": 23.28767123287671,
                "num_examples": 5,
                "num_explored_concrete": 5450,
                "num_explored_lambda": 825,
                "num_explored_none": 786,
                "num_inputs": 3,
                "num_kept_concrete": 784,
                "num_kept_lambda": 238,
                "num_values_explored": 7061,
                "num_values_kept": 1022,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 68372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.270911149913445,
            "num_unique_values": 676,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Drop(Head(x2), Map((lambda u1: Sum(x2)), x2))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 60.66005264223527,
                "explored_percent_lambda": 22.2109738813525,
                "explored_percent_none": 17.12897347641223,
                "kept_percent_concrete": 46.56716417910448,
                "kept_percent_lambda": 53.43283582089552,
                "num_examples": 2,
                "num_explored_concrete": 2996,
                "num_explored_lambda": 1097,
                "num_explored_none": 846,
                "num_inputs": 2,
                "num_kept_concrete": 312,
                "num_kept_lambda": 358,
                "num_values_explored": 4939,
                "num_values_kept": 670,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6339
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59291662997566,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.08548268238762,
                "explored_percent_lambda": 28.537214443625643,
                "explored_percent_none": 34.377302873986736,
                "kept_percent_concrete": 32.56578947368421,
                "kept_percent_lambda": 67.4342105263158,
                "num_examples": 3,
                "num_explored_concrete": 2013,
                "num_explored_lambda": 1549,
                "num_explored_none": 1866,
                "num_inputs": 1,
                "num_kept_concrete": 198,
                "num_kept_lambda": 410,
                "num_values_explored": 5428,
                "num_values_kept": 608,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56647
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67271528788842,
            "num_unique_values": 1349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.30499873128647,
                "explored_percent_lambda": 5.645775183963461,
                "explored_percent_none": 16.049226084750064,
                "kept_percent_concrete": 90.1639344262295,
                "kept_percent_lambda": 9.836065573770492,
                "num_examples": 5,
                "num_explored_concrete": 6172,
                "num_explored_lambda": 445,
                "num_explored_none": 1265,
                "num_inputs": 3,
                "num_kept_concrete": 1210,
                "num_kept_lambda": 132,
                "num_values_explored": 7882,
                "num_values_kept": 1342,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 81307
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.015129117062315,
            "num_unique_values": 510,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 56.154465004022526,
                "explored_percent_lambda": 21.158487530168944,
                "explored_percent_none": 22.68704746580853,
                "kept_percent_concrete": 68.389662027833,
                "kept_percent_lambda": 31.610337972167,
                "num_examples": 4,
                "num_explored_concrete": 1396,
                "num_explored_lambda": 526,
                "num_explored_none": 564,
                "num_inputs": 3,
                "num_kept_concrete": 344,
                "num_kept_lambda": 159,
                "num_values_explored": 2486,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4446
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.29613133496605,
            "num_unique_values": 1010,
            "solution": "Scanl1((lambda u1, u2: Add(-1, 1)), Take(-1, Map((lambda u1: Subtract(Square(Add(-1, -1)), Access(1, x1))), x1)))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 65.93869731800767,
                "explored_percent_lambda": 22.298850574712645,
                "explored_percent_none": 11.762452107279694,
                "kept_percent_concrete": 53.134328358208954,
                "kept_percent_lambda": 46.865671641791046,
                "num_examples": 2,
                "num_explored_concrete": 3442,
                "num_explored_lambda": 1164,
                "num_explored_none": 614,
                "num_inputs": 1,
                "num_kept_concrete": 534,
                "num_kept_lambda": 471,
                "num_values_explored": 5220,
                "num_values_kept": 1005,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 39291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64497668086551,
            "num_unique_values": 1046,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.62848893166506,
                "explored_percent_lambda": 11.9483019386773,
                "explored_percent_none": 14.423209129657637,
                "kept_percent_concrete": 76.0576923076923,
                "kept_percent_lambda": 23.942307692307693,
                "num_examples": 3,
                "num_explored_concrete": 5355,
                "num_explored_lambda": 869,
                "num_explored_none": 1049,
                "num_inputs": 2,
                "num_kept_concrete": 791,
                "num_kept_lambda": 249,
                "num_values_explored": 7273,
                "num_values_kept": 1040,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74163
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.40571052604355,
            "num_unique_values": 317,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.59744508490419,
                "explored_percent_lambda": 13.039414238978035,
                "explored_percent_none": 51.36314067611777,
                "kept_percent_concrete": 76.20578778135048,
                "kept_percent_lambda": 23.794212218649516,
                "num_examples": 4,
                "num_explored_concrete": 2285,
                "num_explored_lambda": 837,
                "num_explored_none": 3297,
                "num_inputs": 2,
                "num_kept_concrete": 237,
                "num_kept_lambda": 74,
                "num_values_explored": 6419,
                "num_values_kept": 311,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65964
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85075681796297,
            "num_unique_values": 1036,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.48409838633872,
                "explored_percent_lambda": 13.379288735704215,
                "explored_percent_none": 16.136612877957074,
                "kept_percent_concrete": 75.84869059165858,
                "kept_percent_lambda": 24.151309408341415,
                "num_examples": 5,
                "num_explored_concrete": 4499,
                "num_explored_lambda": 854,
                "num_explored_none": 1030,
                "num_inputs": 1,
                "num_kept_concrete": 782,
                "num_kept_lambda": 249,
                "num_values_explored": 6383,
                "num_values_kept": 1031,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65328
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86447435501032,
            "num_unique_values": 775,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.959820783350196,
                "explored_percent_lambda": 9.105362046538517,
                "explored_percent_none": 28.934817170111288,
                "kept_percent_concrete": 79.45383615084525,
                "kept_percent_lambda": 20.546163849154745,
                "num_examples": 4,
                "num_explored_concrete": 4287,
                "num_explored_lambda": 630,
                "num_explored_none": 2002,
                "num_inputs": 2,
                "num_kept_concrete": 611,
                "num_kept_lambda": 158,
                "num_values_explored": 6919,
                "num_values_kept": 769,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70169
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67203914304264,
            "num_unique_values": 338,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.56792287467134,
                "explored_percent_lambda": 21.314636283961438,
                "explored_percent_none": 46.11744084136722,
                "kept_percent_concrete": 59.15915915915916,
                "kept_percent_lambda": 40.84084084084084,
                "num_examples": 3,
                "num_explored_concrete": 1858,
                "num_explored_lambda": 1216,
                "num_explored_none": 2631,
                "num_inputs": 1,
                "num_kept_concrete": 197,
                "num_kept_lambda": 136,
                "num_values_explored": 5705,
                "num_values_kept": 333,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57958
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84104353003204,
            "num_unique_values": 988,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.48743969389453,
                "explored_percent_lambda": 15.837631009815338,
                "explored_percent_none": 13.674929296290134,
                "kept_percent_concrete": 65.4786150712831,
                "kept_percent_lambda": 34.521384928716905,
                "num_examples": 3,
                "num_explored_concrete": 4237,
                "num_explored_lambda": 952,
                "num_explored_none": 822,
                "num_inputs": 2,
                "num_kept_concrete": 643,
                "num_kept_lambda": 339,
                "num_values_explored": 6011,
                "num_values_kept": 982,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61335
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02850978611968,
            "num_unique_values": 998,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.97340329292564,
                "explored_percent_lambda": 22.18201555997829,
                "explored_percent_none": 16.844581147096076,
                "kept_percent_concrete": 55.68982880161128,
                "kept_percent_lambda": 44.31017119838872,
                "num_examples": 5,
                "num_explored_concrete": 3370,
                "num_explored_lambda": 1226,
                "num_explored_none": 931,
                "num_inputs": 1,
                "num_kept_concrete": 553,
                "num_kept_lambda": 440,
                "num_values_explored": 5527,
                "num_values_kept": 993,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56257
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.299040626036,
            "num_unique_values": 1143,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.289205702647656,
                "explored_percent_lambda": 14.222674813306178,
                "explored_percent_none": 22.488119484046166,
                "kept_percent_concrete": 72.58347978910369,
                "kept_percent_lambda": 27.41652021089631,
                "num_examples": 5,
                "num_explored_concrete": 3729,
                "num_explored_lambda": 838,
                "num_explored_none": 1325,
                "num_inputs": 1,
                "num_kept_concrete": 826,
                "num_kept_lambda": 312,
                "num_values_explored": 5892,
                "num_values_kept": 1138,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60267
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85441331402399,
            "num_unique_values": 663,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.27378562826174,
                "explored_percent_lambda": 25.79285427539141,
                "explored_percent_none": 25.93336009634685,
                "kept_percent_concrete": 35.86626139817629,
                "kept_percent_lambda": 64.13373860182371,
                "num_examples": 2,
                "num_explored_concrete": 2405,
                "num_explored_lambda": 1285,
                "num_explored_none": 1292,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 422,
                "num_values_explored": 4982,
                "num_values_kept": 658,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52386
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.33232965623029,
            "num_unique_values": 1056,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.873479318734795,
                "explored_percent_lambda": 20.53933495539335,
                "explored_percent_none": 22.58718572587186,
                "kept_percent_concrete": 60.9895337773549,
                "kept_percent_lambda": 39.0104662226451,
                "num_examples": 4,
                "num_explored_concrete": 2805,
                "num_explored_lambda": 1013,
                "num_explored_none": 1114,
                "num_inputs": 1,
                "num_kept_concrete": 641,
                "num_kept_lambda": 410,
                "num_values_explored": 4932,
                "num_values_kept": 1051,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52027
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88913360401057,
            "num_unique_values": 515,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.829931972789115,
                "explored_percent_lambda": 40.68027210884354,
                "explored_percent_none": 34.48979591836735,
                "kept_percent_concrete": 20.784313725490197,
                "kept_percent_lambda": 79.2156862745098,
                "num_examples": 2,
                "num_explored_concrete": 1095,
                "num_explored_lambda": 1794,
                "num_explored_none": 1521,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 404,
                "num_values_explored": 4410,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45588
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8854706720449,
            "num_unique_values": 653,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.92121339793554,
                "explored_percent_lambda": 30.524541815883715,
                "explored_percent_none": 27.554244786180746,
                "kept_percent_concrete": 24.074074074074073,
                "kept_percent_lambda": 75.92592592592592,
                "num_examples": 2,
                "num_explored_concrete": 1990,
                "num_explored_lambda": 1449,
                "num_explored_none": 1308,
                "num_inputs": 1,
                "num_kept_concrete": 156,
                "num_kept_lambda": 492,
                "num_values_explored": 4747,
                "num_values_kept": 648,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49098
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48900858312845,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.449128185476145,
                "explored_percent_lambda": 28.051350833493007,
                "explored_percent_none": 47.49952098103085,
                "kept_percent_concrete": 32.63157894736842,
                "kept_percent_lambda": 67.36842105263158,
                "num_examples": 2,
                "num_explored_concrete": 1276,
                "num_explored_lambda": 1464,
                "num_explored_none": 2479,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 256,
                "num_values_explored": 5219,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52490
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60227886191569,
            "num_unique_values": 389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.851445663010967,
                "explored_percent_lambda": 30.468594217347956,
                "explored_percent_none": 46.67996011964107,
                "kept_percent_concrete": 38.28125,
                "kept_percent_lambda": 61.71875,
                "num_examples": 2,
                "num_explored_concrete": 1146,
                "num_explored_lambda": 1528,
                "num_explored_none": 2341,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 237,
                "num_values_explored": 5015,
                "num_values_kept": 384,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51909
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75222662999295,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.069681887037436,
                "explored_percent_lambda": 38.498160571304915,
                "explored_percent_none": 43.43215754165765,
                "kept_percent_concrete": 25.46419098143236,
                "kept_percent_lambda": 74.53580901856763,
                "num_examples": 2,
                "num_explored_concrete": 835,
                "num_explored_lambda": 1779,
                "num_explored_none": 2007,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 281,
                "num_values_explored": 4621,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48362
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50613378593698,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.790575916230367,
                "explored_percent_lambda": 37.424083769633505,
                "explored_percent_none": 42.78534031413613,
                "kept_percent_concrete": 28.571428571428573,
                "kept_percent_lambda": 71.42857142857143,
                "num_examples": 2,
                "num_explored_concrete": 945,
                "num_explored_lambda": 1787,
                "num_explored_none": 2043,
                "num_inputs": 2,
                "num_kept_concrete": 108,
                "num_kept_lambda": 270,
                "num_values_explored": 4775,
                "num_values_kept": 378,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47807
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51746538211592,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.425257731958762,
                "explored_percent_lambda": 35.67439862542955,
                "explored_percent_none": 43.90034364261168,
                "kept_percent_concrete": 27.320954907161802,
                "kept_percent_lambda": 72.6790450928382,
                "num_examples": 2,
                "num_explored_concrete": 951,
                "num_explored_lambda": 1661,
                "num_explored_none": 2044,
                "num_inputs": 2,
                "num_kept_concrete": 103,
                "num_kept_lambda": 274,
                "num_values_explored": 4656,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48289
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51031202008016,
            "num_unique_values": 390,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.12541546643031,
                "explored_percent_lambda": 37.314424994460445,
                "explored_percent_none": 44.56015953910924,
                "kept_percent_concrete": 22.395833333333332,
                "kept_percent_lambda": 77.60416666666667,
                "num_examples": 2,
                "num_explored_concrete": 818,
                "num_explored_lambda": 1684,
                "num_explored_none": 2011,
                "num_inputs": 2,
                "num_kept_concrete": 86,
                "num_kept_lambda": 298,
                "num_values_explored": 4513,
                "num_values_kept": 384,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47032
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6913431819994,
            "num_unique_values": 483,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.642132527519966,
                "explored_percent_lambda": 39.49924454996762,
                "explored_percent_none": 34.85862292251241,
                "kept_percent_concrete": 18.410041841004183,
                "kept_percent_lambda": 81.58995815899581,
                "num_examples": 2,
                "num_explored_concrete": 1188,
                "num_explored_lambda": 1830,
                "num_explored_none": 1615,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 390,
                "num_values_explored": 4633,
                "num_values_kept": 478,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47868
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58046546694823,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.935621402685996,
                "explored_percent_lambda": 33.91600937966319,
                "explored_percent_none": 44.148369217650824,
                "kept_percent_concrete": 27.05570291777188,
                "kept_percent_lambda": 72.94429708222812,
                "num_examples": 3,
                "num_explored_concrete": 1029,
                "num_explored_lambda": 1591,
                "num_explored_none": 2071,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 275,
                "num_values_explored": 4691,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49489
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.52
}