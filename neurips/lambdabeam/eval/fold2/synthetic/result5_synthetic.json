{
    "num_tasks": 100,
    "num_tasks_solved": 51,
    "results": [
        {
            "elapsed_time": 0.6138453679159284,
            "num_unique_values": 117,
            "solution": "Map((lambda u1: ((lambda v1: Max(1, ((lambda v1: IntDivide(v1, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 39.49579831932773,
                "explored_percent_none": 16.80672268907563,
                "kept_percent_concrete": 35.714285714285715,
                "kept_percent_lambda": 64.28571428571429,
                "num_examples": 2,
                "num_explored_concrete": 104,
                "num_explored_lambda": 94,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 72,
                "num_values_explored": 238,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16797857987694442,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), v1, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.83453237410072,
                "explored_percent_lambda": 31.294964028776977,
                "explored_percent_none": 11.870503597122303,
                "kept_percent_concrete": 55.033557046979865,
                "kept_percent_lambda": 44.966442953020135,
                "num_examples": 3,
                "num_explored_concrete": 158,
                "num_explored_lambda": 87,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 67,
                "num_values_explored": 278,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 278
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12103011389262974,
            "num_unique_values": 107,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 54.06976744186046,
                "explored_percent_none": 12.209302325581396,
                "kept_percent_concrete": 23.529411764705884,
                "kept_percent_lambda": 76.47058823529412,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 93,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 78,
                "num_values_explored": 172,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14522476005367935,
            "num_unique_values": 112,
            "solution": "Drop(Square(Add(-1, -1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.766871165644172,
                "explored_percent_lambda": 65.03067484662577,
                "explored_percent_none": 9.202453987730062,
                "kept_percent_concrete": 17.757009345794394,
                "kept_percent_lambda": 82.24299065420561,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 106,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 88,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0819763820618391,
            "num_unique_values": 69,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.2251655629139,
                "explored_percent_lambda": 22.516556291390728,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 50.79365079365079,
                "kept_percent_lambda": 49.20634920634921,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 34,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 31,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18439347087405622,
            "num_unique_values": 94,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.267080745341616,
                "explored_percent_lambda": 53.41614906832298,
                "explored_percent_none": 9.316770186335404,
                "kept_percent_concrete": 18.181818181818183,
                "kept_percent_lambda": 81.81818181818181,
                "num_examples": 4,
                "num_explored_concrete": 60,
                "num_explored_lambda": 86,
                "num_explored_none": 15,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 72,
                "num_values_explored": 161,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12033223290927708,
            "num_unique_values": 97,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.95061728395062,
                "explored_percent_lambda": 54.93827160493827,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 17.391304347826086,
                "kept_percent_lambda": 82.6086956521739,
                "num_examples": 2,
                "num_explored_concrete": 55,
                "num_explored_lambda": 89,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 76,
                "num_values_explored": 162,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1276946421712637,
            "num_unique_values": 104,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.061349693251532,
                "explored_percent_lambda": 59.50920245398773,
                "explored_percent_none": 10.429447852760736,
                "kept_percent_concrete": 16.161616161616163,
                "kept_percent_lambda": 83.83838383838383,
                "num_examples": 2,
                "num_explored_concrete": 49,
                "num_explored_lambda": 97,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 83,
                "num_values_explored": 163,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33368843514472246,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.166666666666664,
                "explored_percent_lambda": 34.78260869565217,
                "explored_percent_none": 11.05072463768116,
                "kept_percent_concrete": 46.82539682539682,
                "kept_percent_lambda": 53.17460317460318,
                "num_examples": 4,
                "num_explored_concrete": 299,
                "num_explored_lambda": 192,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 134,
                "num_values_explored": 552,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08033843990415335,
            "num_unique_values": 83,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 74.26900584795321,
                "explored_percent_lambda": 11.11111111111111,
                "explored_percent_none": 14.619883040935672,
                "kept_percent_concrete": 79.22077922077922,
                "kept_percent_lambda": 20.77922077922078,
                "num_examples": 5,
                "num_explored_concrete": 127,
                "num_explored_lambda": 19,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 61,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 77,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1468066619709134,
            "num_unique_values": 155,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.52380952380952,
                "explored_percent_lambda": 15.555555555555555,
                "explored_percent_none": 14.920634920634921,
                "kept_percent_concrete": 77.18120805369128,
                "kept_percent_lambda": 22.818791946308725,
                "num_examples": 4,
                "num_explored_concrete": 219,
                "num_explored_lambda": 49,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 34,
                "num_values_explored": 315,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 315
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13048503082245588,
            "num_unique_values": 68,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.81524926686217,
                "explored_percent_lambda": 21.114369501466275,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 146,
                "num_explored_lambda": 72,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18625624990090728,
            "num_unique_values": 186,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.39344262295082,
                "explored_percent_lambda": 32.131147540983605,
                "explored_percent_none": 11.475409836065573,
                "kept_percent_concrete": 54.69613259668508,
                "kept_percent_lambda": 45.30386740331492,
                "num_examples": 4,
                "num_explored_concrete": 172,
                "num_explored_lambda": 98,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 82,
                "num_values_explored": 305,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1923444929998368,
            "num_unique_values": 181,
            "solution": "Square(IntDivide(Add(1, 1), Sum(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.14018691588785,
                "explored_percent_lambda": 33.021806853582554,
                "explored_percent_none": 11.838006230529595,
                "kept_percent_concrete": 51.13636363636363,
                "kept_percent_lambda": 48.86363636363637,
                "num_examples": 2,
                "num_explored_concrete": 177,
                "num_explored_lambda": 106,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 86,
                "num_values_explored": 321,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 321
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16973645193502307,
            "num_unique_values": 162,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.35294117647059,
                "explored_percent_lambda": 33.088235294117645,
                "explored_percent_none": 9.558823529411764,
                "kept_percent_concrete": 53.84615384615385,
                "kept_percent_lambda": 46.15384615384615,
                "num_examples": 5,
                "num_explored_concrete": 156,
                "num_explored_lambda": 90,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 156,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27451994316652417,
            "num_unique_values": 224,
            "solution": "Add(1, Subtract(1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.745098039215684,
                "explored_percent_lambda": 25.846702317290553,
                "explored_percent_none": 11.408199643493761,
                "kept_percent_concrete": 56.62100456621005,
                "kept_percent_lambda": 43.37899543378995,
                "num_examples": 3,
                "num_explored_concrete": 352,
                "num_explored_lambda": 145,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 95,
                "num_values_explored": 561,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 561
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21996047208085656,
            "num_unique_values": 180,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 44.688644688644686,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 12.454212454212454,
                "kept_percent_concrete": 43.67816091954023,
                "kept_percent_lambda": 56.32183908045977,
                "num_examples": 2,
                "num_explored_concrete": 122,
                "num_explored_lambda": 117,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 98,
                "num_values_explored": 273,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3301987631712109,
            "num_unique_values": 208,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.20417633410673,
                "explored_percent_lambda": 39.21113689095127,
                "explored_percent_none": 8.584686774941995,
                "kept_percent_concrete": 39.90147783251231,
                "kept_percent_lambda": 60.09852216748769,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 169,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 122,
                "num_values_explored": 431,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10592055902816355,
            "num_unique_values": 122,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 17.647058823529413,
                "explored_percent_none": 14.479638009049774,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 39,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 32,
                "num_values_explored": 221,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09135664999485016,
            "num_unique_values": 73,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.717948717948715,
                "explored_percent_lambda": 39.743589743589745,
                "explored_percent_none": 11.538461538461538,
                "kept_percent_concrete": 26.865671641791046,
                "kept_percent_lambda": 73.13432835820896,
                "num_examples": 2,
                "num_explored_concrete": 76,
                "num_explored_lambda": 62,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 49,
                "num_values_explored": 156,
                "num_values_kept": 67,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1791752481367439,
            "num_unique_values": 143,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1, v2: Min(v1, v2)))(u2, u2)), x1, Reverse(x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.29501915708812,
                "explored_percent_lambda": 42.1455938697318,
                "explored_percent_none": 14.559386973180077,
                "kept_percent_concrete": 30.656934306569344,
                "kept_percent_lambda": 69.34306569343066,
                "num_examples": 3,
                "num_explored_concrete": 113,
                "num_explored_lambda": 110,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 42,
                "num_kept_lambda": 95,
                "num_values_explored": 261,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5359990228898823,
            "num_unique_values": 301,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.80487804878049,
                "explored_percent_lambda": 46.78492239467849,
                "explored_percent_none": 15.41019955654102,
                "kept_percent_concrete": 53.898305084745765,
                "kept_percent_lambda": 46.101694915254235,
                "num_examples": 4,
                "num_explored_concrete": 341,
                "num_explored_lambda": 422,
                "num_explored_none": 139,
                "num_inputs": 2,
                "num_kept_concrete": 159,
                "num_kept_lambda": 136,
                "num_values_explored": 902,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2862
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7080393829383,
            "num_unique_values": 1026,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.93486190724336,
                "explored_percent_lambda": 15.806843842278965,
                "explored_percent_none": 9.258294250477679,
                "kept_percent_concrete": 72.08619000979432,
                "kept_percent_lambda": 27.91380999020568,
                "num_examples": 5,
                "num_explored_concrete": 4314,
                "num_explored_lambda": 910,
                "num_explored_none": 533,
                "num_inputs": 1,
                "num_kept_concrete": 736,
                "num_kept_lambda": 285,
                "num_values_explored": 5757,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62557
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3289104150608182,
            "num_unique_values": 319,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.55797101449275,
                "explored_percent_lambda": 22.463768115942027,
                "explored_percent_none": 5.978260869565218,
                "kept_percent_concrete": 71.8849840255591,
                "kept_percent_lambda": 28.115015974440894,
                "num_examples": 5,
                "num_explored_concrete": 395,
                "num_explored_lambda": 124,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 88,
                "num_values_explored": 552,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15111551899462938,
            "num_unique_values": 139,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(-1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.594202898550726,
                "explored_percent_lambda": 24.27536231884058,
                "explored_percent_none": 14.130434782608695,
                "kept_percent_concrete": 61.65413533834587,
                "kept_percent_lambda": 38.34586466165413,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 67,
                "num_explored_none": 39,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 51,
                "num_values_explored": 276,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07916495995596051,
            "num_unique_values": 79,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.91304347826087,
                "explored_percent_lambda": 18.633540372670808,
                "explored_percent_none": 7.453416149068323,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 2,
                "num_explored_concrete": 119,
                "num_explored_lambda": 30,
                "num_explored_none": 12,
                "num_inputs": 3,
                "num_kept_concrete": 50,
                "num_kept_lambda": 22,
                "num_values_explored": 161,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.658878247020766,
            "num_unique_values": 650,
            "solution": "Last(ZipWith((lambda u1, u2: ((lambda v1: Subtract(v1, Last(x1))))(u2)), x2, x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 50.936003482803656,
                "explored_percent_lambda": 27.60121898127993,
                "explored_percent_none": 21.462777535916413,
                "kept_percent_concrete": 69.09937888198758,
                "kept_percent_lambda": 30.900621118012424,
                "num_examples": 5,
                "num_explored_concrete": 1170,
                "num_explored_lambda": 634,
                "num_explored_none": 493,
                "num_inputs": 2,
                "num_kept_concrete": 445,
                "num_kept_lambda": 199,
                "num_values_explored": 2297,
                "num_values_kept": 644,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 30631
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5639441080857,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.98174157303371,
                "explored_percent_lambda": 21.172752808988765,
                "explored_percent_none": 54.84550561797753,
                "kept_percent_concrete": 63.84180790960452,
                "kept_percent_lambda": 36.15819209039548,
                "num_examples": 5,
                "num_explored_concrete": 1366,
                "num_explored_lambda": 1206,
                "num_explored_none": 3124,
                "num_inputs": 1,
                "num_kept_concrete": 226,
                "num_kept_lambda": 128,
                "num_values_explored": 5696,
                "num_values_kept": 354,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59602
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18803751608356833,
            "num_unique_values": 154,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.1522633744856,
                "explored_percent_lambda": 46.09053497942387,
                "explored_percent_none": 12.757201646090534,
                "kept_percent_concrete": 35.57046979865772,
                "kept_percent_lambda": 64.42953020134229,
                "num_examples": 3,
                "num_explored_concrete": 100,
                "num_explored_lambda": 112,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 96,
                "num_values_explored": 243,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 243
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35033559589646757,
            "num_unique_values": 326,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 87.20930232558139,
                "explored_percent_lambda": 5.6976744186046515,
                "explored_percent_none": 7.093023255813954,
                "kept_percent_concrete": 90.0,
                "kept_percent_lambda": 10.0,
                "num_examples": 5,
                "num_explored_concrete": 750,
                "num_explored_lambda": 49,
                "num_explored_none": 61,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 32,
                "num_values_explored": 860,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29838367900811136,
            "num_unique_values": 299,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 68.84057971014492,
                "explored_percent_lambda": 24.818840579710145,
                "explored_percent_none": 6.340579710144928,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 3,
                "num_explored_concrete": 380,
                "num_explored_lambda": 137,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 103,
                "num_values_explored": 552,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.40163102000952,
            "num_unique_values": 365,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.0835985927291,
                "explored_percent_lambda": 24.409448818897637,
                "explored_percent_none": 46.50695258837326,
                "kept_percent_concrete": 56.111111111111114,
                "kept_percent_lambda": 43.888888888888886,
                "num_examples": 2,
                "num_explored_concrete": 1736,
                "num_explored_lambda": 1457,
                "num_explored_none": 2776,
                "num_inputs": 1,
                "num_kept_concrete": 202,
                "num_kept_lambda": 158,
                "num_values_explored": 5969,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61181
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1800817910116166,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.51660516605166,
                "explored_percent_lambda": 29.88929889298893,
                "explored_percent_none": 9.59409594095941,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 164,
                "num_explored_lambda": 81,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 63,
                "num_values_explored": 271,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37685370701365173,
            "num_unique_values": 328,
            "solution": "Square(Min(Last(x2), Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 80.27210884353741,
                "explored_percent_lambda": 15.532879818594104,
                "explored_percent_none": 4.195011337868481,
                "kept_percent_concrete": 69.56521739130434,
                "kept_percent_lambda": 30.434782608695652,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 137,
                "num_explored_none": 37,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 98,
                "num_values_explored": 882,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97766868793406,
            "num_unique_values": 1212,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.39107998525618,
                "explored_percent_lambda": 33.542204201990415,
                "explored_percent_none": 13.06671581275341,
                "kept_percent_concrete": 38.93951946975974,
                "kept_percent_lambda": 61.06048053024026,
                "num_examples": 2,
                "num_explored_concrete": 2897,
                "num_explored_lambda": 1820,
                "num_explored_none": 709,
                "num_inputs": 1,
                "num_kept_concrete": 470,
                "num_kept_lambda": 737,
                "num_values_explored": 5426,
                "num_values_kept": 1207,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54736
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21967647201381624,
            "num_unique_values": 150,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 45.38745387453874,
                "explored_percent_none": 15.498154981549815,
                "kept_percent_concrete": 30.344827586206897,
                "kept_percent_lambda": 69.65517241379311,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 123,
                "num_explored_none": 42,
                "num_inputs": 1,
                "num_kept_concrete": 44,
                "num_kept_lambda": 101,
                "num_values_explored": 271,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3100232919678092,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.84684684684684,
                "explored_percent_lambda": 23.603603603603602,
                "explored_percent_none": 9.54954954954955,
                "kept_percent_concrete": 60.273972602739725,
                "kept_percent_lambda": 39.726027397260275,
                "num_examples": 5,
                "num_explored_concrete": 371,
                "num_explored_lambda": 131,
                "num_explored_none": 53,
                "num_inputs": 2,
                "num_kept_concrete": 132,
                "num_kept_lambda": 87,
                "num_values_explored": 555,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.97864150791429,
            "num_unique_values": 453,
            "solution": "Subtract(Min(x3, x1), Sum(x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.55323142933762,
                "explored_percent_lambda": 14.212925717350496,
                "explored_percent_none": 32.23384285331188,
                "kept_percent_concrete": 69.05829596412556,
                "kept_percent_lambda": 30.94170403587444,
                "num_examples": 2,
                "num_explored_concrete": 1997,
                "num_explored_lambda": 530,
                "num_explored_none": 1202,
                "num_inputs": 3,
                "num_kept_concrete": 308,
                "num_kept_lambda": 138,
                "num_values_explored": 3729,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19098
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84138646908104,
            "num_unique_values": 1184,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.971885982038266,
                "explored_percent_lambda": 30.417805544709097,
                "explored_percent_none": 17.610308473252637,
                "kept_percent_concrete": 41.30619168787108,
                "kept_percent_lambda": 58.69380831212892,
                "num_examples": 2,
                "num_explored_concrete": 2662,
                "num_explored_lambda": 1558,
                "num_explored_none": 902,
                "num_inputs": 1,
                "num_kept_concrete": 487,
                "num_kept_lambda": 692,
                "num_values_explored": 5122,
                "num_values_kept": 1179,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56501
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.64403804996982,
            "num_unique_values": 963,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(-1, -1)), v1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 70.700203942896,
                "explored_percent_lambda": 18.422841604350783,
                "explored_percent_none": 10.876954452753228,
                "kept_percent_concrete": 58.55949895615866,
                "kept_percent_lambda": 41.44050104384134,
                "num_examples": 2,
                "num_explored_concrete": 4160,
                "num_explored_lambda": 1084,
                "num_explored_none": 640,
                "num_inputs": 1,
                "num_kept_concrete": 561,
                "num_kept_lambda": 397,
                "num_values_explored": 5884,
                "num_values_kept": 958,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 32220
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.41573172807693,
            "num_unique_values": 366,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.256889928177717,
                "explored_percent_lambda": 23.116752964756973,
                "explored_percent_none": 50.62635710706531,
                "kept_percent_concrete": 56.111111111111114,
                "kept_percent_lambda": 43.888888888888886,
                "num_examples": 2,
                "num_explored_concrete": 1572,
                "num_explored_lambda": 1384,
                "num_explored_none": 3031,
                "num_inputs": 2,
                "num_kept_concrete": 202,
                "num_kept_lambda": 158,
                "num_values_explored": 5987,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60969
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6664798790589,
            "num_unique_values": 576,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.49618320610687,
                "explored_percent_lambda": 25.0381679389313,
                "explored_percent_none": 39.465648854961835,
                "kept_percent_concrete": 47.19298245614035,
                "kept_percent_lambda": 52.80701754385965,
                "num_examples": 4,
                "num_explored_concrete": 1860,
                "num_explored_lambda": 1312,
                "num_explored_none": 2068,
                "num_inputs": 2,
                "num_kept_concrete": 269,
                "num_kept_lambda": 301,
                "num_values_explored": 5240,
                "num_values_kept": 570,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56990
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2891215509735048,
            "num_unique_values": 263,
            "solution": "Take(Add(1, 1), Map((lambda u1: ((lambda v1: Add(v1, -1)))(u1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.7816091954023,
                "explored_percent_lambda": 35.40229885057471,
                "explored_percent_none": 7.816091954022989,
                "kept_percent_concrete": 52.91828793774319,
                "kept_percent_lambda": 47.08171206225681,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 154,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 136,
                "num_kept_lambda": 121,
                "num_values_explored": 435,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.48221905808896,
            "num_unique_values": 960,
            "solution": "Multiply(Add(1, 1), Add(Head(x1), Square(Square(Add(-1, -1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.45578558818809,
                "explored_percent_lambda": 17.332691381800675,
                "explored_percent_none": 22.211523030011236,
                "kept_percent_concrete": 60.41884816753927,
                "kept_percent_lambda": 39.58115183246073,
                "num_examples": 4,
                "num_explored_concrete": 3767,
                "num_explored_lambda": 1080,
                "num_explored_none": 1384,
                "num_inputs": 1,
                "num_kept_concrete": 577,
                "num_kept_lambda": 378,
                "num_values_explored": 6231,
                "num_values_kept": 955,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 26512
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.70352159393951,
            "num_unique_values": 279,
            "solution": "Multiply(Subtract(1, Add(-1, Subtract(-1, x1))), If(IsOdd(x1), 1, Add(-1, 1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 23.454678719765454,
                "explored_percent_lambda": 26.14219398973858,
                "explored_percent_none": 50.403127290495966,
                "kept_percent_concrete": 45.25547445255474,
                "kept_percent_lambda": 54.74452554744526,
                "num_examples": 5,
                "num_explored_concrete": 960,
                "num_explored_lambda": 1070,
                "num_explored_none": 2063,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 150,
                "num_values_explored": 4093,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22104
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20071246684528887,
            "num_unique_values": 182,
            "solution": "Take(IntDivide(Add(x1, x1), x1), Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.39080459770115,
                "explored_percent_lambda": 16.551724137931036,
                "explored_percent_none": 5.057471264367816,
                "kept_percent_concrete": 70.85714285714286,
                "kept_percent_lambda": 29.142857142857142,
                "num_examples": 2,
                "num_explored_concrete": 341,
                "num_explored_lambda": 72,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 124,
                "num_kept_lambda": 51,
                "num_values_explored": 435,
                "num_values_kept": 175,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.50167572312057,
            "num_unique_values": 306,
            "solution": "Max(Add(1, Subtract(x2, Subtract(-1, Add(x1, 1)))), Subtract(x1, x2))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 31.841691027659095,
                "explored_percent_lambda": 18.281987856982234,
                "explored_percent_none": 49.87632111535867,
                "kept_percent_concrete": 67.0,
                "kept_percent_lambda": 33.0,
                "num_examples": 2,
                "num_explored_concrete": 1416,
                "num_explored_lambda": 813,
                "num_explored_none": 2218,
                "num_inputs": 2,
                "num_kept_concrete": 201,
                "num_kept_lambda": 99,
                "num_values_explored": 4447,
                "num_values_kept": 300,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 24239
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1935592710506171,
            "num_unique_values": 165,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u1)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.15985130111524,
                "explored_percent_lambda": 39.405204460966544,
                "explored_percent_none": 7.434944237918216,
                "kept_percent_concrete": 42.40506329113924,
                "kept_percent_lambda": 57.59493670886076,
                "num_examples": 4,
                "num_explored_concrete": 143,
                "num_explored_lambda": 106,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 67,
                "num_kept_lambda": 91,
                "num_values_explored": 269,
                "num_values_kept": 158,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2664980189874768,
            "num_unique_values": 282,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.48062015503876,
                "explored_percent_lambda": 20.73643410852713,
                "explored_percent_none": 6.782945736434108,
                "kept_percent_concrete": 69.45454545454545,
                "kept_percent_lambda": 30.545454545454547,
                "num_examples": 4,
                "num_explored_concrete": 374,
                "num_explored_lambda": 107,
                "num_explored_none": 35,
                "num_inputs": 3,
                "num_kept_concrete": 191,
                "num_kept_lambda": 84,
                "num_values_explored": 516,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.32681505614892,
            "num_unique_values": 413,
            "solution": "Max(Min(Add(x1, IntDivide(x1, Add(x2, -1))), Square(x2)), Subtract(Add(x1, x1), Square(x2)))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 28.487167224613422,
                "explored_percent_lambda": 16.6268133269568,
                "explored_percent_none": 54.88601944842978,
                "kept_percent_concrete": 76.90417690417691,
                "kept_percent_lambda": 23.095823095823096,
                "num_examples": 4,
                "num_explored_concrete": 1787,
                "num_explored_lambda": 1043,
                "num_explored_none": 3443,
                "num_inputs": 2,
                "num_kept_concrete": 313,
                "num_kept_lambda": 94,
                "num_values_explored": 6273,
                "num_values_kept": 407,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 26549
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78712387895212,
            "num_unique_values": 996,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.14155336189234,
                "explored_percent_lambda": 21.717265785062395,
                "explored_percent_none": 18.14118085304526,
                "kept_percent_concrete": 51.96770938446014,
                "kept_percent_lambda": 48.03229061553986,
                "num_examples": 5,
                "num_explored_concrete": 3229,
                "num_explored_lambda": 1166,
                "num_explored_none": 974,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 476,
                "num_values_explored": 5369,
                "num_values_kept": 991,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57096
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2728296259883791,
            "num_unique_values": 236,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 75.35971223021583,
                "explored_percent_lambda": 14.568345323741006,
                "explored_percent_none": 10.071942446043165,
                "kept_percent_concrete": 81.6593886462882,
                "kept_percent_lambda": 18.34061135371179,
                "num_examples": 5,
                "num_explored_concrete": 419,
                "num_explored_lambda": 81,
                "num_explored_none": 56,
                "num_inputs": 3,
                "num_kept_concrete": 187,
                "num_kept_lambda": 42,
                "num_values_explored": 556,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 556
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8653878599871,
            "num_unique_values": 1182,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.6092971776425,
                "explored_percent_lambda": 26.950747094631986,
                "explored_percent_none": 15.439955727725511,
                "kept_percent_concrete": 51.316907391673745,
                "kept_percent_lambda": 48.683092608326255,
                "num_examples": 3,
                "num_explored_concrete": 3123,
                "num_explored_lambda": 1461,
                "num_explored_none": 837,
                "num_inputs": 1,
                "num_kept_concrete": 604,
                "num_kept_lambda": 573,
                "num_values_explored": 5421,
                "num_values_kept": 1177,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54969
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2969217097852379,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 50.91575091575091,
                "explored_percent_lambda": 32.967032967032964,
                "explored_percent_none": 16.117216117216117,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 4,
                "num_explored_concrete": 139,
                "num_explored_lambda": 90,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 72,
                "num_values_explored": 273,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79253486613743,
            "num_unique_values": 1400,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.75311292400171,
                "explored_percent_lambda": 10.67697151853442,
                "explored_percent_none": 14.569915557463862,
                "kept_percent_concrete": 81.9813352476669,
                "kept_percent_lambda": 18.018664752333095,
                "num_examples": 5,
                "num_explored_concrete": 5223,
                "num_explored_lambda": 746,
                "num_explored_none": 1018,
                "num_inputs": 3,
                "num_kept_concrete": 1142,
                "num_kept_lambda": 251,
                "num_values_explored": 6987,
                "num_values_kept": 1393,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69990
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2573989920783788,
            "num_unique_values": 205,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.2183908045977,
                "explored_percent_lambda": 29.195402298850574,
                "explored_percent_none": 7.586206896551724,
                "kept_percent_concrete": 53.266331658291456,
                "kept_percent_lambda": 46.733668341708544,
                "num_examples": 5,
                "num_explored_concrete": 275,
                "num_explored_lambda": 127,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 93,
                "num_values_explored": 435,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52357925800607,
            "num_unique_values": 564,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.94729660583319,
                "explored_percent_lambda": 16.834385127068053,
                "explored_percent_none": 40.21831826709875,
                "kept_percent_concrete": 63.261648745519715,
                "kept_percent_lambda": 36.738351254480285,
                "num_examples": 5,
                "num_explored_concrete": 2518,
                "num_explored_lambda": 987,
                "num_explored_none": 2358,
                "num_inputs": 2,
                "num_kept_concrete": 353,
                "num_kept_lambda": 205,
                "num_values_explored": 5863,
                "num_values_kept": 558,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61350
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7505697440356,
            "num_unique_values": 828,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.39735459322341,
                "explored_percent_lambda": 27.19695597028447,
                "explored_percent_none": 19.405689436492118,
                "kept_percent_concrete": 35.523114355231144,
                "kept_percent_lambda": 64.47688564476886,
                "num_examples": 2,
                "num_explored_concrete": 2947,
                "num_explored_lambda": 1501,
                "num_explored_none": 1071,
                "num_inputs": 2,
                "num_kept_concrete": 292,
                "num_kept_lambda": 530,
                "num_values_explored": 5519,
                "num_values_kept": 822,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54948
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.550895125838,
            "num_unique_values": 380,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.793965020180664,
                "explored_percent_lambda": 30.789928887180473,
                "explored_percent_none": 45.41610609263886,
                "kept_percent_concrete": 36.0,
                "kept_percent_lambda": 64.0,
                "num_examples": 4,
                "num_explored_concrete": 1238,
                "num_explored_lambda": 1602,
                "num_explored_none": 2363,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 240,
                "num_values_explored": 5203,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52916
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97176722693257,
            "num_unique_values": 1323,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.64304280020794,
                "explored_percent_lambda": 24.44983538381563,
                "explored_percent_none": 15.907121815976433,
                "kept_percent_concrete": 50.18982536066819,
                "kept_percent_lambda": 49.81017463933181,
                "num_examples": 4,
                "num_explored_concrete": 3442,
                "num_explored_lambda": 1411,
                "num_explored_none": 918,
                "num_inputs": 2,
                "num_kept_concrete": 661,
                "num_kept_lambda": 656,
                "num_values_explored": 5771,
                "num_values_kept": 1317,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59155
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84477353887632,
            "num_unique_values": 943,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.96555150712156,
                "explored_percent_lambda": 17.141437562106656,
                "explored_percent_none": 16.89301093077178,
                "kept_percent_concrete": 63.32622601279318,
                "kept_percent_lambda": 36.67377398720682,
                "num_examples": 3,
                "num_explored_concrete": 3983,
                "num_explored_lambda": 1035,
                "num_explored_none": 1020,
                "num_inputs": 1,
                "num_kept_concrete": 594,
                "num_kept_lambda": 344,
                "num_values_explored": 6038,
                "num_values_kept": 938,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62891
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3652070490643382,
            "num_unique_values": 190,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.964093357271096,
                "explored_percent_lambda": 25.673249551166965,
                "explored_percent_none": 14.362657091561939,
                "kept_percent_concrete": 52.71739130434783,
                "kept_percent_lambda": 47.28260869565217,
                "num_examples": 2,
                "num_explored_concrete": 334,
                "num_explored_lambda": 143,
                "num_explored_none": 80,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 87,
                "num_values_explored": 557,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50994686502963,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.502092050209207,
                "explored_percent_lambda": 31.513883605933817,
                "explored_percent_none": 47.98402434385698,
                "kept_percent_concrete": 41.644562334217504,
                "kept_percent_lambda": 58.355437665782496,
                "num_examples": 4,
                "num_explored_concrete": 1078,
                "num_explored_lambda": 1657,
                "num_explored_none": 2523,
                "num_inputs": 1,
                "num_kept_concrete": 157,
                "num_kept_lambda": 220,
                "num_values_explored": 5258,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52418
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89644214115106,
            "num_unique_values": 1135,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.12654320987654,
                "explored_percent_lambda": 17.314814814814813,
                "explored_percent_none": 11.558641975308642,
                "kept_percent_concrete": 63.95039858281665,
                "kept_percent_lambda": 36.04960141718335,
                "num_examples": 2,
                "num_explored_concrete": 4609,
                "num_explored_lambda": 1122,
                "num_explored_none": 749,
                "num_inputs": 2,
                "num_kept_concrete": 722,
                "num_kept_lambda": 407,
                "num_values_explored": 6480,
                "num_values_kept": 1129,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68798
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77772548492067,
            "num_unique_values": 1333,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.90659094305784,
                "explored_percent_lambda": 11.074577791062621,
                "explored_percent_none": 14.01883126587954,
                "kept_percent_concrete": 79.57799547852298,
                "kept_percent_lambda": 20.422004521477017,
                "num_examples": 5,
                "num_explored_concrete": 5012,
                "num_explored_lambda": 741,
                "num_explored_none": 938,
                "num_inputs": 2,
                "num_kept_concrete": 1056,
                "num_kept_lambda": 271,
                "num_values_explored": 6691,
                "num_values_kept": 1327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70832
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08853348507546,
            "num_unique_values": 1164,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.74661508704062,
                "explored_percent_lambda": 21.244358478401033,
                "explored_percent_none": 11.009026434558349,
                "kept_percent_concrete": 56.34167385677308,
                "kept_percent_lambda": 43.65832614322692,
                "num_examples": 3,
                "num_explored_concrete": 4203,
                "num_explored_lambda": 1318,
                "num_explored_none": 683,
                "num_inputs": 1,
                "num_kept_concrete": 653,
                "num_kept_lambda": 506,
                "num_values_explored": 6204,
                "num_values_kept": 1159,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64063
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98433730588295,
            "num_unique_values": 1405,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.6124460874923,
                "explored_percent_lambda": 13.786198398028343,
                "explored_percent_none": 13.601355514479359,
                "kept_percent_concrete": 79.62830593280916,
                "kept_percent_lambda": 20.37169406719085,
                "num_examples": 5,
                "num_explored_concrete": 4714,
                "num_explored_lambda": 895,
                "num_explored_none": 883,
                "num_inputs": 2,
                "num_kept_concrete": 1114,
                "num_kept_lambda": 285,
                "num_values_explored": 6492,
                "num_values_kept": 1399,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67417
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11595774907619,
            "num_unique_values": 1251,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.98571704304188,
                "explored_percent_lambda": 33.777263076626134,
                "explored_percent_none": 12.237019880331982,
                "kept_percent_concrete": 38.764044943820224,
                "kept_percent_lambda": 61.235955056179776,
                "num_examples": 2,
                "num_explored_concrete": 2797,
                "num_explored_lambda": 1750,
                "num_explored_none": 634,
                "num_inputs": 1,
                "num_kept_concrete": 483,
                "num_kept_lambda": 763,
                "num_values_explored": 5181,
                "num_values_kept": 1246,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56258
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70866383193061,
            "num_unique_values": 1095,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.28008118295158,
                "explored_percent_lambda": 12.409394027254276,
                "explored_percent_none": 21.310524789794144,
                "kept_percent_concrete": 72.15073529411765,
                "kept_percent_lambda": 27.84926470588235,
                "num_examples": 4,
                "num_explored_concrete": 4572,
                "num_explored_lambda": 856,
                "num_explored_none": 1470,
                "num_inputs": 3,
                "num_kept_concrete": 785,
                "num_kept_lambda": 303,
                "num_values_explored": 6898,
                "num_values_kept": 1088,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69699
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71359063894488,
            "num_unique_values": 506,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.50770811921891,
                "explored_percent_lambda": 44.68653648509763,
                "explored_percent_none": 32.805755395683455,
                "kept_percent_concrete": 13.173652694610778,
                "kept_percent_lambda": 86.82634730538922,
                "num_examples": 2,
                "num_explored_concrete": 1095,
                "num_explored_lambda": 2174,
                "num_explored_none": 1596,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 435,
                "num_values_explored": 4865,
                "num_values_kept": 501,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48749
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71049928409047,
            "num_unique_values": 1354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.2615036459643,
                "explored_percent_lambda": 8.159416645712849,
                "explored_percent_none": 11.579079708322856,
                "kept_percent_concrete": 87.4536005939124,
                "kept_percent_lambda": 12.546399406087602,
                "num_examples": 4,
                "num_explored_concrete": 6384,
                "num_explored_lambda": 649,
                "num_explored_none": 921,
                "num_inputs": 3,
                "num_kept_concrete": 1178,
                "num_kept_lambda": 169,
                "num_values_explored": 7954,
                "num_values_kept": 1347,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79626
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90249688201584,
            "num_unique_values": 1132,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.83766360617308,
                "explored_percent_lambda": 34.18636452432116,
                "explored_percent_none": 16.975971869505763,
                "kept_percent_concrete": 39.75155279503105,
                "kept_percent_lambda": 60.24844720496895,
                "num_examples": 3,
                "num_explored_concrete": 2500,
                "num_explored_lambda": 1750,
                "num_explored_none": 869,
                "num_inputs": 1,
                "num_kept_concrete": 448,
                "num_kept_lambda": 679,
                "num_values_explored": 5119,
                "num_values_kept": 1127,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53273
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48174747196026,
            "num_unique_values": 378,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.68144348781828,
                "explored_percent_lambda": 31.47096537827441,
                "explored_percent_none": 47.84759113390731,
                "kept_percent_concrete": 36.193029490616624,
                "kept_percent_lambda": 63.806970509383376,
                "num_examples": 4,
                "num_explored_concrete": 1129,
                "num_explored_lambda": 1718,
                "num_explored_none": 2612,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 238,
                "num_values_explored": 5459,
                "num_values_kept": 373,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55271
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.32694480381906,
            "num_unique_values": 1021,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(-1, -1))), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 65.48655445927646,
                "explored_percent_lambda": 19.907138711549624,
                "explored_percent_none": 14.60630682917392,
                "kept_percent_concrete": 56.10236220472441,
                "kept_percent_lambda": 43.89763779527559,
                "num_examples": 2,
                "num_explored_concrete": 3385,
                "num_explored_lambda": 1029,
                "num_explored_none": 755,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 446,
                "num_values_explored": 5169,
                "num_values_kept": 1016,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6849
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.604421376017854,
            "num_unique_values": 1045,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: IsEven(((lambda v1: Subtract(Last(x1), v1)))(v1))))(u1)), x2))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 76.07127704709376,
                "explored_percent_lambda": 12.346202800169706,
                "explored_percent_none": 11.58252015273653,
                "kept_percent_concrete": 74.08477842003853,
                "kept_percent_lambda": 25.915221579961464,
                "num_examples": 5,
                "num_explored_concrete": 5379,
                "num_explored_lambda": 873,
                "num_explored_none": 819,
                "num_inputs": 3,
                "num_kept_concrete": 769,
                "num_kept_lambda": 269,
                "num_values_explored": 7071,
                "num_values_kept": 1038,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 30854
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 98.94992350810207,
            "num_unique_values": 672,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Sort(Drop(Head(x1), x2))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 60.028022417934345,
                "explored_percent_lambda": 22.738190552441953,
                "explored_percent_none": 17.2337870296237,
                "kept_percent_concrete": 45.7957957957958,
                "kept_percent_lambda": 54.2042042042042,
                "num_examples": 2,
                "num_explored_concrete": 2999,
                "num_explored_lambda": 1136,
                "num_explored_none": 861,
                "num_inputs": 2,
                "num_kept_concrete": 305,
                "num_kept_lambda": 361,
                "num_values_explored": 4996,
                "num_values_kept": 666,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60947
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61564381397329,
            "num_unique_values": 581,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.71563019007197,
                "explored_percent_lambda": 27.86491972688688,
                "explored_percent_none": 33.41945008304115,
                "kept_percent_concrete": 32.46527777777778,
                "kept_percent_lambda": 67.53472222222223,
                "num_examples": 3,
                "num_explored_concrete": 2098,
                "num_explored_lambda": 1510,
                "num_explored_none": 1811,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 389,
                "num_values_explored": 5419,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54896
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77903775707819,
            "num_unique_values": 1300,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.79600765654908,
                "explored_percent_lambda": 6.275635767022149,
                "explored_percent_none": 15.928356576428767,
                "kept_percent_concrete": 89.1724671307038,
                "kept_percent_lambda": 10.82753286929621,
                "num_examples": 5,
                "num_explored_concrete": 5690,
                "num_explored_lambda": 459,
                "num_explored_none": 1165,
                "num_inputs": 3,
                "num_kept_concrete": 1153,
                "num_kept_lambda": 140,
                "num_values_explored": 7314,
                "num_values_kept": 1293,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76679
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.435477997874841,
            "num_unique_values": 705,
            "solution": "Scanl1((lambda u1, u2: IntDivide(Max(x1, 1), Head(x3))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 63.64880273660205,
                "explored_percent_lambda": 13.8654503990878,
                "explored_percent_none": 22.485746864310148,
                "kept_percent_concrete": 74.64183381088826,
                "kept_percent_lambda": 25.35816618911175,
                "num_examples": 4,
                "num_explored_concrete": 2791,
                "num_explored_lambda": 608,
                "num_explored_none": 986,
                "num_inputs": 3,
                "num_kept_concrete": 521,
                "num_kept_lambda": 177,
                "num_values_explored": 4385,
                "num_values_kept": 698,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6345
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81780440197326,
            "num_unique_values": 1115,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.47109577221742,
                "explored_percent_lambda": 22.83002588438309,
                "explored_percent_none": 10.698878343399482,
                "kept_percent_concrete": 52.7027027027027,
                "kept_percent_lambda": 47.2972972972973,
                "num_examples": 2,
                "num_explored_concrete": 3852,
                "num_explored_lambda": 1323,
                "num_explored_none": 620,
                "num_inputs": 1,
                "num_kept_concrete": 585,
                "num_kept_lambda": 525,
                "num_values_explored": 5795,
                "num_values_kept": 1110,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60079
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64262263081037,
            "num_unique_values": 1127,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.4296577946768,
                "explored_percent_lambda": 11.338946224877784,
                "explored_percent_none": 14.23139598044541,
                "kept_percent_concrete": 78.94736842105263,
                "kept_percent_lambda": 21.05263157894737,
                "num_examples": 3,
                "num_explored_concrete": 5481,
                "num_explored_lambda": 835,
                "num_explored_none": 1048,
                "num_inputs": 2,
                "num_kept_concrete": 885,
                "num_kept_lambda": 236,
                "num_values_explored": 7364,
                "num_values_kept": 1121,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75293
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.38423633179627,
            "num_unique_values": 319,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.270006108735494,
                "explored_percent_lambda": 13.317043372021992,
                "explored_percent_none": 52.412950519242514,
                "kept_percent_concrete": 74.12140575079871,
                "kept_percent_lambda": 25.878594249201278,
                "num_examples": 4,
                "num_explored_concrete": 2244,
                "num_explored_lambda": 872,
                "num_explored_none": 3432,
                "num_inputs": 2,
                "num_kept_concrete": 232,
                "num_kept_lambda": 81,
                "num_values_explored": 6548,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67281
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73193654697388,
            "num_unique_values": 1127,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.65311765519148,
                "explored_percent_lambda": 11.627263929213328,
                "explored_percent_none": 15.719618415595189,
                "kept_percent_concrete": 77.00534759358288,
                "kept_percent_lambda": 22.994652406417114,
                "num_examples": 5,
                "num_explored_concrete": 5255,
                "num_explored_lambda": 841,
                "num_explored_none": 1137,
                "num_inputs": 1,
                "num_kept_concrete": 864,
                "num_kept_lambda": 258,
                "num_values_explored": 7233,
                "num_values_kept": 1122,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71314
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73889909894206,
            "num_unique_values": 870,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.94751082251082,
                "explored_percent_lambda": 9.56439393939394,
                "explored_percent_none": 26.488095238095237,
                "kept_percent_concrete": 79.05092592592592,
                "kept_percent_lambda": 20.949074074074073,
                "num_examples": 4,
                "num_explored_concrete": 4727,
                "num_explored_lambda": 707,
                "num_explored_none": 1958,
                "num_inputs": 2,
                "num_kept_concrete": 683,
                "num_kept_lambda": 181,
                "num_values_explored": 7392,
                "num_values_kept": 864,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75781
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46256552496925,
            "num_unique_values": 346,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.876623376623378,
                "explored_percent_lambda": 21.98051948051948,
                "explored_percent_none": 47.142857142857146,
                "kept_percent_concrete": 57.77126099706745,
                "kept_percent_lambda": 42.22873900293255,
                "num_examples": 3,
                "num_explored_concrete": 1902,
                "num_explored_lambda": 1354,
                "num_explored_none": 2904,
                "num_inputs": 1,
                "num_kept_concrete": 197,
                "num_kept_lambda": 144,
                "num_values_explored": 6160,
                "num_values_kept": 341,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60998
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69121932098642,
            "num_unique_values": 1011,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.54606467358145,
                "explored_percent_lambda": 17.144600366076876,
                "explored_percent_none": 12.309334960341673,
                "kept_percent_concrete": 65.3731343283582,
                "kept_percent_lambda": 34.62686567164179,
                "num_examples": 3,
                "num_explored_concrete": 4625,
                "num_explored_lambda": 1124,
                "num_explored_none": 807,
                "num_inputs": 2,
                "num_kept_concrete": 657,
                "num_kept_lambda": 348,
                "num_values_explored": 6556,
                "num_values_kept": 1005,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67392
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9909220810514,
            "num_unique_values": 997,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.114630196149,
                "explored_percent_lambda": 23.01601583588267,
                "explored_percent_none": 17.86935396796833,
                "kept_percent_concrete": 54.53629032258065,
                "kept_percent_lambda": 45.46370967741935,
                "num_examples": 5,
                "num_explored_concrete": 3285,
                "num_explored_lambda": 1279,
                "num_explored_none": 993,
                "num_inputs": 1,
                "num_kept_concrete": 541,
                "num_kept_lambda": 451,
                "num_values_explored": 5557,
                "num_values_kept": 992,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60356
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0048123979941,
            "num_unique_values": 1201,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.01465772649306,
                "explored_percent_lambda": 13.878060190238578,
                "explored_percent_none": 24.107282083268363,
                "kept_percent_concrete": 73.91304347826087,
                "kept_percent_lambda": 26.08695652173913,
                "num_examples": 5,
                "num_explored_concrete": 3977,
                "num_explored_lambda": 890,
                "num_explored_none": 1546,
                "num_inputs": 1,
                "num_kept_concrete": 884,
                "num_kept_lambda": 312,
                "num_values_explored": 6413,
                "num_values_kept": 1196,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67159
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74180686892942,
            "num_unique_values": 654,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.25118483412322,
                "explored_percent_lambda": 24.682464454976305,
                "explored_percent_none": 26.066350710900473,
                "kept_percent_concrete": 37.90446841294299,
                "kept_percent_lambda": 62.09553158705701,
                "num_examples": 2,
                "num_explored_concrete": 2598,
                "num_explored_lambda": 1302,
                "num_explored_none": 1375,
                "num_inputs": 1,
                "num_kept_concrete": 246,
                "num_kept_lambda": 403,
                "num_values_explored": 5275,
                "num_values_kept": 649,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54612
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05031799315475,
            "num_unique_values": 1161,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.73710482529118,
                "explored_percent_lambda": 21.501201700868922,
                "explored_percent_none": 20.761693473839898,
                "kept_percent_concrete": 59.86159169550173,
                "kept_percent_lambda": 40.13840830449827,
                "num_examples": 4,
                "num_explored_concrete": 3123,
                "num_explored_lambda": 1163,
                "num_explored_none": 1123,
                "num_inputs": 1,
                "num_kept_concrete": 692,
                "num_kept_lambda": 464,
                "num_values_explored": 5409,
                "num_values_kept": 1156,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56415
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8019113400951,
            "num_unique_values": 515,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.17423616845582,
                "explored_percent_lambda": 41.78364987613543,
                "explored_percent_none": 34.04211395540875,
                "kept_percent_concrete": 19.41176470588235,
                "kept_percent_lambda": 80.58823529411765,
                "num_examples": 2,
                "num_explored_concrete": 1171,
                "num_explored_lambda": 2024,
                "num_explored_none": 1649,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 411,
                "num_values_explored": 4844,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50404
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76282219495624,
            "num_unique_values": 668,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.093858396245665,
                "explored_percent_lambda": 31.58539073658437,
                "explored_percent_none": 28.320750867169966,
                "kept_percent_concrete": 25.037707390648567,
                "kept_percent_lambda": 74.96229260935144,
                "num_examples": 2,
                "num_explored_concrete": 1965,
                "num_explored_lambda": 1548,
                "num_explored_none": 1388,
                "num_inputs": 1,
                "num_kept_concrete": 166,
                "num_kept_lambda": 497,
                "num_values_explored": 4901,
                "num_values_kept": 663,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51521
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.44449447188526,
            "num_unique_values": 378,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.536804308797127,
                "explored_percent_lambda": 29.299820466786354,
                "explored_percent_none": 47.16337522441652,
                "kept_percent_concrete": 35.388739946380696,
                "kept_percent_lambda": 64.6112600536193,
                "num_examples": 2,
                "num_explored_concrete": 1311,
                "num_explored_lambda": 1632,
                "num_explored_none": 2627,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 241,
                "num_values_explored": 5570,
                "num_values_kept": 373,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55858
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53908193018287,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.302042217264457,
                "explored_percent_lambda": 30.907842800755105,
                "explored_percent_none": 48.79011498198044,
                "kept_percent_concrete": 41.351351351351354,
                "kept_percent_lambda": 58.648648648648646,
                "num_examples": 2,
                "num_explored_concrete": 1183,
                "num_explored_lambda": 1801,
                "num_explored_none": 2843,
                "num_inputs": 1,
                "num_kept_concrete": 153,
                "num_kept_lambda": 217,
                "num_values_explored": 5827,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57746
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65617039985955,
            "num_unique_values": 383,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.386476999815258,
                "explored_percent_lambda": 39.79309070755588,
                "explored_percent_none": 43.82043229262886,
                "kept_percent_concrete": 22.546419098143236,
                "kept_percent_lambda": 77.45358090185677,
                "num_examples": 2,
                "num_explored_concrete": 887,
                "num_explored_lambda": 2154,
                "num_explored_none": 2372,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 292,
                "num_values_explored": 5413,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55394
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.42174982791767,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.858447488584474,
                "explored_percent_lambda": 39.342465753424655,
                "explored_percent_none": 43.79908675799087,
                "kept_percent_concrete": 25.925925925925927,
                "kept_percent_lambda": 74.07407407407408,
                "num_examples": 2,
                "num_explored_concrete": 923,
                "num_explored_lambda": 2154,
                "num_explored_none": 2398,
                "num_inputs": 2,
                "num_kept_concrete": 98,
                "num_kept_lambda": 280,
                "num_values_explored": 5475,
                "num_values_kept": 378,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55781
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.42215860192664,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.958818263205014,
                "explored_percent_lambda": 35.273052820053714,
                "explored_percent_none": 46.76812891674127,
                "kept_percent_concrete": 28.759894459102902,
                "kept_percent_lambda": 71.2401055408971,
                "num_examples": 2,
                "num_explored_concrete": 1003,
                "num_explored_lambda": 1970,
                "num_explored_none": 2612,
                "num_inputs": 2,
                "num_kept_concrete": 109,
                "num_kept_lambda": 270,
                "num_values_explored": 5585,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56914
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.41928178188391,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.958958596998734,
                "explored_percent_lambda": 37.82317844874345,
                "explored_percent_none": 45.21786295425782,
                "kept_percent_concrete": 27.659574468085108,
                "kept_percent_lambda": 72.34042553191489,
                "num_examples": 2,
                "num_explored_concrete": 938,
                "num_explored_lambda": 2092,
                "num_explored_none": 2501,
                "num_inputs": 2,
                "num_kept_concrete": 104,
                "num_kept_lambda": 272,
                "num_values_explored": 5531,
                "num_values_kept": 376,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56065
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60385498404503,
            "num_unique_values": 522,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.74350345859039,
                "explored_percent_lambda": 37.240605720695456,
                "explored_percent_none": 35.015890820714155,
                "kept_percent_concrete": 20.11605415860735,
                "kept_percent_lambda": 79.88394584139265,
                "num_examples": 2,
                "num_explored_concrete": 1484,
                "num_explored_lambda": 1992,
                "num_explored_none": 1873,
                "num_inputs": 1,
                "num_kept_concrete": 104,
                "num_kept_lambda": 413,
                "num_values_explored": 5349,
                "num_values_kept": 517,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54895
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50059751491062,
            "num_unique_values": 379,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.142857142857142,
                "explored_percent_lambda": 35.142857142857146,
                "explored_percent_none": 45.714285714285715,
                "kept_percent_concrete": 31.28342245989305,
                "kept_percent_lambda": 68.71657754010695,
                "num_examples": 3,
                "num_explored_concrete": 1072,
                "num_explored_lambda": 1968,
                "num_explored_none": 2560,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 257,
                "num_values_explored": 5600,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57926
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.51
}