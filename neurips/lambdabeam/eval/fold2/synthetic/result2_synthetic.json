{
    "num_tasks": 100,
    "num_tasks_solved": 49,
    "results": [
        {
            "elapsed_time": 0.6661039430182427,
            "num_unique_values": 117,
            "solution": "Map((lambda u1: ((lambda v1: Max(1, ((lambda v1: IntDivide(v1, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 39.49579831932773,
                "explored_percent_none": 16.80672268907563,
                "kept_percent_concrete": 35.714285714285715,
                "kept_percent_lambda": 64.28571428571429,
                "num_examples": 2,
                "num_explored_concrete": 104,
                "num_explored_lambda": 94,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 72,
                "num_values_explored": 238,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19879042101092637,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), v1, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.83453237410072,
                "explored_percent_lambda": 31.294964028776977,
                "explored_percent_none": 11.870503597122303,
                "kept_percent_concrete": 55.033557046979865,
                "kept_percent_lambda": 44.966442953020135,
                "num_examples": 3,
                "num_explored_concrete": 158,
                "num_explored_lambda": 87,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 67,
                "num_values_explored": 278,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 278
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14266110491007566,
            "num_unique_values": 107,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 54.06976744186046,
                "explored_percent_none": 12.209302325581396,
                "kept_percent_concrete": 23.529411764705884,
                "kept_percent_lambda": 76.47058823529412,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 93,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 78,
                "num_values_explored": 172,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1616423330269754,
            "num_unique_values": 112,
            "solution": "Drop(Square(Add(-1, -1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.766871165644172,
                "explored_percent_lambda": 65.03067484662577,
                "explored_percent_none": 9.202453987730062,
                "kept_percent_concrete": 17.757009345794394,
                "kept_percent_lambda": 82.24299065420561,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 106,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 88,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09177595400251448,
            "num_unique_values": 69,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.2251655629139,
                "explored_percent_lambda": 22.516556291390728,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 50.79365079365079,
                "kept_percent_lambda": 49.20634920634921,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 34,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 31,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21149463905021548,
            "num_unique_values": 94,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.267080745341616,
                "explored_percent_lambda": 53.41614906832298,
                "explored_percent_none": 9.316770186335404,
                "kept_percent_concrete": 18.181818181818183,
                "kept_percent_lambda": 81.81818181818181,
                "num_examples": 4,
                "num_explored_concrete": 60,
                "num_explored_lambda": 86,
                "num_explored_none": 15,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 72,
                "num_values_explored": 161,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1428367430344224,
            "num_unique_values": 97,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.95061728395062,
                "explored_percent_lambda": 54.93827160493827,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 17.391304347826086,
                "kept_percent_lambda": 82.6086956521739,
                "num_examples": 2,
                "num_explored_concrete": 55,
                "num_explored_lambda": 89,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 76,
                "num_values_explored": 162,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15380568499676883,
            "num_unique_values": 104,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.061349693251532,
                "explored_percent_lambda": 59.50920245398773,
                "explored_percent_none": 10.429447852760736,
                "kept_percent_concrete": 16.161616161616163,
                "kept_percent_lambda": 83.83838383838383,
                "num_examples": 2,
                "num_explored_concrete": 49,
                "num_explored_lambda": 97,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 83,
                "num_values_explored": 163,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39675409416668117,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.166666666666664,
                "explored_percent_lambda": 34.78260869565217,
                "explored_percent_none": 11.05072463768116,
                "kept_percent_concrete": 46.82539682539682,
                "kept_percent_lambda": 53.17460317460318,
                "num_examples": 4,
                "num_explored_concrete": 299,
                "num_explored_lambda": 192,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 134,
                "num_values_explored": 552,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0962659998331219,
            "num_unique_values": 83,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 74.26900584795321,
                "explored_percent_lambda": 11.11111111111111,
                "explored_percent_none": 14.619883040935672,
                "kept_percent_concrete": 79.22077922077922,
                "kept_percent_lambda": 20.77922077922078,
                "num_examples": 5,
                "num_explored_concrete": 127,
                "num_explored_lambda": 19,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 61,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 77,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17251966707408428,
            "num_unique_values": 155,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.52380952380952,
                "explored_percent_lambda": 15.555555555555555,
                "explored_percent_none": 14.920634920634921,
                "kept_percent_concrete": 77.18120805369128,
                "kept_percent_lambda": 22.818791946308725,
                "num_examples": 4,
                "num_explored_concrete": 219,
                "num_explored_lambda": 49,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 34,
                "num_values_explored": 315,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 315
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15084764803759754,
            "num_unique_values": 68,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.81524926686217,
                "explored_percent_lambda": 21.114369501466275,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 146,
                "num_explored_lambda": 72,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2229205451440066,
            "num_unique_values": 186,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.39344262295082,
                "explored_percent_lambda": 32.131147540983605,
                "explored_percent_none": 11.475409836065573,
                "kept_percent_concrete": 54.69613259668508,
                "kept_percent_lambda": 45.30386740331492,
                "num_examples": 4,
                "num_explored_concrete": 172,
                "num_explored_lambda": 98,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 82,
                "num_values_explored": 305,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21924724685959518,
            "num_unique_values": 181,
            "solution": "Square(IntDivide(Add(1, 1), Sum(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.14018691588785,
                "explored_percent_lambda": 33.021806853582554,
                "explored_percent_none": 11.838006230529595,
                "kept_percent_concrete": 51.13636363636363,
                "kept_percent_lambda": 48.86363636363637,
                "num_examples": 2,
                "num_explored_concrete": 177,
                "num_explored_lambda": 106,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 86,
                "num_values_explored": 321,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 321
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17792956996709108,
            "num_unique_values": 162,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.35294117647059,
                "explored_percent_lambda": 33.088235294117645,
                "explored_percent_none": 9.558823529411764,
                "kept_percent_concrete": 53.84615384615385,
                "kept_percent_lambda": 46.15384615384615,
                "num_examples": 5,
                "num_explored_concrete": 156,
                "num_explored_lambda": 90,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 156,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3205927258823067,
            "num_unique_values": 224,
            "solution": "Add(1, Subtract(1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.745098039215684,
                "explored_percent_lambda": 25.846702317290553,
                "explored_percent_none": 11.408199643493761,
                "kept_percent_concrete": 56.62100456621005,
                "kept_percent_lambda": 43.37899543378995,
                "num_examples": 3,
                "num_explored_concrete": 352,
                "num_explored_lambda": 145,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 95,
                "num_values_explored": 561,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 561
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22690163785591722,
            "num_unique_values": 180,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 44.688644688644686,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 12.454212454212454,
                "kept_percent_concrete": 43.67816091954023,
                "kept_percent_lambda": 56.32183908045977,
                "num_examples": 2,
                "num_explored_concrete": 122,
                "num_explored_lambda": 117,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 98,
                "num_values_explored": 273,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.40616151806898415,
            "num_unique_values": 208,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.20417633410673,
                "explored_percent_lambda": 39.21113689095127,
                "explored_percent_none": 8.584686774941995,
                "kept_percent_concrete": 39.90147783251231,
                "kept_percent_lambda": 60.09852216748769,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 169,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 122,
                "num_values_explored": 431,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12351876986213028,
            "num_unique_values": 122,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 17.647058823529413,
                "explored_percent_none": 14.479638009049774,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 39,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 32,
                "num_values_explored": 221,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11067055398598313,
            "num_unique_values": 73,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.717948717948715,
                "explored_percent_lambda": 39.743589743589745,
                "explored_percent_none": 11.538461538461538,
                "kept_percent_concrete": 26.865671641791046,
                "kept_percent_lambda": 73.13432835820896,
                "num_examples": 2,
                "num_explored_concrete": 76,
                "num_explored_lambda": 62,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 49,
                "num_values_explored": 156,
                "num_values_kept": 67,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2097349939867854,
            "num_unique_values": 143,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1, v2: Min(v1, v2)))(u2, u2)), x1, Reverse(x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.29501915708812,
                "explored_percent_lambda": 42.1455938697318,
                "explored_percent_none": 14.559386973180077,
                "kept_percent_concrete": 30.656934306569344,
                "kept_percent_lambda": 69.34306569343066,
                "num_examples": 3,
                "num_explored_concrete": 113,
                "num_explored_lambda": 110,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 42,
                "num_kept_lambda": 95,
                "num_values_explored": 261,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.7811652610544115,
            "num_unique_values": 301,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.80487804878049,
                "explored_percent_lambda": 46.78492239467849,
                "explored_percent_none": 15.41019955654102,
                "kept_percent_concrete": 53.898305084745765,
                "kept_percent_lambda": 46.101694915254235,
                "num_examples": 4,
                "num_explored_concrete": 341,
                "num_explored_lambda": 422,
                "num_explored_none": 139,
                "num_inputs": 2,
                "num_kept_concrete": 159,
                "num_kept_lambda": 136,
                "num_values_explored": 902,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2862
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.501518299104646,
            "num_unique_values": 793,
            "solution": "IntDivide(Square(Square(Add(-1, -1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.44008372579802,
                "explored_percent_lambda": 19.727891156462587,
                "explored_percent_none": 10.832025117739404,
                "kept_percent_concrete": 69.54314720812182,
                "kept_percent_lambda": 30.456852791878173,
                "num_examples": 5,
                "num_explored_concrete": 2654,
                "num_explored_lambda": 754,
                "num_explored_none": 414,
                "num_inputs": 1,
                "num_kept_concrete": 548,
                "num_kept_lambda": 240,
                "num_values_explored": 3822,
                "num_values_kept": 788,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 33478
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37467926391400397,
            "num_unique_values": 319,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.55797101449275,
                "explored_percent_lambda": 22.463768115942027,
                "explored_percent_none": 5.978260869565218,
                "kept_percent_concrete": 71.8849840255591,
                "kept_percent_lambda": 28.115015974440894,
                "num_examples": 5,
                "num_explored_concrete": 395,
                "num_explored_lambda": 124,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 88,
                "num_values_explored": 552,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17689098604023457,
            "num_unique_values": 139,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(-1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.594202898550726,
                "explored_percent_lambda": 24.27536231884058,
                "explored_percent_none": 14.130434782608695,
                "kept_percent_concrete": 61.65413533834587,
                "kept_percent_lambda": 38.34586466165413,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 67,
                "num_explored_none": 39,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 51,
                "num_values_explored": 276,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08597173797897995,
            "num_unique_values": 79,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.91304347826087,
                "explored_percent_lambda": 18.633540372670808,
                "explored_percent_none": 7.453416149068323,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 2,
                "num_explored_concrete": 119,
                "num_explored_lambda": 30,
                "num_explored_none": 12,
                "num_inputs": 3,
                "num_kept_concrete": 50,
                "num_kept_lambda": 22,
                "num_values_explored": 161,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.06729412195273,
            "num_unique_values": 1354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.16397228637413,
                "explored_percent_lambda": 13.658858462553612,
                "explored_percent_none": 23.177169251072254,
                "kept_percent_concrete": 79.45103857566765,
                "kept_percent_lambda": 20.548961424332344,
                "num_examples": 5,
                "num_explored_concrete": 3829,
                "num_explored_lambda": 828,
                "num_explored_none": 1405,
                "num_inputs": 2,
                "num_kept_concrete": 1071,
                "num_kept_lambda": 277,
                "num_values_explored": 6062,
                "num_values_kept": 1348,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62563
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62236980814487,
            "num_unique_values": 350,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.348288703670864,
                "explored_percent_lambda": 20.464621386770705,
                "explored_percent_none": 55.18708990955843,
                "kept_percent_concrete": 67.82608695652173,
                "kept_percent_lambda": 32.17391304347826,
                "num_examples": 5,
                "num_explored_concrete": 1373,
                "num_explored_lambda": 1154,
                "num_explored_none": 3112,
                "num_inputs": 1,
                "num_kept_concrete": 234,
                "num_kept_lambda": 111,
                "num_values_explored": 5639,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57401
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21046189195476472,
            "num_unique_values": 154,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.1522633744856,
                "explored_percent_lambda": 46.09053497942387,
                "explored_percent_none": 12.757201646090534,
                "kept_percent_concrete": 35.57046979865772,
                "kept_percent_lambda": 64.42953020134229,
                "num_examples": 3,
                "num_explored_concrete": 100,
                "num_explored_lambda": 112,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 96,
                "num_values_explored": 243,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 243
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3798528390470892,
            "num_unique_values": 326,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 87.20930232558139,
                "explored_percent_lambda": 5.6976744186046515,
                "explored_percent_none": 7.093023255813954,
                "kept_percent_concrete": 90.0,
                "kept_percent_lambda": 10.0,
                "num_examples": 5,
                "num_explored_concrete": 750,
                "num_explored_lambda": 49,
                "num_explored_none": 61,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 32,
                "num_values_explored": 860,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3469974701292813,
            "num_unique_values": 299,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 68.84057971014492,
                "explored_percent_lambda": 24.818840579710145,
                "explored_percent_none": 6.340579710144928,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 3,
                "num_explored_concrete": 380,
                "num_explored_lambda": 137,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 103,
                "num_values_explored": 552,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4353312109597,
            "num_unique_values": 350,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.618347966314282,
                "explored_percent_lambda": 23.848772621394016,
                "explored_percent_none": 46.532879412291706,
                "kept_percent_concrete": 57.971014492753625,
                "kept_percent_lambda": 42.028985507246375,
                "num_examples": 2,
                "num_explored_concrete": 1653,
                "num_explored_lambda": 1331,
                "num_explored_none": 2597,
                "num_inputs": 1,
                "num_kept_concrete": 200,
                "num_kept_lambda": 145,
                "num_values_explored": 5581,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57417
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20618479512631893,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.51660516605166,
                "explored_percent_lambda": 29.88929889298893,
                "explored_percent_none": 9.59409594095941,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 164,
                "num_explored_lambda": 81,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 63,
                "num_values_explored": 271,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4378087669610977,
            "num_unique_values": 328,
            "solution": "Square(Min(Last(x2), Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 80.27210884353741,
                "explored_percent_lambda": 15.532879818594104,
                "explored_percent_none": 4.195011337868481,
                "kept_percent_concrete": 69.56521739130434,
                "kept_percent_lambda": 30.434782608695652,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 137,
                "num_explored_none": 37,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 98,
                "num_values_explored": 882,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16035566898063,
            "num_unique_values": 1140,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.464132434089514,
                "explored_percent_lambda": 31.330472103004293,
                "explored_percent_none": 15.205395462906193,
                "kept_percent_concrete": 38.502202643171806,
                "kept_percent_lambda": 61.497797356828194,
                "num_examples": 2,
                "num_explored_concrete": 2616,
                "num_explored_lambda": 1533,
                "num_explored_none": 744,
                "num_inputs": 1,
                "num_kept_concrete": 437,
                "num_kept_lambda": 698,
                "num_values_explored": 4893,
                "num_values_kept": 1135,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50828
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25314049795269966,
            "num_unique_values": 150,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 45.38745387453874,
                "explored_percent_none": 15.498154981549815,
                "kept_percent_concrete": 30.344827586206897,
                "kept_percent_lambda": 69.65517241379311,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 123,
                "num_explored_none": 42,
                "num_inputs": 1,
                "num_kept_concrete": 44,
                "num_kept_lambda": 101,
                "num_values_explored": 271,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3550494641531259,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.84684684684684,
                "explored_percent_lambda": 23.603603603603602,
                "explored_percent_none": 9.54954954954955,
                "kept_percent_concrete": 60.273972602739725,
                "kept_percent_lambda": 39.726027397260275,
                "num_examples": 5,
                "num_explored_concrete": 371,
                "num_explored_lambda": 131,
                "num_explored_none": 53,
                "num_inputs": 2,
                "num_kept_concrete": 132,
                "num_kept_lambda": 87,
                "num_values_explored": 555,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.407144994009286,
            "num_unique_values": 276,
            "solution": "Min(Subtract(x1, Sum(x2)), Subtract(x3, Sum(x2)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 44.22970734400884,
                "explored_percent_lambda": 19.657647708448373,
                "explored_percent_none": 36.1126449475428,
                "kept_percent_concrete": 66.17100371747212,
                "kept_percent_lambda": 33.82899628252788,
                "num_examples": 2,
                "num_explored_concrete": 801,
                "num_explored_lambda": 356,
                "num_explored_none": 654,
                "num_inputs": 3,
                "num_kept_concrete": 178,
                "num_kept_lambda": 91,
                "num_values_explored": 1811,
                "num_values_kept": 269,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22370
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0905454668682,
            "num_unique_values": 1134,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.33829744415375,
                "explored_percent_lambda": 29.382169450593683,
                "explored_percent_none": 19.279533105252565,
                "kept_percent_concrete": 43.224092116917625,
                "kept_percent_lambda": 56.775907883082375,
                "num_examples": 2,
                "num_explored_concrete": 2551,
                "num_explored_lambda": 1460,
                "num_explored_none": 958,
                "num_inputs": 1,
                "num_kept_concrete": 488,
                "num_kept_lambda": 641,
                "num_values_explored": 4969,
                "num_values_kept": 1129,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52149
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.00663549103774,
            "num_unique_values": 936,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.23525400613705,
                "explored_percent_lambda": 18.88851005796113,
                "explored_percent_none": 10.876235935901807,
                "kept_percent_concrete": 59.505907626208376,
                "kept_percent_lambda": 40.494092373791624,
                "num_examples": 2,
                "num_explored_concrete": 4120,
                "num_explored_lambda": 1108,
                "num_explored_none": 638,
                "num_inputs": 1,
                "num_kept_concrete": 554,
                "num_kept_lambda": 377,
                "num_values_explored": 5866,
                "num_values_kept": 931,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59429
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47662217100151,
            "num_unique_values": 345,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.791284800276674,
                "explored_percent_lambda": 20.71589140584472,
                "explored_percent_none": 50.49282379387861,
                "kept_percent_concrete": 60.471976401179944,
                "kept_percent_lambda": 39.528023598820056,
                "num_examples": 2,
                "num_explored_concrete": 1665,
                "num_explored_lambda": 1198,
                "num_explored_none": 2920,
                "num_inputs": 2,
                "num_kept_concrete": 205,
                "num_kept_lambda": 134,
                "num_values_explored": 5783,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58802
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76179601904005,
            "num_unique_values": 563,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.97246262785208,
                "explored_percent_lambda": 25.0786782061369,
                "explored_percent_none": 39.94885916601101,
                "kept_percent_concrete": 46.858168761220824,
                "kept_percent_lambda": 53.141831238779176,
                "num_examples": 4,
                "num_explored_concrete": 1778,
                "num_explored_lambda": 1275,
                "num_explored_none": 2031,
                "num_inputs": 2,
                "num_kept_concrete": 261,
                "num_kept_lambda": 296,
                "num_values_explored": 5084,
                "num_values_kept": 557,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54026
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31207174505107105,
            "num_unique_values": 263,
            "solution": "Take(Add(1, 1), Map((lambda u1: ((lambda v1: Add(v1, -1)))(u1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.7816091954023,
                "explored_percent_lambda": 35.40229885057471,
                "explored_percent_none": 7.816091954022989,
                "kept_percent_concrete": 52.91828793774319,
                "kept_percent_lambda": 47.08171206225681,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 154,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 136,
                "num_kept_lambda": 121,
                "num_values_explored": 435,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 65.58831986202858,
            "num_unique_values": 551,
            "solution": "Multiply(Add(1, 1), Add(Square(Square(Add(-1, -1))), Head(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 45.715440582053354,
                "explored_percent_lambda": 29.021827000808408,
                "explored_percent_none": 25.26273241713824,
                "kept_percent_concrete": 53.47985347985348,
                "kept_percent_lambda": 46.52014652014652,
                "num_examples": 4,
                "num_explored_concrete": 1131,
                "num_explored_lambda": 718,
                "num_explored_none": 625,
                "num_inputs": 1,
                "num_kept_concrete": 292,
                "num_kept_lambda": 254,
                "num_values_explored": 2474,
                "num_values_kept": 546,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 39774
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.521811766084284,
            "num_unique_values": 283,
            "solution": "Multiply(Subtract(1, Subtract(-1, Add(x1, 1))), IntDivide(If(IsEven(x1), 1, x1), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 22.05846229427659,
                "explored_percent_lambda": 28.1012036354704,
                "explored_percent_none": 49.84033407025301,
                "kept_percent_concrete": 42.44604316546763,
                "kept_percent_lambda": 57.55395683453237,
                "num_examples": 5,
                "num_explored_concrete": 898,
                "num_explored_lambda": 1144,
                "num_explored_none": 2029,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 160,
                "num_values_explored": 4071,
                "num_values_kept": 278,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5191
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2074078330770135,
            "num_unique_values": 182,
            "solution": "Take(IntDivide(Add(x1, x1), x1), Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.39080459770115,
                "explored_percent_lambda": 16.551724137931036,
                "explored_percent_none": 5.057471264367816,
                "kept_percent_concrete": 70.85714285714286,
                "kept_percent_lambda": 29.142857142857142,
                "num_examples": 2,
                "num_explored_concrete": 341,
                "num_explored_lambda": 72,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 124,
                "num_kept_lambda": 51,
                "num_values_explored": 435,
                "num_values_kept": 175,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52368714497425,
            "num_unique_values": 362,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.971167369901547,
                "explored_percent_lambda": 23.329817158931082,
                "explored_percent_none": 48.69901547116737,
                "kept_percent_concrete": 58.42696629213483,
                "kept_percent_lambda": 41.57303370786517,
                "num_examples": 2,
                "num_explored_concrete": 1591,
                "num_explored_lambda": 1327,
                "num_explored_none": 2770,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 148,
                "num_values_explored": 5688,
                "num_values_kept": 356,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59791
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24447758006863296,
            "num_unique_values": 165,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u1)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.15985130111524,
                "explored_percent_lambda": 39.405204460966544,
                "explored_percent_none": 7.434944237918216,
                "kept_percent_concrete": 42.40506329113924,
                "kept_percent_lambda": 57.59493670886076,
                "num_examples": 4,
                "num_explored_concrete": 143,
                "num_explored_lambda": 106,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 67,
                "num_kept_lambda": 91,
                "num_values_explored": 269,
                "num_values_kept": 158,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31560646602883935,
            "num_unique_values": 282,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.48062015503876,
                "explored_percent_lambda": 20.73643410852713,
                "explored_percent_none": 6.782945736434108,
                "kept_percent_concrete": 69.45454545454545,
                "kept_percent_lambda": 30.545454545454547,
                "num_examples": 4,
                "num_explored_concrete": 374,
                "num_explored_lambda": 107,
                "num_explored_none": 35,
                "num_inputs": 3,
                "num_kept_concrete": 191,
                "num_kept_lambda": 84,
                "num_values_explored": 516,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.455284394091,
            "num_unique_values": 342,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.859435066020392,
                "explored_percent_lambda": 16.8978773190707,
                "explored_percent_none": 56.24268761490891,
                "kept_percent_concrete": 73.80952380952381,
                "kept_percent_lambda": 26.19047619047619,
                "num_examples": 4,
                "num_explored_concrete": 1607,
                "num_explored_lambda": 1011,
                "num_explored_none": 3365,
                "num_inputs": 2,
                "num_kept_concrete": 248,
                "num_kept_lambda": 88,
                "num_values_explored": 5983,
                "num_values_kept": 336,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61087
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93806739500724,
            "num_unique_values": 974,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.72449369507069,
                "explored_percent_lambda": 22.181887657623232,
                "explored_percent_none": 15.093618647306076,
                "kept_percent_concrete": 53.76676986584107,
                "kept_percent_lambda": 46.23323013415893,
                "num_examples": 5,
                "num_explored_concrete": 3283,
                "num_explored_lambda": 1161,
                "num_explored_none": 790,
                "num_inputs": 1,
                "num_kept_concrete": 521,
                "num_kept_lambda": 448,
                "num_values_explored": 5234,
                "num_values_kept": 969,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53530
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32546350196935236,
            "num_unique_values": 236,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 75.35971223021583,
                "explored_percent_lambda": 14.568345323741006,
                "explored_percent_none": 10.071942446043165,
                "kept_percent_concrete": 81.6593886462882,
                "kept_percent_lambda": 18.34061135371179,
                "num_examples": 5,
                "num_explored_concrete": 419,
                "num_explored_lambda": 81,
                "num_explored_none": 56,
                "num_inputs": 3,
                "num_kept_concrete": 187,
                "num_kept_lambda": 42,
                "num_values_explored": 556,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 556
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96442009089515,
            "num_unique_values": 1170,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.88021778584392,
                "explored_percent_lambda": 27.62250453720508,
                "explored_percent_none": 16.497277676950997,
                "kept_percent_concrete": 49.012875536480685,
                "kept_percent_lambda": 50.987124463519315,
                "num_examples": 3,
                "num_explored_concrete": 3079,
                "num_explored_lambda": 1522,
                "num_explored_none": 909,
                "num_inputs": 1,
                "num_kept_concrete": 571,
                "num_kept_lambda": 594,
                "num_values_explored": 5510,
                "num_values_kept": 1165,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53662
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19396930001676083,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 50.91575091575091,
                "explored_percent_lambda": 32.967032967032964,
                "explored_percent_none": 16.117216117216117,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 4,
                "num_explored_concrete": 139,
                "num_explored_lambda": 90,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 72,
                "num_values_explored": 273,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89207880594768,
            "num_unique_values": 1371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.14025085518814,
                "explored_percent_lambda": 10.148232611174459,
                "explored_percent_none": 13.7115165336374,
                "kept_percent_concrete": 81.2316715542522,
                "kept_percent_lambda": 18.7683284457478,
                "num_examples": 5,
                "num_explored_concrete": 5342,
                "num_explored_lambda": 712,
                "num_explored_none": 962,
                "num_inputs": 3,
                "num_kept_concrete": 1108,
                "num_kept_lambda": 256,
                "num_values_explored": 7016,
                "num_values_kept": 1364,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71763
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2673221258446574,
            "num_unique_values": 205,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.2183908045977,
                "explored_percent_lambda": 29.195402298850574,
                "explored_percent_none": 7.586206896551724,
                "kept_percent_concrete": 53.266331658291456,
                "kept_percent_lambda": 46.733668341708544,
                "num_examples": 5,
                "num_explored_concrete": 275,
                "num_explored_lambda": 127,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 93,
                "num_values_explored": 435,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.46743153897114,
            "num_unique_values": 554,
            "solution": "Min(Subtract(Add(x1, 1), Square(Add(-1, -1))), Subtract(Add(x1, 1), Add(-1, Head(x2))))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 45.58970932175075,
                "explored_percent_lambda": 16.187771466755763,
                "explored_percent_none": 38.222519211493484,
                "kept_percent_concrete": 69.16058394160584,
                "kept_percent_lambda": 30.83941605839416,
                "num_examples": 5,
                "num_explored_concrete": 2729,
                "num_explored_lambda": 969,
                "num_explored_none": 2288,
                "num_inputs": 2,
                "num_kept_concrete": 379,
                "num_kept_lambda": 169,
                "num_values_explored": 5986,
                "num_values_kept": 548,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 37646
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7246840139851,
            "num_unique_values": 820,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.16346153846154,
                "explored_percent_lambda": 28.53180473372781,
                "explored_percent_none": 19.30473372781065,
                "kept_percent_concrete": 34.3980343980344,
                "kept_percent_lambda": 65.6019656019656,
                "num_examples": 2,
                "num_explored_concrete": 2821,
                "num_explored_lambda": 1543,
                "num_explored_none": 1044,
                "num_inputs": 2,
                "num_kept_concrete": 280,
                "num_kept_lambda": 534,
                "num_values_explored": 5408,
                "num_values_kept": 814,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56834
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.54891774221323,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.254626923826223,
                "explored_percent_lambda": 32.339762322228715,
                "explored_percent_none": 46.40561075394506,
                "kept_percent_concrete": 38.1578947368421,
                "kept_percent_lambda": 61.8421052631579,
                "num_examples": 4,
                "num_explored_concrete": 1091,
                "num_explored_lambda": 1660,
                "num_explored_none": 2382,
                "num_inputs": 1,
                "num_kept_concrete": 145,
                "num_kept_lambda": 235,
                "num_values_explored": 5133,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53770
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9529160510283,
            "num_unique_values": 1314,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.35242135030046,
                "explored_percent_lambda": 25.433015199717214,
                "explored_percent_none": 17.214563449982325,
                "kept_percent_concrete": 48.47094801223242,
                "kept_percent_lambda": 51.52905198776758,
                "num_examples": 4,
                "num_explored_concrete": 3245,
                "num_explored_lambda": 1439,
                "num_explored_none": 974,
                "num_inputs": 2,
                "num_kept_concrete": 634,
                "num_kept_lambda": 674,
                "num_values_explored": 5658,
                "num_values_kept": 1308,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59518
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80618294491433,
            "num_unique_values": 988,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.34032935098483,
                "explored_percent_lambda": 17.613819825637712,
                "explored_percent_none": 14.045850823377462,
                "kept_percent_concrete": 65.31027466937945,
                "kept_percent_lambda": 34.68972533062055,
                "num_examples": 3,
                "num_explored_concrete": 4233,
                "num_explored_lambda": 1091,
                "num_explored_none": 870,
                "num_inputs": 1,
                "num_kept_concrete": 642,
                "num_kept_lambda": 341,
                "num_values_explored": 6194,
                "num_values_kept": 983,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63421
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2824710679706186,
            "num_unique_values": 190,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.964093357271096,
                "explored_percent_lambda": 25.673249551166965,
                "explored_percent_none": 14.362657091561939,
                "kept_percent_concrete": 52.71739130434783,
                "kept_percent_lambda": 47.28260869565217,
                "num_examples": 2,
                "num_explored_concrete": 334,
                "num_explored_lambda": 143,
                "num_explored_none": 80,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 87,
                "num_values_explored": 557,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51604997506365,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.738472888233126,
                "explored_percent_lambda": 31.83327185540391,
                "explored_percent_none": 49.42825525636297,
                "kept_percent_concrete": 36.8421052631579,
                "kept_percent_lambda": 63.1578947368421,
                "num_examples": 4,
                "num_explored_concrete": 1016,
                "num_explored_lambda": 1726,
                "num_explored_none": 2680,
                "num_inputs": 1,
                "num_kept_concrete": 140,
                "num_kept_lambda": 240,
                "num_values_explored": 5422,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54751
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89561017998494,
            "num_unique_values": 1196,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.55830841520718,
                "explored_percent_lambda": 15.221415349565712,
                "explored_percent_none": 11.22027623522711,
                "kept_percent_concrete": 66.89075630252101,
                "kept_percent_lambda": 33.109243697478995,
                "num_examples": 2,
                "num_explored_concrete": 5166,
                "num_explored_lambda": 1069,
                "num_explored_none": 788,
                "num_inputs": 2,
                "num_kept_concrete": 796,
                "num_kept_lambda": 394,
                "num_values_explored": 7023,
                "num_values_kept": 1190,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71038
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72415363392793,
            "num_unique_values": 1377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.67047173703754,
                "explored_percent_lambda": 10.273690001375327,
                "explored_percent_none": 14.055838261587127,
                "kept_percent_concrete": 80.30634573304158,
                "kept_percent_lambda": 19.693654266958426,
                "num_examples": 5,
                "num_explored_concrete": 5502,
                "num_explored_lambda": 747,
                "num_explored_none": 1022,
                "num_inputs": 2,
                "num_kept_concrete": 1101,
                "num_kept_lambda": 270,
                "num_values_explored": 7271,
                "num_values_kept": 1371,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74484
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.62713244790211,
            "num_unique_values": 1021,
            "solution": "Scanl1((lambda u1, u2: Add(-1, Add(-1, -1))), Map((lambda u1: Sum(Take(-1, Scanl1((lambda u1, u2: -1), Sort(x1))))), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 65.44491956831602,
                "explored_percent_lambda": 22.72449602932193,
                "explored_percent_none": 11.830584402362044,
                "kept_percent_concrete": 57.48031496062992,
                "kept_percent_lambda": 42.51968503937008,
                "num_examples": 3,
                "num_explored_concrete": 3214,
                "num_explored_lambda": 1116,
                "num_explored_none": 581,
                "num_inputs": 1,
                "num_kept_concrete": 584,
                "num_kept_lambda": 432,
                "num_values_explored": 4911,
                "num_values_kept": 1016,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 31212
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85041476390325,
            "num_unique_values": 1448,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.47305563646955,
                "explored_percent_lambda": 13.384794640256336,
                "explored_percent_none": 14.142149723274104,
                "kept_percent_concrete": 79.40360610263522,
                "kept_percent_lambda": 20.59639389736477,
                "num_examples": 5,
                "num_explored_concrete": 4976,
                "num_explored_lambda": 919,
                "num_explored_none": 971,
                "num_inputs": 2,
                "num_kept_concrete": 1145,
                "num_kept_lambda": 297,
                "num_values_explored": 6866,
                "num_values_kept": 1442,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69660
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04465514514595,
            "num_unique_values": 1319,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.07798331519768,
                "explored_percent_lambda": 32.390279289082336,
                "explored_percent_none": 12.531737395719986,
                "kept_percent_concrete": 40.25875190258752,
                "kept_percent_lambda": 59.74124809741248,
                "num_examples": 2,
                "num_explored_concrete": 3037,
                "num_explored_lambda": 1786,
                "num_explored_none": 691,
                "num_inputs": 1,
                "num_kept_concrete": 529,
                "num_kept_lambda": 785,
                "num_values_explored": 5514,
                "num_values_kept": 1314,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56813
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80107896099798,
            "num_unique_values": 1094,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.93106432073839,
                "explored_percent_lambda": 12.215171618113644,
                "explored_percent_none": 20.853764061147967,
                "kept_percent_concrete": 73.4130634774609,
                "kept_percent_lambda": 26.586936522539098,
                "num_examples": 4,
                "num_explored_concrete": 4641,
                "num_explored_lambda": 847,
                "num_explored_none": 1446,
                "num_inputs": 3,
                "num_kept_concrete": 798,
                "num_kept_lambda": 289,
                "num_values_explored": 6934,
                "num_values_kept": 1087,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73242
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70929429796524,
            "num_unique_values": 548,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.893229166666668,
                "explored_percent_lambda": 42.361111111111114,
                "explored_percent_none": 33.74565972222222,
                "kept_percent_concrete": 12.707182320441989,
                "kept_percent_lambda": 87.29281767955801,
                "num_examples": 2,
                "num_explored_concrete": 1101,
                "num_explored_lambda": 1952,
                "num_explored_none": 1555,
                "num_inputs": 1,
                "num_kept_concrete": 69,
                "num_kept_lambda": 474,
                "num_values_explored": 4608,
                "num_values_kept": 543,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46999
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74607628700323,
            "num_unique_values": 1400,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 81.80663194003303,
                "explored_percent_lambda": 7.749968237835091,
                "explored_percent_none": 10.443399822131877,
                "kept_percent_concrete": 87.50897343862168,
                "kept_percent_lambda": 12.49102656137832,
                "num_examples": 4,
                "num_explored_concrete": 6439,
                "num_explored_lambda": 610,
                "num_explored_none": 822,
                "num_inputs": 3,
                "num_kept_concrete": 1219,
                "num_kept_lambda": 174,
                "num_values_explored": 7871,
                "num_values_kept": 1393,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77570
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93777179787867,
            "num_unique_values": 1117,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.9696394686907,
                "explored_percent_lambda": 33.13092979127135,
                "explored_percent_none": 18.89943074003795,
                "kept_percent_concrete": 40.91726618705036,
                "kept_percent_lambda": 59.08273381294964,
                "num_examples": 3,
                "num_explored_concrete": 2528,
                "num_explored_lambda": 1746,
                "num_explored_none": 996,
                "num_inputs": 1,
                "num_kept_concrete": 455,
                "num_kept_lambda": 657,
                "num_values_explored": 5270,
                "num_values_kept": 1112,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53967
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47135767596774,
            "num_unique_values": 375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.686746987951807,
                "explored_percent_lambda": 30.991658943466174,
                "explored_percent_none": 47.32159406858202,
                "kept_percent_concrete": 38.91891891891892,
                "kept_percent_lambda": 61.08108108108108,
                "num_examples": 4,
                "num_explored_concrete": 1170,
                "num_explored_lambda": 1672,
                "num_explored_none": 2553,
                "num_inputs": 1,
                "num_kept_concrete": 144,
                "num_kept_lambda": 226,
                "num_values_explored": 5395,
                "num_values_kept": 370,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54037
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 96.78806299390271,
            "num_unique_values": 805,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(-1, -1))), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 57.65572261429887,
                "explored_percent_lambda": 24.792881251917766,
                "explored_percent_none": 17.55139613378337,
                "kept_percent_concrete": 50.5,
                "kept_percent_lambda": 49.5,
                "num_examples": 2,
                "num_explored_concrete": 1879,
                "num_explored_lambda": 808,
                "num_explored_none": 572,
                "num_inputs": 1,
                "num_kept_concrete": 404,
                "num_kept_lambda": 396,
                "num_values_explored": 3259,
                "num_values_kept": 800,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59722
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90408776095137,
            "num_unique_values": 1068,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.28398791540785,
                "explored_percent_lambda": 11.535292502059873,
                "explored_percent_none": 12.180719582532271,
                "kept_percent_concrete": 77.00282752120641,
                "kept_percent_lambda": 22.99717247879359,
                "num_examples": 5,
                "num_explored_concrete": 5555,
                "num_explored_lambda": 840,
                "num_explored_none": 887,
                "num_inputs": 3,
                "num_kept_concrete": 817,
                "num_kept_lambda": 244,
                "num_values_explored": 7282,
                "num_values_kept": 1061,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73692
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.867245306959376,
            "num_unique_values": 684,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Drop(Head(x1), Scanl1((lambda u1, u2: 1), Reverse(x2)))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 61.30452180872349,
                "explored_percent_lambda": 22.669067627050822,
                "explored_percent_none": 16.02641056422569,
                "kept_percent_concrete": 46.75516224188791,
                "kept_percent_lambda": 53.24483775811209,
                "num_examples": 2,
                "num_explored_concrete": 3064,
                "num_explored_lambda": 1133,
                "num_explored_none": 801,
                "num_inputs": 2,
                "num_kept_concrete": 317,
                "num_kept_lambda": 361,
                "num_values_explored": 4998,
                "num_values_kept": 678,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6398
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63079842389561,
            "num_unique_values": 569,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.70907038012796,
                "explored_percent_lambda": 27.96386902521641,
                "explored_percent_none": 33.32706059465563,
                "kept_percent_concrete": 32.6241134751773,
                "kept_percent_lambda": 67.37588652482269,
                "num_examples": 3,
                "num_explored_concrete": 2057,
                "num_explored_lambda": 1486,
                "num_explored_none": 1771,
                "num_inputs": 1,
                "num_kept_concrete": 184,
                "num_kept_lambda": 380,
                "num_values_explored": 5314,
                "num_values_kept": 564,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54783
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71059838496149,
            "num_unique_values": 1324,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.49823598588789,
                "explored_percent_lambda": 5.383509734744544,
                "explored_percent_none": 15.118254279367568,
                "kept_percent_concrete": 89.82536066818527,
                "kept_percent_lambda": 10.174639331814731,
                "num_examples": 5,
                "num_explored_concrete": 6084,
                "num_explored_lambda": 412,
                "num_explored_none": 1157,
                "num_inputs": 3,
                "num_kept_concrete": 1183,
                "num_kept_lambda": 134,
                "num_values_explored": 7653,
                "num_values_kept": 1317,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 78255
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.986282407073304,
            "num_unique_values": 517,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Head(x3))))(u2)), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 57.091490211745906,
                "explored_percent_lambda": 21.174590491410306,
                "explored_percent_none": 21.733919296843787,
                "kept_percent_concrete": 70.98039215686275,
                "kept_percent_lambda": 29.019607843137255,
                "num_examples": 4,
                "num_explored_concrete": 1429,
                "num_explored_lambda": 530,
                "num_explored_none": 544,
                "num_inputs": 3,
                "num_kept_concrete": 362,
                "num_kept_lambda": 148,
                "num_values_explored": 2503,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4463
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90685109305196,
            "num_unique_values": 1150,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.14923427826653,
                "explored_percent_lambda": 21.8475073313783,
                "explored_percent_none": 10.003258390355164,
                "kept_percent_concrete": 52.48908296943232,
                "kept_percent_lambda": 47.51091703056768,
                "num_examples": 2,
                "num_explored_concrete": 4183,
                "num_explored_lambda": 1341,
                "num_explored_none": 614,
                "num_inputs": 1,
                "num_kept_concrete": 601,
                "num_kept_lambda": 544,
                "num_values_explored": 6138,
                "num_values_kept": 1145,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63033
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71684704208747,
            "num_unique_values": 1146,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.78891540705384,
                "explored_percent_lambda": 11.667992574913816,
                "explored_percent_none": 12.543092018032352,
                "kept_percent_concrete": 78.24561403508773,
                "kept_percent_lambda": 21.75438596491228,
                "num_examples": 3,
                "num_explored_concrete": 5716,
                "num_explored_lambda": 880,
                "num_explored_none": 946,
                "num_inputs": 2,
                "num_kept_concrete": 892,
                "num_kept_lambda": 248,
                "num_values_explored": 7542,
                "num_values_kept": 1140,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76940
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.38831605599262,
            "num_unique_values": 318,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.14933611815605,
                "explored_percent_lambda": 12.472027450395345,
                "explored_percent_none": 54.378636431448605,
                "kept_percent_concrete": 74.35897435897436,
                "kept_percent_lambda": 25.641025641025642,
                "num_examples": 4,
                "num_explored_concrete": 2222,
                "num_explored_lambda": 836,
                "num_explored_none": 3645,
                "num_inputs": 2,
                "num_kept_concrete": 232,
                "num_kept_lambda": 80,
                "num_values_explored": 6703,
                "num_values_kept": 312,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67861
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74050541687757,
            "num_unique_values": 1134,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.44926327495135,
                "explored_percent_lambda": 11.954406449819293,
                "explored_percent_none": 15.596330275229358,
                "kept_percent_concrete": 76.2621789193977,
                "kept_percent_lambda": 23.737821080602302,
                "num_examples": 5,
                "num_explored_concrete": 5212,
                "num_explored_lambda": 860,
                "num_explored_none": 1122,
                "num_inputs": 1,
                "num_kept_concrete": 861,
                "num_kept_lambda": 268,
                "num_values_explored": 7194,
                "num_values_kept": 1129,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74113
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76846390706487,
            "num_unique_values": 879,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.21153846153846,
                "explored_percent_lambda": 9.258241758241759,
                "explored_percent_none": 28.53021978021978,
                "kept_percent_concrete": 79.26689576174113,
                "kept_percent_lambda": 20.73310423825888,
                "num_examples": 4,
                "num_explored_concrete": 4529,
                "num_explored_lambda": 674,
                "num_explored_none": 2077,
                "num_inputs": 2,
                "num_kept_concrete": 692,
                "num_kept_lambda": 181,
                "num_values_explored": 7280,
                "num_values_kept": 873,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74584
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46700517390855,
            "num_unique_values": 332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.126806833114323,
                "explored_percent_lambda": 21.33705650459921,
                "explored_percent_none": 47.53613666228647,
                "kept_percent_concrete": 62.079510703363916,
                "kept_percent_lambda": 37.920489296636084,
                "num_examples": 3,
                "num_explored_concrete": 1895,
                "num_explored_lambda": 1299,
                "num_explored_none": 2894,
                "num_inputs": 1,
                "num_kept_concrete": 203,
                "num_kept_lambda": 124,
                "num_values_explored": 6088,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60949
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73565349983983,
            "num_unique_values": 967,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.22126102146065,
                "explored_percent_lambda": 16.236899018466147,
                "explored_percent_none": 13.5418399600732,
                "kept_percent_concrete": 63.05931321540062,
                "kept_percent_lambda": 36.94068678459938,
                "num_examples": 3,
                "num_explored_concrete": 4221,
                "num_explored_lambda": 976,
                "num_explored_none": 814,
                "num_inputs": 2,
                "num_kept_concrete": 606,
                "num_kept_lambda": 355,
                "num_values_explored": 6011,
                "num_values_kept": 961,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61600
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08351840102114,
            "num_unique_values": 981,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.592835060920166,
                "explored_percent_lambda": 22.349518094198945,
                "explored_percent_none": 17.05764684488089,
                "kept_percent_concrete": 53.89344262295082,
                "kept_percent_lambda": 46.10655737704918,
                "num_examples": 5,
                "num_explored_concrete": 3332,
                "num_explored_lambda": 1229,
                "num_explored_none": 938,
                "num_inputs": 1,
                "num_kept_concrete": 526,
                "num_kept_lambda": 450,
                "num_values_explored": 5499,
                "num_values_kept": 976,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56514
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12538887700066,
            "num_unique_values": 1130,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.31453906642128,
                "explored_percent_lambda": 15.34214488874017,
                "explored_percent_none": 24.34331604483855,
                "kept_percent_concrete": 72.62222222222222,
                "kept_percent_lambda": 27.377777777777776,
                "num_examples": 5,
                "num_explored_concrete": 3605,
                "num_explored_lambda": 917,
                "num_explored_none": 1455,
                "num_inputs": 1,
                "num_kept_concrete": 817,
                "num_kept_lambda": 308,
                "num_values_explored": 5977,
                "num_values_kept": 1125,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61802
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75625777384266,
            "num_unique_values": 617,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.05834811748473,
                "explored_percent_lambda": 25.409028188448648,
                "explored_percent_none": 26.532623694066626,
                "kept_percent_concrete": 38.72549019607843,
                "kept_percent_lambda": 61.27450980392157,
                "num_examples": 2,
                "num_explored_concrete": 2438,
                "num_explored_lambda": 1289,
                "num_explored_none": 1346,
                "num_inputs": 1,
                "num_kept_concrete": 237,
                "num_kept_lambda": 375,
                "num_values_explored": 5073,
                "num_values_kept": 612,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52912
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20580107485875,
            "num_unique_values": 1059,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.47518585493269,
                "explored_percent_lambda": 20.93630701225638,
                "explored_percent_none": 23.588507132810932,
                "kept_percent_concrete": 60.62618595825427,
                "kept_percent_lambda": 39.37381404174573,
                "num_examples": 4,
                "num_explored_concrete": 2761,
                "num_explored_lambda": 1042,
                "num_explored_none": 1174,
                "num_inputs": 1,
                "num_kept_concrete": 639,
                "num_kept_lambda": 415,
                "num_values_explored": 4977,
                "num_values_kept": 1054,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51932
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85894219297916,
            "num_unique_values": 516,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.309269162210338,
                "explored_percent_lambda": 41.867201426024955,
                "explored_percent_none": 33.8235294117647,
                "kept_percent_concrete": 18.395303326810176,
                "kept_percent_lambda": 81.60469667318982,
                "num_examples": 2,
                "num_explored_concrete": 1091,
                "num_explored_lambda": 1879,
                "num_explored_none": 1518,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 417,
                "num_values_explored": 4488,
                "num_values_kept": 511,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46147
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84412600216456,
            "num_unique_values": 649,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.35346097201767,
                "explored_percent_lambda": 31.51693667157585,
                "explored_percent_none": 28.12960235640648,
                "kept_percent_concrete": 24.68944099378882,
                "kept_percent_lambda": 75.31055900621118,
                "num_examples": 2,
                "num_explored_concrete": 1918,
                "num_explored_lambda": 1498,
                "num_explored_none": 1337,
                "num_inputs": 1,
                "num_kept_concrete": 159,
                "num_kept_lambda": 485,
                "num_values_explored": 4753,
                "num_values_kept": 644,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48987
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4562209690921,
            "num_unique_values": 372,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.11615962070328,
                "explored_percent_lambda": 29.178190438561835,
                "explored_percent_none": 44.70564994073489,
                "kept_percent_concrete": 34.33242506811989,
                "kept_percent_lambda": 65.66757493188011,
                "num_examples": 2,
                "num_explored_concrete": 1322,
                "num_explored_lambda": 1477,
                "num_explored_none": 2263,
                "num_inputs": 1,
                "num_kept_concrete": 126,
                "num_kept_lambda": 241,
                "num_values_explored": 5062,
                "num_values_kept": 367,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52515
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57581584202126,
            "num_unique_values": 373,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.725442834138487,
                "explored_percent_lambda": 29.95169082125604,
                "explored_percent_none": 47.32286634460547,
                "kept_percent_concrete": 37.5,
                "kept_percent_lambda": 62.5,
                "num_examples": 2,
                "num_explored_concrete": 1129,
                "num_explored_lambda": 1488,
                "num_explored_none": 2351,
                "num_inputs": 1,
                "num_kept_concrete": 138,
                "num_kept_lambda": 230,
                "num_values_explored": 4968,
                "num_values_kept": 368,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51814
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75960172107443,
            "num_unique_values": 386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.91996481970097,
                "explored_percent_lambda": 39.445910290237464,
                "explored_percent_none": 42.634124890061564,
                "kept_percent_concrete": 23.94736842105263,
                "kept_percent_lambda": 76.05263157894737,
                "num_examples": 2,
                "num_explored_concrete": 815,
                "num_explored_lambda": 1794,
                "num_explored_none": 1939,
                "num_inputs": 2,
                "num_kept_concrete": 91,
                "num_kept_lambda": 289,
                "num_values_explored": 4548,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48440
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5103779300116,
            "num_unique_values": 386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.711751662971174,
                "explored_percent_lambda": 37.53880266075388,
                "explored_percent_none": 42.749445676274945,
                "kept_percent_concrete": 26.842105263157894,
                "kept_percent_lambda": 73.15789473684211,
                "num_examples": 2,
                "num_explored_concrete": 889,
                "num_explored_lambda": 1693,
                "num_explored_none": 1928,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 278,
                "num_values_explored": 4510,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46735
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50605913391337,
            "num_unique_values": 388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.513715710723194,
                "explored_percent_lambda": 36.74147963424772,
                "explored_percent_none": 43.74480465502909,
                "kept_percent_concrete": 26.701570680628272,
                "kept_percent_lambda": 73.29842931937172,
                "num_examples": 2,
                "num_explored_concrete": 939,
                "num_explored_lambda": 1768,
                "num_explored_none": 2105,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 280,
                "num_values_explored": 4812,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48727
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48839869489893,
            "num_unique_values": 388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.833625218914186,
                "explored_percent_lambda": 36.58056042031524,
                "explored_percent_none": 43.58581436077058,
                "kept_percent_concrete": 20.418848167539267,
                "kept_percent_lambda": 79.58115183246073,
                "num_examples": 2,
                "num_explored_concrete": 906,
                "num_explored_lambda": 1671,
                "num_explored_none": 1991,
                "num_inputs": 2,
                "num_kept_concrete": 78,
                "num_kept_lambda": 304,
                "num_values_explored": 4568,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47163
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7051380588673,
            "num_unique_values": 481,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.755927778986294,
                "explored_percent_lambda": 40.26539047204699,
                "explored_percent_none": 33.978681748966714,
                "kept_percent_concrete": 19.327731092436974,
                "kept_percent_lambda": 80.67226890756302,
                "num_examples": 2,
                "num_explored_concrete": 1184,
                "num_explored_lambda": 1851,
                "num_explored_none": 1562,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 384,
                "num_values_explored": 4597,
                "num_values_kept": 476,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47145
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61634734412655,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.628601921024547,
                "explored_percent_lambda": 31.12059765208111,
                "explored_percent_none": 45.250800426894344,
                "kept_percent_concrete": 31.29973474801061,
                "kept_percent_lambda": 68.70026525198939,
                "num_examples": 3,
                "num_explored_concrete": 1107,
                "num_explored_lambda": 1458,
                "num_explored_none": 2120,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 259,
                "num_values_explored": 4685,
                "num_values_kept": 377,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48103
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.49
}