{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.5998558790888637,
            "num_unique_values": 117,
            "solution": "Map((lambda u1: ((lambda v1: Max(1, ((lambda v1: IntDivide(v1, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 39.49579831932773,
                "explored_percent_none": 16.80672268907563,
                "kept_percent_concrete": 35.714285714285715,
                "kept_percent_lambda": 64.28571428571429,
                "num_examples": 2,
                "num_explored_concrete": 104,
                "num_explored_lambda": 94,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 72,
                "num_values_explored": 238,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20151318493299186,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), v1, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.83453237410072,
                "explored_percent_lambda": 31.294964028776977,
                "explored_percent_none": 11.870503597122303,
                "kept_percent_concrete": 55.033557046979865,
                "kept_percent_lambda": 44.966442953020135,
                "num_examples": 3,
                "num_explored_concrete": 158,
                "num_explored_lambda": 87,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 67,
                "num_values_explored": 278,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 278
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14913946809247136,
            "num_unique_values": 107,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 54.06976744186046,
                "explored_percent_none": 12.209302325581396,
                "kept_percent_concrete": 23.529411764705884,
                "kept_percent_lambda": 76.47058823529412,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 93,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 78,
                "num_values_explored": 172,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16644598194397986,
            "num_unique_values": 112,
            "solution": "Drop(Square(Add(-1, -1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.766871165644172,
                "explored_percent_lambda": 65.03067484662577,
                "explored_percent_none": 9.202453987730062,
                "kept_percent_concrete": 17.757009345794394,
                "kept_percent_lambda": 82.24299065420561,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 106,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 88,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0971532859839499,
            "num_unique_values": 69,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.2251655629139,
                "explored_percent_lambda": 22.516556291390728,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 50.79365079365079,
                "kept_percent_lambda": 49.20634920634921,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 34,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 31,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24582662084139884,
            "num_unique_values": 94,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.267080745341616,
                "explored_percent_lambda": 53.41614906832298,
                "explored_percent_none": 9.316770186335404,
                "kept_percent_concrete": 18.181818181818183,
                "kept_percent_lambda": 81.81818181818181,
                "num_examples": 4,
                "num_explored_concrete": 60,
                "num_explored_lambda": 86,
                "num_explored_none": 15,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 72,
                "num_values_explored": 161,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12801973707973957,
            "num_unique_values": 97,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.95061728395062,
                "explored_percent_lambda": 54.93827160493827,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 17.391304347826086,
                "kept_percent_lambda": 82.6086956521739,
                "num_examples": 2,
                "num_explored_concrete": 55,
                "num_explored_lambda": 89,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 76,
                "num_values_explored": 162,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15375555492937565,
            "num_unique_values": 104,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.061349693251532,
                "explored_percent_lambda": 59.50920245398773,
                "explored_percent_none": 10.429447852760736,
                "kept_percent_concrete": 16.161616161616163,
                "kept_percent_lambda": 83.83838383838383,
                "num_examples": 2,
                "num_explored_concrete": 49,
                "num_explored_lambda": 97,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 83,
                "num_values_explored": 163,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3817639988847077,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.166666666666664,
                "explored_percent_lambda": 34.78260869565217,
                "explored_percent_none": 11.05072463768116,
                "kept_percent_concrete": 46.82539682539682,
                "kept_percent_lambda": 53.17460317460318,
                "num_examples": 4,
                "num_explored_concrete": 299,
                "num_explored_lambda": 192,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 134,
                "num_values_explored": 552,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08736319001764059,
            "num_unique_values": 83,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 74.26900584795321,
                "explored_percent_lambda": 11.11111111111111,
                "explored_percent_none": 14.619883040935672,
                "kept_percent_concrete": 79.22077922077922,
                "kept_percent_lambda": 20.77922077922078,
                "num_examples": 5,
                "num_explored_concrete": 127,
                "num_explored_lambda": 19,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 61,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 77,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1558312070555985,
            "num_unique_values": 155,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.52380952380952,
                "explored_percent_lambda": 15.555555555555555,
                "explored_percent_none": 14.920634920634921,
                "kept_percent_concrete": 77.18120805369128,
                "kept_percent_lambda": 22.818791946308725,
                "num_examples": 4,
                "num_explored_concrete": 219,
                "num_explored_lambda": 49,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 34,
                "num_values_explored": 315,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 315
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13488862197846174,
            "num_unique_values": 68,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.81524926686217,
                "explored_percent_lambda": 21.114369501466275,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 146,
                "num_explored_lambda": 72,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18915583402849734,
            "num_unique_values": 186,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.39344262295082,
                "explored_percent_lambda": 32.131147540983605,
                "explored_percent_none": 11.475409836065573,
                "kept_percent_concrete": 54.69613259668508,
                "kept_percent_lambda": 45.30386740331492,
                "num_examples": 4,
                "num_explored_concrete": 172,
                "num_explored_lambda": 98,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 82,
                "num_values_explored": 305,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19595498009584844,
            "num_unique_values": 181,
            "solution": "Square(IntDivide(Add(1, 1), Sum(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.14018691588785,
                "explored_percent_lambda": 33.021806853582554,
                "explored_percent_none": 11.838006230529595,
                "kept_percent_concrete": 51.13636363636363,
                "kept_percent_lambda": 48.86363636363637,
                "num_examples": 2,
                "num_explored_concrete": 177,
                "num_explored_lambda": 106,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 86,
                "num_values_explored": 321,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 321
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17430477612651885,
            "num_unique_values": 162,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.35294117647059,
                "explored_percent_lambda": 33.088235294117645,
                "explored_percent_none": 9.558823529411764,
                "kept_percent_concrete": 53.84615384615385,
                "kept_percent_lambda": 46.15384615384615,
                "num_examples": 5,
                "num_explored_concrete": 156,
                "num_explored_lambda": 90,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 156,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.28356221807189286,
            "num_unique_values": 224,
            "solution": "Add(1, Subtract(1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.745098039215684,
                "explored_percent_lambda": 25.846702317290553,
                "explored_percent_none": 11.408199643493761,
                "kept_percent_concrete": 56.62100456621005,
                "kept_percent_lambda": 43.37899543378995,
                "num_examples": 3,
                "num_explored_concrete": 352,
                "num_explored_lambda": 145,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 95,
                "num_values_explored": 561,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 561
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2058112460654229,
            "num_unique_values": 180,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 44.688644688644686,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 12.454212454212454,
                "kept_percent_concrete": 43.67816091954023,
                "kept_percent_lambda": 56.32183908045977,
                "num_examples": 2,
                "num_explored_concrete": 122,
                "num_explored_lambda": 117,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 98,
                "num_values_explored": 273,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38374223303981125,
            "num_unique_values": 208,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.20417633410673,
                "explored_percent_lambda": 39.21113689095127,
                "explored_percent_none": 8.584686774941995,
                "kept_percent_concrete": 39.90147783251231,
                "kept_percent_lambda": 60.09852216748769,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 169,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 122,
                "num_values_explored": 431,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11754662916064262,
            "num_unique_values": 122,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 17.647058823529413,
                "explored_percent_none": 14.479638009049774,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 39,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 32,
                "num_values_explored": 221,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09178879018872976,
            "num_unique_values": 73,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.717948717948715,
                "explored_percent_lambda": 39.743589743589745,
                "explored_percent_none": 11.538461538461538,
                "kept_percent_concrete": 26.865671641791046,
                "kept_percent_lambda": 73.13432835820896,
                "num_examples": 2,
                "num_explored_concrete": 76,
                "num_explored_lambda": 62,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 49,
                "num_values_explored": 156,
                "num_values_kept": 67,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19779779599048197,
            "num_unique_values": 143,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1, v2: Min(v1, v2)))(u2, u2)), x1, Reverse(x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.29501915708812,
                "explored_percent_lambda": 42.1455938697318,
                "explored_percent_none": 14.559386973180077,
                "kept_percent_concrete": 30.656934306569344,
                "kept_percent_lambda": 69.34306569343066,
                "num_examples": 3,
                "num_explored_concrete": 113,
                "num_explored_lambda": 110,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 42,
                "num_kept_lambda": 95,
                "num_values_explored": 261,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.832521656062454,
            "num_unique_values": 301,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.80487804878049,
                "explored_percent_lambda": 46.78492239467849,
                "explored_percent_none": 15.41019955654102,
                "kept_percent_concrete": 53.898305084745765,
                "kept_percent_lambda": 46.101694915254235,
                "num_examples": 4,
                "num_explored_concrete": 341,
                "num_explored_lambda": 422,
                "num_explored_none": 139,
                "num_inputs": 2,
                "num_kept_concrete": 159,
                "num_kept_lambda": 136,
                "num_values_explored": 902,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2862
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.69755878392607,
            "num_unique_values": 765,
            "solution": "IntDivide(Square(Square(Add(-1, -1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 67.63654925982644,
                "explored_percent_lambda": 20.06125574272588,
                "explored_percent_none": 12.302194997447677,
                "kept_percent_concrete": 70.26315789473684,
                "kept_percent_lambda": 29.736842105263158,
                "num_examples": 5,
                "num_explored_concrete": 2650,
                "num_explored_lambda": 786,
                "num_explored_none": 482,
                "num_inputs": 1,
                "num_kept_concrete": 534,
                "num_kept_lambda": 226,
                "num_values_explored": 3918,
                "num_values_kept": 760,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10768
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33130023698322475,
            "num_unique_values": 319,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.55797101449275,
                "explored_percent_lambda": 22.463768115942027,
                "explored_percent_none": 5.978260869565218,
                "kept_percent_concrete": 71.8849840255591,
                "kept_percent_lambda": 28.115015974440894,
                "num_examples": 5,
                "num_explored_concrete": 395,
                "num_explored_lambda": 124,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 88,
                "num_values_explored": 552,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1535734178032726,
            "num_unique_values": 139,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(-1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.594202898550726,
                "explored_percent_lambda": 24.27536231884058,
                "explored_percent_none": 14.130434782608695,
                "kept_percent_concrete": 61.65413533834587,
                "kept_percent_lambda": 38.34586466165413,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 67,
                "num_explored_none": 39,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 51,
                "num_values_explored": 276,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07797136809676886,
            "num_unique_values": 79,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.91304347826087,
                "explored_percent_lambda": 18.633540372670808,
                "explored_percent_none": 7.453416149068323,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 2,
                "num_explored_concrete": 119,
                "num_explored_lambda": 30,
                "num_explored_none": 12,
                "num_inputs": 3,
                "num_kept_concrete": 50,
                "num_kept_lambda": 22,
                "num_values_explored": 161,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03899180307053,
            "num_unique_values": 1377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.79784815881195,
                "explored_percent_lambda": 11.94120321260797,
                "explored_percent_none": 22.26094862858009,
                "kept_percent_concrete": 81.91101385849744,
                "kept_percent_lambda": 18.088986141502552,
                "num_examples": 5,
                "num_explored_concrete": 4342,
                "num_explored_lambda": 788,
                "num_explored_none": 1469,
                "num_inputs": 2,
                "num_kept_concrete": 1123,
                "num_kept_lambda": 248,
                "num_values_explored": 6599,
                "num_values_kept": 1371,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62597
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6548547919374,
            "num_unique_values": 361,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.89908256880734,
                "explored_percent_lambda": 21.376146788990827,
                "explored_percent_none": 53.72477064220183,
                "kept_percent_concrete": 64.88764044943821,
                "kept_percent_lambda": 35.1123595505618,
                "num_examples": 5,
                "num_explored_concrete": 1357,
                "num_explored_lambda": 1165,
                "num_explored_none": 2928,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 125,
                "num_values_explored": 5450,
                "num_values_kept": 356,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56168
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19956452096812427,
            "num_unique_values": 154,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.1522633744856,
                "explored_percent_lambda": 46.09053497942387,
                "explored_percent_none": 12.757201646090534,
                "kept_percent_concrete": 35.57046979865772,
                "kept_percent_lambda": 64.42953020134229,
                "num_examples": 3,
                "num_explored_concrete": 100,
                "num_explored_lambda": 112,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 96,
                "num_values_explored": 243,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 243
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4024386361707002,
            "num_unique_values": 326,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 87.20930232558139,
                "explored_percent_lambda": 5.6976744186046515,
                "explored_percent_none": 7.093023255813954,
                "kept_percent_concrete": 90.0,
                "kept_percent_lambda": 10.0,
                "num_examples": 5,
                "num_explored_concrete": 750,
                "num_explored_lambda": 49,
                "num_explored_none": 61,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 32,
                "num_values_explored": 860,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.35182280582375824,
            "num_unique_values": 299,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 68.84057971014492,
                "explored_percent_lambda": 24.818840579710145,
                "explored_percent_none": 6.340579710144928,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 3,
                "num_explored_concrete": 380,
                "num_explored_lambda": 137,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 103,
                "num_values_explored": 552,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.43884976604022,
            "num_unique_values": 354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.842931937172775,
                "explored_percent_lambda": 24.083769633507853,
                "explored_percent_none": 46.07329842931937,
                "kept_percent_concrete": 54.72779369627507,
                "kept_percent_lambda": 45.27220630372493,
                "num_examples": 2,
                "num_explored_concrete": 1653,
                "num_explored_lambda": 1334,
                "num_explored_none": 2552,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 158,
                "num_values_explored": 5539,
                "num_values_kept": 349,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56710
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19214862189255655,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.51660516605166,
                "explored_percent_lambda": 29.88929889298893,
                "explored_percent_none": 9.59409594095941,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 164,
                "num_explored_lambda": 81,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 63,
                "num_values_explored": 271,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.42736302712000906,
            "num_unique_values": 328,
            "solution": "Square(Min(Last(x2), Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 80.27210884353741,
                "explored_percent_lambda": 15.532879818594104,
                "explored_percent_none": 4.195011337868481,
                "kept_percent_concrete": 69.56521739130434,
                "kept_percent_lambda": 30.434782608695652,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 137,
                "num_explored_none": 37,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 98,
                "num_values_explored": 882,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09271331410855,
            "num_unique_values": 1125,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.37078651685393,
                "explored_percent_lambda": 33.20848938826467,
                "explored_percent_none": 13.420724094881399,
                "kept_percent_concrete": 39.285714285714285,
                "kept_percent_lambda": 60.714285714285715,
                "num_examples": 2,
                "num_explored_concrete": 2565,
                "num_explored_lambda": 1596,
                "num_explored_none": 645,
                "num_inputs": 1,
                "num_kept_concrete": 440,
                "num_kept_lambda": 680,
                "num_values_explored": 4806,
                "num_values_kept": 1120,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49924
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24820170714519918,
            "num_unique_values": 150,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 45.38745387453874,
                "explored_percent_none": 15.498154981549815,
                "kept_percent_concrete": 30.344827586206897,
                "kept_percent_lambda": 69.65517241379311,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 123,
                "num_explored_none": 42,
                "num_inputs": 1,
                "num_kept_concrete": 44,
                "num_kept_lambda": 101,
                "num_values_explored": 271,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3509721257723868,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.84684684684684,
                "explored_percent_lambda": 23.603603603603602,
                "explored_percent_none": 9.54954954954955,
                "kept_percent_concrete": 60.273972602739725,
                "kept_percent_lambda": 39.726027397260275,
                "num_examples": 5,
                "num_explored_concrete": 371,
                "num_explored_lambda": 131,
                "num_explored_none": 53,
                "num_inputs": 2,
                "num_kept_concrete": 132,
                "num_kept_lambda": 87,
                "num_values_explored": 555,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.2460622049402446,
            "num_unique_values": 453,
            "solution": "Subtract(Min(x3, x1), Sum(x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.53395913859746,
                "explored_percent_lambda": 14.991717283268912,
                "explored_percent_none": 31.474323578133628,
                "kept_percent_concrete": 68.16143497757848,
                "kept_percent_lambda": 31.838565022421523,
                "num_examples": 2,
                "num_explored_concrete": 1939,
                "num_explored_lambda": 543,
                "num_explored_none": 1140,
                "num_inputs": 3,
                "num_kept_concrete": 304,
                "num_kept_lambda": 142,
                "num_values_explored": 3622,
                "num_values_kept": 446,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4742
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03565423795953,
            "num_unique_values": 1115,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.480573819485954,
                "explored_percent_lambda": 31.340904562661883,
                "explored_percent_none": 16.178521617852162,
                "kept_percent_concrete": 43.78378378378378,
                "kept_percent_lambda": 56.21621621621622,
                "num_examples": 2,
                "num_explored_concrete": 2634,
                "num_explored_lambda": 1573,
                "num_explored_none": 812,
                "num_inputs": 1,
                "num_kept_concrete": 486,
                "num_kept_lambda": 624,
                "num_values_explored": 5019,
                "num_values_kept": 1110,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51180
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.37603060086258,
            "num_unique_values": 748,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(-1, -1)), v1)))(u1)), Map((lambda u1: Head(x1)), x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 64.58654340010273,
                "explored_percent_lambda": 23.728813559322035,
                "explored_percent_none": 11.684643040575244,
                "kept_percent_concrete": 56.796769851951545,
                "kept_percent_lambda": 43.203230148048455,
                "num_examples": 2,
                "num_explored_concrete": 2515,
                "num_explored_lambda": 924,
                "num_explored_none": 455,
                "num_inputs": 1,
                "num_kept_concrete": 422,
                "num_kept_lambda": 321,
                "num_values_explored": 3894,
                "num_values_kept": 743,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22400
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.60917504411191,
            "num_unique_values": 318,
            "solution": "Max(Subtract(x1, x2), Subtract(Add(1, Subtract(x1, x2)), Add(x2, -1)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 29.488623563865737,
                "explored_percent_lambda": 17.684163099797253,
                "explored_percent_none": 52.82721333633701,
                "kept_percent_concrete": 64.42307692307692,
                "kept_percent_lambda": 35.57692307692308,
                "num_examples": 2,
                "num_explored_concrete": 1309,
                "num_explored_lambda": 785,
                "num_explored_none": 2345,
                "num_inputs": 2,
                "num_kept_concrete": 201,
                "num_kept_lambda": 111,
                "num_values_explored": 4439,
                "num_values_kept": 312,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 21728
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7487274480518,
            "num_unique_values": 547,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.64092276830492,
                "explored_percent_lambda": 27.803410230692077,
                "explored_percent_none": 38.55566700100301,
                "kept_percent_concrete": 44.73197781885398,
                "kept_percent_lambda": 55.26802218114602,
                "num_examples": 4,
                "num_explored_concrete": 1677,
                "num_explored_lambda": 1386,
                "num_explored_none": 1922,
                "num_inputs": 2,
                "num_kept_concrete": 242,
                "num_kept_lambda": 299,
                "num_values_explored": 4985,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52673
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4230340411886573,
            "num_unique_values": 263,
            "solution": "Take(Add(1, 1), Map((lambda u1: ((lambda v1: Add(v1, -1)))(u1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.7816091954023,
                "explored_percent_lambda": 35.40229885057471,
                "explored_percent_none": 7.816091954022989,
                "kept_percent_concrete": 52.91828793774319,
                "kept_percent_lambda": 47.08171206225681,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 154,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 136,
                "num_kept_lambda": 121,
                "num_values_explored": 435,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 45.6745824101381,
            "num_unique_values": 539,
            "solution": "Multiply(Add(1, 1), Add(Head(x1), Square(Square(Add(-1, -1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 45.013905442987685,
                "explored_percent_lambda": 28.52602304330552,
                "explored_percent_none": 26.460071513706794,
                "kept_percent_concrete": 54.11985018726592,
                "kept_percent_lambda": 45.88014981273408,
                "num_examples": 4,
                "num_explored_concrete": 1133,
                "num_explored_lambda": 718,
                "num_explored_none": 666,
                "num_inputs": 1,
                "num_kept_concrete": 289,
                "num_kept_lambda": 245,
                "num_values_explored": 2517,
                "num_values_kept": 534,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 27156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 28.79142198804766,
            "num_unique_values": 283,
            "solution": "Multiply(Add(-1, IntDivide(x1, Add(-1, -1))), Add(-1, If(IsEven(x1), 1, -1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 21.349421324796847,
                "explored_percent_lambda": 27.40704260034474,
                "explored_percent_none": 51.24353607485841,
                "kept_percent_concrete": 42.805755395683455,
                "kept_percent_lambda": 57.194244604316545,
                "num_examples": 5,
                "num_explored_concrete": 867,
                "num_explored_lambda": 1113,
                "num_explored_none": 2081,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 159,
                "num_values_explored": 4061,
                "num_values_kept": 278,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 15237
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19942113291472197,
            "num_unique_values": 182,
            "solution": "Take(IntDivide(Add(x1, x1), x1), Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.39080459770115,
                "explored_percent_lambda": 16.551724137931036,
                "explored_percent_none": 5.057471264367816,
                "kept_percent_concrete": 70.85714285714286,
                "kept_percent_lambda": 29.142857142857142,
                "num_examples": 2,
                "num_explored_concrete": 341,
                "num_explored_lambda": 72,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 124,
                "num_kept_lambda": 51,
                "num_values_explored": 435,
                "num_values_kept": 175,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.39327855780721,
            "num_unique_values": 312,
            "solution": "Min(IntDivide(Subtract(x1, x2), Subtract(-1, x2)), Subtract(Square(Square(Add(-1, -1))), x2))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 25.132657983598648,
                "explored_percent_lambda": 21.61119150988905,
                "explored_percent_none": 53.2561505065123,
                "kept_percent_concrete": 60.78431372549019,
                "kept_percent_lambda": 39.21568627450981,
                "num_examples": 2,
                "num_explored_concrete": 1042,
                "num_explored_lambda": 896,
                "num_explored_none": 2208,
                "num_inputs": 2,
                "num_kept_concrete": 186,
                "num_kept_lambda": 120,
                "num_values_explored": 4146,
                "num_values_kept": 306,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22284
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24245199700817466,
            "num_unique_values": 165,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u1)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.15985130111524,
                "explored_percent_lambda": 39.405204460966544,
                "explored_percent_none": 7.434944237918216,
                "kept_percent_concrete": 42.40506329113924,
                "kept_percent_lambda": 57.59493670886076,
                "num_examples": 4,
                "num_explored_concrete": 143,
                "num_explored_lambda": 106,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 67,
                "num_kept_lambda": 91,
                "num_values_explored": 269,
                "num_values_kept": 158,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32199911307543516,
            "num_unique_values": 282,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.48062015503876,
                "explored_percent_lambda": 20.73643410852713,
                "explored_percent_none": 6.782945736434108,
                "kept_percent_concrete": 69.45454545454545,
                "kept_percent_lambda": 30.545454545454547,
                "num_examples": 4,
                "num_explored_concrete": 374,
                "num_explored_lambda": 107,
                "num_explored_none": 35,
                "num_inputs": 3,
                "num_kept_concrete": 191,
                "num_kept_lambda": 84,
                "num_values_explored": 516,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.43549371603876,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.028978139298424,
                "explored_percent_lambda": 17.234367056431115,
                "explored_percent_none": 53.736654804270465,
                "kept_percent_concrete": 73.13432835820896,
                "kept_percent_lambda": 26.865671641791046,
                "num_examples": 4,
                "num_explored_concrete": 1713,
                "num_explored_lambda": 1017,
                "num_explored_none": 3171,
                "num_inputs": 2,
                "num_kept_concrete": 245,
                "num_kept_lambda": 90,
                "num_values_explored": 5901,
                "num_values_kept": 335,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59528
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0053578459192,
            "num_unique_values": 962,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.143340633087796,
                "explored_percent_lambda": 22.77523392394983,
                "explored_percent_none": 17.081425442962374,
                "kept_percent_concrete": 52.66457680250784,
                "kept_percent_lambda": 47.33542319749216,
                "num_examples": 5,
                "num_explored_concrete": 3021,
                "num_explored_lambda": 1144,
                "num_explored_none": 858,
                "num_inputs": 1,
                "num_kept_concrete": 504,
                "num_kept_lambda": 453,
                "num_values_explored": 5023,
                "num_values_kept": 957,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52970
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33153124200180173,
            "num_unique_values": 236,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 75.35971223021583,
                "explored_percent_lambda": 14.568345323741006,
                "explored_percent_none": 10.071942446043165,
                "kept_percent_concrete": 81.6593886462882,
                "kept_percent_lambda": 18.34061135371179,
                "num_examples": 5,
                "num_explored_concrete": 419,
                "num_explored_lambda": 81,
                "num_explored_none": 56,
                "num_inputs": 3,
                "num_kept_concrete": 187,
                "num_kept_lambda": 42,
                "num_values_explored": 556,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 556
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.94947394402698,
            "num_unique_values": 1074,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.378740970072236,
                "explored_percent_lambda": 25.779153766769866,
                "explored_percent_none": 16.842105263157894,
                "kept_percent_concrete": 54.349859681945745,
                "kept_percent_lambda": 45.650140318054255,
                "num_examples": 3,
                "num_explored_concrete": 2780,
                "num_explored_lambda": 1249,
                "num_explored_none": 816,
                "num_inputs": 1,
                "num_kept_concrete": 581,
                "num_kept_lambda": 488,
                "num_values_explored": 4845,
                "num_values_kept": 1069,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50074
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22787062311545014,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 50.91575091575091,
                "explored_percent_lambda": 32.967032967032964,
                "explored_percent_none": 16.117216117216117,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 4,
                "num_explored_concrete": 139,
                "num_explored_lambda": 90,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 72,
                "num_values_explored": 273,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86868711304851,
            "num_unique_values": 1334,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.21974522292993,
                "explored_percent_lambda": 10.859872611464969,
                "explored_percent_none": 14.920382165605096,
                "kept_percent_concrete": 81.91409193669932,
                "kept_percent_lambda": 18.08590806330068,
                "num_examples": 5,
                "num_explored_concrete": 4661,
                "num_explored_lambda": 682,
                "num_explored_none": 937,
                "num_inputs": 3,
                "num_kept_concrete": 1087,
                "num_kept_lambda": 240,
                "num_values_explored": 6280,
                "num_values_kept": 1327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64367
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3101593479514122,
            "num_unique_values": 205,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.2183908045977,
                "explored_percent_lambda": 29.195402298850574,
                "explored_percent_none": 7.586206896551724,
                "kept_percent_concrete": 53.266331658291456,
                "kept_percent_lambda": 46.733668341708544,
                "num_examples": 5,
                "num_explored_concrete": 275,
                "num_explored_lambda": 127,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 93,
                "num_values_explored": 435,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59467122307979,
            "num_unique_values": 515,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.9197585655956,
                "explored_percent_lambda": 17.148943724480738,
                "explored_percent_none": 38.93129770992366,
                "kept_percent_concrete": 62.86836935166994,
                "kept_percent_lambda": 37.13163064833006,
                "num_examples": 5,
                "num_explored_concrete": 2474,
                "num_explored_lambda": 966,
                "num_explored_none": 2193,
                "num_inputs": 2,
                "num_kept_concrete": 320,
                "num_kept_lambda": 189,
                "num_values_explored": 5633,
                "num_values_kept": 509,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57630
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.19319807784632,
            "num_unique_values": 682,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Map((lambda u1: IntDivide(Square(Add(-1, -1)), x1)), x2))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 49.90504325807132,
                "explored_percent_lambda": 28.29710909474573,
                "explored_percent_none": 21.79784764718295,
                "kept_percent_concrete": 39.201183431952664,
                "kept_percent_lambda": 60.798816568047336,
                "num_examples": 2,
                "num_explored_concrete": 2365,
                "num_explored_lambda": 1341,
                "num_explored_none": 1033,
                "num_inputs": 2,
                "num_kept_concrete": 265,
                "num_kept_lambda": 411,
                "num_values_explored": 4739,
                "num_values_kept": 676,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 16060
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58875522296876,
            "num_unique_values": 349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.207360861759426,
                "explored_percent_lambda": 31.306104129263915,
                "explored_percent_none": 47.48653500897666,
                "kept_percent_concrete": 32.848837209302324,
                "kept_percent_lambda": 67.15116279069767,
                "num_examples": 4,
                "num_explored_concrete": 945,
                "num_explored_lambda": 1395,
                "num_explored_none": 2116,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 231,
                "num_values_explored": 4456,
                "num_values_kept": 344,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48313
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1654507308267,
            "num_unique_values": 1215,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.261734287987274,
                "explored_percent_lambda": 27.62529832935561,
                "explored_percent_none": 19.11296738265712,
                "kept_percent_concrete": 44.5822994210091,
                "kept_percent_lambda": 55.4177005789909,
                "num_examples": 4,
                "num_explored_concrete": 2678,
                "num_explored_lambda": 1389,
                "num_explored_none": 961,
                "num_inputs": 2,
                "num_kept_concrete": 539,
                "num_kept_lambda": 670,
                "num_values_explored": 5028,
                "num_values_kept": 1209,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53033
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.94690713007003,
            "num_unique_values": 992,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.32652409830833,
                "explored_percent_lambda": 16.533673795084585,
                "explored_percent_none": 14.139802106607085,
                "kept_percent_concrete": 64.84295845997974,
                "kept_percent_lambda": 35.157041540020266,
                "num_examples": 3,
                "num_explored_concrete": 4344,
                "num_explored_lambda": 1036,
                "num_explored_none": 886,
                "num_inputs": 1,
                "num_kept_concrete": 640,
                "num_kept_lambda": 347,
                "num_values_explored": 6266,
                "num_values_kept": 987,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61498
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27939044800587,
            "num_unique_values": 190,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.964093357271096,
                "explored_percent_lambda": 25.673249551166965,
                "explored_percent_none": 14.362657091561939,
                "kept_percent_concrete": 52.71739130434783,
                "kept_percent_lambda": 47.28260869565217,
                "num_examples": 2,
                "num_explored_concrete": 334,
                "num_explored_lambda": 143,
                "num_explored_none": 80,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 87,
                "num_values_explored": 557,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50801985198632,
            "num_unique_values": 376,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.830289614462277,
                "explored_percent_lambda": 30.16048699501937,
                "explored_percent_none": 50.00922339051836,
                "kept_percent_concrete": 40.16172506738545,
                "kept_percent_lambda": 59.83827493261455,
                "num_examples": 4,
                "num_explored_concrete": 1075,
                "num_explored_lambda": 1635,
                "num_explored_none": 2711,
                "num_inputs": 1,
                "num_kept_concrete": 149,
                "num_kept_lambda": 222,
                "num_values_explored": 5421,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55370
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88132833992131,
            "num_unique_values": 1160,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.50414691943128,
                "explored_percent_lambda": 15.980450236966824,
                "explored_percent_none": 10.515402843601896,
                "kept_percent_concrete": 66.46447140381282,
                "kept_percent_lambda": 33.53552859618718,
                "num_examples": 2,
                "num_explored_concrete": 4963,
                "num_explored_lambda": 1079,
                "num_explored_none": 710,
                "num_inputs": 2,
                "num_kept_concrete": 767,
                "num_kept_lambda": 387,
                "num_values_explored": 6752,
                "num_values_kept": 1154,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70256
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73081669490784,
            "num_unique_values": 1379,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.13947475847054,
                "explored_percent_lambda": 10.191862838481425,
                "explored_percent_none": 14.668662403048033,
                "kept_percent_concrete": 80.55353241077931,
                "kept_percent_lambda": 19.446467589220685,
                "num_examples": 5,
                "num_explored_concrete": 5522,
                "num_explored_lambda": 749,
                "num_explored_none": 1078,
                "num_inputs": 2,
                "num_kept_concrete": 1106,
                "num_kept_lambda": 267,
                "num_values_explored": 7349,
                "num_values_kept": 1373,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72897
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.550651497906074,
            "num_unique_values": 1023,
            "solution": "Scanl1((lambda u1, u2: Subtract(Add(-1, -1), 1)), Map((lambda u1: Sum(Take(-1, Scanl1((lambda u1, u2: -1), Sort(x1))))), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67337948395217,
                "explored_percent_lambda": 20.851688693098385,
                "explored_percent_none": 8.474931822949443,
                "kept_percent_concrete": 59.43025540275049,
                "kept_percent_lambda": 40.56974459724951,
                "num_examples": 3,
                "num_explored_concrete": 3369,
                "num_explored_lambda": 994,
                "num_explored_none": 404,
                "num_inputs": 1,
                "num_kept_concrete": 605,
                "num_kept_lambda": 413,
                "num_values_explored": 4767,
                "num_values_kept": 1018,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12924
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83639112301171,
            "num_unique_values": 1417,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.45869297163995,
                "explored_percent_lambda": 13.840937114673244,
                "explored_percent_none": 12.700369913686806,
                "kept_percent_concrete": 78.59673990077958,
                "kept_percent_lambda": 21.40326009922041,
                "num_examples": 5,
                "num_explored_concrete": 4766,
                "num_explored_lambda": 898,
                "num_explored_none": 824,
                "num_inputs": 2,
                "num_kept_concrete": 1109,
                "num_kept_lambda": 302,
                "num_values_explored": 6488,
                "num_values_kept": 1411,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68144
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02545882691629,
            "num_unique_values": 1312,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.65765765765766,
                "explored_percent_lambda": 31.788931788931787,
                "explored_percent_none": 10.553410553410554,
                "kept_percent_concrete": 42.15761285386381,
                "kept_percent_lambda": 57.84238714613619,
                "num_examples": 2,
                "num_explored_concrete": 3136,
                "num_explored_lambda": 1729,
                "num_explored_none": 574,
                "num_inputs": 1,
                "num_kept_concrete": 551,
                "num_kept_lambda": 756,
                "num_values_explored": 5439,
                "num_values_kept": 1307,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56008
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69696382712573,
            "num_unique_values": 1131,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.64621559633028,
                "explored_percent_lambda": 11.46788990825688,
                "explored_percent_none": 20.885894495412845,
                "kept_percent_concrete": 74.37722419928825,
                "kept_percent_lambda": 25.622775800711743,
                "num_examples": 4,
                "num_explored_concrete": 4719,
                "num_explored_lambda": 800,
                "num_explored_none": 1457,
                "num_inputs": 3,
                "num_kept_concrete": 836,
                "num_kept_lambda": 288,
                "num_values_explored": 6976,
                "num_values_kept": 1124,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72774
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7493160951417,
            "num_unique_values": 520,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.41417497231451,
                "explored_percent_lambda": 45.27131782945737,
                "explored_percent_none": 32.31450719822813,
                "kept_percent_concrete": 12.815533980582524,
                "kept_percent_lambda": 87.18446601941747,
                "num_examples": 2,
                "num_explored_concrete": 1012,
                "num_explored_lambda": 2044,
                "num_explored_none": 1459,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 449,
                "num_values_explored": 4515,
                "num_values_kept": 515,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47235
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73979656491429,
            "num_unique_values": 1262,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.64906832298136,
                "explored_percent_lambda": 8.540372670807454,
                "explored_percent_none": 12.81055900621118,
                "kept_percent_concrete": 87.96812749003983,
                "kept_percent_lambda": 12.03187250996016,
                "num_examples": 4,
                "num_explored_concrete": 6078,
                "num_explored_lambda": 660,
                "num_explored_none": 990,
                "num_inputs": 3,
                "num_kept_concrete": 1104,
                "num_kept_lambda": 151,
                "num_values_explored": 7728,
                "num_values_kept": 1255,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 78492
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8815978099592,
            "num_unique_values": 1139,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.5702614379085,
                "explored_percent_lambda": 34.21160130718954,
                "explored_percent_none": 17.21813725490196,
                "kept_percent_concrete": 37.83068783068783,
                "kept_percent_lambda": 62.16931216931217,
                "num_examples": 3,
                "num_explored_concrete": 2378,
                "num_explored_lambda": 1675,
                "num_explored_none": 843,
                "num_inputs": 1,
                "num_kept_concrete": 429,
                "num_kept_lambda": 705,
                "num_values_explored": 4896,
                "num_values_kept": 1134,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52569
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48846866609529,
            "num_unique_values": 376,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.943634596695823,
                "explored_percent_lambda": 30.34013605442177,
                "explored_percent_none": 47.71622934888241,
                "kept_percent_concrete": 38.274932614555254,
                "kept_percent_lambda": 61.725067385444746,
                "num_examples": 4,
                "num_explored_concrete": 1129,
                "num_explored_lambda": 1561,
                "num_explored_none": 2455,
                "num_inputs": 1,
                "num_kept_concrete": 142,
                "num_kept_lambda": 229,
                "num_values_explored": 5145,
                "num_values_kept": 371,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51950
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.703615535981953,
            "num_unique_values": 787,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: Square(Add(-1, -1))), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 60.46650717703349,
                "explored_percent_lambda": 23.41507177033493,
                "explored_percent_none": 16.11842105263158,
                "kept_percent_concrete": 52.813299232736576,
                "kept_percent_lambda": 47.186700767263424,
                "num_examples": 2,
                "num_explored_concrete": 2022,
                "num_explored_lambda": 783,
                "num_explored_none": 539,
                "num_inputs": 1,
                "num_kept_concrete": 413,
                "num_kept_lambda": 369,
                "num_values_explored": 3344,
                "num_values_kept": 782,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5024
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90603224397637,
            "num_unique_values": 1011,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.0,
                "explored_percent_lambda": 13.17910447761194,
                "explored_percent_none": 11.82089552238806,
                "kept_percent_concrete": 74.00398406374502,
                "kept_percent_lambda": 25.99601593625498,
                "num_examples": 5,
                "num_explored_concrete": 5025,
                "num_explored_lambda": 883,
                "num_explored_none": 792,
                "num_inputs": 3,
                "num_kept_concrete": 743,
                "num_kept_lambda": 261,
                "num_values_explored": 6700,
                "num_values_kept": 1004,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70443
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.80578583991155,
            "num_unique_values": 592,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x1)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 55.916077091973655,
                "explored_percent_lambda": 26.347889729202244,
                "explored_percent_none": 17.736033178824105,
                "kept_percent_concrete": 40.44368600682594,
                "kept_percent_lambda": 59.55631399317406,
                "num_examples": 2,
                "num_explored_concrete": 2292,
                "num_explored_lambda": 1080,
                "num_explored_none": 727,
                "num_inputs": 2,
                "num_kept_concrete": 237,
                "num_kept_lambda": 349,
                "num_values_explored": 4099,
                "num_values_kept": 586,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5499
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63361067208461,
            "num_unique_values": 569,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.439095692847395,
                "explored_percent_lambda": 29.331514324693043,
                "explored_percent_none": 33.22938998245956,
                "kept_percent_concrete": 32.6241134751773,
                "kept_percent_lambda": 67.37588652482269,
                "num_examples": 3,
                "num_explored_concrete": 1921,
                "num_explored_lambda": 1505,
                "num_explored_none": 1705,
                "num_inputs": 1,
                "num_kept_concrete": 184,
                "num_kept_lambda": 380,
                "num_values_explored": 5131,
                "num_values_kept": 564,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52809
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 47.61326015787199,
            "num_unique_values": 1074,
            "solution": "Min(IntDivide(Sum(x1), Head(x1)), Sum(Scanl1((lambda u1, u2: Add(x2, -1)), x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 76.17313915857605,
                "explored_percent_lambda": 7.32200647249191,
                "explored_percent_none": 16.50485436893204,
                "kept_percent_concrete": 88.28491096532333,
                "kept_percent_lambda": 11.715089034676664,
                "num_examples": 5,
                "num_explored_concrete": 3766,
                "num_explored_lambda": 362,
                "num_explored_none": 816,
                "num_inputs": 3,
                "num_kept_concrete": 942,
                "num_kept_lambda": 125,
                "num_values_explored": 4944,
                "num_values_kept": 1067,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 35247
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.850420666858554,
            "num_unique_values": 696,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Reverse(Scanl1((lambda u1, u2: Min(1, x1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 61.50402864816473,
                "explored_percent_lambda": 14.368845120859445,
                "explored_percent_none": 24.12712623097583,
                "kept_percent_concrete": 74.45573294629898,
                "kept_percent_lambda": 25.544267053701017,
                "num_examples": 4,
                "num_explored_concrete": 2748,
                "num_explored_lambda": 642,
                "num_explored_none": 1078,
                "num_inputs": 3,
                "num_kept_concrete": 513,
                "num_kept_lambda": 176,
                "num_values_explored": 4468,
                "num_values_kept": 689,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6428
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83548790309578,
            "num_unique_values": 1106,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.28542164561284,
                "explored_percent_lambda": 23.420962785933767,
                "explored_percent_none": 10.293615568453397,
                "kept_percent_concrete": 50.95367847411444,
                "kept_percent_lambda": 49.04632152588556,
                "num_examples": 2,
                "num_explored_concrete": 3883,
                "num_explored_lambda": 1372,
                "num_explored_none": 603,
                "num_inputs": 1,
                "num_kept_concrete": 561,
                "num_kept_lambda": 540,
                "num_values_explored": 5858,
                "num_values_kept": 1101,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59349
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73560467804782,
            "num_unique_values": 1065,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.36183568140605,
                "explored_percent_lambda": 11.45208536755475,
                "explored_percent_none": 14.186078951039196,
                "kept_percent_concrete": 77.52596789423986,
                "kept_percent_lambda": 22.474032105760152,
                "num_examples": 3,
                "num_explored_concrete": 5331,
                "num_explored_lambda": 821,
                "num_explored_none": 1017,
                "num_inputs": 2,
                "num_kept_concrete": 821,
                "num_kept_lambda": 238,
                "num_values_explored": 7169,
                "num_values_kept": 1059,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74124
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.38529866887257,
            "num_unique_values": 329,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.01184870120006,
                "explored_percent_lambda": 13.975391159046028,
                "explored_percent_none": 52.01276013975391,
                "kept_percent_concrete": 70.89783281733746,
                "kept_percent_lambda": 29.102167182662537,
                "num_examples": 4,
                "num_explored_concrete": 2239,
                "num_explored_lambda": 920,
                "num_explored_none": 3424,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 94,
                "num_values_explored": 6583,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66564
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74331408110447,
            "num_unique_values": 1107,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.3352224426183,
                "explored_percent_lambda": 11.943893454236328,
                "explored_percent_none": 14.720884103145368,
                "kept_percent_concrete": 76.04355716878403,
                "kept_percent_lambda": 23.95644283121597,
                "num_examples": 5,
                "num_explored_concrete": 5176,
                "num_explored_lambda": 843,
                "num_explored_none": 1039,
                "num_inputs": 1,
                "num_kept_concrete": 838,
                "num_kept_lambda": 264,
                "num_values_explored": 7058,
                "num_values_kept": 1102,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71409
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7583049100358,
            "num_unique_values": 852,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.07853475787429,
                "explored_percent_lambda": 9.1855140835299,
                "explored_percent_none": 28.73595115859581,
                "kept_percent_concrete": 78.84160756501183,
                "kept_percent_lambda": 21.15839243498818,
                "num_examples": 4,
                "num_explored_concrete": 4474,
                "num_explored_lambda": 662,
                "num_explored_none": 2071,
                "num_inputs": 2,
                "num_kept_concrete": 667,
                "num_kept_lambda": 179,
                "num_values_explored": 7207,
                "num_values_kept": 846,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74022
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4749973048456,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.745290745290745,
                "explored_percent_lambda": 22.407862407862407,
                "explored_percent_none": 46.846846846846844,
                "kept_percent_concrete": 57.73809523809524,
                "kept_percent_lambda": 42.26190476190476,
                "num_examples": 3,
                "num_explored_concrete": 1877,
                "num_explored_lambda": 1368,
                "num_explored_none": 2860,
                "num_inputs": 1,
                "num_kept_concrete": 194,
                "num_kept_lambda": 142,
                "num_values_explored": 6105,
                "num_values_kept": 336,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61874
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.696317919995636,
            "num_unique_values": 916,
            "solution": "Map((lambda u1: Multiply(Add(1, Square(Sum(Map((lambda u1: -1), x2)))), Sum(Scanl1((lambda u1, u2: 1), x2)))), Take(IntDivide(Minimum(x1), Last(x1)), x1))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 68.03264750892706,
                "explored_percent_lambda": 18.534262880462506,
                "explored_percent_none": 13.433089610610441,
                "kept_percent_concrete": 61.31868131868132,
                "kept_percent_lambda": 38.68131868131868,
                "num_examples": 3,
                "num_explored_concrete": 4001,
                "num_explored_lambda": 1090,
                "num_explored_none": 790,
                "num_inputs": 2,
                "num_kept_concrete": 558,
                "num_kept_lambda": 352,
                "num_values_explored": 5881,
                "num_values_kept": 910,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 14088
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93009488820098,
            "num_unique_values": 1064,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.296834003848176,
                "explored_percent_lambda": 21.79464754241735,
                "explored_percent_none": 18.908518453734477,
                "kept_percent_concrete": 54.95750708215297,
                "kept_percent_lambda": 45.04249291784703,
                "num_examples": 5,
                "num_explored_concrete": 3390,
                "num_explored_lambda": 1246,
                "num_explored_none": 1081,
                "num_inputs": 1,
                "num_kept_concrete": 582,
                "num_kept_lambda": 477,
                "num_values_explored": 5717,
                "num_values_kept": 1059,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59451
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01730084908195,
            "num_unique_values": 1136,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.49009745363093,
                "explored_percent_lambda": 14.492298019490725,
                "explored_percent_none": 24.01760452687834,
                "kept_percent_concrete": 71.08753315649868,
                "kept_percent_lambda": 28.912466843501328,
                "num_examples": 5,
                "num_explored_concrete": 3912,
                "num_explored_lambda": 922,
                "num_explored_none": 1528,
                "num_inputs": 1,
                "num_kept_concrete": 804,
                "num_kept_lambda": 327,
                "num_values_explored": 6362,
                "num_values_kept": 1131,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65912
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70505621191114,
            "num_unique_values": 626,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.10009267840593,
                "explored_percent_lambda": 23.688600556070437,
                "explored_percent_none": 28.211306765523634,
                "kept_percent_concrete": 41.706924315619965,
                "kept_percent_lambda": 58.293075684380035,
                "num_examples": 2,
                "num_explored_concrete": 2595,
                "num_explored_lambda": 1278,
                "num_explored_none": 1522,
                "num_inputs": 1,
                "num_kept_concrete": 259,
                "num_kept_lambda": 362,
                "num_values_explored": 5395,
                "num_values_kept": 621,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54532
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07040112791583,
            "num_unique_values": 1146,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.78035008469791,
                "explored_percent_lambda": 20.92979484283832,
                "explored_percent_none": 20.28985507246377,
                "kept_percent_concrete": 61.61262050832603,
                "kept_percent_lambda": 38.38737949167397,
                "num_examples": 4,
                "num_explored_concrete": 3123,
                "num_explored_lambda": 1112,
                "num_explored_none": 1078,
                "num_inputs": 1,
                "num_kept_concrete": 703,
                "num_kept_lambda": 438,
                "num_values_explored": 5313,
                "num_values_kept": 1141,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55121
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75817337818444,
            "num_unique_values": 521,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.56687898089172,
                "explored_percent_lambda": 42.86624203821656,
                "explored_percent_none": 33.56687898089172,
                "kept_percent_concrete": 15.69767441860465,
                "kept_percent_lambda": 84.30232558139535,
                "num_examples": 2,
                "num_explored_concrete": 1110,
                "num_explored_lambda": 2019,
                "num_explored_none": 1581,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 435,
                "num_values_explored": 4710,
                "num_values_kept": 516,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49074
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79889993206598,
            "num_unique_values": 669,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.7919422730006,
                "explored_percent_lambda": 30.90799759470836,
                "explored_percent_none": 27.30006013229104,
                "kept_percent_concrete": 27.10843373493976,
                "kept_percent_lambda": 72.89156626506023,
                "num_examples": 2,
                "num_explored_concrete": 2085,
                "num_explored_lambda": 1542,
                "num_explored_none": 1362,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 484,
                "num_values_explored": 4989,
                "num_values_kept": 664,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51788
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.43557726615109,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.589933671478736,
                "explored_percent_lambda": 28.053062817011316,
                "explored_percent_none": 45.35700351150995,
                "kept_percent_concrete": 34.42622950819672,
                "kept_percent_lambda": 65.57377049180327,
                "num_examples": 2,
                "num_explored_concrete": 1363,
                "num_explored_lambda": 1438,
                "num_explored_none": 2325,
                "num_inputs": 1,
                "num_kept_concrete": 126,
                "num_kept_lambda": 240,
                "num_values_explored": 5126,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54797
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63614504202269,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.47747747747748,
                "explored_percent_lambda": 28.94144144144144,
                "explored_percent_none": 48.58108108108108,
                "kept_percent_concrete": 40.389972144846794,
                "kept_percent_lambda": 59.610027855153206,
                "num_examples": 2,
                "num_explored_concrete": 998,
                "num_explored_lambda": 1285,
                "num_explored_none": 2157,
                "num_inputs": 1,
                "num_kept_concrete": 145,
                "num_kept_lambda": 214,
                "num_values_explored": 4440,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47575
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83163160108961,
            "num_unique_values": 322,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.78743961352657,
                "explored_percent_lambda": 37.2463768115942,
                "explored_percent_none": 45.966183574879224,
                "kept_percent_concrete": 24.68354430379747,
                "kept_percent_lambda": 75.31645569620254,
                "num_examples": 2,
                "num_explored_concrete": 695,
                "num_explored_lambda": 1542,
                "num_explored_none": 1903,
                "num_inputs": 2,
                "num_kept_concrete": 78,
                "num_kept_lambda": 238,
                "num_values_explored": 4140,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42674
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56135500990786,
            "num_unique_values": 301,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.701092353525322,
                "explored_percent_lambda": 36.66832174776564,
                "explored_percent_none": 45.630585898709036,
                "kept_percent_concrete": 27.796610169491526,
                "kept_percent_lambda": 72.20338983050847,
                "num_examples": 2,
                "num_explored_concrete": 713,
                "num_explored_lambda": 1477,
                "num_explored_none": 1838,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 213,
                "num_values_explored": 4028,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52916770800948,
            "num_unique_values": 326,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.944323933477946,
                "explored_percent_lambda": 34.03229693902145,
                "explored_percent_none": 47.023379127500604,
                "kept_percent_concrete": 26.5625,
                "kept_percent_lambda": 73.4375,
                "num_examples": 2,
                "num_explored_concrete": 786,
                "num_explored_lambda": 1412,
                "num_explored_none": 1951,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 235,
                "num_values_explored": 4149,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42416
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5568131590262,
            "num_unique_values": 321,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.567321514135124,
                "explored_percent_lambda": 34.30761859127935,
                "explored_percent_none": 47.12505989458553,
                "kept_percent_concrete": 26.984126984126984,
                "kept_percent_lambda": 73.01587301587301,
                "num_examples": 2,
                "num_explored_concrete": 775,
                "num_explored_lambda": 1432,
                "num_explored_none": 1967,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 230,
                "num_values_explored": 4174,
                "num_values_kept": 315,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42646
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01257207989693,
            "num_unique_values": 470,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.34955185659411,
                "explored_percent_lambda": 38.1562099871959,
                "explored_percent_none": 34.49423815620999,
                "kept_percent_concrete": 19.78494623655914,
                "kept_percent_lambda": 80.21505376344086,
                "num_examples": 2,
                "num_explored_concrete": 1068,
                "num_explored_lambda": 1490,
                "num_explored_none": 1347,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 373,
                "num_values_explored": 3905,
                "num_values_kept": 465,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40264
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66281881602481,
            "num_unique_values": 349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.214868540344515,
                "explored_percent_lambda": 30.82502266545784,
                "explored_percent_none": 47.960108794197644,
                "kept_percent_concrete": 34.01162790697674,
                "kept_percent_lambda": 65.98837209302326,
                "num_examples": 3,
                "num_explored_concrete": 936,
                "num_explored_lambda": 1360,
                "num_explored_none": 2116,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 227,
                "num_values_explored": 4412,
                "num_values_kept": 344,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43598
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}