{
    "num_tasks": 100,
    "num_tasks_solved": 50,
    "results": [
        {
            "elapsed_time": 0.7619071840308607,
            "num_unique_values": 117,
            "solution": "Map((lambda u1: ((lambda v1: Max(1, ((lambda v1: IntDivide(v1, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.69747899159664,
                "explored_percent_lambda": 39.49579831932773,
                "explored_percent_none": 16.80672268907563,
                "kept_percent_concrete": 35.714285714285715,
                "kept_percent_lambda": 64.28571428571429,
                "num_examples": 2,
                "num_explored_concrete": 104,
                "num_explored_lambda": 94,
                "num_explored_none": 40,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 72,
                "num_values_explored": 238,
                "num_values_kept": 112,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 238
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.284726605983451,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), v1, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 56.83453237410072,
                "explored_percent_lambda": 31.294964028776977,
                "explored_percent_none": 11.870503597122303,
                "kept_percent_concrete": 55.033557046979865,
                "kept_percent_lambda": 44.966442953020135,
                "num_examples": 3,
                "num_explored_concrete": 158,
                "num_explored_lambda": 87,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 67,
                "num_values_explored": 278,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 278
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21971201710402966,
            "num_unique_values": 107,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 33.72093023255814,
                "explored_percent_lambda": 54.06976744186046,
                "explored_percent_none": 12.209302325581396,
                "kept_percent_concrete": 23.529411764705884,
                "kept_percent_lambda": 76.47058823529412,
                "num_examples": 5,
                "num_explored_concrete": 58,
                "num_explored_lambda": 93,
                "num_explored_none": 21,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 78,
                "num_values_explored": 172,
                "num_values_kept": 102,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23975231917575002,
            "num_unique_values": 112,
            "solution": "Drop(Square(Add(-1, -1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 25.766871165644172,
                "explored_percent_lambda": 65.03067484662577,
                "explored_percent_none": 9.202453987730062,
                "kept_percent_concrete": 17.757009345794394,
                "kept_percent_lambda": 82.24299065420561,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 106,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 88,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1404365859925747,
            "num_unique_values": 69,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.2251655629139,
                "explored_percent_lambda": 22.516556291390728,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 50.79365079365079,
                "kept_percent_lambda": 49.20634920634921,
                "num_examples": 4,
                "num_explored_concrete": 100,
                "num_explored_lambda": 34,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 31,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2355403599794954,
            "num_unique_values": 94,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 37.267080745341616,
                "explored_percent_lambda": 53.41614906832298,
                "explored_percent_none": 9.316770186335404,
                "kept_percent_concrete": 18.181818181818183,
                "kept_percent_lambda": 81.81818181818181,
                "num_examples": 4,
                "num_explored_concrete": 60,
                "num_explored_lambda": 86,
                "num_explored_none": 15,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 72,
                "num_values_explored": 161,
                "num_values_kept": 88,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1522314460016787,
            "num_unique_values": 97,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 33.95061728395062,
                "explored_percent_lambda": 54.93827160493827,
                "explored_percent_none": 11.11111111111111,
                "kept_percent_concrete": 17.391304347826086,
                "kept_percent_lambda": 82.6086956521739,
                "num_examples": 2,
                "num_explored_concrete": 55,
                "num_explored_lambda": 89,
                "num_explored_none": 18,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 76,
                "num_values_explored": 162,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21442827000282705,
            "num_unique_values": 104,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 30.061349693251532,
                "explored_percent_lambda": 59.50920245398773,
                "explored_percent_none": 10.429447852760736,
                "kept_percent_concrete": 16.161616161616163,
                "kept_percent_lambda": 83.83838383838383,
                "num_examples": 2,
                "num_explored_concrete": 49,
                "num_explored_lambda": 97,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 83,
                "num_values_explored": 163,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4276769729331136,
            "num_unique_values": 257,
            "solution": "Scanl1((lambda u1, u2: Add(1, Add(1, 1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 54.166666666666664,
                "explored_percent_lambda": 34.78260869565217,
                "explored_percent_none": 11.05072463768116,
                "kept_percent_concrete": 46.82539682539682,
                "kept_percent_lambda": 53.17460317460318,
                "num_examples": 4,
                "num_explored_concrete": 299,
                "num_explored_lambda": 192,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 134,
                "num_values_explored": 552,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09450856898911297,
            "num_unique_values": 83,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 74.26900584795321,
                "explored_percent_lambda": 11.11111111111111,
                "explored_percent_none": 14.619883040935672,
                "kept_percent_concrete": 79.22077922077922,
                "kept_percent_lambda": 20.77922077922078,
                "num_examples": 5,
                "num_explored_concrete": 127,
                "num_explored_lambda": 19,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 61,
                "num_kept_lambda": 16,
                "num_values_explored": 171,
                "num_values_kept": 77,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1757208069320768,
            "num_unique_values": 155,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.52380952380952,
                "explored_percent_lambda": 15.555555555555555,
                "explored_percent_none": 14.920634920634921,
                "kept_percent_concrete": 77.18120805369128,
                "kept_percent_lambda": 22.818791946308725,
                "num_examples": 4,
                "num_explored_concrete": 219,
                "num_explored_lambda": 49,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 115,
                "num_kept_lambda": 34,
                "num_values_explored": 315,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 315
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14763288013637066,
            "num_unique_values": 68,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 42.81524926686217,
                "explored_percent_lambda": 21.114369501466275,
                "explored_percent_none": 36.070381231671554,
                "kept_percent_concrete": 44.44444444444444,
                "kept_percent_lambda": 55.55555555555556,
                "num_examples": 2,
                "num_explored_concrete": 146,
                "num_explored_lambda": 72,
                "num_explored_none": 123,
                "num_inputs": 1,
                "num_kept_concrete": 28,
                "num_kept_lambda": 35,
                "num_values_explored": 341,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 341
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22396477591246367,
            "num_unique_values": 186,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 56.39344262295082,
                "explored_percent_lambda": 32.131147540983605,
                "explored_percent_none": 11.475409836065573,
                "kept_percent_concrete": 54.69613259668508,
                "kept_percent_lambda": 45.30386740331492,
                "num_examples": 4,
                "num_explored_concrete": 172,
                "num_explored_lambda": 98,
                "num_explored_none": 35,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 82,
                "num_values_explored": 305,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 305
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2259261729195714,
            "num_unique_values": 181,
            "solution": "Square(IntDivide(Add(1, 1), Sum(x1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.14018691588785,
                "explored_percent_lambda": 33.021806853582554,
                "explored_percent_none": 11.838006230529595,
                "kept_percent_concrete": 51.13636363636363,
                "kept_percent_lambda": 48.86363636363637,
                "num_examples": 2,
                "num_explored_concrete": 177,
                "num_explored_lambda": 106,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 86,
                "num_values_explored": 321,
                "num_values_kept": 176,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 321
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20274407789111137,
            "num_unique_values": 162,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 57.35294117647059,
                "explored_percent_lambda": 33.088235294117645,
                "explored_percent_none": 9.558823529411764,
                "kept_percent_concrete": 53.84615384615385,
                "kept_percent_lambda": 46.15384615384615,
                "num_examples": 5,
                "num_explored_concrete": 156,
                "num_explored_lambda": 90,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 72,
                "num_values_explored": 272,
                "num_values_kept": 156,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3245483541395515,
            "num_unique_values": 224,
            "solution": "Add(1, Subtract(1, Sum(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.745098039215684,
                "explored_percent_lambda": 25.846702317290553,
                "explored_percent_none": 11.408199643493761,
                "kept_percent_concrete": 56.62100456621005,
                "kept_percent_lambda": 43.37899543378995,
                "num_examples": 3,
                "num_explored_concrete": 352,
                "num_explored_lambda": 145,
                "num_explored_none": 64,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 95,
                "num_values_explored": 561,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 561
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2337207398377359,
            "num_unique_values": 180,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 44.688644688644686,
                "explored_percent_lambda": 42.857142857142854,
                "explored_percent_none": 12.454212454212454,
                "kept_percent_concrete": 43.67816091954023,
                "kept_percent_lambda": 56.32183908045977,
                "num_examples": 2,
                "num_explored_concrete": 122,
                "num_explored_lambda": 117,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 98,
                "num_values_explored": 273,
                "num_values_kept": 174,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.41700279898941517,
            "num_unique_values": 208,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.20417633410673,
                "explored_percent_lambda": 39.21113689095127,
                "explored_percent_none": 8.584686774941995,
                "kept_percent_concrete": 39.90147783251231,
                "kept_percent_lambda": 60.09852216748769,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 169,
                "num_explored_none": 37,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 122,
                "num_values_explored": 431,
                "num_values_kept": 203,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 431
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12072468898259103,
            "num_unique_values": 122,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 17.647058823529413,
                "explored_percent_none": 14.479638009049774,
                "kept_percent_concrete": 72.41379310344827,
                "kept_percent_lambda": 27.586206896551722,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 39,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 32,
                "num_values_explored": 221,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1075300460215658,
            "num_unique_values": 73,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.717948717948715,
                "explored_percent_lambda": 39.743589743589745,
                "explored_percent_none": 11.538461538461538,
                "kept_percent_concrete": 26.865671641791046,
                "kept_percent_lambda": 73.13432835820896,
                "num_examples": 2,
                "num_explored_concrete": 76,
                "num_explored_lambda": 62,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 49,
                "num_values_explored": 156,
                "num_values_kept": 67,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 156
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22188552096486092,
            "num_unique_values": 143,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1, v2: Min(v1, v2)))(u2, u2)), x1, Reverse(x2))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 43.29501915708812,
                "explored_percent_lambda": 42.1455938697318,
                "explored_percent_none": 14.559386973180077,
                "kept_percent_concrete": 30.656934306569344,
                "kept_percent_lambda": 69.34306569343066,
                "num_examples": 3,
                "num_explored_concrete": 113,
                "num_explored_lambda": 110,
                "num_explored_none": 38,
                "num_inputs": 2,
                "num_kept_concrete": 42,
                "num_kept_lambda": 95,
                "num_values_explored": 261,
                "num_values_kept": 137,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 261
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9314813420642167,
            "num_unique_values": 301,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.80487804878049,
                "explored_percent_lambda": 46.78492239467849,
                "explored_percent_none": 15.41019955654102,
                "kept_percent_concrete": 53.898305084745765,
                "kept_percent_lambda": 46.101694915254235,
                "num_examples": 4,
                "num_explored_concrete": 341,
                "num_explored_lambda": 422,
                "num_explored_none": 139,
                "num_inputs": 2,
                "num_kept_concrete": 159,
                "num_kept_lambda": 136,
                "num_values_explored": 902,
                "num_values_kept": 295,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2862
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.62623547995463,
            "num_unique_values": 546,
            "solution": "IntDivide(Square(Square(Add(-1, -1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 59.13978494623656,
                "explored_percent_lambda": 27.268817204301076,
                "explored_percent_none": 13.591397849462366,
                "kept_percent_concrete": 63.77079482439926,
                "kept_percent_lambda": 36.22920517560074,
                "num_examples": 5,
                "num_explored_concrete": 1375,
                "num_explored_lambda": 634,
                "num_explored_none": 316,
                "num_inputs": 1,
                "num_kept_concrete": 345,
                "num_kept_lambda": 196,
                "num_values_explored": 2325,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 14455
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.48849643487483263,
            "num_unique_values": 319,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.55797101449275,
                "explored_percent_lambda": 22.463768115942027,
                "explored_percent_none": 5.978260869565218,
                "kept_percent_concrete": 71.8849840255591,
                "kept_percent_lambda": 28.115015974440894,
                "num_examples": 5,
                "num_explored_concrete": 395,
                "num_explored_lambda": 124,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 225,
                "num_kept_lambda": 88,
                "num_values_explored": 552,
                "num_values_kept": 313,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1741925640963018,
            "num_unique_values": 139,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(-1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.594202898550726,
                "explored_percent_lambda": 24.27536231884058,
                "explored_percent_none": 14.130434782608695,
                "kept_percent_concrete": 61.65413533834587,
                "kept_percent_lambda": 38.34586466165413,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 67,
                "num_explored_none": 39,
                "num_inputs": 2,
                "num_kept_concrete": 82,
                "num_kept_lambda": 51,
                "num_values_explored": 276,
                "num_values_kept": 133,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08939292910508811,
            "num_unique_values": 79,
            "solution": "Drop(IntDivide(1, x1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 73.91304347826087,
                "explored_percent_lambda": 18.633540372670808,
                "explored_percent_none": 7.453416149068323,
                "kept_percent_concrete": 69.44444444444444,
                "kept_percent_lambda": 30.555555555555557,
                "num_examples": 2,
                "num_explored_concrete": 119,
                "num_explored_lambda": 30,
                "num_explored_none": 12,
                "num_inputs": 3,
                "num_kept_concrete": 50,
                "num_kept_lambda": 22,
                "num_values_explored": 161,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.301344003994018,
            "num_unique_values": 658,
            "solution": "Last(Map((lambda u1: ((lambda v1: Subtract(Last(x2), v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 51.23931623931624,
                "explored_percent_lambda": 26.53846153846154,
                "explored_percent_none": 22.22222222222222,
                "kept_percent_concrete": 68.25153374233129,
                "kept_percent_lambda": 31.74846625766871,
                "num_examples": 5,
                "num_explored_concrete": 1199,
                "num_explored_lambda": 621,
                "num_explored_none": 520,
                "num_inputs": 2,
                "num_kept_concrete": 445,
                "num_kept_lambda": 207,
                "num_values_explored": 2340,
                "num_values_kept": 652,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10648
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72927984292619,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.842175657601427,
                "explored_percent_lambda": 17.92242532322782,
                "explored_percent_none": 54.23539901917076,
                "kept_percent_concrete": 65.17857142857143,
                "kept_percent_lambda": 34.82142857142857,
                "num_examples": 5,
                "num_explored_concrete": 1249,
                "num_explored_lambda": 804,
                "num_explored_none": 2433,
                "num_inputs": 1,
                "num_kept_concrete": 219,
                "num_kept_lambda": 117,
                "num_values_explored": 4486,
                "num_values_kept": 336,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53249
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21954336599446833,
            "num_unique_values": 154,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 41.1522633744856,
                "explored_percent_lambda": 46.09053497942387,
                "explored_percent_none": 12.757201646090534,
                "kept_percent_concrete": 35.57046979865772,
                "kept_percent_lambda": 64.42953020134229,
                "num_examples": 3,
                "num_explored_concrete": 100,
                "num_explored_lambda": 112,
                "num_explored_none": 31,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 96,
                "num_values_explored": 243,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 243
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.40557635203003883,
            "num_unique_values": 326,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 87.20930232558139,
                "explored_percent_lambda": 5.6976744186046515,
                "explored_percent_none": 7.093023255813954,
                "kept_percent_concrete": 90.0,
                "kept_percent_lambda": 10.0,
                "num_examples": 5,
                "num_explored_concrete": 750,
                "num_explored_lambda": 49,
                "num_explored_none": 61,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 32,
                "num_values_explored": 860,
                "num_values_kept": 320,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 860
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4531660850625485,
            "num_unique_values": 299,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 68.84057971014492,
                "explored_percent_lambda": 24.818840579710145,
                "explored_percent_none": 6.340579710144928,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 3,
                "num_explored_concrete": 380,
                "num_explored_lambda": 137,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 103,
                "num_values_explored": 552,
                "num_values_kept": 293,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 552
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46176413702779,
            "num_unique_values": 343,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.172077922077925,
                "explored_percent_lambda": 20.454545454545453,
                "explored_percent_none": 45.37337662337662,
                "kept_percent_concrete": 55.62130177514793,
                "kept_percent_lambda": 44.37869822485207,
                "num_examples": 2,
                "num_explored_concrete": 1684,
                "num_explored_lambda": 1008,
                "num_explored_none": 2236,
                "num_inputs": 1,
                "num_kept_concrete": 188,
                "num_kept_lambda": 150,
                "num_values_explored": 4928,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53043
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21377721684984863,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.51660516605166,
                "explored_percent_lambda": 29.88929889298893,
                "explored_percent_none": 9.59409594095941,
                "kept_percent_concrete": 52.27272727272727,
                "kept_percent_lambda": 47.72727272727273,
                "num_examples": 5,
                "num_explored_concrete": 164,
                "num_explored_lambda": 81,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 69,
                "num_kept_lambda": 63,
                "num_values_explored": 271,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4435365251265466,
            "num_unique_values": 328,
            "solution": "Square(Min(Last(x2), Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 80.27210884353741,
                "explored_percent_lambda": 15.532879818594104,
                "explored_percent_none": 4.195011337868481,
                "kept_percent_concrete": 69.56521739130434,
                "kept_percent_lambda": 30.434782608695652,
                "num_examples": 3,
                "num_explored_concrete": 708,
                "num_explored_lambda": 137,
                "num_explored_none": 37,
                "num_inputs": 2,
                "num_kept_concrete": 224,
                "num_kept_lambda": 98,
                "num_values_explored": 882,
                "num_values_kept": 322,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 882
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.58615608606488,
            "num_unique_values": 1150,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.50312891113892,
                "explored_percent_lambda": 33.35419274092616,
                "explored_percent_none": 14.142678347934918,
                "kept_percent_concrete": 36.943231441048034,
                "kept_percent_lambda": 63.056768558951966,
                "num_examples": 2,
                "num_explored_concrete": 2517,
                "num_explored_lambda": 1599,
                "num_explored_none": 678,
                "num_inputs": 1,
                "num_kept_concrete": 423,
                "num_kept_lambda": 722,
                "num_values_explored": 4794,
                "num_values_kept": 1145,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47877
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.255425110924989,
            "num_unique_values": 150,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 45.38745387453874,
                "explored_percent_none": 15.498154981549815,
                "kept_percent_concrete": 30.344827586206897,
                "kept_percent_lambda": 69.65517241379311,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 123,
                "num_explored_none": 42,
                "num_inputs": 1,
                "num_kept_concrete": 44,
                "num_kept_lambda": 101,
                "num_values_explored": 271,
                "num_values_kept": 145,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3614060119725764,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.84684684684684,
                "explored_percent_lambda": 23.603603603603602,
                "explored_percent_none": 9.54954954954955,
                "kept_percent_concrete": 60.273972602739725,
                "kept_percent_lambda": 39.726027397260275,
                "num_examples": 5,
                "num_explored_concrete": 371,
                "num_explored_lambda": 131,
                "num_explored_none": 53,
                "num_inputs": 2,
                "num_kept_concrete": 132,
                "num_kept_lambda": 87,
                "num_values_explored": 555,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 555
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5920649250038,
            "num_unique_values": 681,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.41501727929626,
                "explored_percent_lambda": 10.477536914860195,
                "explored_percent_none": 26.107445805843543,
                "kept_percent_concrete": 73.1454005934718,
                "kept_percent_lambda": 26.85459940652819,
                "num_examples": 2,
                "num_explored_concrete": 4037,
                "num_explored_lambda": 667,
                "num_explored_none": 1662,
                "num_inputs": 3,
                "num_kept_concrete": 493,
                "num_kept_lambda": 181,
                "num_values_explored": 6366,
                "num_values_kept": 674,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60084
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1054230579175,
            "num_unique_values": 937,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.26143790849673,
                "explored_percent_lambda": 33.4500466853408,
                "explored_percent_none": 21.288515406162464,
                "kept_percent_concrete": 41.41630901287554,
                "kept_percent_lambda": 58.58369098712446,
                "num_examples": 2,
                "num_explored_concrete": 1939,
                "num_explored_lambda": 1433,
                "num_explored_none": 912,
                "num_inputs": 1,
                "num_kept_concrete": 386,
                "num_kept_lambda": 546,
                "num_values_explored": 4284,
                "num_values_kept": 932,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49103
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.0593269970268,
            "num_unique_values": 752,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Square(Add(-1, -1)), v1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 64.54101311391103,
                "explored_percent_lambda": 23.142195937258936,
                "explored_percent_none": 12.316790948830034,
                "kept_percent_concrete": 56.76037483266399,
                "kept_percent_lambda": 43.23962516733601,
                "num_examples": 2,
                "num_explored_concrete": 2510,
                "num_explored_lambda": 900,
                "num_explored_none": 479,
                "num_inputs": 1,
                "num_kept_concrete": 424,
                "num_kept_lambda": 323,
                "num_values_explored": 3889,
                "num_values_kept": 747,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 16973
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 68.73850880586542,
            "num_unique_values": 308,
            "solution": "Max(Subtract(x1, x2), Subtract(Subtract(Subtract(Add(x1, 1), x2), x2), Max(x2, -1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 28.92922794117647,
                "explored_percent_lambda": 17.371323529411764,
                "explored_percent_none": 53.69944852941177,
                "kept_percent_concrete": 68.21192052980132,
                "kept_percent_lambda": 31.788079470198674,
                "num_examples": 2,
                "num_explored_concrete": 1259,
                "num_explored_lambda": 756,
                "num_explored_none": 2337,
                "num_inputs": 2,
                "num_kept_concrete": 206,
                "num_kept_lambda": 96,
                "num_values_explored": 4352,
                "num_values_kept": 302,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 36857
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79424878791906,
            "num_unique_values": 543,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.63903438852198,
                "explored_percent_lambda": 26.48599407879754,
                "explored_percent_none": 38.87497153268048,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 4,
                "num_explored_concrete": 1521,
                "num_explored_lambda": 1163,
                "num_explored_none": 1707,
                "num_inputs": 2,
                "num_kept_concrete": 249,
                "num_kept_lambda": 288,
                "num_values_explored": 4391,
                "num_values_kept": 537,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50356
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.345263565890491,
            "num_unique_values": 263,
            "solution": "Take(Add(1, 1), Map((lambda u1: ((lambda v1: Add(v1, -1)))(u1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 56.7816091954023,
                "explored_percent_lambda": 35.40229885057471,
                "explored_percent_none": 7.816091954022989,
                "kept_percent_concrete": 52.91828793774319,
                "kept_percent_lambda": 47.08171206225681,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 154,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 136,
                "num_kept_lambda": 121,
                "num_values_explored": 435,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80453664320521,
            "num_unique_values": 847,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.60215053763441,
                "explored_percent_lambda": 18.817204301075268,
                "explored_percent_none": 22.580645161290324,
                "kept_percent_concrete": 58.90736342042755,
                "kept_percent_lambda": 41.09263657957245,
                "num_examples": 4,
                "num_explored_concrete": 3161,
                "num_explored_lambda": 1015,
                "num_explored_none": 1218,
                "num_inputs": 1,
                "num_kept_concrete": 496,
                "num_kept_lambda": 346,
                "num_values_explored": 5394,
                "num_values_kept": 842,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55498
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.001145251095295,
            "num_unique_values": 280,
            "solution": "Multiply(Subtract(-1, Add(1, Add(x1, 1))), If(IsEven(x1), Add(-1, 1), -1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 21.34056185312962,
                "explored_percent_lambda": 26.564810251355347,
                "explored_percent_none": 52.09462789551503,
                "kept_percent_concrete": 44.72727272727273,
                "kept_percent_lambda": 55.27272727272727,
                "num_examples": 5,
                "num_explored_concrete": 866,
                "num_explored_lambda": 1078,
                "num_explored_none": 2114,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 152,
                "num_values_explored": 4058,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3278324028942734,
            "num_unique_values": 182,
            "solution": "Take(IntDivide(Add(x1, x1), x1), Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.39080459770115,
                "explored_percent_lambda": 16.551724137931036,
                "explored_percent_none": 5.057471264367816,
                "kept_percent_concrete": 70.85714285714286,
                "kept_percent_lambda": 29.142857142857142,
                "num_examples": 2,
                "num_explored_concrete": 341,
                "num_explored_lambda": 72,
                "num_explored_none": 22,
                "num_inputs": 3,
                "num_kept_concrete": 124,
                "num_kept_lambda": 51,
                "num_values_explored": 435,
                "num_values_kept": 175,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71308891195804,
            "num_unique_values": 345,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.224153377530907,
                "explored_percent_lambda": 21.859881741623365,
                "explored_percent_none": 48.91596488084573,
                "kept_percent_concrete": 61.35693215339233,
                "kept_percent_lambda": 38.64306784660767,
                "num_examples": 2,
                "num_explored_concrete": 1631,
                "num_explored_lambda": 1220,
                "num_explored_none": 2730,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 131,
                "num_values_explored": 5581,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55358
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22929907403886318,
            "num_unique_values": 165,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u1)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 53.15985130111524,
                "explored_percent_lambda": 39.405204460966544,
                "explored_percent_none": 7.434944237918216,
                "kept_percent_concrete": 42.40506329113924,
                "kept_percent_lambda": 57.59493670886076,
                "num_examples": 4,
                "num_explored_concrete": 143,
                "num_explored_lambda": 106,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 67,
                "num_kept_lambda": 91,
                "num_values_explored": 269,
                "num_values_kept": 158,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29482551687397063,
            "num_unique_values": 282,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.48062015503876,
                "explored_percent_lambda": 20.73643410852713,
                "explored_percent_none": 6.782945736434108,
                "kept_percent_concrete": 69.45454545454545,
                "kept_percent_lambda": 30.545454545454547,
                "num_examples": 4,
                "num_explored_concrete": 374,
                "num_explored_lambda": 107,
                "num_explored_none": 35,
                "num_inputs": 3,
                "num_kept_concrete": 191,
                "num_kept_lambda": 84,
                "num_values_explored": 516,
                "num_values_kept": 275,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 516
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 67.84256284497678,
            "num_unique_values": 313,
            "solution": "Max(Min(Add(x1, IntDivide(Add(x2, x1), x2)), IntDivide(Square(x1), x2)), Add(x1, 1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 29.886685552407933,
                "explored_percent_lambda": 14.49480642115203,
                "explored_percent_none": 55.61850802644004,
                "kept_percent_concrete": 76.8729641693811,
                "kept_percent_lambda": 23.127035830618894,
                "num_examples": 4,
                "num_explored_concrete": 1266,
                "num_explored_lambda": 614,
                "num_explored_none": 2356,
                "num_inputs": 2,
                "num_kept_concrete": 236,
                "num_kept_lambda": 71,
                "num_values_explored": 4236,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 38915
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96606514998712,
            "num_unique_values": 992,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.098501070663815,
                "explored_percent_lambda": 21.39380961650769,
                "explored_percent_none": 16.5076893128285,
                "kept_percent_concrete": 53.90070921985816,
                "kept_percent_lambda": 46.09929078014184,
                "num_examples": 5,
                "num_explored_concrete": 3190,
                "num_explored_lambda": 1099,
                "num_explored_none": 848,
                "num_inputs": 1,
                "num_kept_concrete": 532,
                "num_kept_lambda": 455,
                "num_values_explored": 5137,
                "num_values_kept": 987,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51480
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32544083590619266,
            "num_unique_values": 236,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 75.35971223021583,
                "explored_percent_lambda": 14.568345323741006,
                "explored_percent_none": 10.071942446043165,
                "kept_percent_concrete": 81.6593886462882,
                "kept_percent_lambda": 18.34061135371179,
                "num_examples": 5,
                "num_explored_concrete": 419,
                "num_explored_lambda": 81,
                "num_explored_none": 56,
                "num_inputs": 3,
                "num_kept_concrete": 187,
                "num_kept_lambda": 42,
                "num_values_explored": 556,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 556
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05840888386592,
            "num_unique_values": 1041,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.25405405405405,
                "explored_percent_lambda": 27.113513513513514,
                "explored_percent_none": 15.632432432432433,
                "kept_percent_concrete": 55.21235521235521,
                "kept_percent_lambda": 44.78764478764479,
                "num_examples": 3,
                "num_explored_concrete": 2648,
                "num_explored_lambda": 1254,
                "num_explored_none": 723,
                "num_inputs": 1,
                "num_kept_concrete": 572,
                "num_kept_lambda": 464,
                "num_values_explored": 4625,
                "num_values_kept": 1036,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48078
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23420173185877502,
            "num_unique_values": 138,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 50.91575091575091,
                "explored_percent_lambda": 32.967032967032964,
                "explored_percent_none": 16.117216117216117,
                "kept_percent_concrete": 45.45454545454545,
                "kept_percent_lambda": 54.54545454545455,
                "num_examples": 4,
                "num_explored_concrete": 139,
                "num_explored_lambda": 90,
                "num_explored_none": 44,
                "num_inputs": 2,
                "num_kept_concrete": 60,
                "num_kept_lambda": 72,
                "num_values_explored": 273,
                "num_values_kept": 132,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.6389404458459467,
            "num_unique_values": 548,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 58.353658536585364,
                "explored_percent_lambda": 21.890243902439025,
                "explored_percent_none": 19.75609756097561,
                "kept_percent_concrete": 75.23105360443623,
                "kept_percent_lambda": 24.76894639556377,
                "num_examples": 5,
                "num_explored_concrete": 957,
                "num_explored_lambda": 359,
                "num_explored_none": 324,
                "num_inputs": 3,
                "num_kept_concrete": 407,
                "num_kept_lambda": 134,
                "num_values_explored": 1640,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3320
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3032574551180005,
            "num_unique_values": 205,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 63.2183908045977,
                "explored_percent_lambda": 29.195402298850574,
                "explored_percent_none": 7.586206896551724,
                "kept_percent_concrete": 53.266331658291456,
                "kept_percent_lambda": 46.733668341708544,
                "num_examples": 5,
                "num_explored_concrete": 275,
                "num_explored_lambda": 127,
                "num_explored_none": 33,
                "num_inputs": 2,
                "num_kept_concrete": 106,
                "num_kept_lambda": 93,
                "num_values_explored": 435,
                "num_values_kept": 199,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 435
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62273947312497,
            "num_unique_values": 495,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.88251932868188,
                "explored_percent_lambda": 19.385253630020742,
                "explored_percent_none": 39.73222704129738,
                "kept_percent_concrete": 60.940695296523515,
                "kept_percent_lambda": 39.059304703476485,
                "num_examples": 5,
                "num_explored_concrete": 2168,
                "num_explored_lambda": 1028,
                "num_explored_none": 2107,
                "num_inputs": 2,
                "num_kept_concrete": 298,
                "num_kept_lambda": 191,
                "num_values_explored": 5303,
                "num_values_kept": 489,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53177
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7935000078287,
            "num_unique_values": 618,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.995387453874535,
                "explored_percent_lambda": 31.964944649446494,
                "explored_percent_none": 23.039667896678967,
                "kept_percent_concrete": 33.169934640522875,
                "kept_percent_lambda": 66.83006535947712,
                "num_examples": 2,
                "num_explored_concrete": 1951,
                "num_explored_lambda": 1386,
                "num_explored_none": 999,
                "num_inputs": 2,
                "num_kept_concrete": 203,
                "num_kept_lambda": 409,
                "num_values_explored": 4336,
                "num_values_kept": 612,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47388
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78990036807954,
            "num_unique_values": 337,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.58273381294964,
                "explored_percent_lambda": 30.30865630076584,
                "explored_percent_none": 48.10860988628452,
                "kept_percent_concrete": 39.45783132530121,
                "kept_percent_lambda": 60.54216867469879,
                "num_examples": 4,
                "num_explored_concrete": 930,
                "num_explored_lambda": 1306,
                "num_explored_none": 2073,
                "num_inputs": 1,
                "num_kept_concrete": 131,
                "num_kept_lambda": 201,
                "num_values_explored": 4309,
                "num_values_kept": 332,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45459
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31022852193564,
            "num_unique_values": 1100,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.7742470950913,
                "explored_percent_lambda": 27.057149632440122,
                "explored_percent_none": 17.16860327246858,
                "kept_percent_concrete": 48.72029250457038,
                "kept_percent_lambda": 51.27970749542962,
                "num_examples": 4,
                "num_explored_concrete": 2352,
                "num_explored_lambda": 1141,
                "num_explored_none": 724,
                "num_inputs": 2,
                "num_kept_concrete": 533,
                "num_kept_lambda": 561,
                "num_values_explored": 4217,
                "num_values_kept": 1094,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46424
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20947712706402,
            "num_unique_values": 899,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.22085889570552,
                "explored_percent_lambda": 16.89745836985101,
                "explored_percent_none": 14.881682734443471,
                "kept_percent_concrete": 64.98881431767337,
                "kept_percent_lambda": 35.01118568232662,
                "num_examples": 3,
                "num_explored_concrete": 3892,
                "num_explored_lambda": 964,
                "num_explored_none": 849,
                "num_inputs": 1,
                "num_kept_concrete": 581,
                "num_kept_lambda": 313,
                "num_values_explored": 5705,
                "num_values_kept": 894,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55163
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33777719596400857,
            "num_unique_values": 190,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 59.964093357271096,
                "explored_percent_lambda": 25.673249551166965,
                "explored_percent_none": 14.362657091561939,
                "kept_percent_concrete": 52.71739130434783,
                "kept_percent_lambda": 47.28260869565217,
                "num_examples": 2,
                "num_explored_concrete": 334,
                "num_explored_lambda": 143,
                "num_explored_none": 80,
                "num_inputs": 2,
                "num_kept_concrete": 97,
                "num_kept_lambda": 87,
                "num_values_explored": 557,
                "num_values_kept": 184,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 557
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61377575411461,
            "num_unique_values": 377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.241953385127637,
                "explored_percent_lambda": 28.412874583795784,
                "explored_percent_none": 49.34517203107658,
                "kept_percent_concrete": 40.32258064516129,
                "kept_percent_lambda": 59.67741935483871,
                "num_examples": 4,
                "num_explored_concrete": 1002,
                "num_explored_lambda": 1280,
                "num_explored_none": 2223,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 222,
                "num_values_explored": 4505,
                "num_values_kept": 372,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45308
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29896399588324,
            "num_unique_values": 982,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.33125365568337,
                "explored_percent_lambda": 17.76174692922597,
                "explored_percent_none": 12.906999415090661,
                "kept_percent_concrete": 65.1639344262295,
                "kept_percent_lambda": 34.83606557377049,
                "num_examples": 2,
                "num_explored_concrete": 3556,
                "num_explored_lambda": 911,
                "num_explored_none": 662,
                "num_inputs": 2,
                "num_kept_concrete": 636,
                "num_kept_lambda": 340,
                "num_values_explored": 5129,
                "num_values_kept": 976,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55052
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16206060093828,
            "num_unique_values": 1288,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.95015424581912,
                "explored_percent_lambda": 11.885046273745738,
                "explored_percent_none": 15.164799480435136,
                "kept_percent_concrete": 78.62714508580343,
                "kept_percent_lambda": 21.37285491419657,
                "num_examples": 5,
                "num_explored_concrete": 4493,
                "num_explored_lambda": 732,
                "num_explored_none": 934,
                "num_inputs": 2,
                "num_kept_concrete": 1008,
                "num_kept_lambda": 274,
                "num_values_explored": 6159,
                "num_values_kept": 1282,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59186
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.56881989701651,
            "num_unique_values": 780,
            "solution": "Scanl1((lambda u1, u2: Subtract(Add(-1, -1), 1)), Map((lambda u1: Sum(Take(-1, Scanl1((lambda u1, u2: -1), Sort(x1))))), x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 62.42848061029879,
                "explored_percent_lambda": 27.272727272727273,
                "explored_percent_none": 10.298792116973935,
                "kept_percent_concrete": 58.064516129032256,
                "kept_percent_lambda": 41.935483870967744,
                "num_examples": 3,
                "num_explored_concrete": 1964,
                "num_explored_lambda": 858,
                "num_explored_none": 324,
                "num_inputs": 1,
                "num_kept_concrete": 450,
                "num_kept_lambda": 325,
                "num_values_explored": 3146,
                "num_values_kept": 775,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 20006
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0759493780788,
            "num_unique_values": 1142,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.47580317202114,
                "explored_percent_lambda": 15.534770231801545,
                "explored_percent_none": 13.989426596177308,
                "kept_percent_concrete": 78.25704225352112,
                "kept_percent_lambda": 21.742957746478872,
                "num_examples": 5,
                "num_explored_concrete": 3466,
                "num_explored_lambda": 764,
                "num_explored_none": 688,
                "num_inputs": 2,
                "num_kept_concrete": 889,
                "num_kept_lambda": 247,
                "num_values_explored": 4918,
                "num_values_kept": 1136,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56999
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.50756972306408,
            "num_unique_values": 1152,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.75104464482076,
                "explored_percent_lambda": 32.98878381350341,
                "explored_percent_none": 11.260171541675831,
                "kept_percent_concrete": 41.06364428945074,
                "kept_percent_lambda": 58.93635571054926,
                "num_examples": 2,
                "num_explored_concrete": 2535,
                "num_explored_lambda": 1500,
                "num_explored_none": 512,
                "num_inputs": 1,
                "num_kept_concrete": 471,
                "num_kept_lambda": 676,
                "num_values_explored": 4547,
                "num_values_kept": 1147,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47109
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88158508110791,
            "num_unique_values": 1051,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.19134471895208,
                "explored_percent_lambda": 12.468910628419831,
                "explored_percent_none": 21.339744652628088,
                "kept_percent_concrete": 75.19157088122606,
                "kept_percent_lambda": 24.808429118773947,
                "num_examples": 4,
                "num_explored_concrete": 3992,
                "num_explored_lambda": 752,
                "num_explored_none": 1287,
                "num_inputs": 3,
                "num_kept_concrete": 785,
                "num_kept_lambda": 259,
                "num_values_explored": 6031,
                "num_values_kept": 1044,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60625
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89538226299919,
            "num_unique_values": 412,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.93297903749631,
                "explored_percent_lambda": 40.89164452317685,
                "explored_percent_none": 38.17537643932684,
                "kept_percent_concrete": 13.022113022113022,
                "kept_percent_lambda": 86.97788697788698,
                "num_examples": 2,
                "num_explored_concrete": 709,
                "num_explored_lambda": 1385,
                "num_explored_none": 1293,
                "num_inputs": 1,
                "num_kept_concrete": 53,
                "num_kept_lambda": 354,
                "num_values_explored": 3387,
                "num_values_kept": 407,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39642
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.94517300790176,
            "num_unique_values": 1159,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.58179581795818,
                "explored_percent_lambda": 9.055965559655597,
                "explored_percent_none": 11.362238622386224,
                "kept_percent_concrete": 87.32638888888889,
                "kept_percent_lambda": 12.67361111111111,
                "num_examples": 4,
                "num_explored_concrete": 5176,
                "num_explored_lambda": 589,
                "num_explored_none": 739,
                "num_inputs": 3,
                "num_kept_concrete": 1006,
                "num_kept_lambda": 146,
                "num_values_explored": 6504,
                "num_values_kept": 1152,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65783
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.10888160206378,
            "num_unique_values": 964,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.50860518880041,
                "explored_percent_lambda": 40.12329822758798,
                "explored_percent_none": 19.36809658361161,
                "kept_percent_concrete": 35.34932221063608,
                "kept_percent_lambda": 64.65067778936393,
                "num_examples": 3,
                "num_explored_concrete": 1577,
                "num_explored_lambda": 1562,
                "num_explored_none": 754,
                "num_inputs": 1,
                "num_kept_concrete": 339,
                "num_kept_lambda": 620,
                "num_values_explored": 3893,
                "num_values_kept": 959,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42690
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73107162793167,
            "num_unique_values": 337,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.657509157509157,
                "explored_percent_lambda": 28.113553113553113,
                "explored_percent_none": 50.22893772893773,
                "kept_percent_concrete": 37.04819277108434,
                "kept_percent_lambda": 62.95180722891566,
                "num_examples": 4,
                "num_explored_concrete": 946,
                "num_explored_lambda": 1228,
                "num_explored_none": 2194,
                "num_inputs": 1,
                "num_kept_concrete": 123,
                "num_kept_lambda": 209,
                "num_values_explored": 4368,
                "num_values_kept": 332,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44360
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05952430819161,
            "num_unique_values": 996,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.24010406987549,
                "explored_percent_lambda": 18.21222821036982,
                "explored_percent_none": 13.547667719754692,
                "kept_percent_concrete": 58.12310797174571,
                "kept_percent_lambda": 41.87689202825429,
                "num_examples": 2,
                "num_explored_concrete": 3672,
                "num_explored_lambda": 980,
                "num_explored_none": 729,
                "num_inputs": 1,
                "num_kept_concrete": 576,
                "num_kept_lambda": 415,
                "num_values_explored": 5381,
                "num_values_kept": 991,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51238
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13490832806565,
            "num_unique_values": 945,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.95924356048256,
                "explored_percent_lambda": 13.498532768177371,
                "explored_percent_none": 11.542223671340071,
                "kept_percent_concrete": 76.33262260127931,
                "kept_percent_lambda": 23.66737739872068,
                "num_examples": 5,
                "num_explored_concrete": 4598,
                "num_explored_lambda": 828,
                "num_explored_none": 708,
                "num_inputs": 3,
                "num_kept_concrete": 716,
                "num_kept_lambda": 222,
                "num_values_explored": 6134,
                "num_values_kept": 938,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61089
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.315230794018134,
            "num_unique_values": 584,
            "solution": "Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 56.77123182861515,
                "explored_percent_lambda": 26.625860749808723,
                "explored_percent_none": 16.602907421576127,
                "kept_percent_concrete": 42.733564013840834,
                "kept_percent_lambda": 57.266435986159166,
                "num_examples": 2,
                "num_explored_concrete": 2226,
                "num_explored_lambda": 1044,
                "num_explored_none": 651,
                "num_inputs": 2,
                "num_kept_concrete": 247,
                "num_kept_lambda": 331,
                "num_values_explored": 3921,
                "num_values_kept": 578,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 19760
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76044426788576,
            "num_unique_values": 563,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.34632335884945,
                "explored_percent_lambda": 30.920900023196474,
                "explored_percent_none": 31.73277661795407,
                "kept_percent_concrete": 31.003584229390682,
                "kept_percent_lambda": 68.99641577060932,
                "num_examples": 3,
                "num_explored_concrete": 1610,
                "num_explored_lambda": 1333,
                "num_explored_none": 1368,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 385,
                "num_values_explored": 4311,
                "num_values_kept": 558,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44183
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86886123102158,
            "num_unique_values": 1154,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.41530740276035,
                "explored_percent_lambda": 5.8500627352572145,
                "explored_percent_none": 16.734629861982434,
                "kept_percent_concrete": 89.62510897994768,
                "kept_percent_lambda": 10.37489102005231,
                "num_examples": 5,
                "num_explored_concrete": 4936,
                "num_explored_lambda": 373,
                "num_explored_none": 1067,
                "num_inputs": 3,
                "num_kept_concrete": 1028,
                "num_kept_lambda": 119,
                "num_values_explored": 6376,
                "num_values_kept": 1147,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65491
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.584650445962325,
            "num_unique_values": 496,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 51.85601799775028,
                "explored_percent_lambda": 21.334833145856766,
                "explored_percent_none": 26.80914885639295,
                "kept_percent_concrete": 68.09815950920246,
                "kept_percent_lambda": 31.901840490797547,
                "num_examples": 4,
                "num_explored_concrete": 1383,
                "num_explored_lambda": 569,
                "num_explored_none": 715,
                "num_inputs": 3,
                "num_kept_concrete": 333,
                "num_kept_lambda": 156,
                "num_values_explored": 2667,
                "num_values_kept": 489,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98762001493014,
            "num_unique_values": 1065,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.06542056074767,
                "explored_percent_lambda": 22.39252336448598,
                "explored_percent_none": 10.542056074766355,
                "kept_percent_concrete": 54.81132075471698,
                "kept_percent_lambda": 45.18867924528302,
                "num_examples": 2,
                "num_explored_concrete": 3588,
                "num_explored_lambda": 1198,
                "num_explored_none": 564,
                "num_inputs": 1,
                "num_kept_concrete": 581,
                "num_kept_lambda": 479,
                "num_values_explored": 5350,
                "num_values_kept": 1060,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50269
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77320065000094,
            "num_unique_values": 1014,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.61423220973782,
                "explored_percent_lambda": 12.794007490636703,
                "explored_percent_none": 14.591760299625468,
                "kept_percent_concrete": 75.89285714285714,
                "kept_percent_lambda": 24.107142857142858,
                "num_examples": 3,
                "num_explored_concrete": 4847,
                "num_explored_lambda": 854,
                "num_explored_none": 974,
                "num_inputs": 2,
                "num_kept_concrete": 765,
                "num_kept_lambda": 243,
                "num_values_explored": 6675,
                "num_values_kept": 1008,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63366
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49610214494169,
            "num_unique_values": 307,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.94278110445775,
                "explored_percent_lambda": 13.439787092481703,
                "explored_percent_none": 49.61743180306055,
                "kept_percent_concrete": 75.41528239202658,
                "kept_percent_lambda": 24.58471760797342,
                "num_examples": 4,
                "num_explored_concrete": 2221,
                "num_explored_lambda": 808,
                "num_explored_none": 2983,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 74,
                "num_values_explored": 6012,
                "num_values_kept": 301,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59349
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.18523557111621,
            "num_unique_values": 1049,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.14168285756988,
                "explored_percent_lambda": 12.509340905694216,
                "explored_percent_none": 15.348976236735913,
                "kept_percent_concrete": 75.76628352490421,
                "kept_percent_lambda": 24.233716475095786,
                "num_examples": 5,
                "num_explored_concrete": 4827,
                "num_explored_lambda": 837,
                "num_explored_none": 1027,
                "num_inputs": 1,
                "num_kept_concrete": 791,
                "num_kept_lambda": 253,
                "num_values_explored": 6691,
                "num_values_kept": 1044,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62265
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9032354708761,
            "num_unique_values": 802,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.83249024425495,
                "explored_percent_lambda": 9.770198005492123,
                "explored_percent_none": 29.39731175025293,
                "kept_percent_concrete": 77.51256281407035,
                "kept_percent_lambda": 22.487437185929647,
                "num_examples": 4,
                "num_explored_concrete": 4209,
                "num_explored_lambda": 676,
                "num_explored_none": 2034,
                "num_inputs": 2,
                "num_kept_concrete": 617,
                "num_kept_lambda": 179,
                "num_values_explored": 6919,
                "num_values_kept": 796,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71209
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.54338086699136,
            "num_unique_values": 344,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.35763888888889,
                "explored_percent_lambda": 22.37847222222222,
                "explored_percent_none": 48.263888888888886,
                "kept_percent_concrete": 55.75221238938053,
                "kept_percent_lambda": 44.24778761061947,
                "num_examples": 3,
                "num_explored_concrete": 1691,
                "num_explored_lambda": 1289,
                "num_explored_none": 2780,
                "num_inputs": 1,
                "num_kept_concrete": 189,
                "num_kept_lambda": 150,
                "num_values_explored": 5760,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59677
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95863474719226,
            "num_unique_values": 1026,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.97916332745632,
                "explored_percent_lambda": 17.182240743708928,
                "explored_percent_none": 12.83859592883475,
                "kept_percent_concrete": 63.92156862745098,
                "kept_percent_lambda": 36.07843137254902,
                "num_examples": 3,
                "num_explored_concrete": 4366,
                "num_explored_lambda": 1072,
                "num_explored_none": 801,
                "num_inputs": 2,
                "num_kept_concrete": 652,
                "num_kept_lambda": 368,
                "num_values_explored": 6239,
                "num_values_kept": 1020,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63310
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12740250607021,
            "num_unique_values": 1013,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.55285313376988,
                "explored_percent_lambda": 22.376052385406922,
                "explored_percent_none": 16.0710944808232,
                "kept_percent_concrete": 55.05952380952381,
                "kept_percent_lambda": 44.94047619047619,
                "num_examples": 5,
                "num_explored_concrete": 3290,
                "num_explored_lambda": 1196,
                "num_explored_none": 859,
                "num_inputs": 1,
                "num_kept_concrete": 555,
                "num_kept_lambda": 453,
                "num_values_explored": 5345,
                "num_values_kept": 1008,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57028
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20332121080719,
            "num_unique_values": 1137,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.19352663519892,
                "explored_percent_lambda": 15.829399865138233,
                "explored_percent_none": 22.977073499662847,
                "kept_percent_concrete": 70.58303886925795,
                "kept_percent_lambda": 29.41696113074205,
                "num_examples": 5,
                "num_explored_concrete": 3630,
                "num_explored_lambda": 939,
                "num_explored_none": 1363,
                "num_inputs": 1,
                "num_kept_concrete": 799,
                "num_kept_lambda": 333,
                "num_values_explored": 5932,
                "num_values_kept": 1132,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61678
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80348309013061,
            "num_unique_values": 625,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.240326657592846,
                "explored_percent_lambda": 24.654870698036166,
                "explored_percent_none": 27.104802644370988,
                "kept_percent_concrete": 39.03225806451613,
                "kept_percent_lambda": 60.96774193548387,
                "num_examples": 2,
                "num_explored_concrete": 2481,
                "num_explored_lambda": 1268,
                "num_explored_none": 1394,
                "num_inputs": 1,
                "num_kept_concrete": 242,
                "num_kept_lambda": 378,
                "num_values_explored": 5143,
                "num_values_kept": 620,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52888
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1565102499444,
            "num_unique_values": 1159,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.25448928364549,
                "explored_percent_lambda": 20.853446611314926,
                "explored_percent_none": 20.892064105039584,
                "kept_percent_concrete": 60.658578856152516,
                "kept_percent_lambda": 39.341421143847484,
                "num_examples": 4,
                "num_explored_concrete": 3017,
                "num_explored_lambda": 1080,
                "num_explored_none": 1082,
                "num_inputs": 1,
                "num_kept_concrete": 700,
                "num_kept_lambda": 454,
                "num_values_explored": 5179,
                "num_values_kept": 1154,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52666
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85933123901486,
            "num_unique_values": 527,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.770240700218817,
                "explored_percent_lambda": 41.64113785557987,
                "explored_percent_none": 33.588621444201316,
                "kept_percent_concrete": 18.773946360153257,
                "kept_percent_lambda": 81.22605363984674,
                "num_examples": 2,
                "num_explored_concrete": 1132,
                "num_explored_lambda": 1903,
                "num_explored_none": 1535,
                "num_inputs": 1,
                "num_kept_concrete": 98,
                "num_kept_lambda": 424,
                "num_values_explored": 4570,
                "num_values_kept": 522,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46739
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84940717020072,
            "num_unique_values": 675,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.00419991600168,
                "explored_percent_lambda": 32.80134397312054,
                "explored_percent_none": 27.194456110877784,
                "kept_percent_concrete": 20.895522388059703,
                "kept_percent_lambda": 79.1044776119403,
                "num_examples": 2,
                "num_explored_concrete": 1905,
                "num_explored_lambda": 1562,
                "num_explored_none": 1295,
                "num_inputs": 1,
                "num_kept_concrete": 140,
                "num_kept_lambda": 530,
                "num_values_explored": 4762,
                "num_values_kept": 670,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49300
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.44540315913036,
            "num_unique_values": 370,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.064935064935064,
                "explored_percent_lambda": 29.835497835497836,
                "explored_percent_none": 47.099567099567096,
                "kept_percent_concrete": 34.24657534246575,
                "kept_percent_lambda": 65.75342465753425,
                "num_examples": 2,
                "num_explored_concrete": 1332,
                "num_explored_lambda": 1723,
                "num_explored_none": 2720,
                "num_inputs": 1,
                "num_kept_concrete": 125,
                "num_kept_lambda": 240,
                "num_values_explored": 5775,
                "num_values_kept": 365,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57771
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.54052187595516,
            "num_unique_values": 380,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.50945870013111,
                "explored_percent_lambda": 32.59037272897547,
                "explored_percent_none": 46.90016857089343,
                "kept_percent_concrete": 37.86666666666667,
                "kept_percent_lambda": 62.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 1095,
                "num_explored_lambda": 1740,
                "num_explored_none": 2504,
                "num_inputs": 1,
                "num_kept_concrete": 142,
                "num_kept_lambda": 233,
                "num_values_explored": 5339,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57288
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76857911096886,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.505470459518598,
                "explored_percent_lambda": 39.34752337378158,
                "explored_percent_none": 43.14700616669982,
                "kept_percent_concrete": 23.7467018469657,
                "kept_percent_lambda": 76.2532981530343,
                "num_examples": 2,
                "num_explored_concrete": 880,
                "num_explored_lambda": 1978,
                "num_explored_none": 2169,
                "num_inputs": 2,
                "num_kept_concrete": 90,
                "num_kept_lambda": 289,
                "num_values_explored": 5027,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52523
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55136765516363,
            "num_unique_values": 391,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.264367816091955,
                "explored_percent_lambda": 35.139573070607554,
                "explored_percent_none": 43.59605911330049,
                "kept_percent_concrete": 28.571428571428573,
                "kept_percent_lambda": 71.42857142857143,
                "num_examples": 2,
                "num_explored_concrete": 1036,
                "num_explored_lambda": 1712,
                "num_explored_none": 2124,
                "num_inputs": 2,
                "num_kept_concrete": 110,
                "num_kept_lambda": 275,
                "num_values_explored": 4872,
                "num_values_kept": 385,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51692
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45880574011244,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.372756933115824,
                "explored_percent_lambda": 37.5815660685155,
                "explored_percent_none": 44.04567699836868,
                "kept_percent_concrete": 24.010554089709764,
                "kept_percent_lambda": 75.98944591029024,
                "num_examples": 2,
                "num_explored_concrete": 901,
                "num_explored_lambda": 1843,
                "num_explored_none": 2160,
                "num_inputs": 2,
                "num_kept_concrete": 91,
                "num_kept_lambda": 288,
                "num_values_explored": 4904,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51263
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49535933788866,
            "num_unique_values": 386,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.6390509529366,
                "explored_percent_lambda": 38.85647607934656,
                "explored_percent_none": 43.50447296771684,
                "kept_percent_concrete": 24.473684210526315,
                "kept_percent_lambda": 75.52631578947368,
                "num_examples": 2,
                "num_explored_concrete": 907,
                "num_explored_lambda": 1998,
                "num_explored_none": 2237,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 287,
                "num_values_explored": 5142,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52721
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64882811089046,
            "num_unique_values": 506,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.68842672828808,
                "explored_percent_lambda": 39.14885422684383,
                "explored_percent_none": 35.16271904486809,
                "kept_percent_concrete": 21.157684630738522,
                "kept_percent_lambda": 78.84231536926147,
                "num_examples": 2,
                "num_explored_concrete": 1334,
                "num_explored_lambda": 2033,
                "num_explored_none": 1826,
                "num_inputs": 1,
                "num_kept_concrete": 106,
                "num_kept_lambda": 395,
                "num_values_explored": 5193,
                "num_values_kept": 501,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53318
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52086024801247,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.891467065868262,
                "explored_percent_lambda": 35.422904191616766,
                "explored_percent_none": 44.68562874251497,
                "kept_percent_concrete": 33.060109289617486,
                "kept_percent_lambda": 66.93989071038251,
                "num_examples": 3,
                "num_explored_concrete": 1063,
                "num_explored_lambda": 1893,
                "num_explored_none": 2388,
                "num_inputs": 1,
                "num_kept_concrete": 121,
                "num_kept_lambda": 245,
                "num_values_explored": 5344,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55265
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.5
}