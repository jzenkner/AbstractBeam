{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.50730887404643,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.16883116883117,
                "explored_percent_lambda": 57.142857142857146,
                "explored_percent_none": 11.688311688311689,
                "kept_percent_concrete": 18.253968253968253,
                "kept_percent_lambda": 81.74603174603175,
                "num_examples": 2,
                "num_explored_concrete": 72,
                "num_explored_lambda": 132,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1762881149770692,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.927536231884055,
                "explored_percent_lambda": 40.21739130434783,
                "explored_percent_none": 14.855072463768115,
                "kept_percent_concrete": 39.86486486486486,
                "kept_percent_lambda": 60.13513513513514,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 111,
                "num_explored_none": 41,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 89,
                "num_values_explored": 276,
                "num_values_kept": 148,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13518810202367604,
            "num_unique_values": 122,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.906976744186046,
                "explored_percent_lambda": 63.372093023255815,
                "explored_percent_none": 8.720930232558139,
                "kept_percent_concrete": 18.96551724137931,
                "kept_percent_lambda": 81.03448275862068,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 109,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 94,
                "num_values_explored": 172,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23952544399071485,
            "num_unique_values": 123,
            "solution": "Drop(Square(Subtract(-1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.85207100591716,
                "explored_percent_lambda": 69.8224852071006,
                "explored_percent_none": 5.325443786982248,
                "kept_percent_concrete": 16.23931623931624,
                "kept_percent_lambda": 83.76068376068376,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 118,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 98,
                "num_values_explored": 169,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0925184820080176,
            "num_unique_values": 82,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.29139072847682,
                "explored_percent_lambda": 39.0728476821192,
                "explored_percent_none": 4.635761589403973,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 4,
                "num_explored_concrete": 85,
                "num_explored_lambda": 59,
                "num_explored_none": 7,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 46,
                "num_values_explored": 151,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1401720440480858,
            "num_unique_values": 121,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.875776397515526,
                "explored_percent_lambda": 71.42857142857143,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 9.649122807017545,
                "kept_percent_lambda": 90.35087719298245,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 115,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 11,
                "num_kept_lambda": 103,
                "num_values_explored": 161,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1384384580887854,
            "num_unique_values": 117,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.11801242236025,
                "explored_percent_lambda": 72.67080745341615,
                "explored_percent_none": 6.211180124223603,
                "kept_percent_concrete": 10.81081081081081,
                "kept_percent_lambda": 89.1891891891892,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 117,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 99,
                "num_values_explored": 161,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37374943995382637,
            "num_unique_values": 285,
            "solution": "Drop(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.986301369863014,
                "explored_percent_lambda": 51.076320939334636,
                "explored_percent_none": 11.937377690802348,
                "kept_percent_concrete": 27.240143369175627,
                "kept_percent_lambda": 72.75985663082437,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 261,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 203,
                "num_values_explored": 511,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 511
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38538210093975067,
            "num_unique_values": 285,
            "solution": "Scanl1((lambda u1, u2: fn_3(Square(fn_3(-1)))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.29299363057325,
                "explored_percent_lambda": 37.261146496815286,
                "explored_percent_none": 15.445859872611464,
                "kept_percent_concrete": 40.50179211469534,
                "kept_percent_lambda": 59.49820788530466,
                "num_examples": 4,
                "num_explored_concrete": 297,
                "num_explored_lambda": 234,
                "num_explored_none": 97,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 166,
                "num_values_explored": 628,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10016998904757202,
            "num_unique_values": 105,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.06432748538012,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 5,
                "num_explored_concrete": 101,
                "num_explored_lambda": 54,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2864990660455078,
            "num_unique_values": 246,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.18672199170125,
                "explored_percent_lambda": 26.348547717842322,
                "explored_percent_none": 18.46473029045643,
                "kept_percent_concrete": 61.92468619246862,
                "kept_percent_lambda": 38.07531380753138,
                "num_examples": 4,
                "num_explored_concrete": 266,
                "num_explored_lambda": 127,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 91,
                "num_values_explored": 482,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24076974799390882,
            "num_unique_values": 105,
            "solution": "Max(x1, Square(Square(fn_3(-1))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.79318734793188,
                "explored_percent_lambda": 31.386861313868614,
                "explored_percent_none": 33.819951338199516,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 129,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 72,
                "num_values_explored": 411,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2339653300587088,
            "num_unique_values": 220,
            "solution": "Multiply(Square(fn_3(-1)), Minimum(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.36927223719677,
                "explored_percent_lambda": 34.23180592991914,
                "explored_percent_none": 12.398921832884097,
                "kept_percent_concrete": 51.401869158878505,
                "kept_percent_lambda": 48.598130841121495,
                "num_examples": 4,
                "num_explored_concrete": 198,
                "num_explored_lambda": 127,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 104,
                "num_values_explored": 371,
                "num_values_kept": 214,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 371
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2700510990107432,
            "num_unique_values": 176,
            "solution": "Multiply(Square(fn_3(-1)), fn_0(1, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 51.344086021505376,
                "explored_percent_lambda": 31.989247311827956,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 44.705882352941174,
                "kept_percent_lambda": 55.294117647058826,
                "num_examples": 2,
                "num_explored_concrete": 191,
                "num_explored_lambda": 119,
                "num_explored_none": 62,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 94,
                "num_values_explored": 372,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17882463906425983,
            "num_unique_values": 176,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.779411764705884,
                "explored_percent_lambda": 39.338235294117645,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 47.337278106508876,
                "kept_percent_lambda": 52.662721893491124,
                "num_examples": 5,
                "num_explored_concrete": 149,
                "num_explored_lambda": 107,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 89,
                "num_values_explored": 272,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3148364709923044,
            "num_unique_values": 248,
            "solution": "Sum(Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.53415061295972,
                "explored_percent_lambda": 39.05429071803853,
                "explored_percent_none": 15.411558669001751,
                "kept_percent_concrete": 40.082644628099175,
                "kept_percent_lambda": 59.917355371900825,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 223,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 145,
                "num_values_explored": 571,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1801959709264338,
            "num_unique_values": 186,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.34782608695652,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 7.608695652173913,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 105,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 96,
                "num_values_explored": 276,
                "num_values_kept": 179,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3499322939896956,
            "num_unique_values": 251,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 40.119760479041915,
                "explored_percent_lambda": 49.10179640718563,
                "explored_percent_none": 10.778443113772456,
                "kept_percent_concrete": 29.387755102040817,
                "kept_percent_lambda": 70.61224489795919,
                "num_examples": 3,
                "num_explored_concrete": 201,
                "num_explored_lambda": 246,
                "num_explored_none": 54,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 173,
                "num_values_explored": 501,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1263673120411113,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.036199095022624,
                "explored_percent_lambda": 32.126696832579185,
                "explored_percent_none": 15.83710407239819,
                "kept_percent_concrete": 51.5625,
                "kept_percent_lambda": 48.4375,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 71,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 66,
                "num_kept_lambda": 62,
                "num_values_explored": 221,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10909040807746351,
            "num_unique_values": 90,
            "solution": "Take(Subtract(-1, 1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.66233766233766,
                "explored_percent_lambda": 58.44155844155844,
                "explored_percent_none": 3.896103896103896,
                "kept_percent_concrete": 14.457831325301205,
                "kept_percent_lambda": 85.5421686746988,
                "num_examples": 2,
                "num_explored_concrete": 58,
                "num_explored_lambda": 90,
                "num_explored_none": 6,
                "num_inputs": 2,
                "num_kept_concrete": 12,
                "num_kept_lambda": 71,
                "num_values_explored": 154,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18306815205141902,
            "num_unique_values": 154,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.7007299270073,
                "explored_percent_lambda": 44.89051094890511,
                "explored_percent_none": 12.408759124087592,
                "kept_percent_concrete": 31.292517006802722,
                "kept_percent_lambda": 68.70748299319727,
                "num_examples": 3,
                "num_explored_concrete": 117,
                "num_explored_lambda": 123,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 101,
                "num_values_explored": 274,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 55.51710459799506,
            "num_unique_values": 744,
            "solution": "Max(Add(Minimum(x1), fn_0(fn_3(Head(x1)), x2)), Add(1, 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 58.992805755395686,
                "explored_percent_lambda": 20.719424460431654,
                "explored_percent_none": 20.287769784172664,
                "kept_percent_concrete": 67.97829036635007,
                "kept_percent_lambda": 32.021709633649934,
                "num_examples": 4,
                "num_explored_concrete": 1640,
                "num_explored_lambda": 576,
                "num_explored_none": 564,
                "num_inputs": 2,
                "num_kept_concrete": 501,
                "num_kept_lambda": 236,
                "num_values_explored": 2780,
                "num_values_kept": 737,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 36107
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.132964242016897,
            "num_unique_values": 959,
            "solution": "IntDivide(Square(Square(fn_3(-1))), Head(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.70237121831562,
                "explored_percent_lambda": 16.721177432542927,
                "explored_percent_none": 15.576451349141456,
                "kept_percent_concrete": 66.10703043022036,
                "kept_percent_lambda": 33.892969569779645,
                "num_examples": 5,
                "num_explored_concrete": 3312,
                "num_explored_lambda": 818,
                "num_explored_none": 762,
                "num_inputs": 1,
                "num_kept_concrete": 630,
                "num_kept_lambda": 323,
                "num_values_explored": 4892,
                "num_values_kept": 953,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6642
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3670046259649098,
            "num_unique_values": 347,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(v1, Square(Minimum(x1)))))(u1)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.02086677367576,
                "explored_percent_lambda": 23.59550561797753,
                "explored_percent_none": 7.38362760834671,
                "kept_percent_concrete": 67.3529411764706,
                "kept_percent_lambda": 32.64705882352941,
                "num_examples": 5,
                "num_explored_concrete": 430,
                "num_explored_lambda": 147,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 111,
                "num_values_explored": 623,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17495045391842723,
            "num_unique_values": 169,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.971326164874554,
                "explored_percent_lambda": 38.70967741935484,
                "explored_percent_none": 9.31899641577061,
                "kept_percent_concrete": 46.91358024691358,
                "kept_percent_lambda": 53.08641975308642,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 108,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 86,
                "num_values_explored": 279,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 279
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08752442104741931,
            "num_unique_values": 91,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.905325443786985,
                "explored_percent_lambda": 26.035502958579883,
                "explored_percent_none": 10.059171597633137,
                "kept_percent_concrete": 53.01204819277108,
                "kept_percent_lambda": 46.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 108,
                "num_explored_lambda": 44,
                "num_explored_none": 17,
                "num_inputs": 3,
                "num_kept_concrete": 44,
                "num_kept_lambda": 39,
                "num_values_explored": 169,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.07767240901012,
            "num_unique_values": 677,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.28883038736367,
                "explored_percent_lambda": 21.47423843550207,
                "explored_percent_none": 30.23693117713426,
                "kept_percent_concrete": 71.49253731343283,
                "kept_percent_lambda": 28.507462686567163,
                "num_examples": 5,
                "num_explored_concrete": 1284,
                "num_explored_lambda": 571,
                "num_explored_none": 804,
                "num_inputs": 2,
                "num_kept_concrete": 479,
                "num_kept_lambda": 191,
                "num_values_explored": 2659,
                "num_values_kept": 670,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10767
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1034636470722,
            "num_unique_values": 496,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.24791629721582,
                "explored_percent_lambda": 24.702961517999647,
                "explored_percent_none": 57.04912218478454,
                "kept_percent_concrete": 55.10204081632653,
                "kept_percent_lambda": 44.89795918367347,
                "num_examples": 5,
                "num_explored_concrete": 1029,
                "num_explored_lambda": 1393,
                "num_explored_none": 3217,
                "num_inputs": 1,
                "num_kept_concrete": 270,
                "num_kept_lambda": 220,
                "num_values_explored": 5639,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60011
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19545925001148134,
            "num_unique_values": 167,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.83402489626556,
                "explored_percent_lambda": 53.52697095435685,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 31.055900621118013,
                "kept_percent_lambda": 68.94409937888199,
                "num_examples": 3,
                "num_explored_concrete": 96,
                "num_explored_lambda": 129,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 50,
                "num_kept_lambda": 111,
                "num_values_explored": 241,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3543789259856567,
            "num_unique_values": 334,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 72.62569832402235,
                "explored_percent_lambda": 13.547486033519553,
                "explored_percent_none": 13.8268156424581,
                "kept_percent_concrete": 78.2874617737003,
                "kept_percent_lambda": 21.712538226299696,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 97,
                "num_explored_none": 99,
                "num_inputs": 2,
                "num_kept_concrete": 256,
                "num_kept_lambda": 71,
                "num_values_explored": 716,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3253821280086413,
            "num_unique_values": 296,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.77367576243981,
                "explored_percent_lambda": 24.077046548956663,
                "explored_percent_none": 9.149277688603531,
                "kept_percent_concrete": 61.937716262975776,
                "kept_percent_lambda": 38.062283737024224,
                "num_examples": 3,
                "num_explored_concrete": 416,
                "num_explored_lambda": 150,
                "num_explored_none": 57,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 110,
                "num_values_explored": 623,
                "num_values_kept": 289,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.252372494898736,
            "num_unique_values": 425,
            "solution": "Max(Square(Square(fn_3(-1))), Multiply(Square(x1), fn_3(Add(x1, x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 24.746534243740946,
                "explored_percent_lambda": 22.573970618663356,
                "explored_percent_none": 52.679495137595694,
                "kept_percent_concrete": 57.04057279236277,
                "kept_percent_lambda": 42.95942720763723,
                "num_examples": 2,
                "num_explored_concrete": 1196,
                "num_explored_lambda": 1091,
                "num_explored_none": 2546,
                "num_inputs": 1,
                "num_kept_concrete": 239,
                "num_kept_lambda": 180,
                "num_values_explored": 4833,
                "num_values_kept": 419,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6933
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1840209059882909,
            "num_unique_values": 131,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.18181818181818,
                "explored_percent_lambda": 42.90909090909091,
                "explored_percent_none": 22.90909090909091,
                "kept_percent_concrete": 29.838709677419356,
                "kept_percent_lambda": 70.16129032258064,
                "num_examples": 5,
                "num_explored_concrete": 94,
                "num_explored_lambda": 118,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 87,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23593294189777225,
            "num_unique_values": 269,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.66183574879227,
                "explored_percent_lambda": 29.468599033816425,
                "explored_percent_none": 10.869565217391305,
                "kept_percent_concrete": 61.06870229007634,
                "kept_percent_lambda": 38.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 122,
                "num_explored_none": 45,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 102,
                "num_values_explored": 414,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 414
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29182597110048,
            "num_unique_values": 1225,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.963525835866264,
                "explored_percent_lambda": 34.346504559270514,
                "explored_percent_none": 17.689969604863222,
                "kept_percent_concrete": 36.751435602953244,
                "kept_percent_lambda": 63.248564397046756,
                "num_examples": 2,
                "num_explored_concrete": 2367,
                "num_explored_lambda": 1695,
                "num_explored_none": 873,
                "num_inputs": 1,
                "num_kept_concrete": 448,
                "num_kept_lambda": 771,
                "num_values_explored": 4935,
                "num_values_kept": 1219,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52155
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.54546857997775,
            "num_unique_values": 909,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(1, ((lambda v1: Subtract(-1, v1)))(v1))))(u2)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 32.74993370458764,
                "explored_percent_lambda": 43.17157252718112,
                "explored_percent_none": 24.078493768231237,
                "kept_percent_concrete": 35.10520487264673,
                "kept_percent_lambda": 64.89479512735326,
                "num_examples": 4,
                "num_explored_concrete": 1235,
                "num_explored_lambda": 1628,
                "num_explored_none": 908,
                "num_inputs": 1,
                "num_kept_concrete": 317,
                "num_kept_lambda": 586,
                "num_values_explored": 3771,
                "num_values_kept": 903,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10832
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3480104199843481,
            "num_unique_values": 258,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.71337579617835,
                "explored_percent_lambda": 23.726114649681527,
                "explored_percent_none": 16.56050955414013,
                "kept_percent_concrete": 58.56573705179283,
                "kept_percent_lambda": 41.43426294820717,
                "num_examples": 5,
                "num_explored_concrete": 375,
                "num_explored_lambda": 149,
                "num_explored_none": 104,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 104,
                "num_values_explored": 628,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73559957405087,
            "num_unique_values": 746,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.386740331491715,
                "explored_percent_lambda": 13.98096992019644,
                "explored_percent_none": 30.632289748311848,
                "kept_percent_concrete": 65.85365853658537,
                "kept_percent_lambda": 34.146341463414636,
                "num_examples": 2,
                "num_explored_concrete": 3609,
                "num_explored_lambda": 911,
                "num_explored_none": 1996,
                "num_inputs": 3,
                "num_kept_concrete": 486,
                "num_kept_lambda": 252,
                "num_values_explored": 6516,
                "num_values_kept": 738,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67714
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.41674754896667,
            "num_unique_values": 245,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 17.230008244023082,
                "explored_percent_lambda": 53.751030502885406,
                "explored_percent_none": 29.018961253091508,
                "kept_percent_concrete": 36.40167364016737,
                "kept_percent_lambda": 63.59832635983263,
                "num_examples": 2,
                "num_explored_concrete": 209,
                "num_explored_lambda": 652,
                "num_explored_none": 352,
                "num_inputs": 1,
                "num_kept_concrete": 87,
                "num_kept_lambda": 152,
                "num_values_explored": 1213,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 23107
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.22464784793556,
            "num_unique_values": 1024,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.36734693877551,
                "explored_percent_lambda": 26.632653061224488,
                "explored_percent_none": 26.0,
                "kept_percent_concrete": 41.06090373280943,
                "kept_percent_lambda": 58.93909626719057,
                "num_examples": 2,
                "num_explored_concrete": 2321,
                "num_explored_lambda": 1305,
                "num_explored_none": 1274,
                "num_inputs": 1,
                "num_kept_concrete": 418,
                "num_kept_lambda": 600,
                "num_values_explored": 4900,
                "num_values_kept": 1018,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51881
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84917510102969,
            "num_unique_values": 497,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.611702127659573,
                "explored_percent_lambda": 24.700797872340427,
                "explored_percent_none": 54.6875,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 2,
                "num_explored_concrete": 1240,
                "num_explored_lambda": 1486,
                "num_explored_none": 3290,
                "num_inputs": 2,
                "num_kept_concrete": 265,
                "num_kept_lambda": 225,
                "num_values_explored": 6016,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62466
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.190678004990332,
            "num_unique_values": 759,
            "solution": "Map((lambda u1: Max(fn_3(Square(fn_3(-1))), fn_3(IntDivide(x2, Square(fn_3(-1)))))), x1)",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 27.26333195535345,
                "explored_percent_lambda": 33.133526250516745,
                "explored_percent_none": 39.603141794129805,
                "kept_percent_concrete": 33.909574468085104,
                "kept_percent_lambda": 66.09042553191489,
                "num_examples": 4,
                "num_explored_concrete": 1319,
                "num_explored_lambda": 1603,
                "num_explored_none": 1916,
                "num_inputs": 2,
                "num_kept_concrete": 255,
                "num_kept_lambda": 497,
                "num_values_explored": 4838,
                "num_values_kept": 752,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 16589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3774988560471684,
            "num_unique_values": 333,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: fn_3(v1)))(u1)), x1, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.52202283849918,
                "explored_percent_lambda": 31.484502446982056,
                "explored_percent_none": 7.993474714518761,
                "kept_percent_concrete": 54.29447852760736,
                "kept_percent_lambda": 45.70552147239264,
                "num_examples": 3,
                "num_explored_concrete": 371,
                "num_explored_lambda": 193,
                "num_explored_none": 49,
                "num_inputs": 2,
                "num_kept_concrete": 177,
                "num_kept_lambda": 149,
                "num_values_explored": 613,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 613
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04013694403693,
            "num_unique_values": 952,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.21177290142808,
                "explored_percent_lambda": 20.60257749912922,
                "explored_percent_none": 27.1856495994427,
                "kept_percent_concrete": 56.553911205073994,
                "kept_percent_lambda": 43.446088794926006,
                "num_examples": 4,
                "num_explored_concrete": 2998,
                "num_explored_lambda": 1183,
                "num_explored_none": 1561,
                "num_inputs": 1,
                "num_kept_concrete": 535,
                "num_kept_lambda": 411,
                "num_values_explored": 5742,
                "num_values_kept": 946,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59837
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.051012433948927,
            "num_unique_values": 380,
            "solution": "Multiply(Add(1, Subtract(x1, fn_3(-1))), If(IsEven(x1), 0, 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 17.804775869291998,
                "explored_percent_lambda": 29.723502304147466,
                "explored_percent_none": 52.47172182656054,
                "kept_percent_concrete": 36.63101604278075,
                "kept_percent_lambda": 63.36898395721925,
                "num_examples": 5,
                "num_explored_concrete": 850,
                "num_explored_lambda": 1419,
                "num_explored_none": 2505,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 237,
                "num_values_explored": 4774,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6874
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.383948237984441,
            "num_unique_values": 263,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 27.850877192982455,
                "explored_percent_lambda": 52.41228070175438,
                "explored_percent_none": 19.736842105263158,
                "kept_percent_concrete": 37.254901960784316,
                "kept_percent_lambda": 62.745098039215684,
                "num_examples": 2,
                "num_explored_concrete": 254,
                "num_explored_lambda": 478,
                "num_explored_none": 180,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 160,
                "num_values_explored": 912,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3012
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58551937399898,
            "num_unique_values": 476,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.0,
                "explored_percent_lambda": 23.442517662170843,
                "explored_percent_none": 51.55748233782916,
                "kept_percent_concrete": 58.208955223880594,
                "kept_percent_lambda": 41.791044776119406,
                "num_examples": 2,
                "num_explored_concrete": 1557,
                "num_explored_lambda": 1460,
                "num_explored_none": 3211,
                "num_inputs": 2,
                "num_kept_concrete": 273,
                "num_kept_lambda": 196,
                "num_values_explored": 6228,
                "num_values_kept": 469,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63422
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1914019890828058,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.31460674157304,
                "explored_percent_lambda": 44.19475655430712,
                "explored_percent_none": 7.49063670411985,
                "kept_percent_concrete": 37.908496732026144,
                "kept_percent_lambda": 62.091503267973856,
                "num_examples": 4,
                "num_explored_concrete": 129,
                "num_explored_lambda": 118,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 58,
                "num_kept_lambda": 95,
                "num_values_explored": 267,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 267
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3371053420705721,
            "num_unique_values": 331,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.69759450171821,
                "explored_percent_lambda": 23.195876288659793,
                "explored_percent_none": 9.106529209621993,
                "kept_percent_concrete": 65.94427244582043,
                "kept_percent_lambda": 34.05572755417957,
                "num_examples": 4,
                "num_explored_concrete": 394,
                "num_explored_lambda": 135,
                "num_explored_none": 53,
                "num_inputs": 3,
                "num_kept_concrete": 213,
                "num_kept_lambda": 110,
                "num_values_explored": 582,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83282569400035,
            "num_unique_values": 492,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.296115715910936,
                "explored_percent_lambda": 22.931903136681292,
                "explored_percent_none": 50.77198114740777,
                "kept_percent_concrete": 56.70103092783505,
                "kept_percent_lambda": 43.29896907216495,
                "num_examples": 4,
                "num_explored_concrete": 1618,
                "num_explored_lambda": 1411,
                "num_explored_none": 3124,
                "num_inputs": 2,
                "num_kept_concrete": 275,
                "num_kept_lambda": 210,
                "num_values_explored": 6153,
                "num_values_kept": 485,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62292
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.05721914791502,
            "num_unique_values": 793,
            "solution": "Take(fn_3(Square(fn_3(-1))), Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), ((lambda v1: fn_5(v1, x1)))(v1), Head(x1))))(u1)), x1))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 40.64366290643663,
                "explored_percent_lambda": 37.12674187126742,
                "explored_percent_none": 22.229595222295952,
                "kept_percent_concrete": 37.865311308767474,
                "kept_percent_lambda": 62.134688691232526,
                "num_examples": 5,
                "num_explored_concrete": 1225,
                "num_explored_lambda": 1119,
                "num_explored_none": 670,
                "num_inputs": 1,
                "num_kept_concrete": 298,
                "num_kept_lambda": 489,
                "num_values_explored": 3014,
                "num_values_kept": 787,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 15517
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17378674901556224,
            "num_unique_values": 147,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.043795620437955,
                "explored_percent_lambda": 23.722627737226276,
                "explored_percent_none": 14.233576642335766,
                "kept_percent_concrete": 58.992805755395686,
                "kept_percent_lambda": 41.007194244604314,
                "num_examples": 5,
                "num_explored_concrete": 170,
                "num_explored_lambda": 65,
                "num_explored_none": 39,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 57,
                "num_values_explored": 274,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.36233330902178,
            "num_unique_values": 1114,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.95218466611706,
                "explored_percent_lambda": 28.689200329760922,
                "explored_percent_none": 30.35861500412201,
                "kept_percent_concrete": 41.51624548736462,
                "kept_percent_lambda": 58.48375451263538,
                "num_examples": 3,
                "num_explored_concrete": 1987,
                "num_explored_lambda": 1392,
                "num_explored_none": 1473,
                "num_inputs": 1,
                "num_kept_concrete": 460,
                "num_kept_lambda": 648,
                "num_values_explored": 4852,
                "num_values_kept": 1108,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53405
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39257261995226145,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(x1, ((lambda v1: fn_3(v1)))(v1))))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.54545454545455,
                "explored_percent_lambda": 31.738437001594896,
                "explored_percent_none": 13.716108452950559,
                "kept_percent_concrete": 43.032786885245905,
                "kept_percent_lambda": 56.967213114754095,
                "num_examples": 4,
                "num_explored_concrete": 342,
                "num_explored_lambda": 199,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 139,
                "num_values_explored": 627,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11713598296046,
            "num_unique_values": 1437,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.40092165898618,
                "explored_percent_lambda": 19.023041474654377,
                "explored_percent_none": 19.57603686635945,
                "kept_percent_concrete": 61.72148355493352,
                "kept_percent_lambda": 38.27851644506648,
                "num_examples": 5,
                "num_explored_concrete": 3331,
                "num_explored_lambda": 1032,
                "num_explored_none": 1062,
                "num_inputs": 3,
                "num_kept_concrete": 882,
                "num_kept_lambda": 547,
                "num_values_explored": 5425,
                "num_values_kept": 1429,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56041
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.212343117920682,
            "num_unique_values": 554,
            "solution": "Map((lambda u1: Sum(x1)), Drop(fn_5(0, x2), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 40.33567948023823,
                "explored_percent_lambda": 38.06172171088251,
                "explored_percent_none": 21.602598808879264,
                "kept_percent_concrete": 46.983546617915906,
                "kept_percent_lambda": 53.016453382084094,
                "num_examples": 5,
                "num_explored_concrete": 745,
                "num_explored_lambda": 703,
                "num_explored_none": 399,
                "num_inputs": 2,
                "num_kept_concrete": 257,
                "num_kept_lambda": 290,
                "num_values_explored": 1847,
                "num_values_kept": 547,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3597
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62478670699056,
            "num_unique_values": 643,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.22958242495388,
                "explored_percent_lambda": 21.01291296327352,
                "explored_percent_none": 41.757504611772596,
                "kept_percent_concrete": 50.78616352201258,
                "kept_percent_lambda": 49.21383647798742,
                "num_examples": 5,
                "num_explored_concrete": 2220,
                "num_explored_lambda": 1253,
                "num_explored_none": 2490,
                "num_inputs": 2,
                "num_kept_concrete": 323,
                "num_kept_lambda": 313,
                "num_values_explored": 5963,
                "num_values_kept": 636,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61077
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93567235895898,
            "num_unique_values": 816,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.33307453416149,
                "explored_percent_lambda": 27.736801242236027,
                "explored_percent_none": 29.930124223602483,
                "kept_percent_concrete": 26.946847960444995,
                "kept_percent_lambda": 73.053152039555,
                "num_examples": 2,
                "num_explored_concrete": 2181,
                "num_explored_lambda": 1429,
                "num_explored_none": 1542,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 591,
                "num_values_explored": 5152,
                "num_values_kept": 809,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52974
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95278823608533,
            "num_unique_values": 366,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.100355239786856,
                "explored_percent_lambda": 37.92184724689165,
                "explored_percent_none": 49.97779751332149,
                "kept_percent_concrete": 18.61111111111111,
                "kept_percent_lambda": 81.38888888888889,
                "num_examples": 4,
                "num_explored_concrete": 545,
                "num_explored_lambda": 1708,
                "num_explored_none": 2251,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 293,
                "num_values_explored": 4504,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49493
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 97.31588074797764,
            "num_unique_values": 780,
            "solution": "If(IsOdd(x2), x1, ZipWith((lambda u1, u2: ((lambda v1: fn_0(((lambda v1: Add(x2, v1)))(v1), x1)))(u1)), x1, Reverse(x1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 32.6792722083482,
                "explored_percent_lambda": 35.35497681056012,
                "explored_percent_none": 31.965750981091688,
                "kept_percent_concrete": 39.19793014230272,
                "kept_percent_lambda": 60.80206985769728,
                "num_examples": 4,
                "num_explored_concrete": 916,
                "num_explored_lambda": 991,
                "num_explored_none": 896,
                "num_inputs": 2,
                "num_kept_concrete": 303,
                "num_kept_lambda": 470,
                "num_values_explored": 2803,
                "num_values_kept": 773,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50621
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99770705099218,
            "num_unique_values": 1097,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.022920645945476,
                "explored_percent_lambda": 21.722521271054003,
                "explored_percent_none": 26.25455808300052,
                "kept_percent_concrete": 50.04582951420715,
                "kept_percent_lambda": 49.95417048579285,
                "num_examples": 3,
                "num_explored_concrete": 2996,
                "num_explored_lambda": 1251,
                "num_explored_none": 1512,
                "num_inputs": 1,
                "num_kept_concrete": 546,
                "num_kept_lambda": 545,
                "num_values_explored": 5759,
                "num_values_kept": 1091,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57347
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3237157299881801,
            "num_unique_values": 220,
            "solution": "Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.82003395585738,
                "explored_percent_lambda": 30.899830220713074,
                "explored_percent_none": 15.280135823429541,
                "kept_percent_concrete": 43.66197183098591,
                "kept_percent_lambda": 56.33802816901409,
                "num_examples": 2,
                "num_explored_concrete": 317,
                "num_explored_lambda": 182,
                "num_explored_none": 90,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 120,
                "num_values_explored": 589,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73093595006503,
            "num_unique_values": 403,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.082735331363445,
                "explored_percent_lambda": 29.759392148585903,
                "explored_percent_none": 54.15787252005065,
                "kept_percent_concrete": 38.53904282115869,
                "kept_percent_lambda": 61.46095717884131,
                "num_examples": 4,
                "num_explored_concrete": 762,
                "num_explored_lambda": 1410,
                "num_explored_none": 2566,
                "num_inputs": 1,
                "num_kept_concrete": 153,
                "num_kept_lambda": 244,
                "num_values_explored": 4738,
                "num_values_kept": 397,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49527
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6012249439954758,
            "num_unique_values": 382,
            "solution": "Scanl1((lambda u1, u2: fn_3(fn_3(IntDivide(Last(x1), Head(x2))))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.3875094055681,
                "explored_percent_lambda": 24.52972159518435,
                "explored_percent_none": 10.082768999247554,
                "kept_percent_concrete": 57.86666666666667,
                "kept_percent_lambda": 42.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 869,
                "num_explored_lambda": 326,
                "num_explored_none": 134,
                "num_inputs": 2,
                "num_kept_concrete": 217,
                "num_kept_lambda": 158,
                "num_values_explored": 1329,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1329
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1009662549477,
            "num_unique_values": 1255,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.18068535825545,
                "explored_percent_lambda": 18.103149878850815,
                "explored_percent_none": 29.716164762893733,
                "kept_percent_concrete": 64.66346153846153,
                "kept_percent_lambda": 35.33653846153846,
                "num_examples": 5,
                "num_explored_concrete": 3015,
                "num_explored_lambda": 1046,
                "num_explored_none": 1717,
                "num_inputs": 2,
                "num_kept_concrete": 807,
                "num_kept_lambda": 441,
                "num_values_explored": 5778,
                "num_values_kept": 1248,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59259
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07044113997836,
            "num_unique_values": 1191,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.11430575035063,
                "explored_percent_lambda": 21.56381486676017,
                "explored_percent_none": 16.3218793828892,
                "kept_percent_concrete": 48.860759493670884,
                "kept_percent_lambda": 51.139240506329116,
                "num_examples": 3,
                "num_explored_concrete": 3543,
                "num_explored_lambda": 1230,
                "num_explored_none": 931,
                "num_inputs": 1,
                "num_kept_concrete": 579,
                "num_kept_lambda": 606,
                "num_values_explored": 5704,
                "num_values_kept": 1185,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57627
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12169477401767,
            "num_unique_values": 1388,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.97054236700745,
                "explored_percent_lambda": 13.827759487090626,
                "explored_percent_none": 16.201698145901922,
                "kept_percent_concrete": 74.22157856625634,
                "kept_percent_lambda": 25.778421433743663,
                "num_examples": 5,
                "num_explored_concrete": 4038,
                "num_explored_lambda": 798,
                "num_explored_none": 935,
                "num_inputs": 2,
                "num_kept_concrete": 1025,
                "num_kept_lambda": 356,
                "num_values_explored": 5771,
                "num_values_kept": 1381,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59854
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13654532295186,
            "num_unique_values": 1204,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.74917491749175,
                "explored_percent_lambda": 33.993399339933994,
                "explored_percent_none": 24.257425742574256,
                "kept_percent_concrete": 37.813021702838064,
                "kept_percent_lambda": 62.186978297161936,
                "num_examples": 2,
                "num_explored_concrete": 2024,
                "num_explored_lambda": 1648,
                "num_explored_none": 1176,
                "num_inputs": 1,
                "num_kept_concrete": 453,
                "num_kept_lambda": 745,
                "num_values_explored": 4848,
                "num_values_kept": 1198,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50281
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21828112797812,
            "num_unique_values": 1152,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.41307872455413,
                "explored_percent_lambda": 16.879841470005406,
                "explored_percent_none": 25.70707980544046,
                "kept_percent_concrete": 58.04195804195804,
                "kept_percent_lambda": 41.95804195804196,
                "num_examples": 4,
                "num_explored_concrete": 3187,
                "num_explored_lambda": 937,
                "num_explored_none": 1427,
                "num_inputs": 3,
                "num_kept_concrete": 664,
                "num_kept_lambda": 480,
                "num_values_explored": 5551,
                "num_values_kept": 1144,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59345
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27647419902496,
            "num_unique_values": 778,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.136767317939608,
                "explored_percent_lambda": 48.46802841918295,
                "explored_percent_none": 30.395204262877442,
                "kept_percent_concrete": 11.917098445595855,
                "kept_percent_lambda": 88.08290155440415,
                "num_examples": 2,
                "num_explored_concrete": 952,
                "num_explored_lambda": 2183,
                "num_explored_none": 1369,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 680,
                "num_values_explored": 4504,
                "num_values_kept": 772,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47254
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02537026000209,
            "num_unique_values": 1320,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.60671462829737,
                "explored_percent_lambda": 11.06115107913669,
                "explored_percent_none": 22.332134292565947,
                "kept_percent_concrete": 75.6859756097561,
                "kept_percent_lambda": 24.3140243902439,
                "num_examples": 4,
                "num_explored_concrete": 4444,
                "num_explored_lambda": 738,
                "num_explored_none": 1490,
                "num_inputs": 3,
                "num_kept_concrete": 993,
                "num_kept_lambda": 319,
                "num_values_explored": 6672,
                "num_values_kept": 1312,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69712
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29538834502455,
            "num_unique_values": 1222,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.355476140424635,
                "explored_percent_lambda": 37.27138953121715,
                "explored_percent_none": 25.37313432835821,
                "kept_percent_concrete": 33.38815789473684,
                "kept_percent_lambda": 66.61184210526316,
                "num_examples": 3,
                "num_explored_concrete": 1777,
                "num_explored_lambda": 1773,
                "num_explored_none": 1207,
                "num_inputs": 1,
                "num_kept_concrete": 406,
                "num_kept_lambda": 810,
                "num_values_explored": 4757,
                "num_values_kept": 1216,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47643
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95606524695177,
            "num_unique_values": 466,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.788355291117721,
                "explored_percent_lambda": 32.21419464513387,
                "explored_percent_none": 51.99745006374841,
                "kept_percent_concrete": 36.95652173913044,
                "kept_percent_lambda": 63.04347826086956,
                "num_examples": 4,
                "num_explored_concrete": 743,
                "num_explored_lambda": 1516,
                "num_explored_none": 2447,
                "num_inputs": 1,
                "num_kept_concrete": 170,
                "num_kept_lambda": 290,
                "num_values_explored": 4706,
                "num_values_kept": 460,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50874
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.47329778794665,
            "num_unique_values": 921,
            "solution": "Scanl1((lambda u1, u2: Square(Max(0, fn_3(Sum(x1))))), ZipWith((lambda u1, u2: ((lambda v1, v2: Multiply(v1, v2)))(u2, u1)), x1, Scanl1((lambda u1, u2: Last(x1)), x1)))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 50.68458417849899,
                "explored_percent_lambda": 27.053752535496958,
                "explored_percent_none": 22.261663286004058,
                "kept_percent_concrete": 44.80874316939891,
                "kept_percent_lambda": 55.19125683060109,
                "num_examples": 2,
                "num_explored_concrete": 1999,
                "num_explored_lambda": 1067,
                "num_explored_none": 878,
                "num_inputs": 1,
                "num_kept_concrete": 410,
                "num_kept_lambda": 505,
                "num_values_explored": 3944,
                "num_values_kept": 915,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22461
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4217291650129482,
            "num_unique_values": 325,
            "solution": "Map((lambda u1: Square(fn_5(Last(x1), x2))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.76230899830221,
                "explored_percent_lambda": 33.446519524618,
                "explored_percent_none": 6.791171477079796,
                "kept_percent_concrete": 53.31230283911672,
                "kept_percent_lambda": 46.68769716088328,
                "num_examples": 5,
                "num_explored_concrete": 352,
                "num_explored_lambda": 197,
                "num_explored_none": 40,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 148,
                "num_values_explored": 589,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.074211705010384,
            "num_unique_values": 877,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: fn_3(-1)), Drop(Head(x1), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 45.18828451882845,
                "explored_percent_lambda": 34.26558026866329,
                "explored_percent_none": 20.546135212508258,
                "kept_percent_concrete": 32.41379310344828,
                "kept_percent_lambda": 67.58620689655173,
                "num_examples": 2,
                "num_explored_concrete": 2052,
                "num_explored_lambda": 1556,
                "num_explored_none": 933,
                "num_inputs": 2,
                "num_kept_concrete": 282,
                "num_kept_lambda": 588,
                "num_values_explored": 4541,
                "num_values_kept": 870,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5941
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.18576950300485,
            "num_unique_values": 744,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.6734693877551,
                "explored_percent_lambda": 39.755102040816325,
                "explored_percent_none": 40.57142857142857,
                "kept_percent_concrete": 21.00271002710027,
                "kept_percent_lambda": 78.99728997289972,
                "num_examples": 3,
                "num_explored_concrete": 964,
                "num_explored_lambda": 1948,
                "num_explored_none": 1988,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 583,
                "num_values_explored": 4900,
                "num_values_kept": 738,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53672
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95526168798096,
            "num_unique_values": 1600,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.426092160383,
                "explored_percent_lambda": 8.632555356074207,
                "explored_percent_none": 12.941352483542788,
                "kept_percent_concrete": 81.4070351758794,
                "kept_percent_lambda": 18.592964824120603,
                "num_examples": 5,
                "num_explored_concrete": 5242,
                "num_explored_lambda": 577,
                "num_explored_none": 865,
                "num_inputs": 3,
                "num_kept_concrete": 1296,
                "num_kept_lambda": 296,
                "num_values_explored": 6684,
                "num_values_kept": 1592,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66804
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.403187887975946,
            "num_unique_values": 913,
            "solution": "Scanl1((lambda u1, u2: IntDivide(Max(x1, 1), Head(x3))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 54.38325991189427,
                "explored_percent_lambda": 17.841409691629956,
                "explored_percent_none": 27.77533039647577,
                "kept_percent_concrete": 58.12154696132597,
                "kept_percent_lambda": 41.87845303867403,
                "num_examples": 4,
                "num_explored_concrete": 2469,
                "num_explored_lambda": 810,
                "num_explored_none": 1261,
                "num_inputs": 3,
                "num_kept_concrete": 526,
                "num_kept_lambda": 379,
                "num_values_explored": 4540,
                "num_values_kept": 905,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6290
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13112478691619,
            "num_unique_values": 1222,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.06002577794145,
                "explored_percent_lambda": 26.790646289817712,
                "explored_percent_none": 19.14932793224084,
                "kept_percent_concrete": 45.06578947368421,
                "kept_percent_lambda": 54.93421052631579,
                "num_examples": 2,
                "num_explored_concrete": 2936,
                "num_explored_lambda": 1455,
                "num_explored_none": 1040,
                "num_inputs": 1,
                "num_kept_concrete": 548,
                "num_kept_lambda": 668,
                "num_values_explored": 5431,
                "num_values_kept": 1216,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55765
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.090428652009,
            "num_unique_values": 1072,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.91245791245791,
                "explored_percent_lambda": 15.909090909090908,
                "explored_percent_none": 21.17845117845118,
                "kept_percent_concrete": 64.88262910798122,
                "kept_percent_lambda": 35.117370892018776,
                "num_examples": 3,
                "num_explored_concrete": 3737,
                "num_explored_lambda": 945,
                "num_explored_none": 1258,
                "num_inputs": 2,
                "num_kept_concrete": 691,
                "num_kept_lambda": 374,
                "num_values_explored": 5940,
                "num_values_kept": 1065,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64683
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74247756495606,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.75862068965517,
                "explored_percent_lambda": 21.70689655172414,
                "explored_percent_none": 55.53448275862069,
                "kept_percent_concrete": 55.18672199170125,
                "kept_percent_lambda": 44.81327800829875,
                "num_examples": 4,
                "num_explored_concrete": 1320,
                "num_explored_lambda": 1259,
                "num_explored_none": 3221,
                "num_inputs": 2,
                "num_kept_concrete": 266,
                "num_kept_lambda": 216,
                "num_values_explored": 5800,
                "num_values_kept": 482,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60753
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.14451266801916,
            "num_unique_values": 1262,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.07715182554105,
                "explored_percent_lambda": 17.115479927308773,
                "explored_percent_none": 21.807368247150173,
                "kept_percent_concrete": 70.46178343949045,
                "kept_percent_lambda": 29.538216560509554,
                "num_examples": 5,
                "num_explored_concrete": 3697,
                "num_explored_lambda": 1036,
                "num_explored_none": 1320,
                "num_inputs": 1,
                "num_kept_concrete": 885,
                "num_kept_lambda": 371,
                "num_values_explored": 6053,
                "num_values_kept": 1256,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63227
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.55107623396907,
            "num_unique_values": 878,
            "solution": "Multiply(-1, Square(fn_1((lambda u1: ((lambda v1: Multiply(v1, Subtract(-1, x2))))(u1)), fn_5(1, x1))))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 51.42564452791532,
                "explored_percent_lambda": 15.963803995219395,
                "explored_percent_none": 32.61055147686529,
                "kept_percent_concrete": 65.097588978186,
                "kept_percent_lambda": 34.902411021814004,
                "num_examples": 4,
                "num_explored_concrete": 3012,
                "num_explored_lambda": 935,
                "num_explored_none": 1910,
                "num_inputs": 2,
                "num_kept_concrete": 567,
                "num_kept_lambda": 304,
                "num_values_explored": 5857,
                "num_values_kept": 871,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 49933
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.10851283394732,
            "num_unique_values": 486,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.25027767493521,
                "explored_percent_lambda": 24.564975934838948,
                "explored_percent_none": 51.18474639022584,
                "kept_percent_concrete": 50.625,
                "kept_percent_lambda": 49.375,
                "num_examples": 3,
                "num_explored_concrete": 1310,
                "num_explored_lambda": 1327,
                "num_explored_none": 2765,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 237,
                "num_values_explored": 5402,
                "num_values_kept": 480,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56013
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98467740998603,
            "num_unique_values": 1028,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.40692805481538,
                "explored_percent_lambda": 22.154548915112294,
                "explored_percent_none": 24.438523030072325,
                "kept_percent_concrete": 52.007835455435846,
                "kept_percent_lambda": 47.992164544564154,
                "num_examples": 3,
                "num_explored_concrete": 2806,
                "num_explored_lambda": 1164,
                "num_explored_none": 1284,
                "num_inputs": 2,
                "num_kept_concrete": 531,
                "num_kept_lambda": 490,
                "num_values_explored": 5254,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57525
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11479962198064,
            "num_unique_values": 1097,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.12417340191036,
                "explored_percent_lambda": 32.10874357090375,
                "explored_percent_none": 21.767083027185894,
                "kept_percent_concrete": 44.82126489459212,
                "kept_percent_lambda": 55.17873510540788,
                "num_examples": 5,
                "num_explored_concrete": 2511,
                "num_explored_lambda": 1748,
                "num_explored_none": 1185,
                "num_inputs": 1,
                "num_kept_concrete": 489,
                "num_kept_lambda": 602,
                "num_values_explored": 5444,
                "num_values_kept": 1091,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55487
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12255476706196,
            "num_unique_values": 1135,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.10505899466624,
                "explored_percent_lambda": 16.63164700177792,
                "explored_percent_none": 33.26329400355584,
                "kept_percent_concrete": 64.12754650132861,
                "kept_percent_lambda": 35.87245349867139,
                "num_examples": 5,
                "num_explored_concrete": 3100,
                "num_explored_lambda": 1029,
                "num_explored_none": 2058,
                "num_inputs": 1,
                "num_kept_concrete": 724,
                "num_kept_lambda": 405,
                "num_values_explored": 6187,
                "num_values_kept": 1129,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61129
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.32603443099651,
            "num_unique_values": 763,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.17403366007028,
                "explored_percent_lambda": 28.148696134640282,
                "explored_percent_none": 34.67727020528944,
                "kept_percent_concrete": 36.19550858652576,
                "kept_percent_lambda": 63.80449141347424,
                "num_examples": 2,
                "num_explored_concrete": 2010,
                "num_explored_lambda": 1522,
                "num_explored_none": 1875,
                "num_inputs": 1,
                "num_kept_concrete": 274,
                "num_kept_lambda": 483,
                "num_values_explored": 5407,
                "num_values_kept": 757,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56692
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1496396799339,
            "num_unique_values": 1251,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.80032012805122,
                "explored_percent_lambda": 27.270908363345338,
                "explored_percent_none": 21.928771508603443,
                "kept_percent_concrete": 49.799196787148595,
                "kept_percent_lambda": 50.200803212851405,
                "num_examples": 4,
                "num_explored_concrete": 2539,
                "num_explored_lambda": 1363,
                "num_explored_none": 1096,
                "num_inputs": 1,
                "num_kept_concrete": 620,
                "num_kept_lambda": 625,
                "num_values_explored": 4998,
                "num_values_kept": 1245,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52352
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.18754182301927,
            "num_unique_values": 812,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.561852107809262,
                "explored_percent_lambda": 45.818935729094676,
                "explored_percent_none": 32.61921216309606,
                "kept_percent_concrete": 12.531017369727047,
                "kept_percent_lambda": 87.46898263027295,
                "num_examples": 2,
                "num_explored_concrete": 936,
                "num_explored_lambda": 1989,
                "num_explored_none": 1416,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 705,
                "num_values_explored": 4341,
                "num_values_kept": 806,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46855
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27671600610483,
            "num_unique_values": 989,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.705714911320342,
                "explored_percent_lambda": 39.347492883731114,
                "explored_percent_none": 28.946792204948544,
                "kept_percent_concrete": 21.05798575788403,
                "kept_percent_lambda": 78.94201424211597,
                "num_examples": 2,
                "num_explored_concrete": 1448,
                "num_explored_lambda": 1797,
                "num_explored_none": 1322,
                "num_inputs": 1,
                "num_kept_concrete": 207,
                "num_kept_lambda": 776,
                "num_values_explored": 4567,
                "num_values_kept": 983,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47329
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72548347106203,
            "num_unique_values": 477,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.48569075561046,
                "explored_percent_lambda": 36.07164916615194,
                "explored_percent_none": 50.442660078237594,
                "kept_percent_concrete": 14.8619957537155,
                "kept_percent_lambda": 85.1380042462845,
                "num_examples": 2,
                "num_explored_concrete": 655,
                "num_explored_lambda": 1752,
                "num_explored_none": 2450,
                "num_inputs": 1,
                "num_kept_concrete": 70,
                "num_kept_lambda": 401,
                "num_values_explored": 4857,
                "num_values_kept": 471,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50309
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81603807595093,
            "num_unique_values": 453,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.152519113899235,
                "explored_percent_lambda": 27.739658890413644,
                "explored_percent_none": 50.10782199568712,
                "kept_percent_concrete": 40.044742729306485,
                "kept_percent_lambda": 59.955257270693515,
                "num_examples": 2,
                "num_explored_concrete": 1130,
                "num_explored_lambda": 1415,
                "num_explored_none": 2556,
                "num_inputs": 1,
                "num_kept_concrete": 179,
                "num_kept_lambda": 268,
                "num_values_explored": 5101,
                "num_values_kept": 447,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52533
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0263696720358,
            "num_unique_values": 449,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.4085684430512,
                "explored_percent_lambda": 34.48275862068966,
                "explored_percent_none": 48.10867293625914,
                "kept_percent_concrete": 33.484162895927604,
                "kept_percent_lambda": 66.5158371040724,
                "num_examples": 2,
                "num_explored_concrete": 833,
                "num_explored_lambda": 1650,
                "num_explored_none": 2302,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 294,
                "num_values_explored": 4785,
                "num_values_kept": 442,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48894
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75793770095333,
            "num_unique_values": 355,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.897260273972602,
                "explored_percent_lambda": 34.78167808219178,
                "explored_percent_none": 50.32106164383562,
                "kept_percent_concrete": 26.436781609195403,
                "kept_percent_lambda": 73.5632183908046,
                "num_examples": 2,
                "num_explored_concrete": 696,
                "num_explored_lambda": 1625,
                "num_explored_none": 2351,
                "num_inputs": 2,
                "num_kept_concrete": 92,
                "num_kept_lambda": 256,
                "num_values_explored": 4672,
                "num_values_kept": 348,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50720
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12397851492278,
            "num_unique_values": 493,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.058222676200206,
                "explored_percent_lambda": 36.99693564862104,
                "explored_percent_none": 45.94484167517875,
                "kept_percent_concrete": 32.92181069958848,
                "kept_percent_lambda": 67.07818930041152,
                "num_examples": 2,
                "num_explored_concrete": 835,
                "num_explored_lambda": 1811,
                "num_explored_none": 2249,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 326,
                "num_values_explored": 4895,
                "num_values_kept": 486,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50848
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7496718110051,
            "num_unique_values": 412,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.08463681165631,
                "explored_percent_lambda": 38.01157060209985,
                "explored_percent_none": 46.90379258624384,
                "kept_percent_concrete": 21.234567901234566,
                "kept_percent_lambda": 78.76543209876543,
                "num_examples": 2,
                "num_explored_concrete": 704,
                "num_explored_lambda": 1774,
                "num_explored_none": 2189,
                "num_inputs": 2,
                "num_kept_concrete": 86,
                "num_kept_lambda": 319,
                "num_values_explored": 4667,
                "num_values_kept": 405,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49788
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0653403600445,
            "num_unique_values": 825,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.875734297333935,
                "explored_percent_lambda": 43.62855851784907,
                "explored_percent_none": 31.49570718481699,
                "kept_percent_concrete": 11.477411477411477,
                "kept_percent_lambda": 88.52258852258852,
                "num_examples": 2,
                "num_explored_concrete": 1101,
                "num_explored_lambda": 1931,
                "num_explored_none": 1394,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 725,
                "num_values_explored": 4426,
                "num_values_kept": 819,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46602
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.86301363597158,
            "num_unique_values": 422,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.71887946340501,
                "explored_percent_lambda": 30.025646084040243,
                "explored_percent_none": 45.25547445255474,
                "kept_percent_concrete": 35.33653846153846,
                "kept_percent_lambda": 64.66346153846153,
                "num_examples": 3,
                "num_explored_concrete": 1253,
                "num_explored_lambda": 1522,
                "num_explored_none": 2294,
                "num_inputs": 1,
                "num_kept_concrete": 147,
                "num_kept_lambda": 269,
                "num_values_explored": 5069,
                "num_values_kept": 416,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52088
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}