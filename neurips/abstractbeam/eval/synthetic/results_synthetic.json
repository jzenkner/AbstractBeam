{
    "num_tasks": 100,
    "num_tasks_solved": 51,
    "results": [
        {
            "elapsed_time": 0.8974076779559255,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.16883116883117,
                "explored_percent_lambda": 57.142857142857146,
                "explored_percent_none": 11.688311688311689,
                "kept_percent_concrete": 18.253968253968253,
                "kept_percent_lambda": 81.74603174603175,
                "num_examples": 2,
                "num_explored_concrete": 72,
                "num_explored_lambda": 132,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29972324904520065,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.927536231884055,
                "explored_percent_lambda": 40.21739130434783,
                "explored_percent_none": 14.855072463768115,
                "kept_percent_concrete": 39.86486486486486,
                "kept_percent_lambda": 60.13513513513514,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 111,
                "num_explored_none": 41,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 89,
                "num_values_explored": 276,
                "num_values_kept": 148,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24856084305793047,
            "num_unique_values": 122,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.906976744186046,
                "explored_percent_lambda": 63.372093023255815,
                "explored_percent_none": 8.720930232558139,
                "kept_percent_concrete": 18.96551724137931,
                "kept_percent_lambda": 81.03448275862068,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 109,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 94,
                "num_values_explored": 172,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34243811399210244,
            "num_unique_values": 123,
            "solution": "Drop(Square(Subtract(-1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.85207100591716,
                "explored_percent_lambda": 69.8224852071006,
                "explored_percent_none": 5.325443786982248,
                "kept_percent_concrete": 16.23931623931624,
                "kept_percent_lambda": 83.76068376068376,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 118,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 98,
                "num_values_explored": 169,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14832938206382096,
            "num_unique_values": 82,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.29139072847682,
                "explored_percent_lambda": 39.0728476821192,
                "explored_percent_none": 4.635761589403973,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 4,
                "num_explored_concrete": 85,
                "num_explored_lambda": 59,
                "num_explored_none": 7,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 46,
                "num_values_explored": 151,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.284740149974823,
            "num_unique_values": 121,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.875776397515526,
                "explored_percent_lambda": 71.42857142857143,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 9.649122807017545,
                "kept_percent_lambda": 90.35087719298245,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 115,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 11,
                "num_kept_lambda": 103,
                "num_values_explored": 161,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2399893389083445,
            "num_unique_values": 117,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.11801242236025,
                "explored_percent_lambda": 72.67080745341615,
                "explored_percent_none": 6.211180124223603,
                "kept_percent_concrete": 10.81081081081081,
                "kept_percent_lambda": 89.1891891891892,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 117,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 99,
                "num_values_explored": 161,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5175610310398042,
            "num_unique_values": 285,
            "solution": "Drop(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.986301369863014,
                "explored_percent_lambda": 51.076320939334636,
                "explored_percent_none": 11.937377690802348,
                "kept_percent_concrete": 27.240143369175627,
                "kept_percent_lambda": 72.75985663082437,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 261,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 203,
                "num_values_explored": 511,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 511
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43426350806839764,
            "num_unique_values": 285,
            "solution": "Scanl1((lambda u1, u2: fn_3(Square(fn_3(-1)))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.29299363057325,
                "explored_percent_lambda": 37.261146496815286,
                "explored_percent_none": 15.445859872611464,
                "kept_percent_concrete": 40.50179211469534,
                "kept_percent_lambda": 59.49820788530466,
                "num_examples": 4,
                "num_explored_concrete": 297,
                "num_explored_lambda": 234,
                "num_explored_none": 97,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 166,
                "num_values_explored": 628,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11581302201375365,
            "num_unique_values": 105,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.06432748538012,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 5,
                "num_explored_concrete": 101,
                "num_explored_lambda": 54,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29353896901011467,
            "num_unique_values": 246,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.18672199170125,
                "explored_percent_lambda": 26.348547717842322,
                "explored_percent_none": 18.46473029045643,
                "kept_percent_concrete": 61.92468619246862,
                "kept_percent_lambda": 38.07531380753138,
                "num_examples": 4,
                "num_explored_concrete": 266,
                "num_explored_lambda": 127,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 91,
                "num_values_explored": 482,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20825070003047585,
            "num_unique_values": 105,
            "solution": "Max(x1, Square(Square(fn_3(-1))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.79318734793188,
                "explored_percent_lambda": 31.386861313868614,
                "explored_percent_none": 33.819951338199516,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 129,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 72,
                "num_values_explored": 411,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2693123749922961,
            "num_unique_values": 220,
            "solution": "Multiply(Square(fn_3(-1)), Minimum(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.36927223719677,
                "explored_percent_lambda": 34.23180592991914,
                "explored_percent_none": 12.398921832884097,
                "kept_percent_concrete": 51.401869158878505,
                "kept_percent_lambda": 48.598130841121495,
                "num_examples": 4,
                "num_explored_concrete": 198,
                "num_explored_lambda": 127,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 104,
                "num_values_explored": 371,
                "num_values_kept": 214,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 371
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3462296499637887,
            "num_unique_values": 176,
            "solution": "Multiply(Square(fn_3(-1)), fn_0(1, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 51.344086021505376,
                "explored_percent_lambda": 31.989247311827956,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 44.705882352941174,
                "kept_percent_lambda": 55.294117647058826,
                "num_examples": 2,
                "num_explored_concrete": 191,
                "num_explored_lambda": 119,
                "num_explored_none": 62,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 94,
                "num_values_explored": 372,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22475971304811537,
            "num_unique_values": 176,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.779411764705884,
                "explored_percent_lambda": 39.338235294117645,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 47.337278106508876,
                "kept_percent_lambda": 52.662721893491124,
                "num_examples": 5,
                "num_explored_concrete": 149,
                "num_explored_lambda": 107,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 89,
                "num_values_explored": 272,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5798651309451088,
            "num_unique_values": 248,
            "solution": "Sum(Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.53415061295972,
                "explored_percent_lambda": 39.05429071803853,
                "explored_percent_none": 15.411558669001751,
                "kept_percent_concrete": 40.082644628099175,
                "kept_percent_lambda": 59.917355371900825,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 223,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 145,
                "num_values_explored": 571,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3153695419896394,
            "num_unique_values": 186,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.34782608695652,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 7.608695652173913,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 105,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 96,
                "num_values_explored": 276,
                "num_values_kept": 179,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5631910510128364,
            "num_unique_values": 251,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 40.119760479041915,
                "explored_percent_lambda": 49.10179640718563,
                "explored_percent_none": 10.778443113772456,
                "kept_percent_concrete": 29.387755102040817,
                "kept_percent_lambda": 70.61224489795919,
                "num_examples": 3,
                "num_explored_concrete": 201,
                "num_explored_lambda": 246,
                "num_explored_none": 54,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 173,
                "num_values_explored": 501,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19254727999214083,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.036199095022624,
                "explored_percent_lambda": 32.126696832579185,
                "explored_percent_none": 15.83710407239819,
                "kept_percent_concrete": 51.5625,
                "kept_percent_lambda": 48.4375,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 71,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 66,
                "num_kept_lambda": 62,
                "num_values_explored": 221,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18640543997753412,
            "num_unique_values": 90,
            "solution": "Take(Subtract(-1, 1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.66233766233766,
                "explored_percent_lambda": 58.44155844155844,
                "explored_percent_none": 3.896103896103896,
                "kept_percent_concrete": 14.457831325301205,
                "kept_percent_lambda": 85.5421686746988,
                "num_examples": 2,
                "num_explored_concrete": 58,
                "num_explored_lambda": 90,
                "num_explored_none": 6,
                "num_inputs": 2,
                "num_kept_concrete": 12,
                "num_kept_lambda": 71,
                "num_values_explored": 154,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31560592900495976,
            "num_unique_values": 154,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.7007299270073,
                "explored_percent_lambda": 44.89051094890511,
                "explored_percent_none": 12.408759124087592,
                "kept_percent_concrete": 31.292517006802722,
                "kept_percent_lambda": 68.70748299319727,
                "num_examples": 3,
                "num_explored_concrete": 117,
                "num_explored_lambda": 123,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 101,
                "num_values_explored": 274,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.355858350987546,
            "num_unique_values": 684,
            "solution": "Subtract(Max(Add(1, 1), Add(Minimum(x1), fn_0(Head(x1), x2))), fn_5(Maximum(x2), x1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 57.427149964463396,
                "explored_percent_lambda": 21.748400852878465,
                "explored_percent_none": 20.82444918265814,
                "kept_percent_concrete": 65.14032496307237,
                "kept_percent_lambda": 34.85967503692762,
                "num_examples": 4,
                "num_explored_concrete": 1616,
                "num_explored_lambda": 612,
                "num_explored_none": 586,
                "num_inputs": 2,
                "num_kept_concrete": 441,
                "num_kept_lambda": 236,
                "num_values_explored": 2814,
                "num_values_kept": 677,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9223
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.270210984046571,
            "num_unique_values": 347,
            "solution": "IntDivide(Square(Square(fn_3(-1))), Head(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 38.42857142857143,
                "explored_percent_lambda": 34.42857142857143,
                "explored_percent_none": 27.142857142857142,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 538,
                "num_explored_lambda": 482,
                "num_explored_none": 380,
                "num_inputs": 1,
                "num_kept_concrete": 176,
                "num_kept_lambda": 165,
                "num_values_explored": 1400,
                "num_values_kept": 341,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3150
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.518558660056442,
            "num_unique_values": 347,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(v1, Square(Minimum(x1)))))(u1)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.02086677367576,
                "explored_percent_lambda": 23.59550561797753,
                "explored_percent_none": 7.38362760834671,
                "kept_percent_concrete": 67.3529411764706,
                "kept_percent_lambda": 32.64705882352941,
                "num_examples": 5,
                "num_explored_concrete": 430,
                "num_explored_lambda": 147,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 111,
                "num_values_explored": 623,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21155433298554271,
            "num_unique_values": 169,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.971326164874554,
                "explored_percent_lambda": 38.70967741935484,
                "explored_percent_none": 9.31899641577061,
                "kept_percent_concrete": 46.91358024691358,
                "kept_percent_lambda": 53.08641975308642,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 108,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 86,
                "num_values_explored": 279,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 279
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13370740797836334,
            "num_unique_values": 91,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.905325443786985,
                "explored_percent_lambda": 26.035502958579883,
                "explored_percent_none": 10.059171597633137,
                "kept_percent_concrete": 53.01204819277108,
                "kept_percent_lambda": 46.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 108,
                "num_explored_lambda": 44,
                "num_explored_none": 17,
                "num_inputs": 3,
                "num_kept_concrete": 44,
                "num_kept_lambda": 39,
                "num_values_explored": 169,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2509990610415116,
            "num_unique_values": 355,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 34.345186470078055,
                "explored_percent_lambda": 40.1561144839549,
                "explored_percent_none": 25.498699045967044,
                "kept_percent_concrete": 56.60919540229885,
                "kept_percent_lambda": 43.39080459770115,
                "num_examples": 5,
                "num_explored_concrete": 396,
                "num_explored_lambda": 463,
                "num_explored_none": 294,
                "num_inputs": 2,
                "num_kept_concrete": 197,
                "num_kept_lambda": 151,
                "num_values_explored": 1153,
                "num_values_kept": 348,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2903
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.41868693195283,
            "num_unique_values": 369,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.323707498835585,
                "explored_percent_lambda": 24.336283185840706,
                "explored_percent_none": 60.340009315323705,
                "kept_percent_concrete": 51.515151515151516,
                "kept_percent_lambda": 48.484848484848484,
                "num_examples": 5,
                "num_explored_concrete": 658,
                "num_explored_lambda": 1045,
                "num_explored_none": 2591,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 176,
                "num_values_explored": 4294,
                "num_values_kept": 363,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42951
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2803381809499115,
            "num_unique_values": 167,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.83402489626556,
                "explored_percent_lambda": 53.52697095435685,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 31.055900621118013,
                "kept_percent_lambda": 68.94409937888199,
                "num_examples": 3,
                "num_explored_concrete": 96,
                "num_explored_lambda": 129,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 50,
                "num_kept_lambda": 111,
                "num_values_explored": 241,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5522356990259141,
            "num_unique_values": 334,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 72.62569832402235,
                "explored_percent_lambda": 13.547486033519553,
                "explored_percent_none": 13.8268156424581,
                "kept_percent_concrete": 78.2874617737003,
                "kept_percent_lambda": 21.712538226299696,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 97,
                "num_explored_none": 99,
                "num_inputs": 2,
                "num_kept_concrete": 256,
                "num_kept_lambda": 71,
                "num_values_explored": 716,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4416886660037562,
            "num_unique_values": 296,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.77367576243981,
                "explored_percent_lambda": 24.077046548956663,
                "explored_percent_none": 9.149277688603531,
                "kept_percent_concrete": 61.937716262975776,
                "kept_percent_lambda": 38.062283737024224,
                "num_examples": 3,
                "num_explored_concrete": 416,
                "num_explored_lambda": 150,
                "num_explored_none": 57,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 110,
                "num_values_explored": 623,
                "num_values_kept": 289,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0032994899666,
            "num_unique_values": 416,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.328234807771807,
                "explored_percent_lambda": 22.922695328648203,
                "explored_percent_none": 52.74906986357999,
                "kept_percent_concrete": 54.63414634146341,
                "kept_percent_lambda": 45.36585365853659,
                "num_examples": 2,
                "num_explored_concrete": 1177,
                "num_explored_lambda": 1109,
                "num_explored_none": 2552,
                "num_inputs": 1,
                "num_kept_concrete": 224,
                "num_kept_lambda": 186,
                "num_values_explored": 4838,
                "num_values_kept": 410,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45067
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2782074969727546,
            "num_unique_values": 131,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.18181818181818,
                "explored_percent_lambda": 42.90909090909091,
                "explored_percent_none": 22.90909090909091,
                "kept_percent_concrete": 29.838709677419356,
                "kept_percent_lambda": 70.16129032258064,
                "num_examples": 5,
                "num_explored_concrete": 94,
                "num_explored_lambda": 118,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 87,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3769021340413019,
            "num_unique_values": 269,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.66183574879227,
                "explored_percent_lambda": 29.468599033816425,
                "explored_percent_none": 10.869565217391305,
                "kept_percent_concrete": 61.06870229007634,
                "kept_percent_lambda": 38.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 122,
                "num_explored_none": 45,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 102,
                "num_values_explored": 414,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 414
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.02647290099412,
            "num_unique_values": 1123,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.887227261583725,
                "explored_percent_lambda": 40.32851189016916,
                "explored_percent_none": 19.78426084824712,
                "kept_percent_concrete": 32.49776186213071,
                "kept_percent_lambda": 67.5022381378693,
                "num_examples": 2,
                "num_explored_concrete": 1627,
                "num_explored_lambda": 1645,
                "num_explored_none": 807,
                "num_inputs": 1,
                "num_kept_concrete": 363,
                "num_kept_lambda": 754,
                "num_values_explored": 4079,
                "num_values_kept": 1117,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40864
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.07663430192042,
            "num_unique_values": 578,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 27.67590618336887,
                "explored_percent_lambda": 44.05117270788912,
                "explored_percent_none": 28.272921108742004,
                "kept_percent_concrete": 33.39160839160839,
                "kept_percent_lambda": 66.60839160839161,
                "num_examples": 4,
                "num_explored_concrete": 649,
                "num_explored_lambda": 1033,
                "num_explored_none": 663,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 381,
                "num_values_explored": 2345,
                "num_values_kept": 572,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 19532
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.40392714901827276,
            "num_unique_values": 258,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.71337579617835,
                "explored_percent_lambda": 23.726114649681527,
                "explored_percent_none": 16.56050955414013,
                "kept_percent_concrete": 58.56573705179283,
                "kept_percent_lambda": 41.43426294820717,
                "num_examples": 5,
                "num_explored_concrete": 375,
                "num_explored_lambda": 149,
                "num_explored_none": 104,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 104,
                "num_values_explored": 628,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89427828497719,
            "num_unique_values": 715,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.892419271283025,
                "explored_percent_lambda": 16.266620618200655,
                "explored_percent_none": 30.840960110516317,
                "kept_percent_concrete": 64.07355021216408,
                "kept_percent_lambda": 35.92644978783593,
                "num_examples": 2,
                "num_explored_concrete": 3063,
                "num_explored_lambda": 942,
                "num_explored_none": 1786,
                "num_inputs": 3,
                "num_kept_concrete": 453,
                "num_kept_lambda": 254,
                "num_values_explored": 5791,
                "num_values_kept": 707,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59345
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.90555351704825,
            "num_unique_values": 245,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 18.326693227091635,
                "explored_percent_lambda": 53.30677290836653,
                "explored_percent_none": 28.366533864541832,
                "kept_percent_concrete": 32.63598326359833,
                "kept_percent_lambda": 67.36401673640168,
                "num_examples": 2,
                "num_explored_concrete": 230,
                "num_explored_lambda": 669,
                "num_explored_none": 356,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 161,
                "num_values_explored": 1255,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 24107
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.41094460804015,
            "num_unique_values": 872,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.02951342727998,
                "explored_percent_lambda": 28.795533102898165,
                "explored_percent_none": 22.174953469821855,
                "kept_percent_concrete": 42.032332563510394,
                "kept_percent_lambda": 57.967667436489606,
                "num_examples": 2,
                "num_explored_concrete": 1844,
                "num_explored_lambda": 1083,
                "num_explored_none": 834,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 502,
                "num_values_explored": 3761,
                "num_values_kept": 866,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42375
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.28556846897118,
            "num_unique_values": 477,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.363820726019064,
                "explored_percent_lambda": 21.091056580815252,
                "explored_percent_none": 52.54512269316569,
                "kept_percent_concrete": 59.148936170212764,
                "kept_percent_lambda": 40.851063829787236,
                "num_examples": 2,
                "num_explored_concrete": 1300,
                "num_explored_lambda": 1040,
                "num_explored_none": 2591,
                "num_inputs": 2,
                "num_kept_concrete": 278,
                "num_kept_lambda": 192,
                "num_values_explored": 4931,
                "num_values_kept": 470,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48776
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17026102798991,
            "num_unique_values": 700,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.068479355488417,
                "explored_percent_lambda": 33.8368580060423,
                "explored_percent_none": 42.09466263846929,
                "kept_percent_concrete": 30.303030303030305,
                "kept_percent_lambda": 69.6969696969697,
                "num_examples": 4,
                "num_explored_concrete": 956,
                "num_explored_lambda": 1344,
                "num_explored_none": 1672,
                "num_inputs": 2,
                "num_kept_concrete": 210,
                "num_kept_lambda": 483,
                "num_values_explored": 3972,
                "num_values_kept": 693,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41956
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6079700590344146,
            "num_unique_values": 333,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: fn_3(v1)))(u1)), x1, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.52202283849918,
                "explored_percent_lambda": 31.484502446982056,
                "explored_percent_none": 7.993474714518761,
                "kept_percent_concrete": 54.29447852760736,
                "kept_percent_lambda": 45.70552147239264,
                "num_examples": 3,
                "num_explored_concrete": 371,
                "num_explored_lambda": 193,
                "num_explored_none": 49,
                "num_inputs": 2,
                "num_kept_concrete": 177,
                "num_kept_lambda": 149,
                "num_values_explored": 613,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 613
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.5046442579478,
            "num_unique_values": 797,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.60051191179366,
                "explored_percent_lambda": 20.574916322110653,
                "explored_percent_none": 28.824571766095687,
                "kept_percent_concrete": 55.120101137800255,
                "kept_percent_lambda": 44.879898862199745,
                "num_examples": 4,
                "num_explored_concrete": 2570,
                "num_explored_lambda": 1045,
                "num_explored_none": 1464,
                "num_inputs": 1,
                "num_kept_concrete": 436,
                "num_kept_lambda": 355,
                "num_values_explored": 5079,
                "num_values_kept": 791,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51706
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.955743176979013,
            "num_unique_values": 208,
            "solution": "Multiply(Add(x1, fn_3(fn_1((lambda u1: ((lambda v1, v2: Multiply(v1, v2)))(u1, u1)), If(IsEven(x1), -1, x1)))), If(IsEven(x1), 0, 1))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 13.77165704131497,
                "explored_percent_lambda": 32.563305197689914,
                "explored_percent_none": 53.66503776099511,
                "kept_percent_concrete": 30.693069306930692,
                "kept_percent_lambda": 69.3069306930693,
                "num_examples": 5,
                "num_explored_concrete": 310,
                "num_explored_lambda": 733,
                "num_explored_none": 1208,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 140,
                "num_values_explored": 2251,
                "num_values_kept": 202,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8999
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.739622242981568,
            "num_unique_values": 265,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 29.52710495963091,
                "explored_percent_lambda": 50.51903114186851,
                "explored_percent_none": 19.953863898500575,
                "kept_percent_concrete": 35.797665369649806,
                "kept_percent_lambda": 64.2023346303502,
                "num_examples": 2,
                "num_explored_concrete": 256,
                "num_explored_lambda": 438,
                "num_explored_none": 173,
                "num_inputs": 3,
                "num_kept_concrete": 92,
                "num_kept_lambda": 165,
                "num_values_explored": 867,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2967
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69013257708866,
            "num_unique_values": 442,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.297364085667216,
                "explored_percent_lambda": 21.97281713344316,
                "explored_percent_none": 51.72981878088962,
                "kept_percent_concrete": 60.45977011494253,
                "kept_percent_lambda": 39.54022988505747,
                "num_examples": 2,
                "num_explored_concrete": 1277,
                "num_explored_lambda": 1067,
                "num_explored_none": 2512,
                "num_inputs": 2,
                "num_kept_concrete": 263,
                "num_kept_lambda": 172,
                "num_values_explored": 4856,
                "num_values_kept": 435,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54497
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3010472049936652,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.31460674157304,
                "explored_percent_lambda": 44.19475655430712,
                "explored_percent_none": 7.49063670411985,
                "kept_percent_concrete": 37.908496732026144,
                "kept_percent_lambda": 62.091503267973856,
                "num_examples": 4,
                "num_explored_concrete": 129,
                "num_explored_lambda": 118,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 58,
                "num_kept_lambda": 95,
                "num_values_explored": 267,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 267
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.44031194399576634,
            "num_unique_values": 331,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.69759450171821,
                "explored_percent_lambda": 23.195876288659793,
                "explored_percent_none": 9.106529209621993,
                "kept_percent_concrete": 65.94427244582043,
                "kept_percent_lambda": 34.05572755417957,
                "num_examples": 4,
                "num_explored_concrete": 394,
                "num_explored_lambda": 135,
                "num_explored_none": 53,
                "num_inputs": 3,
                "num_kept_concrete": 213,
                "num_kept_lambda": 110,
                "num_values_explored": 582,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.87840780697297,
            "num_unique_values": 420,
            "solution": "Min(Add(x1, IntDivide(x1, fn_3(x2))), Multiply(x2, fn_3(fn_3(x1))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 26.66264818163552,
                "explored_percent_lambda": 18.806509945750452,
                "explored_percent_none": 54.530841872614026,
                "kept_percent_concrete": 61.016949152542374,
                "kept_percent_lambda": 38.983050847457626,
                "num_examples": 4,
                "num_explored_concrete": 1327,
                "num_explored_lambda": 936,
                "num_explored_none": 2714,
                "num_inputs": 2,
                "num_kept_concrete": 252,
                "num_kept_lambda": 161,
                "num_values_explored": 4977,
                "num_values_kept": 413,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 27486
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.49069048603997,
            "num_unique_values": 1093,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.970092196986734,
                "explored_percent_lambda": 35.39464807735552,
                "explored_percent_none": 25.635259725657747,
                "kept_percent_concrete": 36.06255749770009,
                "kept_percent_lambda": 63.93744250229991,
                "num_examples": 5,
                "num_explored_concrete": 1733,
                "num_explored_lambda": 1574,
                "num_explored_none": 1140,
                "num_inputs": 1,
                "num_kept_concrete": 392,
                "num_kept_lambda": 695,
                "num_values_explored": 4447,
                "num_values_kept": 1087,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46433
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2102288359310478,
            "num_unique_values": 147,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.043795620437955,
                "explored_percent_lambda": 23.722627737226276,
                "explored_percent_none": 14.233576642335766,
                "kept_percent_concrete": 58.992805755395686,
                "kept_percent_lambda": 41.007194244604314,
                "num_examples": 5,
                "num_explored_concrete": 170,
                "num_explored_lambda": 65,
                "num_explored_none": 39,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 57,
                "num_values_explored": 274,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.46277014096268,
            "num_unique_values": 968,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.864161139769095,
                "explored_percent_lambda": 27.11864406779661,
                "explored_percent_none": 30.017194792434292,
                "kept_percent_concrete": 46.15384615384615,
                "kept_percent_lambda": 53.84615384615385,
                "num_examples": 3,
                "num_explored_concrete": 1745,
                "num_explored_lambda": 1104,
                "num_explored_none": 1222,
                "num_inputs": 1,
                "num_kept_concrete": 444,
                "num_kept_lambda": 518,
                "num_values_explored": 4071,
                "num_values_kept": 962,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45596
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5894900968996808,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(x1, ((lambda v1: fn_3(v1)))(v1))))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.54545454545455,
                "explored_percent_lambda": 31.738437001594896,
                "explored_percent_none": 13.716108452950559,
                "kept_percent_concrete": 43.032786885245905,
                "kept_percent_lambda": 56.967213114754095,
                "num_examples": 4,
                "num_explored_concrete": 342,
                "num_explored_lambda": 199,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 139,
                "num_values_explored": 627,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.7968726149993,
            "num_unique_values": 1288,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.96583719949388,
                "explored_percent_lambda": 18.43104175453395,
                "explored_percent_none": 20.603121045972163,
                "kept_percent_concrete": 64.84375,
                "kept_percent_lambda": 35.15625,
                "num_examples": 5,
                "num_explored_concrete": 2891,
                "num_explored_lambda": 874,
                "num_explored_none": 977,
                "num_inputs": 3,
                "num_kept_concrete": 830,
                "num_kept_lambda": 450,
                "num_values_explored": 4742,
                "num_values_kept": 1280,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46762
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.901987095945515,
            "num_unique_values": 553,
            "solution": "Map((lambda u1: Sum(x1)), Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 40.616832200731835,
                "explored_percent_lambda": 37.4803972817564,
                "explored_percent_none": 21.90277051751176,
                "kept_percent_concrete": 48.717948717948715,
                "kept_percent_lambda": 51.282051282051285,
                "num_examples": 5,
                "num_explored_concrete": 777,
                "num_explored_lambda": 717,
                "num_explored_none": 419,
                "num_inputs": 2,
                "num_kept_concrete": 266,
                "num_kept_lambda": 280,
                "num_values_explored": 1913,
                "num_values_kept": 546,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3663
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.52126029098872,
            "num_unique_values": 563,
            "solution": "Min(fn_3(fn_3(fn_3(x1))), Subtract(x1, fn_3(fn_3(Head(x2)))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 33.9464493597206,
                "explored_percent_lambda": 22.21187427240978,
                "explored_percent_none": 43.84167636786962,
                "kept_percent_concrete": 55.21582733812949,
                "kept_percent_lambda": 44.78417266187051,
                "num_examples": 5,
                "num_explored_concrete": 1458,
                "num_explored_lambda": 954,
                "num_explored_none": 1883,
                "num_inputs": 2,
                "num_kept_concrete": 307,
                "num_kept_lambda": 249,
                "num_values_explored": 4295,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 27469
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.19812227005605,
            "num_unique_values": 664,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.019086922878515,
                "explored_percent_lambda": 29.068867681196803,
                "explored_percent_none": 32.912045395924686,
                "kept_percent_concrete": 28.462709284627092,
                "kept_percent_lambda": 71.5372907153729,
                "num_examples": 2,
                "num_explored_concrete": 1474,
                "num_explored_lambda": 1127,
                "num_explored_none": 1276,
                "num_inputs": 2,
                "num_kept_concrete": 187,
                "num_kept_lambda": 470,
                "num_values_explored": 3877,
                "num_values_kept": 657,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44136
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04074268508703,
            "num_unique_values": 316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.506613426503618,
                "explored_percent_lambda": 36.86049413526329,
                "explored_percent_none": 52.63289243823309,
                "kept_percent_concrete": 20.0,
                "kept_percent_lambda": 80.0,
                "num_examples": 4,
                "num_explored_concrete": 421,
                "num_explored_lambda": 1477,
                "num_explored_none": 2109,
                "num_inputs": 1,
                "num_kept_concrete": 62,
                "num_kept_lambda": 248,
                "num_values_explored": 4007,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42954
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 69.61202464601956,
            "num_unique_values": 801,
            "solution": "If(IsOdd(x2), x1, ZipWith((lambda u1, u2: ((lambda v1: Count((lambda u1: ((lambda v1: IsEven(v1)))(v1)), x1)))(u2)), x1, Reverse(Sort(x1))))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 39.921652421652425,
                "explored_percent_lambda": 34.294871794871796,
                "explored_percent_none": 25.783475783475783,
                "kept_percent_concrete": 44.20654911838791,
                "kept_percent_lambda": 55.79345088161209,
                "num_examples": 4,
                "num_explored_concrete": 1121,
                "num_explored_lambda": 963,
                "num_explored_none": 724,
                "num_inputs": 2,
                "num_kept_concrete": 351,
                "num_kept_lambda": 443,
                "num_values_explored": 2808,
                "num_values_kept": 794,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 26463
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3116189680295,
            "num_unique_values": 890,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.686800894854585,
                "explored_percent_lambda": 22.774049217002236,
                "explored_percent_none": 27.539149888143175,
                "kept_percent_concrete": 49.886877828054295,
                "kept_percent_lambda": 50.113122171945705,
                "num_examples": 3,
                "num_explored_concrete": 2221,
                "num_explored_lambda": 1018,
                "num_explored_none": 1231,
                "num_inputs": 1,
                "num_kept_concrete": 441,
                "num_kept_lambda": 443,
                "num_values_explored": 4470,
                "num_values_kept": 884,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46251
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.49833140906412154,
            "num_unique_values": 220,
            "solution": "Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.82003395585738,
                "explored_percent_lambda": 30.899830220713074,
                "explored_percent_none": 15.280135823429541,
                "kept_percent_concrete": 43.66197183098591,
                "kept_percent_lambda": 56.33802816901409,
                "num_examples": 2,
                "num_explored_concrete": 317,
                "num_explored_lambda": 182,
                "num_explored_none": 90,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 120,
                "num_values_explored": 589,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.98932928789873,
            "num_unique_values": 309,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.674757281553399,
                "explored_percent_lambda": 31.57766990291262,
                "explored_percent_none": 56.74757281553398,
                "kept_percent_concrete": 31.683168316831683,
                "kept_percent_lambda": 68.31683168316832,
                "num_examples": 4,
                "num_explored_concrete": 481,
                "num_explored_lambda": 1301,
                "num_explored_none": 2338,
                "num_inputs": 1,
                "num_kept_concrete": 96,
                "num_kept_lambda": 207,
                "num_values_explored": 4120,
                "num_values_kept": 303,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43341
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8668048550607637,
            "num_unique_values": 382,
            "solution": "Scanl1((lambda u1, u2: fn_3(fn_3(IntDivide(Last(x1), Head(x2))))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.3875094055681,
                "explored_percent_lambda": 24.52972159518435,
                "explored_percent_none": 10.082768999247554,
                "kept_percent_concrete": 57.86666666666667,
                "kept_percent_lambda": 42.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 869,
                "num_explored_lambda": 326,
                "num_explored_none": 134,
                "num_inputs": 2,
                "num_kept_concrete": 217,
                "num_kept_lambda": 158,
                "num_values_explored": 1329,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1329
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34672110492829,
            "num_unique_values": 1238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.83932853717026,
                "explored_percent_lambda": 20.38369304556355,
                "explored_percent_none": 28.776978417266186,
                "kept_percent_concrete": 63.363119415109665,
                "kept_percent_lambda": 36.636880584890335,
                "num_examples": 5,
                "num_explored_concrete": 2544,
                "num_explored_lambda": 1020,
                "num_explored_none": 1440,
                "num_inputs": 2,
                "num_kept_concrete": 780,
                "num_kept_lambda": 451,
                "num_values_explored": 5004,
                "num_values_kept": 1231,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49445
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.61414511594921,
            "num_unique_values": 979,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.07272299364556,
                "explored_percent_lambda": 23.228995057660626,
                "explored_percent_none": 17.69828194869381,
                "kept_percent_concrete": 49.22918807810894,
                "kept_percent_lambda": 50.77081192189106,
                "num_examples": 3,
                "num_explored_concrete": 2510,
                "num_explored_lambda": 987,
                "num_explored_none": 752,
                "num_inputs": 1,
                "num_kept_concrete": 479,
                "num_kept_lambda": 494,
                "num_values_explored": 4249,
                "num_values_kept": 973,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43448
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.50634371500928,
            "num_unique_values": 1140,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.00240096038415,
                "explored_percent_lambda": 16.998799519807925,
                "explored_percent_none": 16.998799519807925,
                "kept_percent_concrete": 71.31509267431598,
                "kept_percent_lambda": 28.684907325684026,
                "num_examples": 5,
                "num_explored_concrete": 2749,
                "num_explored_lambda": 708,
                "num_explored_none": 708,
                "num_inputs": 2,
                "num_kept_concrete": 808,
                "num_kept_lambda": 325,
                "num_values_explored": 4165,
                "num_values_kept": 1133,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47515
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.88527860306203,
            "num_unique_values": 931,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.390160183066364,
                "explored_percent_lambda": 33.98169336384439,
                "explored_percent_none": 24.628146453089244,
                "kept_percent_concrete": 39.351351351351354,
                "kept_percent_lambda": 60.648648648648646,
                "num_examples": 2,
                "num_explored_concrete": 1447,
                "num_explored_lambda": 1188,
                "num_explored_none": 861,
                "num_inputs": 1,
                "num_kept_concrete": 364,
                "num_kept_lambda": 561,
                "num_values_explored": 3496,
                "num_values_kept": 925,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38515
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.26840428402647,
            "num_unique_values": 1005,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.10293432696786,
                "explored_percent_lambda": 18.304611085235212,
                "explored_percent_none": 24.592454587796926,
                "kept_percent_concrete": 62.587763289869606,
                "kept_percent_lambda": 37.412236710130394,
                "num_examples": 4,
                "num_explored_concrete": 2452,
                "num_explored_lambda": 786,
                "num_explored_none": 1056,
                "num_inputs": 3,
                "num_kept_concrete": 624,
                "num_kept_lambda": 373,
                "num_values_explored": 4294,
                "num_values_kept": 997,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45044
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.86104400001932,
            "num_unique_values": 752,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.65188351589634,
                "explored_percent_lambda": 45.3379641998397,
                "explored_percent_none": 34.01015228426396,
                "kept_percent_concrete": 12.198391420911529,
                "kept_percent_lambda": 87.80160857908847,
                "num_examples": 2,
                "num_explored_concrete": 773,
                "num_explored_lambda": 1697,
                "num_explored_none": 1273,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 655,
                "num_values_explored": 3743,
                "num_values_kept": 746,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39079
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2049066349864,
            "num_unique_values": 1107,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.74077112387203,
                "explored_percent_lambda": 12.206726825266612,
                "explored_percent_none": 24.05250205086136,
                "kept_percent_concrete": 74.15832575068244,
                "kept_percent_lambda": 25.84167424931756,
                "num_examples": 4,
                "num_explored_concrete": 3885,
                "num_explored_lambda": 744,
                "num_explored_none": 1466,
                "num_inputs": 3,
                "num_kept_concrete": 815,
                "num_kept_lambda": 284,
                "num_values_explored": 6095,
                "num_values_kept": 1099,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62908
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.56985630793497,
            "num_unique_values": 997,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.20726441452883,
                "explored_percent_lambda": 35.483870967741936,
                "explored_percent_none": 32.308864617729235,
                "kept_percent_concrete": 33.29969727547931,
                "kept_percent_lambda": 66.70030272452068,
                "num_examples": 3,
                "num_explored_concrete": 1268,
                "num_explored_lambda": 1397,
                "num_explored_none": 1272,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 661,
                "num_values_explored": 3937,
                "num_values_kept": 991,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40051
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09694578393828,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.586854460093896,
                "explored_percent_lambda": 33.12206572769953,
                "explored_percent_none": 56.291079812206576,
                "kept_percent_concrete": 30.746268656716417,
                "kept_percent_lambda": 69.25373134328358,
                "num_examples": 4,
                "num_explored_concrete": 451,
                "num_explored_lambda": 1411,
                "num_explored_none": 2398,
                "num_inputs": 1,
                "num_kept_concrete": 103,
                "num_kept_lambda": 232,
                "num_values_explored": 4260,
                "num_values_kept": 335,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43758
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.83537146297749,
            "num_unique_values": 901,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.91293213828425,
                "explored_percent_lambda": 28.732394366197184,
                "explored_percent_none": 23.354673495518565,
                "kept_percent_concrete": 41.899441340782126,
                "kept_percent_lambda": 58.100558659217874,
                "num_examples": 2,
                "num_explored_concrete": 1871,
                "num_explored_lambda": 1122,
                "num_explored_none": 912,
                "num_inputs": 1,
                "num_kept_concrete": 375,
                "num_kept_lambda": 520,
                "num_values_explored": 3905,
                "num_values_kept": 895,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43468
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5364605109207332,
            "num_unique_values": 325,
            "solution": "Map((lambda u1: Square(fn_5(Last(x1), x2))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.76230899830221,
                "explored_percent_lambda": 33.446519524618,
                "explored_percent_none": 6.791171477079796,
                "kept_percent_concrete": 53.31230283911672,
                "kept_percent_lambda": 46.68769716088328,
                "num_examples": 5,
                "num_explored_concrete": 352,
                "num_explored_lambda": 197,
                "num_explored_none": 40,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 148,
                "num_values_explored": 589,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.478546070982702,
            "num_unique_values": 572,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: fn_3(-1)), Drop(Head(x2), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 38.629914876368055,
                "explored_percent_lambda": 41.50790433725172,
                "explored_percent_none": 19.862180786380218,
                "kept_percent_concrete": 30.088495575221238,
                "kept_percent_lambda": 69.91150442477876,
                "num_examples": 2,
                "num_explored_concrete": 953,
                "num_explored_lambda": 1024,
                "num_explored_none": 490,
                "num_inputs": 2,
                "num_kept_concrete": 170,
                "num_kept_lambda": 395,
                "num_values_explored": 2467,
                "num_values_kept": 565,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8334
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.6249978239648,
            "num_unique_values": 584,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.418351477449455,
                "explored_percent_lambda": 41.26490409538621,
                "explored_percent_none": 41.31674442716433,
                "kept_percent_concrete": 23.01038062283737,
                "kept_percent_lambda": 76.98961937716263,
                "num_examples": 3,
                "num_explored_concrete": 672,
                "num_explored_lambda": 1592,
                "num_explored_none": 1594,
                "num_inputs": 1,
                "num_kept_concrete": 133,
                "num_kept_lambda": 445,
                "num_values_explored": 3858,
                "num_values_kept": 578,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43031
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.54734931804705,
            "num_unique_values": 1256,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.55990432702761,
                "explored_percent_lambda": 10.567514677103718,
                "explored_percent_none": 13.872580995868667,
                "kept_percent_concrete": 80.68910256410257,
                "kept_percent_lambda": 19.310897435897434,
                "num_examples": 5,
                "num_explored_concrete": 3475,
                "num_explored_lambda": 486,
                "num_explored_none": 638,
                "num_inputs": 3,
                "num_kept_concrete": 1007,
                "num_kept_lambda": 241,
                "num_values_explored": 4599,
                "num_values_kept": 1248,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52540
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.540114806033671,
            "num_unique_values": 602,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: Min(1, x1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 48.83040935672515,
                "explored_percent_lambda": 24.81203007518797,
                "explored_percent_none": 26.357560568086885,
                "kept_percent_concrete": 59.09090909090909,
                "kept_percent_lambda": 40.90909090909091,
                "num_examples": 4,
                "num_explored_concrete": 1169,
                "num_explored_lambda": 594,
                "num_explored_none": 631,
                "num_inputs": 3,
                "num_kept_concrete": 351,
                "num_kept_lambda": 243,
                "num_values_explored": 2394,
                "num_values_kept": 594,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8792
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3048653549049,
            "num_unique_values": 1135,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.499128919860624,
                "explored_percent_lambda": 29.921602787456447,
                "explored_percent_none": 20.579268292682926,
                "kept_percent_concrete": 42.0726306465899,
                "kept_percent_lambda": 57.9273693534101,
                "num_examples": 2,
                "num_explored_concrete": 2273,
                "num_explored_lambda": 1374,
                "num_explored_none": 945,
                "num_inputs": 1,
                "num_kept_concrete": 475,
                "num_kept_lambda": 654,
                "num_values_explored": 4592,
                "num_values_kept": 1129,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45066
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.38625164399855,
            "num_unique_values": 933,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.550561797752806,
                "explored_percent_lambda": 15.81059390048154,
                "explored_percent_none": 24.63884430176565,
                "kept_percent_concrete": 65.76673866090712,
                "kept_percent_lambda": 34.23326133909287,
                "num_examples": 3,
                "num_explored_concrete": 2968,
                "num_explored_lambda": 788,
                "num_explored_none": 1228,
                "num_inputs": 2,
                "num_kept_concrete": 609,
                "num_kept_lambda": 317,
                "num_values_explored": 4984,
                "num_values_kept": 926,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49915
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82063375494909,
            "num_unique_values": 336,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.10366681756451,
                "explored_percent_lambda": 21.095518334087824,
                "explored_percent_none": 59.80081484834767,
                "kept_percent_concrete": 55.62310030395137,
                "kept_percent_lambda": 44.37689969604863,
                "num_examples": 4,
                "num_explored_concrete": 844,
                "num_explored_lambda": 932,
                "num_explored_none": 2642,
                "num_inputs": 2,
                "num_kept_concrete": 183,
                "num_kept_lambda": 146,
                "num_values_explored": 4418,
                "num_values_kept": 329,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48892
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.6585851990385,
            "num_unique_values": 973,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.377423033067274,
                "explored_percent_lambda": 19.931584948688712,
                "explored_percent_none": 22.690992018244014,
                "kept_percent_concrete": 70.52740434332989,
                "kept_percent_lambda": 29.472595656670112,
                "num_examples": 5,
                "num_explored_concrete": 2516,
                "num_explored_lambda": 874,
                "num_explored_none": 995,
                "num_inputs": 1,
                "num_kept_concrete": 682,
                "num_kept_lambda": 285,
                "num_values_explored": 4385,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52622
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25866010796744,
            "num_unique_values": 844,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.843856808778554,
                "explored_percent_lambda": 15.488397193739882,
                "explored_percent_none": 32.66774599748156,
                "kept_percent_concrete": 66.06929510155317,
                "kept_percent_lambda": 33.930704898446834,
                "num_examples": 4,
                "num_explored_concrete": 2882,
                "num_explored_lambda": 861,
                "num_explored_none": 1816,
                "num_inputs": 2,
                "num_kept_concrete": 553,
                "num_kept_lambda": 284,
                "num_values_explored": 5559,
                "num_values_kept": 837,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54546
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.51424967101775,
            "num_unique_values": 331,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.711985277202668,
                "explored_percent_lambda": 26.063952150908673,
                "explored_percent_none": 58.22406257188866,
                "kept_percent_concrete": 46.76923076923077,
                "kept_percent_lambda": 53.23076923076923,
                "num_examples": 3,
                "num_explored_concrete": 683,
                "num_explored_lambda": 1133,
                "num_explored_none": 2531,
                "num_inputs": 1,
                "num_kept_concrete": 152,
                "num_kept_lambda": 173,
                "num_values_explored": 4347,
                "num_values_kept": 325,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47491
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.35858479200397,
            "num_unique_values": 956,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.690796497971384,
                "explored_percent_lambda": 22.891308989963697,
                "explored_percent_none": 21.417894512064915,
                "kept_percent_concrete": 52.26554267650158,
                "kept_percent_lambda": 47.73445732349842,
                "num_examples": 3,
                "num_explored_concrete": 2608,
                "num_explored_lambda": 1072,
                "num_explored_none": 1003,
                "num_inputs": 2,
                "num_kept_concrete": 496,
                "num_kept_lambda": 453,
                "num_values_explored": 4683,
                "num_values_kept": 949,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47683
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.39368147891946,
            "num_unique_values": 867,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.57630287450339,
                "explored_percent_lambda": 33.208693620004674,
                "explored_percent_none": 20.215003505491936,
                "kept_percent_concrete": 46.92218350754936,
                "kept_percent_lambda": 53.07781649245064,
                "num_examples": 5,
                "num_explored_concrete": 1993,
                "num_explored_lambda": 1421,
                "num_explored_none": 865,
                "num_inputs": 1,
                "num_kept_concrete": 404,
                "num_kept_lambda": 457,
                "num_values_explored": 4279,
                "num_values_kept": 861,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47234
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.78602933196817,
            "num_unique_values": 1025,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.60484993043133,
                "explored_percent_lambda": 18.386006758099782,
                "explored_percent_none": 34.00914331146889,
                "kept_percent_concrete": 66.92836113837095,
                "kept_percent_lambda": 33.07163886162905,
                "num_examples": 5,
                "num_explored_concrete": 2395,
                "num_explored_lambda": 925,
                "num_explored_none": 1711,
                "num_inputs": 1,
                "num_kept_concrete": 682,
                "num_kept_lambda": 337,
                "num_values_explored": 5031,
                "num_values_kept": 1019,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50938
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.63598874700256,
            "num_unique_values": 701,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.43521266073195,
                "explored_percent_lambda": 32.4431256181998,
                "explored_percent_none": 32.12166172106825,
                "kept_percent_concrete": 32.37410071942446,
                "kept_percent_lambda": 67.62589928057554,
                "num_examples": 2,
                "num_explored_concrete": 1433,
                "num_explored_lambda": 1312,
                "num_explored_none": 1299,
                "num_inputs": 1,
                "num_kept_concrete": 225,
                "num_kept_lambda": 470,
                "num_values_explored": 4044,
                "num_values_kept": 695,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44183
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.56757670303341,
            "num_unique_values": 1009,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.066344993968634,
                "explored_percent_lambda": 26.05548854041013,
                "explored_percent_none": 28.87816646562123,
                "kept_percent_concrete": 50.34895314057827,
                "kept_percent_lambda": 49.65104685942173,
                "num_examples": 4,
                "num_explored_concrete": 1868,
                "num_explored_lambda": 1080,
                "num_explored_none": 1197,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 498,
                "num_values_explored": 4145,
                "num_values_kept": 1003,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40554
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.39691617304925,
            "num_unique_values": 582,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.606007582385534,
                "explored_percent_lambda": 44.47360746573345,
                "explored_percent_none": 36.92038495188101,
                "kept_percent_concrete": 11.284722222222221,
                "kept_percent_lambda": 88.71527777777777,
                "num_examples": 2,
                "num_explored_concrete": 638,
                "num_explored_lambda": 1525,
                "num_explored_none": 1266,
                "num_inputs": 1,
                "num_kept_concrete": 65,
                "num_kept_lambda": 511,
                "num_values_explored": 3429,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 37761
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.70103282900527,
            "num_unique_values": 857,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.16868362558657,
                "explored_percent_lambda": 40.05927389478884,
                "explored_percent_none": 26.7720424796246,
                "kept_percent_concrete": 20.446533490011753,
                "kept_percent_lambda": 79.55346650998825,
                "num_examples": 2,
                "num_explored_concrete": 1343,
                "num_explored_lambda": 1622,
                "num_explored_none": 1084,
                "num_inputs": 1,
                "num_kept_concrete": 174,
                "num_kept_lambda": 677,
                "num_values_explored": 4049,
                "num_values_kept": 851,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43275
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93470166705083,
            "num_unique_values": 316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.67741935483871,
                "explored_percent_lambda": 36.12903225806452,
                "explored_percent_none": 54.193548387096776,
                "kept_percent_concrete": 15.161290322580646,
                "kept_percent_lambda": 84.83870967741936,
                "num_examples": 2,
                "num_explored_concrete": 375,
                "num_explored_lambda": 1400,
                "num_explored_none": 2100,
                "num_inputs": 1,
                "num_kept_concrete": 47,
                "num_kept_lambda": 263,
                "num_values_explored": 3875,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42628
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95925776602235,
            "num_unique_values": 330,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.211521152115212,
                "explored_percent_lambda": 28.780378037803782,
                "explored_percent_none": 56.00810081008101,
                "kept_percent_concrete": 34.25925925925926,
                "kept_percent_lambda": 65.74074074074075,
                "num_examples": 2,
                "num_explored_concrete": 676,
                "num_explored_lambda": 1279,
                "num_explored_none": 2489,
                "num_inputs": 1,
                "num_kept_concrete": 111,
                "num_kept_lambda": 213,
                "num_values_explored": 4444,
                "num_values_kept": 324,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44257
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21658798400313,
            "num_unique_values": 316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.806000508517672,
                "explored_percent_lambda": 39.99491482329011,
                "explored_percent_none": 49.19908466819222,
                "kept_percent_concrete": 19.093851132686083,
                "kept_percent_lambda": 80.90614886731392,
                "num_examples": 2,
                "num_explored_concrete": 425,
                "num_explored_lambda": 1573,
                "num_explored_none": 1935,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 250,
                "num_values_explored": 3933,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43609
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99476506793872,
            "num_unique_values": 314,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.168724279835391,
                "explored_percent_lambda": 38.52880658436214,
                "explored_percent_none": 48.30246913580247,
                "kept_percent_concrete": 22.149837133550488,
                "kept_percent_lambda": 77.85016286644951,
                "num_examples": 2,
                "num_explored_concrete": 512,
                "num_explored_lambda": 1498,
                "num_explored_none": 1878,
                "num_inputs": 2,
                "num_kept_concrete": 68,
                "num_kept_lambda": 239,
                "num_values_explored": 3888,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41823
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.48884757002816,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.657232704402515,
                "explored_percent_lambda": 37.70964360587002,
                "explored_percent_none": 49.63312368972746,
                "kept_percent_concrete": 25.649350649350648,
                "kept_percent_lambda": 74.35064935064935,
                "num_examples": 2,
                "num_explored_concrete": 483,
                "num_explored_lambda": 1439,
                "num_explored_none": 1894,
                "num_inputs": 2,
                "num_kept_concrete": 79,
                "num_kept_lambda": 229,
                "num_values_explored": 3816,
                "num_values_kept": 308,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41329
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.87223892600741,
            "num_unique_values": 332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.909781576448243,
                "explored_percent_lambda": 36.75213675213675,
                "explored_percent_none": 48.338081671415004,
                "kept_percent_concrete": 20.923076923076923,
                "kept_percent_lambda": 79.07692307692308,
                "num_examples": 2,
                "num_explored_concrete": 628,
                "num_explored_lambda": 1548,
                "num_explored_none": 2036,
                "num_inputs": 2,
                "num_kept_concrete": 68,
                "num_kept_lambda": 257,
                "num_values_explored": 4212,
                "num_values_kept": 325,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44109
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25118650402874,
            "num_unique_values": 773,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.606246799795187,
                "explored_percent_lambda": 46.79979518689196,
                "explored_percent_none": 30.593958013312854,
                "kept_percent_concrete": 9.778357235984355,
                "kept_percent_lambda": 90.22164276401564,
                "num_examples": 2,
                "num_explored_concrete": 883,
                "num_explored_lambda": 1828,
                "num_explored_none": 1195,
                "num_inputs": 1,
                "num_kept_concrete": 75,
                "num_kept_lambda": 692,
                "num_values_explored": 3906,
                "num_values_kept": 767,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41878
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96479152690154,
            "num_unique_values": 311,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.309887869520896,
                "explored_percent_lambda": 38.30275229357798,
                "explored_percent_none": 45.38735983690112,
                "kept_percent_concrete": 21.9672131147541,
                "kept_percent_lambda": 78.0327868852459,
                "num_examples": 3,
                "num_explored_concrete": 640,
                "num_explored_lambda": 1503,
                "num_explored_none": 1781,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 238,
                "num_values_explored": 3924,
                "num_values_kept": 305,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44875
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.51
}