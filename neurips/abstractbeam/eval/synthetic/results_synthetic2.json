{
    "num_tasks": 100,
    "num_tasks_solved": 51,
    "results": [
        {
            "elapsed_time": 0.9287551529705524,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.16883116883117,
                "explored_percent_lambda": 57.142857142857146,
                "explored_percent_none": 11.688311688311689,
                "kept_percent_concrete": 18.253968253968253,
                "kept_percent_lambda": 81.74603174603175,
                "num_examples": 2,
                "num_explored_concrete": 72,
                "num_explored_lambda": 132,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2861000980483368,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.927536231884055,
                "explored_percent_lambda": 40.21739130434783,
                "explored_percent_none": 14.855072463768115,
                "kept_percent_concrete": 39.86486486486486,
                "kept_percent_lambda": 60.13513513513514,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 111,
                "num_explored_none": 41,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 89,
                "num_values_explored": 276,
                "num_values_kept": 148,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15822270594071597,
            "num_unique_values": 122,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.906976744186046,
                "explored_percent_lambda": 63.372093023255815,
                "explored_percent_none": 8.720930232558139,
                "kept_percent_concrete": 18.96551724137931,
                "kept_percent_lambda": 81.03448275862068,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 109,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 94,
                "num_values_explored": 172,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.306482041021809,
            "num_unique_values": 123,
            "solution": "Drop(Square(Subtract(-1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.85207100591716,
                "explored_percent_lambda": 69.8224852071006,
                "explored_percent_none": 5.325443786982248,
                "kept_percent_concrete": 16.23931623931624,
                "kept_percent_lambda": 83.76068376068376,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 118,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 98,
                "num_values_explored": 169,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1072055900003761,
            "num_unique_values": 82,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.29139072847682,
                "explored_percent_lambda": 39.0728476821192,
                "explored_percent_none": 4.635761589403973,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 4,
                "num_explored_concrete": 85,
                "num_explored_lambda": 59,
                "num_explored_none": 7,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 46,
                "num_values_explored": 151,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16320909501519054,
            "num_unique_values": 121,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.875776397515526,
                "explored_percent_lambda": 71.42857142857143,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 9.649122807017545,
                "kept_percent_lambda": 90.35087719298245,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 115,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 11,
                "num_kept_lambda": 103,
                "num_values_explored": 161,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1847542260074988,
            "num_unique_values": 117,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.11801242236025,
                "explored_percent_lambda": 72.67080745341615,
                "explored_percent_none": 6.211180124223603,
                "kept_percent_concrete": 10.81081081081081,
                "kept_percent_lambda": 89.1891891891892,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 117,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 99,
                "num_values_explored": 161,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.528974843909964,
            "num_unique_values": 285,
            "solution": "Drop(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.986301369863014,
                "explored_percent_lambda": 51.076320939334636,
                "explored_percent_none": 11.937377690802348,
                "kept_percent_concrete": 27.240143369175627,
                "kept_percent_lambda": 72.75985663082437,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 261,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 203,
                "num_values_explored": 511,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 511
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5394388580461964,
            "num_unique_values": 285,
            "solution": "Scanl1((lambda u1, u2: fn_3(Square(fn_3(-1)))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.29299363057325,
                "explored_percent_lambda": 37.261146496815286,
                "explored_percent_none": 15.445859872611464,
                "kept_percent_concrete": 40.50179211469534,
                "kept_percent_lambda": 59.49820788530466,
                "num_examples": 4,
                "num_explored_concrete": 297,
                "num_explored_lambda": 234,
                "num_explored_none": 97,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 166,
                "num_values_explored": 628,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15368133003357798,
            "num_unique_values": 105,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.06432748538012,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 5,
                "num_explored_concrete": 101,
                "num_explored_lambda": 54,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2904323450056836,
            "num_unique_values": 246,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.18672199170125,
                "explored_percent_lambda": 26.348547717842322,
                "explored_percent_none": 18.46473029045643,
                "kept_percent_concrete": 61.92468619246862,
                "kept_percent_lambda": 38.07531380753138,
                "num_examples": 4,
                "num_explored_concrete": 266,
                "num_explored_lambda": 127,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 91,
                "num_values_explored": 482,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19801744702272117,
            "num_unique_values": 105,
            "solution": "Max(x1, Square(Square(fn_3(-1))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.79318734793188,
                "explored_percent_lambda": 31.386861313868614,
                "explored_percent_none": 33.819951338199516,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 129,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 72,
                "num_values_explored": 411,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27370204601902515,
            "num_unique_values": 220,
            "solution": "Multiply(Square(fn_3(-1)), Minimum(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.36927223719677,
                "explored_percent_lambda": 34.23180592991914,
                "explored_percent_none": 12.398921832884097,
                "kept_percent_concrete": 51.401869158878505,
                "kept_percent_lambda": 48.598130841121495,
                "num_examples": 4,
                "num_explored_concrete": 198,
                "num_explored_lambda": 127,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 104,
                "num_values_explored": 371,
                "num_values_kept": 214,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 371
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37139133096206933,
            "num_unique_values": 176,
            "solution": "Multiply(Square(fn_3(-1)), fn_0(1, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 51.344086021505376,
                "explored_percent_lambda": 31.989247311827956,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 44.705882352941174,
                "kept_percent_lambda": 55.294117647058826,
                "num_examples": 2,
                "num_explored_concrete": 191,
                "num_explored_lambda": 119,
                "num_explored_none": 62,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 94,
                "num_values_explored": 372,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19055379705969244,
            "num_unique_values": 176,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.779411764705884,
                "explored_percent_lambda": 39.338235294117645,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 47.337278106508876,
                "kept_percent_lambda": 52.662721893491124,
                "num_examples": 5,
                "num_explored_concrete": 149,
                "num_explored_lambda": 107,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 89,
                "num_values_explored": 272,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4037468309979886,
            "num_unique_values": 248,
            "solution": "Sum(Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.53415061295972,
                "explored_percent_lambda": 39.05429071803853,
                "explored_percent_none": 15.411558669001751,
                "kept_percent_concrete": 40.082644628099175,
                "kept_percent_lambda": 59.917355371900825,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 223,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 145,
                "num_values_explored": 571,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22989092289935797,
            "num_unique_values": 186,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.34782608695652,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 7.608695652173913,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 105,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 96,
                "num_values_explored": 276,
                "num_values_kept": 179,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38160242803860456,
            "num_unique_values": 251,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 40.119760479041915,
                "explored_percent_lambda": 49.10179640718563,
                "explored_percent_none": 10.778443113772456,
                "kept_percent_concrete": 29.387755102040817,
                "kept_percent_lambda": 70.61224489795919,
                "num_examples": 3,
                "num_explored_concrete": 201,
                "num_explored_lambda": 246,
                "num_explored_none": 54,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 173,
                "num_values_explored": 501,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13541330094449222,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.036199095022624,
                "explored_percent_lambda": 32.126696832579185,
                "explored_percent_none": 15.83710407239819,
                "kept_percent_concrete": 51.5625,
                "kept_percent_lambda": 48.4375,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 71,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 66,
                "num_kept_lambda": 62,
                "num_values_explored": 221,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12490376690402627,
            "num_unique_values": 90,
            "solution": "Take(Subtract(-1, 1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.66233766233766,
                "explored_percent_lambda": 58.44155844155844,
                "explored_percent_none": 3.896103896103896,
                "kept_percent_concrete": 14.457831325301205,
                "kept_percent_lambda": 85.5421686746988,
                "num_examples": 2,
                "num_explored_concrete": 58,
                "num_explored_lambda": 90,
                "num_explored_none": 6,
                "num_inputs": 2,
                "num_kept_concrete": 12,
                "num_kept_lambda": 71,
                "num_values_explored": 154,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22444013901986182,
            "num_unique_values": 154,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.7007299270073,
                "explored_percent_lambda": 44.89051094890511,
                "explored_percent_none": 12.408759124087592,
                "kept_percent_concrete": 31.292517006802722,
                "kept_percent_lambda": 68.70748299319727,
                "num_examples": 3,
                "num_explored_concrete": 117,
                "num_explored_lambda": 123,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 101,
                "num_values_explored": 274,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 59.68944710690994,
            "num_unique_values": 1037,
            "solution": "Max(If(IsOdd(Maximum(x1)), Add(1, 1), Add(1, Last(x2))), Minimum(x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 62.56865230249261,
                "explored_percent_lambda": 16.666666666666668,
                "explored_percent_none": 20.764681030840727,
                "kept_percent_concrete": 68.15533980582525,
                "kept_percent_lambda": 31.844660194174757,
                "num_examples": 4,
                "num_explored_concrete": 2962,
                "num_explored_lambda": 789,
                "num_explored_none": 983,
                "num_inputs": 2,
                "num_kept_concrete": 702,
                "num_kept_lambda": 328,
                "num_values_explored": 4734,
                "num_values_kept": 1030,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 34073
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.45501922594849,
            "num_unique_values": 344,
            "solution": "IntDivide(Square(Square(fn_3(-1))), Head(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 38.73295910184443,
                "explored_percent_lambda": 37.77064955894146,
                "explored_percent_none": 23.496391339214114,
                "kept_percent_concrete": 52.662721893491124,
                "kept_percent_lambda": 47.337278106508876,
                "num_examples": 5,
                "num_explored_concrete": 483,
                "num_explored_lambda": 471,
                "num_explored_none": 293,
                "num_inputs": 1,
                "num_kept_concrete": 178,
                "num_kept_lambda": 160,
                "num_values_explored": 1247,
                "num_values_kept": 338,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2997
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38321631005965173,
            "num_unique_values": 347,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(v1, Square(Minimum(x1)))))(u1)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.02086677367576,
                "explored_percent_lambda": 23.59550561797753,
                "explored_percent_none": 7.38362760834671,
                "kept_percent_concrete": 67.3529411764706,
                "kept_percent_lambda": 32.64705882352941,
                "num_examples": 5,
                "num_explored_concrete": 430,
                "num_explored_lambda": 147,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 111,
                "num_values_explored": 623,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18273262097500265,
            "num_unique_values": 169,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.971326164874554,
                "explored_percent_lambda": 38.70967741935484,
                "explored_percent_none": 9.31899641577061,
                "kept_percent_concrete": 46.91358024691358,
                "kept_percent_lambda": 53.08641975308642,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 108,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 86,
                "num_values_explored": 279,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 279
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09363883396144956,
            "num_unique_values": 91,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.905325443786985,
                "explored_percent_lambda": 26.035502958579883,
                "explored_percent_none": 10.059171597633137,
                "kept_percent_concrete": 53.01204819277108,
                "kept_percent_lambda": 46.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 108,
                "num_explored_lambda": 44,
                "num_explored_none": 17,
                "num_inputs": 3,
                "num_kept_concrete": 44,
                "num_kept_lambda": 39,
                "num_values_explored": 169,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 73.53491645294707,
            "num_unique_values": 346,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 34.188741721854306,
                "explored_percent_lambda": 37.16887417218543,
                "explored_percent_none": 28.642384105960264,
                "kept_percent_concrete": 56.932153392330385,
                "kept_percent_lambda": 43.067846607669615,
                "num_examples": 5,
                "num_explored_concrete": 413,
                "num_explored_lambda": 449,
                "num_explored_none": 346,
                "num_inputs": 2,
                "num_kept_concrete": 193,
                "num_kept_lambda": 146,
                "num_values_explored": 1208,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 42560
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.24117536004633,
            "num_unique_values": 496,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.436995153473344,
                "explored_percent_lambda": 25.38368336025848,
                "explored_percent_none": 56.17932148626817,
                "kept_percent_concrete": 53.673469387755105,
                "kept_percent_lambda": 46.326530612244895,
                "num_examples": 5,
                "num_explored_concrete": 913,
                "num_explored_lambda": 1257,
                "num_explored_none": 2782,
                "num_inputs": 1,
                "num_kept_concrete": 263,
                "num_kept_lambda": 227,
                "num_values_explored": 4952,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49661
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21473431994672865,
            "num_unique_values": 167,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.83402489626556,
                "explored_percent_lambda": 53.52697095435685,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 31.055900621118013,
                "kept_percent_lambda": 68.94409937888199,
                "num_examples": 3,
                "num_explored_concrete": 96,
                "num_explored_lambda": 129,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 50,
                "num_kept_lambda": 111,
                "num_values_explored": 241,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39330612297635525,
            "num_unique_values": 334,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 72.62569832402235,
                "explored_percent_lambda": 13.547486033519553,
                "explored_percent_none": 13.8268156424581,
                "kept_percent_concrete": 78.2874617737003,
                "kept_percent_lambda": 21.712538226299696,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 97,
                "num_explored_none": 99,
                "num_inputs": 2,
                "num_kept_concrete": 256,
                "num_kept_lambda": 71,
                "num_values_explored": 716,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37451712891925126,
            "num_unique_values": 296,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.77367576243981,
                "explored_percent_lambda": 24.077046548956663,
                "explored_percent_none": 9.149277688603531,
                "kept_percent_concrete": 61.937716262975776,
                "kept_percent_lambda": 38.062283737024224,
                "num_examples": 3,
                "num_explored_concrete": 416,
                "num_explored_lambda": 150,
                "num_explored_none": 57,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 110,
                "num_values_explored": 623,
                "num_values_kept": 289,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81690873205662,
            "num_unique_values": 351,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.196166854565952,
                "explored_percent_lambda": 24.892897406989853,
                "explored_percent_none": 56.910935738444195,
                "kept_percent_concrete": 46.95652173913044,
                "kept_percent_lambda": 53.04347826086956,
                "num_examples": 2,
                "num_explored_concrete": 807,
                "num_explored_lambda": 1104,
                "num_explored_none": 2524,
                "num_inputs": 1,
                "num_kept_concrete": 162,
                "num_kept_lambda": 183,
                "num_values_explored": 4435,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53133
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39778737199958414,
            "num_unique_values": 131,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.18181818181818,
                "explored_percent_lambda": 42.90909090909091,
                "explored_percent_none": 22.90909090909091,
                "kept_percent_concrete": 29.838709677419356,
                "kept_percent_lambda": 70.16129032258064,
                "num_examples": 5,
                "num_explored_concrete": 94,
                "num_explored_lambda": 118,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 87,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3148636679397896,
            "num_unique_values": 269,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.66183574879227,
                "explored_percent_lambda": 29.468599033816425,
                "explored_percent_none": 10.869565217391305,
                "kept_percent_concrete": 61.06870229007634,
                "kept_percent_lambda": 38.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 122,
                "num_explored_none": 45,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 102,
                "num_values_explored": 414,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 414
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.6915179049829,
            "num_unique_values": 1159,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.956630525437866,
                "explored_percent_lambda": 33.924103419516264,
                "explored_percent_none": 18.119266055045873,
                "kept_percent_concrete": 35.819601040763224,
                "kept_percent_lambda": 64.18039895923677,
                "num_examples": 2,
                "num_explored_concrete": 2300,
                "num_explored_lambda": 1627,
                "num_explored_none": 869,
                "num_inputs": 1,
                "num_kept_concrete": 413,
                "num_kept_lambda": 740,
                "num_values_explored": 4796,
                "num_values_kept": 1153,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46472
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.274362851050682,
            "num_unique_values": 918,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(((lambda v1: Max(Minimum(x1), v1)))(v1), ((lambda v1: Subtract(-1, v1)))(v1))))(u2)), x1)",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 32.164549972390944,
                "explored_percent_lambda": 43.48426283821093,
                "explored_percent_none": 24.35118718939812,
                "kept_percent_concrete": 34.10087719298246,
                "kept_percent_lambda": 65.89912280701755,
                "num_examples": 4,
                "num_explored_concrete": 1165,
                "num_explored_lambda": 1575,
                "num_explored_none": 882,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 601,
                "num_values_explored": 3622,
                "num_values_kept": 912,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4128869439009577,
            "num_unique_values": 258,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.71337579617835,
                "explored_percent_lambda": 23.726114649681527,
                "explored_percent_none": 16.56050955414013,
                "kept_percent_concrete": 58.56573705179283,
                "kept_percent_lambda": 41.43426294820717,
                "num_examples": 5,
                "num_explored_concrete": 375,
                "num_explored_lambda": 149,
                "num_explored_none": 104,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 104,
                "num_values_explored": 628,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88220408698544,
            "num_unique_values": 669,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.76953048899279,
                "explored_percent_lambda": 16.910188973309957,
                "explored_percent_none": 32.32028053769725,
                "kept_percent_concrete": 63.08623298033283,
                "kept_percent_lambda": 36.91376701966717,
                "num_examples": 2,
                "num_explored_concrete": 2606,
                "num_explored_lambda": 868,
                "num_explored_none": 1659,
                "num_inputs": 3,
                "num_kept_concrete": 417,
                "num_kept_lambda": 244,
                "num_values_explored": 5133,
                "num_values_kept": 661,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59480
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.55389144504443,
            "num_unique_values": 973,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.91902252036416,
                "explored_percent_lambda": 35.84091998083373,
                "explored_percent_none": 27.24005749880211,
                "kept_percent_concrete": 36.71147880041365,
                "kept_percent_lambda": 63.28852119958635,
                "num_examples": 2,
                "num_explored_concrete": 1541,
                "num_explored_lambda": 1496,
                "num_explored_none": 1137,
                "num_inputs": 1,
                "num_kept_concrete": 355,
                "num_kept_lambda": 612,
                "num_values_explored": 4174,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43054
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.44059551903047,
            "num_unique_values": 921,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.36021385609267,
                "explored_percent_lambda": 27.11071508130987,
                "explored_percent_none": 25.52907106259746,
                "kept_percent_concrete": 40.54644808743169,
                "kept_percent_lambda": 59.45355191256831,
                "num_examples": 2,
                "num_explored_concrete": 2126,
                "num_explored_lambda": 1217,
                "num_explored_none": 1146,
                "num_inputs": 1,
                "num_kept_concrete": 371,
                "num_kept_lambda": 544,
                "num_values_explored": 4489,
                "num_values_kept": 915,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46511
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.265619519050233,
            "num_unique_values": 373,
            "solution": "Add(x1, Multiply(x2, fn_3(Min(x2, 0))))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 19.45069788383611,
                "explored_percent_lambda": 21.746960828455652,
                "explored_percent_none": 58.80234128770824,
                "kept_percent_concrete": 54.6448087431694,
                "kept_percent_lambda": 45.3551912568306,
                "num_examples": 2,
                "num_explored_concrete": 864,
                "num_explored_lambda": 966,
                "num_explored_none": 2612,
                "num_inputs": 2,
                "num_kept_concrete": 200,
                "num_kept_lambda": 166,
                "num_values_explored": 4442,
                "num_values_kept": 366,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17021
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.94923308398575,
            "num_unique_values": 708,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.023992322456813,
                "explored_percent_lambda": 32.41362763915547,
                "explored_percent_none": 42.562380038387715,
                "kept_percent_concrete": 34.664764621968615,
                "kept_percent_lambda": 65.33523537803138,
                "num_examples": 4,
                "num_explored_concrete": 1043,
                "num_explored_lambda": 1351,
                "num_explored_none": 1774,
                "num_inputs": 2,
                "num_kept_concrete": 243,
                "num_kept_lambda": 458,
                "num_values_explored": 4168,
                "num_values_kept": 701,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43739
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5142894629389048,
            "num_unique_values": 333,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: fn_3(v1)))(u1)), x1, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.52202283849918,
                "explored_percent_lambda": 31.484502446982056,
                "explored_percent_none": 7.993474714518761,
                "kept_percent_concrete": 54.29447852760736,
                "kept_percent_lambda": 45.70552147239264,
                "num_examples": 3,
                "num_explored_concrete": 371,
                "num_explored_lambda": 193,
                "num_explored_none": 49,
                "num_inputs": 2,
                "num_kept_concrete": 177,
                "num_kept_lambda": 149,
                "num_values_explored": 613,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 613
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.42385741090402,
            "num_unique_values": 819,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.666666666666664,
                "explored_percent_lambda": 20.632183908045977,
                "explored_percent_none": 27.701149425287355,
                "kept_percent_concrete": 54.36654366543665,
                "kept_percent_lambda": 45.63345633456335,
                "num_examples": 4,
                "num_explored_concrete": 2697,
                "num_explored_lambda": 1077,
                "num_explored_none": 1446,
                "num_inputs": 1,
                "num_kept_concrete": 442,
                "num_kept_lambda": 371,
                "num_values_explored": 5220,
                "num_values_kept": 813,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53264
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.516379542998038,
            "num_unique_values": 206,
            "solution": "Multiply(Add(fn_3(x1), Square(fn_3(-1))), If(IsEven(x1), 0, 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 13.434841021047918,
                "explored_percent_lambda": 32.19883564711151,
                "explored_percent_none": 54.366323331840576,
                "kept_percent_concrete": 29.0,
                "kept_percent_lambda": 71.0,
                "num_examples": 5,
                "num_explored_concrete": 300,
                "num_explored_lambda": 719,
                "num_explored_none": 1214,
                "num_inputs": 1,
                "num_kept_concrete": 58,
                "num_kept_lambda": 142,
                "num_values_explored": 2233,
                "num_values_kept": 200,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4333
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.88897742703557,
            "num_unique_values": 263,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 26.327193932827736,
                "explored_percent_lambda": 52.11267605633803,
                "explored_percent_none": 21.560130010834236,
                "kept_percent_concrete": 33.72549019607843,
                "kept_percent_lambda": 66.27450980392157,
                "num_examples": 2,
                "num_explored_concrete": 243,
                "num_explored_lambda": 481,
                "num_explored_none": 199,
                "num_inputs": 3,
                "num_kept_concrete": 86,
                "num_kept_lambda": 169,
                "num_values_explored": 923,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3023
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76848423294723,
            "num_unique_values": 488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.245841035120147,
                "explored_percent_lambda": 23.049907578558226,
                "explored_percent_none": 49.70425138632163,
                "kept_percent_concrete": 55.093555093555096,
                "kept_percent_lambda": 44.906444906444904,
                "num_examples": 2,
                "num_explored_concrete": 1474,
                "num_explored_lambda": 1247,
                "num_explored_none": 2689,
                "num_inputs": 2,
                "num_kept_concrete": 265,
                "num_kept_lambda": 216,
                "num_values_explored": 5410,
                "num_values_kept": 481,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54342
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2366363100009039,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.31460674157304,
                "explored_percent_lambda": 44.19475655430712,
                "explored_percent_none": 7.49063670411985,
                "kept_percent_concrete": 37.908496732026144,
                "kept_percent_lambda": 62.091503267973856,
                "num_examples": 4,
                "num_explored_concrete": 129,
                "num_explored_lambda": 118,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 58,
                "num_kept_lambda": 95,
                "num_values_explored": 267,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 267
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3754454320296645,
            "num_unique_values": 331,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.69759450171821,
                "explored_percent_lambda": 23.195876288659793,
                "explored_percent_none": 9.106529209621993,
                "kept_percent_concrete": 65.94427244582043,
                "kept_percent_lambda": 34.05572755417957,
                "num_examples": 4,
                "num_explored_concrete": 394,
                "num_explored_lambda": 135,
                "num_explored_none": 53,
                "num_inputs": 3,
                "num_kept_concrete": 213,
                "num_kept_lambda": 110,
                "num_values_explored": 582,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.82498602604028,
            "num_unique_values": 379,
            "solution": "Subtract(Add(Add(x1, 1), IntDivide(x1, x2)), IntDivide(x2, fn_3(x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 22.70236087689713,
                "explored_percent_lambda": 19.898819561551434,
                "explored_percent_none": 57.398819561551434,
                "kept_percent_concrete": 56.72043010752688,
                "kept_percent_lambda": 43.27956989247312,
                "num_examples": 4,
                "num_explored_concrete": 1077,
                "num_explored_lambda": 944,
                "num_explored_none": 2723,
                "num_inputs": 2,
                "num_kept_concrete": 211,
                "num_kept_lambda": 161,
                "num_values_explored": 4744,
                "num_values_kept": 372,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 23102
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.52627658902202,
            "num_unique_values": 898,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.648122392211405,
                "explored_percent_lambda": 32.5452016689847,
                "explored_percent_none": 20.806675938803895,
                "kept_percent_concrete": 43.04932735426009,
                "kept_percent_lambda": 56.95067264573991,
                "num_examples": 5,
                "num_explored_concrete": 1677,
                "num_explored_lambda": 1170,
                "num_explored_none": 748,
                "num_inputs": 1,
                "num_kept_concrete": 384,
                "num_kept_lambda": 508,
                "num_values_explored": 3595,
                "num_values_kept": 892,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39736
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3745284390170127,
            "num_unique_values": 147,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.043795620437955,
                "explored_percent_lambda": 23.722627737226276,
                "explored_percent_none": 14.233576642335766,
                "kept_percent_concrete": 58.992805755395686,
                "kept_percent_lambda": 41.007194244604314,
                "num_examples": 5,
                "num_explored_concrete": 170,
                "num_explored_lambda": 65,
                "num_explored_none": 39,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 57,
                "num_values_explored": 274,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.08832170499954,
            "num_unique_values": 930,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.63395225464191,
                "explored_percent_lambda": 28.03713527851459,
                "explored_percent_none": 28.3289124668435,
                "kept_percent_concrete": 46.42857142857143,
                "kept_percent_lambda": 53.57142857142857,
                "num_examples": 3,
                "num_explored_concrete": 1645,
                "num_explored_lambda": 1057,
                "num_explored_none": 1068,
                "num_inputs": 1,
                "num_kept_concrete": 429,
                "num_kept_lambda": 495,
                "num_values_explored": 3770,
                "num_values_kept": 924,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42097
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5217012129724026,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(x1, ((lambda v1: fn_3(v1)))(v1))))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.54545454545455,
                "explored_percent_lambda": 31.738437001594896,
                "explored_percent_none": 13.716108452950559,
                "kept_percent_concrete": 43.032786885245905,
                "kept_percent_lambda": 56.967213114754095,
                "num_examples": 4,
                "num_explored_concrete": 342,
                "num_explored_lambda": 199,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 139,
                "num_values_explored": 627,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.45355571503751,
            "num_unique_values": 1246,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.81379007465964,
                "explored_percent_lambda": 18.225735617039966,
                "explored_percent_none": 19.960474308300395,
                "kept_percent_concrete": 64.1357027463651,
                "kept_percent_lambda": 35.864297253634895,
                "num_examples": 5,
                "num_explored_concrete": 2815,
                "num_explored_lambda": 830,
                "num_explored_none": 909,
                "num_inputs": 3,
                "num_kept_concrete": 794,
                "num_kept_lambda": 444,
                "num_values_explored": 4554,
                "num_values_kept": 1238,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48387
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.476758997072466,
            "num_unique_values": 548,
            "solution": "Map((lambda u1: Sum(x1)), Drop(fn_5(0, x2), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 45.04365690806369,
                "explored_percent_lambda": 34.10374935798664,
                "explored_percent_none": 20.852593733949668,
                "kept_percent_concrete": 51.386321626617374,
                "kept_percent_lambda": 48.613678373382626,
                "num_examples": 5,
                "num_explored_concrete": 877,
                "num_explored_lambda": 664,
                "num_explored_none": 406,
                "num_inputs": 2,
                "num_kept_concrete": 278,
                "num_kept_lambda": 263,
                "num_values_explored": 1947,
                "num_values_kept": 541,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3697
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97216206300072,
            "num_unique_values": 460,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.002389486260455,
                "explored_percent_lambda": 21.60095579450418,
                "explored_percent_none": 44.396654719235364,
                "kept_percent_concrete": 54.966887417218544,
                "kept_percent_lambda": 45.033112582781456,
                "num_examples": 5,
                "num_explored_concrete": 1423,
                "num_explored_lambda": 904,
                "num_explored_none": 1858,
                "num_inputs": 2,
                "num_kept_concrete": 249,
                "num_kept_lambda": 204,
                "num_values_explored": 4185,
                "num_values_kept": 453,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42443
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.45454137993511,
            "num_unique_values": 665,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.8319783197832,
                "explored_percent_lambda": 30.32520325203252,
                "explored_percent_none": 31.84281842818428,
                "kept_percent_concrete": 29.48328267477204,
                "kept_percent_lambda": 70.51671732522796,
                "num_examples": 2,
                "num_explored_concrete": 1396,
                "num_explored_lambda": 1119,
                "num_explored_none": 1175,
                "num_inputs": 2,
                "num_kept_concrete": 194,
                "num_kept_lambda": 464,
                "num_values_explored": 3690,
                "num_values_kept": 658,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 36572
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.40067466301844,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.806224310041104,
                "explored_percent_lambda": 42.571931884908985,
                "explored_percent_none": 47.62184380504991,
                "kept_percent_concrete": 16.828478964401295,
                "kept_percent_lambda": 83.1715210355987,
                "num_examples": 4,
                "num_explored_concrete": 334,
                "num_explored_lambda": 1450,
                "num_explored_none": 1622,
                "num_inputs": 1,
                "num_kept_concrete": 52,
                "num_kept_lambda": 257,
                "num_values_explored": 3406,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38071
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 57.79428624093998,
            "num_unique_values": 563,
            "solution": "Map((lambda u1: ((lambda v1: If(IsEven(x2), fn_0(x2, x1), v1)))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.19631901840491,
                "explored_percent_lambda": 37.32106339468303,
                "explored_percent_none": 26.482617586912067,
                "kept_percent_concrete": 44.96402877697842,
                "kept_percent_lambda": 55.03597122302158,
                "num_examples": 4,
                "num_explored_concrete": 708,
                "num_explored_lambda": 730,
                "num_explored_none": 518,
                "num_inputs": 2,
                "num_kept_concrete": 250,
                "num_kept_lambda": 306,
                "num_values_explored": 1956,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 22288
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.53848481806926,
            "num_unique_values": 761,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.94827586206897,
                "explored_percent_lambda": 28.879310344827587,
                "explored_percent_none": 25.17241379310345,
                "kept_percent_concrete": 44.63576158940398,
                "kept_percent_lambda": 55.36423841059602,
                "num_examples": 3,
                "num_explored_concrete": 1599,
                "num_explored_lambda": 1005,
                "num_explored_none": 876,
                "num_inputs": 1,
                "num_kept_concrete": 337,
                "num_kept_lambda": 418,
                "num_values_explored": 3480,
                "num_values_kept": 755,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41669
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5742813610704616,
            "num_unique_values": 220,
            "solution": "Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.82003395585738,
                "explored_percent_lambda": 30.899830220713074,
                "explored_percent_none": 15.280135823429541,
                "kept_percent_concrete": 43.66197183098591,
                "kept_percent_lambda": 56.33802816901409,
                "num_examples": 2,
                "num_explored_concrete": 317,
                "num_explored_lambda": 182,
                "num_explored_none": 90,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 120,
                "num_values_explored": 589,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20205495005939,
            "num_unique_values": 309,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.432571281787824,
                "explored_percent_lambda": 33.54739275622913,
                "explored_percent_none": 54.02003596198305,
                "kept_percent_concrete": 30.033003300330034,
                "kept_percent_lambda": 69.96699669966996,
                "num_examples": 4,
                "num_explored_concrete": 484,
                "num_explored_lambda": 1306,
                "num_explored_none": 2103,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 212,
                "num_values_explored": 3893,
                "num_values_kept": 303,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38971
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.8168053639819846,
            "num_unique_values": 382,
            "solution": "Scanl1((lambda u1, u2: fn_3(fn_3(IntDivide(Last(x1), Head(x2))))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.3875094055681,
                "explored_percent_lambda": 24.52972159518435,
                "explored_percent_none": 10.082768999247554,
                "kept_percent_concrete": 57.86666666666667,
                "kept_percent_lambda": 42.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 869,
                "num_explored_lambda": 326,
                "num_explored_none": 134,
                "num_inputs": 2,
                "num_kept_concrete": 217,
                "num_kept_lambda": 158,
                "num_values_explored": 1329,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1329
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.42865620495286,
            "num_unique_values": 940,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.79644509374239,
                "explored_percent_lambda": 20.769418066715364,
                "explored_percent_none": 31.434136839542244,
                "kept_percent_concrete": 64.30868167202573,
                "kept_percent_lambda": 35.69131832797428,
                "num_examples": 5,
                "num_explored_concrete": 1963,
                "num_explored_lambda": 853,
                "num_explored_none": 1291,
                "num_inputs": 2,
                "num_kept_concrete": 600,
                "num_kept_lambda": 333,
                "num_values_explored": 4107,
                "num_values_kept": 933,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41800
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.92250087403227,
            "num_unique_values": 853,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.93617021276596,
                "explored_percent_lambda": 24.97340425531915,
                "explored_percent_none": 16.090425531914892,
                "kept_percent_concrete": 48.878394332939784,
                "kept_percent_lambda": 51.121605667060216,
                "num_examples": 3,
                "num_explored_concrete": 2216,
                "num_explored_lambda": 939,
                "num_explored_none": 605,
                "num_inputs": 1,
                "num_kept_concrete": 414,
                "num_kept_lambda": 433,
                "num_values_explored": 3760,
                "num_values_kept": 847,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40610
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.56122619204689,
            "num_unique_values": 1109,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.72002906272705,
                "explored_percent_lambda": 17.389198353112135,
                "explored_percent_none": 18.890772584160814,
                "kept_percent_concrete": 69.96370235934664,
                "kept_percent_lambda": 30.03629764065336,
                "num_examples": 5,
                "num_explored_concrete": 2631,
                "num_explored_lambda": 718,
                "num_explored_none": 780,
                "num_inputs": 2,
                "num_kept_concrete": 771,
                "num_kept_lambda": 331,
                "num_values_explored": 4129,
                "num_values_kept": 1102,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42344
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.90421017294284,
            "num_unique_values": 887,
            "solution": "Map((lambda u1: ((lambda v1: Min(v1, Square(fn_3(-1)))))(u1)), Map((lambda u1: ((lambda v1: Max(0, v1)))(u1)), x1))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 42.41293532338308,
                "explored_percent_lambda": 35.541044776119406,
                "explored_percent_none": 22.046019900497512,
                "kept_percent_concrete": 41.08967082860386,
                "kept_percent_lambda": 58.91032917139614,
                "num_examples": 2,
                "num_explored_concrete": 1364,
                "num_explored_lambda": 1143,
                "num_explored_none": 709,
                "num_inputs": 1,
                "num_kept_concrete": 362,
                "num_kept_lambda": 519,
                "num_values_explored": 3216,
                "num_values_kept": 881,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8612
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.51929436891805,
            "num_unique_values": 920,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.3276505061268,
                "explored_percent_lambda": 20.111880660628664,
                "explored_percent_none": 24.56046883324454,
                "kept_percent_concrete": 62.171052631578945,
                "kept_percent_lambda": 37.828947368421055,
                "num_examples": 4,
                "num_explored_concrete": 2077,
                "num_explored_lambda": 755,
                "num_explored_none": 922,
                "num_inputs": 3,
                "num_kept_concrete": 567,
                "num_kept_lambda": 345,
                "num_values_explored": 3754,
                "num_values_kept": 912,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40897
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.97431555390358,
            "num_unique_values": 503,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.532554257095157,
                "explored_percent_lambda": 45.97662771285476,
                "explored_percent_none": 34.490818030050086,
                "kept_percent_concrete": 12.273641851106639,
                "kept_percent_lambda": 87.72635814889335,
                "num_examples": 2,
                "num_explored_concrete": 585,
                "num_explored_lambda": 1377,
                "num_explored_none": 1033,
                "num_inputs": 1,
                "num_kept_concrete": 61,
                "num_kept_lambda": 436,
                "num_values_explored": 2995,
                "num_values_kept": 497,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 33514
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.61396650108509,
            "num_unique_values": 874,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.80042765502495,
                "explored_percent_lambda": 13.352340223330957,
                "explored_percent_none": 26.847232121644097,
                "kept_percent_concrete": 74.13394919168591,
                "kept_percent_lambda": 25.86605080831409,
                "num_examples": 4,
                "num_explored_concrete": 2517,
                "num_explored_lambda": 562,
                "num_explored_none": 1130,
                "num_inputs": 3,
                "num_kept_concrete": 642,
                "num_kept_lambda": 224,
                "num_values_explored": 4209,
                "num_values_kept": 866,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47833
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.02626999898348,
            "num_unique_values": 893,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.07940446650124,
                "explored_percent_lambda": 41.160049627791565,
                "explored_percent_none": 27.760545905707197,
                "kept_percent_concrete": 30.777903043968433,
                "kept_percent_lambda": 69.22209695603156,
                "num_examples": 3,
                "num_explored_concrete": 1002,
                "num_explored_lambda": 1327,
                "num_explored_none": 895,
                "num_inputs": 1,
                "num_kept_concrete": 273,
                "num_kept_lambda": 614,
                "num_values_explored": 3224,
                "num_values_kept": 887,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 35337
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29028972401284,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.732984293193716,
                "explored_percent_lambda": 35.6282722513089,
                "explored_percent_none": 53.638743455497384,
                "kept_percent_concrete": 29.12621359223301,
                "kept_percent_lambda": 70.87378640776699,
                "num_examples": 4,
                "num_explored_concrete": 410,
                "num_explored_lambda": 1361,
                "num_explored_none": 2049,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 219,
                "num_values_explored": 3820,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39426
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.92184467392508,
            "num_unique_values": 933,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.63190500774393,
                "explored_percent_lambda": 28.420237480640164,
                "explored_percent_none": 22.9478575116159,
                "kept_percent_concrete": 43.79719525350593,
                "kept_percent_lambda": 56.20280474649407,
                "num_examples": 2,
                "num_explored_concrete": 1884,
                "num_explored_lambda": 1101,
                "num_explored_none": 889,
                "num_inputs": 1,
                "num_kept_concrete": 406,
                "num_kept_lambda": 521,
                "num_values_explored": 3874,
                "num_values_kept": 927,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42140
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7211662350455299,
            "num_unique_values": 325,
            "solution": "Map((lambda u1: Square(fn_5(Last(x1), x2))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.76230899830221,
                "explored_percent_lambda": 33.446519524618,
                "explored_percent_none": 6.791171477079796,
                "kept_percent_concrete": 53.31230283911672,
                "kept_percent_lambda": 46.68769716088328,
                "num_examples": 5,
                "num_explored_concrete": 352,
                "num_explored_lambda": 197,
                "num_explored_none": 40,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 148,
                "num_values_explored": 589,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.92455101304222,
            "num_unique_values": 875,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Drop(Head(x2), Scanl1((lambda u1, u2: -1), x2)))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 44.19450124971598,
                "explored_percent_lambda": 35.8782094978414,
                "explored_percent_none": 19.927289252442627,
                "kept_percent_concrete": 31.797235023041473,
                "kept_percent_lambda": 68.20276497695852,
                "num_examples": 2,
                "num_explored_concrete": 1945,
                "num_explored_lambda": 1579,
                "num_explored_none": 877,
                "num_inputs": 2,
                "num_kept_concrete": 276,
                "num_kept_lambda": 592,
                "num_values_explored": 4401,
                "num_values_kept": 868,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39338
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.72545567399357,
            "num_unique_values": 579,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.887394120577977,
                "explored_percent_lambda": 41.280518186347784,
                "explored_percent_none": 40.83208769307424,
                "kept_percent_concrete": 23.56020942408377,
                "kept_percent_lambda": 76.43979057591623,
                "num_examples": 3,
                "num_explored_concrete": 718,
                "num_explored_lambda": 1657,
                "num_explored_none": 1639,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 438,
                "num_values_explored": 4014,
                "num_values_kept": 573,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44251
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34928282001056,
            "num_unique_values": 1246,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.93584829533992,
                "explored_percent_lambda": 10.046399031672383,
                "explored_percent_none": 16.017752672987694,
                "kept_percent_concrete": 81.09854604200324,
                "kept_percent_lambda": 18.901453957996768,
                "num_examples": 5,
                "num_explored_concrete": 3665,
                "num_explored_lambda": 498,
                "num_explored_none": 794,
                "num_inputs": 3,
                "num_kept_concrete": 1004,
                "num_kept_lambda": 234,
                "num_values_explored": 4957,
                "num_values_kept": 1238,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50557
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.364950323011726,
            "num_unique_values": 896,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: ((lambda v1: IntDivide(v1, Max(x1, 1))))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 53.77564382365779,
                "explored_percent_lambda": 19.663902226102138,
                "explored_percent_none": 26.56045395024007,
                "kept_percent_concrete": 61.373873873873876,
                "kept_percent_lambda": 38.626126126126124,
                "num_examples": 4,
                "num_explored_concrete": 2464,
                "num_explored_lambda": 901,
                "num_explored_none": 1217,
                "num_inputs": 3,
                "num_kept_concrete": 545,
                "num_kept_lambda": 343,
                "num_values_explored": 4582,
                "num_values_kept": 888,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6332
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.4048419269966,
            "num_unique_values": 951,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.037046184243025,
                "explored_percent_lambda": 27.834033094591256,
                "explored_percent_none": 22.12892072116572,
                "kept_percent_concrete": 44.973544973544975,
                "kept_percent_lambda": 55.026455026455025,
                "num_examples": 2,
                "num_explored_concrete": 2026,
                "num_explored_lambda": 1127,
                "num_explored_none": 896,
                "num_inputs": 1,
                "num_kept_concrete": 425,
                "num_kept_lambda": 520,
                "num_values_explored": 4049,
                "num_values_kept": 945,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42576
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.42510511202272,
            "num_unique_values": 917,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.1015228426396,
                "explored_percent_lambda": 16.101522842639593,
                "explored_percent_none": 19.79695431472081,
                "kept_percent_concrete": 66.92307692307692,
                "kept_percent_lambda": 33.07692307692308,
                "num_examples": 3,
                "num_explored_concrete": 3157,
                "num_explored_lambda": 793,
                "num_explored_none": 975,
                "num_inputs": 2,
                "num_kept_concrete": 609,
                "num_kept_lambda": 301,
                "num_values_explored": 4925,
                "num_values_kept": 910,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51809
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.00249824405182,
            "num_unique_values": 359,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.67062818336163,
                "explored_percent_lambda": 19.80050933786078,
                "explored_percent_none": 59.52886247877759,
                "kept_percent_concrete": 53.97727272727273,
                "kept_percent_lambda": 46.02272727272727,
                "num_examples": 4,
                "num_explored_concrete": 974,
                "num_explored_lambda": 933,
                "num_explored_none": 2805,
                "num_inputs": 2,
                "num_kept_concrete": 190,
                "num_kept_lambda": 162,
                "num_values_explored": 4712,
                "num_values_kept": 352,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48449
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.44557671702933,
            "num_unique_values": 1088,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.17649519029695,
                "explored_percent_lambda": 20.70263488080301,
                "explored_percent_none": 21.120869928900042,
                "kept_percent_concrete": 67.7449168207024,
                "kept_percent_lambda": 32.2550831792976,
                "num_examples": 5,
                "num_explored_concrete": 2782,
                "num_explored_lambda": 990,
                "num_explored_none": 1010,
                "num_inputs": 1,
                "num_kept_concrete": 733,
                "num_kept_lambda": 349,
                "num_values_explored": 4782,
                "num_values_kept": 1082,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51908
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21755917696282,
            "num_unique_values": 783,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.81434434238812,
                "explored_percent_lambda": 17.138948602696892,
                "explored_percent_none": 33.04670705491499,
                "kept_percent_concrete": 65.4639175257732,
                "kept_percent_lambda": 34.5360824742268,
                "num_examples": 4,
                "num_explored_concrete": 2549,
                "num_explored_lambda": 877,
                "num_explored_none": 1691,
                "num_inputs": 2,
                "num_kept_concrete": 508,
                "num_kept_lambda": 268,
                "num_values_explored": 5117,
                "num_values_kept": 776,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53961
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.54378169006668,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.330073349633253,
                "explored_percent_lambda": 28.924205378973106,
                "explored_percent_none": 55.74572127139364,
                "kept_percent_concrete": 42.07119741100323,
                "kept_percent_lambda": 57.92880258899677,
                "num_examples": 3,
                "num_explored_concrete": 627,
                "num_explored_lambda": 1183,
                "num_explored_none": 2280,
                "num_inputs": 1,
                "num_kept_concrete": 130,
                "num_kept_lambda": 179,
                "num_values_explored": 4090,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46856
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.18400897295214,
            "num_unique_values": 928,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.13350615683733,
                "explored_percent_lambda": 21.71095268956578,
                "explored_percent_none": 20.15554115359689,
                "kept_percent_concrete": 53.63735070575461,
                "kept_percent_lambda": 46.36264929424539,
                "num_examples": 3,
                "num_explored_concrete": 2691,
                "num_explored_lambda": 1005,
                "num_explored_none": 933,
                "num_inputs": 2,
                "num_kept_concrete": 494,
                "num_kept_lambda": 427,
                "num_values_explored": 4629,
                "num_values_kept": 921,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50041
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.57599125499837,
            "num_unique_values": 875,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.83952897714154,
                "explored_percent_lambda": 32.740706534287696,
                "explored_percent_none": 22.41976448857077,
                "kept_percent_concrete": 46.95051783659379,
                "kept_percent_lambda": 53.04948216340621,
                "num_examples": 5,
                "num_explored_concrete": 1942,
                "num_explored_lambda": 1418,
                "num_explored_none": 971,
                "num_inputs": 1,
                "num_kept_concrete": 408,
                "num_kept_lambda": 461,
                "num_values_explored": 4331,
                "num_values_kept": 869,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43642
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.5023977990495,
            "num_unique_values": 941,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.9214501510574,
                "explored_percent_lambda": 20.263271471730686,
                "explored_percent_none": 33.81527837721191,
                "kept_percent_concrete": 62.67379679144385,
                "kept_percent_lambda": 37.32620320855615,
                "num_examples": 5,
                "num_explored_concrete": 2128,
                "num_explored_lambda": 939,
                "num_explored_none": 1567,
                "num_inputs": 1,
                "num_kept_concrete": 586,
                "num_kept_lambda": 349,
                "num_values_explored": 4634,
                "num_values_kept": 935,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50669
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.6286311619915,
            "num_unique_values": 712,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 36.53948065712772,
                "explored_percent_lambda": 31.79650238473768,
                "explored_percent_none": 31.664016958134606,
                "kept_percent_concrete": 32.861189801699716,
                "kept_percent_lambda": 67.13881019830028,
                "num_examples": 2,
                "num_explored_concrete": 1379,
                "num_explored_lambda": 1200,
                "num_explored_none": 1195,
                "num_inputs": 1,
                "num_kept_concrete": 232,
                "num_kept_lambda": 474,
                "num_values_explored": 3774,
                "num_values_kept": 706,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44302
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.59921924304217,
            "num_unique_values": 923,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.605839416058394,
                "explored_percent_lambda": 28.846715328467152,
                "explored_percent_none": 25.547445255474454,
                "kept_percent_concrete": 50.38167938931298,
                "kept_percent_lambda": 49.61832061068702,
                "num_examples": 4,
                "num_explored_concrete": 1562,
                "num_explored_lambda": 988,
                "num_explored_none": 875,
                "num_inputs": 1,
                "num_kept_concrete": 462,
                "num_kept_lambda": 455,
                "num_values_explored": 3425,
                "num_values_kept": 917,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 37546
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.68413720699027,
            "num_unique_values": 633,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.049778761061948,
                "explored_percent_lambda": 45.796460176991154,
                "explored_percent_none": 34.1537610619469,
                "kept_percent_concrete": 12.440191387559809,
                "kept_percent_lambda": 87.5598086124402,
                "num_examples": 2,
                "num_explored_concrete": 725,
                "num_explored_lambda": 1656,
                "num_explored_none": 1235,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 549,
                "num_values_explored": 3616,
                "num_values_kept": 627,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 35550
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.66808255203068,
            "num_unique_values": 809,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.904847396768403,
                "explored_percent_lambda": 43.26750448833034,
                "explored_percent_none": 27.82764811490126,
                "kept_percent_concrete": 16.68742216687422,
                "kept_percent_lambda": 83.31257783312577,
                "num_examples": 2,
                "num_explored_concrete": 966,
                "num_explored_lambda": 1446,
                "num_explored_none": 930,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 669,
                "num_values_explored": 3342,
                "num_values_kept": 803,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 36288
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.91521125205327,
            "num_unique_values": 314,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.096272525302394,
                "explored_percent_lambda": 33.794124907430266,
                "explored_percent_none": 56.109602567267345,
                "kept_percent_concrete": 18.506493506493506,
                "kept_percent_lambda": 81.49350649350649,
                "num_examples": 2,
                "num_explored_concrete": 409,
                "num_explored_lambda": 1369,
                "num_explored_none": 2273,
                "num_inputs": 1,
                "num_kept_concrete": 57,
                "num_kept_lambda": 251,
                "num_values_explored": 4051,
                "num_values_kept": 308,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43740
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.37590590096079,
            "num_unique_values": 313,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.017521902377972,
                "explored_percent_lambda": 32.015018773466835,
                "explored_percent_none": 53.96745932415519,
                "kept_percent_concrete": 33.22475570032573,
                "kept_percent_lambda": 66.77524429967427,
                "num_examples": 2,
                "num_explored_concrete": 560,
                "num_explored_lambda": 1279,
                "num_explored_none": 2156,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 205,
                "num_values_explored": 3995,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41628
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.60159576695878,
            "num_unique_values": 321,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.577417818008575,
                "explored_percent_lambda": 36.80323963792282,
                "explored_percent_none": 50.6193425440686,
                "kept_percent_concrete": 22.611464968152866,
                "kept_percent_lambda": 77.38853503184713,
                "num_examples": 2,
                "num_explored_concrete": 528,
                "num_explored_lambda": 1545,
                "num_explored_none": 2125,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 243,
                "num_values_explored": 4198,
                "num_values_kept": 314,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39720
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.87401910300832,
            "num_unique_values": 314,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.011853448275861,
                "explored_percent_lambda": 37.6885775862069,
                "explored_percent_none": 49.29956896551724,
                "kept_percent_concrete": 22.149837133550488,
                "kept_percent_lambda": 77.85016286644951,
                "num_examples": 2,
                "num_explored_concrete": 483,
                "num_explored_lambda": 1399,
                "num_explored_none": 1830,
                "num_inputs": 2,
                "num_kept_concrete": 68,
                "num_kept_lambda": 239,
                "num_values_explored": 3712,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40685
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.51073756394908,
            "num_unique_values": 341,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.617415470125058,
                "explored_percent_lambda": 36.03520148216767,
                "explored_percent_none": 50.347383047707275,
                "kept_percent_concrete": 27.54491017964072,
                "kept_percent_lambda": 72.45508982035928,
                "num_examples": 2,
                "num_explored_concrete": 588,
                "num_explored_lambda": 1556,
                "num_explored_none": 2174,
                "num_inputs": 2,
                "num_kept_concrete": 92,
                "num_kept_lambda": 242,
                "num_values_explored": 4318,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 40346
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.93432325997856,
            "num_unique_values": 349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.309082794019192,
                "explored_percent_lambda": 36.39812541843339,
                "explored_percent_none": 48.29279178754742,
                "kept_percent_concrete": 19.5906432748538,
                "kept_percent_lambda": 80.4093567251462,
                "num_examples": 2,
                "num_explored_concrete": 686,
                "num_explored_lambda": 1631,
                "num_explored_none": 2164,
                "num_inputs": 2,
                "num_kept_concrete": 67,
                "num_kept_lambda": 275,
                "num_values_explored": 4481,
                "num_values_kept": 342,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44920
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34193337103352,
            "num_unique_values": 568,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.587064676616915,
                "explored_percent_lambda": 44.74295190713101,
                "explored_percent_none": 32.66998341625207,
                "kept_percent_concrete": 11.743772241992882,
                "kept_percent_lambda": 88.25622775800711,
                "num_examples": 2,
                "num_explored_concrete": 681,
                "num_explored_lambda": 1349,
                "num_explored_none": 985,
                "num_inputs": 1,
                "num_kept_concrete": 66,
                "num_kept_lambda": 496,
                "num_values_explored": 3015,
                "num_values_kept": 562,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38314
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34775429707952,
            "num_unique_values": 314,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.65339074273412,
                "explored_percent_lambda": 39.77395048439182,
                "explored_percent_none": 42.57265877287406,
                "kept_percent_concrete": 24.675324675324674,
                "kept_percent_lambda": 75.32467532467533,
                "num_examples": 3,
                "num_explored_concrete": 656,
                "num_explored_lambda": 1478,
                "num_explored_none": 1582,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 232,
                "num_values_explored": 3716,
                "num_values_kept": 308,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41295
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.51
}