{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.6140365821775049,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 52.38095238095238,
                "explored_percent_none": 4.761904761904762,
                "kept_percent_concrete": 30.87248322147651,
                "kept_percent_lambda": 69.12751677852349,
                "num_examples": 2,
                "num_explored_concrete": 99,
                "num_explored_lambda": 121,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17390826088376343,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.730627306273064,
                "explored_percent_lambda": 32.103321033210335,
                "explored_percent_none": 5.166051660516605,
                "kept_percent_concrete": 51.851851851851855,
                "kept_percent_lambda": 48.148148148148145,
                "num_examples": 3,
                "num_explored_concrete": 170,
                "num_explored_lambda": 87,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12848587008193135,
            "num_unique_values": 114,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.41618497109827,
                "explored_percent_lambda": 56.64739884393064,
                "explored_percent_none": 6.936416184971098,
                "kept_percent_concrete": 22.01834862385321,
                "kept_percent_lambda": 77.98165137614679,
                "num_examples": 5,
                "num_explored_concrete": 63,
                "num_explored_lambda": 98,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 85,
                "num_values_explored": 173,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 173
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5907841678708792,
            "num_unique_values": 350,
            "solution": "Reverse(fn_1(fn_1(fn_1(fn_1(Reverse(x1))))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.95310907237513,
                "explored_percent_lambda": 29.153924566768602,
                "explored_percent_none": 4.892966360856269,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 5,
                "num_explored_concrete": 647,
                "num_explored_lambda": 286,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 160,
                "num_values_explored": 981,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11587153887376189,
            "num_unique_values": 99,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.682119205298015,
                "explored_percent_lambda": 45.6953642384106,
                "explored_percent_none": 6.622516556291391,
                "kept_percent_concrete": 34.40860215053763,
                "kept_percent_lambda": 65.59139784946237,
                "num_examples": 4,
                "num_explored_concrete": 72,
                "num_explored_lambda": 69,
                "num_explored_none": 10,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 61,
                "num_values_explored": 151,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11261266795918345,
            "num_unique_values": 89,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 43.47826086956522,
                "explored_percent_lambda": 48.4472049689441,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 19.27710843373494,
                "kept_percent_lambda": 80.72289156626506,
                "num_examples": 4,
                "num_explored_concrete": 70,
                "num_explored_lambda": 78,
                "num_explored_none": 13,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 67,
                "num_values_explored": 161,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14096799213439226,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.395061728395063,
                "explored_percent_lambda": 66.04938271604938,
                "explored_percent_none": 5.555555555555555,
                "kept_percent_concrete": 12.612612612612613,
                "kept_percent_lambda": 87.38738738738739,
                "num_examples": 2,
                "num_explored_concrete": 46,
                "num_explored_lambda": 107,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 97,
                "num_values_explored": 162,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14975042711012065,
            "num_unique_values": 122,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 24.539877300613497,
                "explored_percent_lambda": 70.5521472392638,
                "explored_percent_none": 4.9079754601226995,
                "kept_percent_concrete": 13.675213675213675,
                "kept_percent_lambda": 86.32478632478633,
                "num_examples": 2,
                "num_explored_concrete": 40,
                "num_explored_lambda": 115,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 101,
                "num_values_explored": 163,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.834122753003612,
            "num_unique_values": 268,
            "solution": "Scanl1((lambda u1, u2: Subtract(1, Add(-1, -1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.985680190930786,
                "explored_percent_lambda": 41.288782816229116,
                "explored_percent_none": 34.7255369928401,
                "kept_percent_concrete": 22.433460076045627,
                "kept_percent_lambda": 77.56653992395437,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 346,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 204,
                "num_values_explored": 838,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10512981610372663,
            "num_unique_values": 99,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 57.30994152046784,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 14.035087719298245,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 98,
                "num_explored_lambda": 49,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 48,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.286886814981699,
            "num_unique_values": 201,
            "solution": "fn_24((lambda u1: fn_14(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 75.97911227154047,
                "explored_percent_lambda": 11.488250652741515,
                "explored_percent_none": 12.532637075718016,
                "kept_percent_concrete": 81.02564102564102,
                "kept_percent_lambda": 18.974358974358974,
                "num_examples": 4,
                "num_explored_concrete": 291,
                "num_explored_lambda": 44,
                "num_explored_none": 48,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 37,
                "num_values_explored": 383,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16952327312901616,
            "num_unique_values": 77,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.59423503325942,
                "explored_percent_lambda": 19.068736141906875,
                "explored_percent_none": 48.3370288248337,
                "kept_percent_concrete": 40.27777777777778,
                "kept_percent_lambda": 59.72222222222222,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 86,
                "num_explored_none": 218,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 43,
                "num_values_explored": 451,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24946551700122654,
            "num_unique_values": 277,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.28087167070218,
                "explored_percent_lambda": 24.455205811138015,
                "explored_percent_none": 7.263922518159807,
                "kept_percent_concrete": 66.17647058823529,
                "kept_percent_lambda": 33.8235294117647,
                "num_examples": 4,
                "num_explored_concrete": 282,
                "num_explored_lambda": 101,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 92,
                "num_values_explored": 413,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21645888686180115,
            "num_unique_values": 220,
            "solution": "IntDivide(Square(Add(-1, -1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.16587677725119,
                "explored_percent_lambda": 23.222748815165875,
                "explored_percent_none": 11.611374407582938,
                "kept_percent_concrete": 63.72093023255814,
                "kept_percent_lambda": 36.27906976744186,
                "num_examples": 2,
                "num_explored_concrete": 275,
                "num_explored_lambda": 98,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 78,
                "num_values_explored": 422,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17828178009949625,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 55.71955719557196,
                "explored_percent_lambda": 37.638376383763834,
                "explored_percent_none": 6.642066420664206,
                "kept_percent_concrete": 46.103896103896105,
                "kept_percent_lambda": 53.896103896103895,
                "num_examples": 5,
                "num_explored_concrete": 151,
                "num_explored_lambda": 102,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 83,
                "num_values_explored": 271,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3620102950371802,
            "num_unique_values": 290,
            "solution": "IntDivide(Sum(fn_9(1, x1, x1)), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.00986436498151,
                "explored_percent_lambda": 18.249075215782984,
                "explored_percent_none": 9.741060419235511,
                "kept_percent_concrete": 60.70175438596491,
                "kept_percent_lambda": 39.29824561403509,
                "num_examples": 3,
                "num_explored_concrete": 584,
                "num_explored_lambda": 148,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 112,
                "num_values_explored": 811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 811
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17958181397989392,
            "num_unique_values": 178,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 59.40959409594096,
                "explored_percent_lambda": 36.53136531365314,
                "explored_percent_none": 4.059040590405904,
                "kept_percent_concrete": 51.16279069767442,
                "kept_percent_lambda": 48.83720930232558,
                "num_examples": 2,
                "num_explored_concrete": 161,
                "num_explored_lambda": 99,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 84,
                "num_values_explored": 271,
                "num_values_kept": 172,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20620005880482495,
            "num_unique_values": 162,
            "solution": "fn_1(Sort(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.23711340206186,
                "explored_percent_lambda": 43.6426116838488,
                "explored_percent_none": 15.120274914089347,
                "kept_percent_concrete": 28.662420382165607,
                "kept_percent_lambda": 71.3375796178344,
                "num_examples": 3,
                "num_explored_concrete": 120,
                "num_explored_lambda": 127,
                "num_explored_none": 44,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 112,
                "num_values_explored": 291,
                "num_values_kept": 157,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11138420202769339,
            "num_unique_values": 128,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 21.71945701357466,
                "explored_percent_none": 10.407239819004525,
                "kept_percent_concrete": 66.39344262295081,
                "kept_percent_lambda": 33.60655737704918,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 48,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 41,
                "num_values_explored": 221,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11640412104316056,
            "num_unique_values": 93,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.70967741935484,
                "explored_percent_lambda": 58.064516129032256,
                "explored_percent_none": 3.225806451612903,
                "kept_percent_concrete": 16.091954022988507,
                "kept_percent_lambda": 83.9080459770115,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 90,
                "num_explored_none": 5,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 73,
                "num_values_explored": 155,
                "num_values_kept": 87,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1666284278035164,
            "num_unique_values": 130,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.81818181818182,
                "explored_percent_lambda": 34.90909090909091,
                "explored_percent_none": 15.272727272727273,
                "kept_percent_concrete": 36.29032258064516,
                "kept_percent_lambda": 63.70967741935484,
                "num_examples": 3,
                "num_explored_concrete": 137,
                "num_explored_lambda": 96,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 45,
                "num_kept_lambda": 79,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.956275475909933,
            "num_unique_values": 713,
            "solution": "fn_24((lambda u1: ZipWith((lambda u1, u2: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2, fn_21(x2))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 69.22209695603156,
                "explored_percent_lambda": 16.910935738444195,
                "explored_percent_none": 13.86696730552424,
                "kept_percent_concrete": 75.24752475247524,
                "kept_percent_lambda": 24.752475247524753,
                "num_examples": 4,
                "num_explored_concrete": 1842,
                "num_explored_lambda": 450,
                "num_explored_none": 369,
                "num_inputs": 2,
                "num_kept_concrete": 532,
                "num_kept_lambda": 175,
                "num_values_explored": 2661,
                "num_values_kept": 707,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 12551
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 99.34488766710274,
            "num_unique_values": 1159,
            "solution": "If(IsOdd(Head(x1)), Maximum(Take(Last(fn_10(x1)), x1)), Last(x1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 73.61189535102578,
                "explored_percent_lambda": 14.812723508375683,
                "explored_percent_none": 11.575381140598532,
                "kept_percent_concrete": 74.87001733102252,
                "kept_percent_lambda": 25.12998266897747,
                "num_examples": 5,
                "num_explored_concrete": 3911,
                "num_explored_lambda": 787,
                "num_explored_none": 615,
                "num_inputs": 1,
                "num_kept_concrete": 864,
                "num_kept_lambda": 290,
                "num_values_explored": 5313,
                "num_values_kept": 1154,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68839
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.404109796974808,
            "num_unique_values": 394,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 78.66868381240545,
                "explored_percent_lambda": 18.15431164901664,
                "explored_percent_none": 3.177004538577912,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 120,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 97,
                "num_values_explored": 661,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17499033082276583,
            "num_unique_values": 172,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.76470588235294,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 51.204819277108435,
                "kept_percent_lambda": 48.795180722891565,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 88,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 81,
                "num_values_explored": 272,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10150292399339378,
            "num_unique_values": 92,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.72839506172839,
                "explored_percent_lambda": 30.246913580246915,
                "explored_percent_none": 8.024691358024691,
                "kept_percent_concrete": 50.588235294117645,
                "kept_percent_lambda": 49.411764705882355,
                "num_examples": 2,
                "num_explored_concrete": 100,
                "num_explored_lambda": 49,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 43,
                "num_kept_lambda": 42,
                "num_values_explored": 162,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5013181630056351,
            "num_unique_values": 433,
            "solution": "IntDivide(Last(fn_9(Last(x2), x1, x1)), -1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51290591174022,
                "explored_percent_lambda": 8.742714404662781,
                "explored_percent_none": 6.7443796835970025,
                "kept_percent_concrete": 82.43559718969556,
                "kept_percent_lambda": 17.56440281030445,
                "num_examples": 5,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 105,
                "num_explored_none": 81,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 75,
                "num_values_explored": 1201,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1201
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51657403400168,
            "num_unique_values": 384,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.679190751445088,
                "explored_percent_lambda": 15.54913294797688,
                "explored_percent_none": 63.77167630057804,
                "kept_percent_concrete": 58.57519788918206,
                "kept_percent_lambda": 41.42480211081794,
                "num_examples": 5,
                "num_explored_concrete": 1431,
                "num_explored_lambda": 1076,
                "num_explored_none": 4413,
                "num_inputs": 1,
                "num_kept_concrete": 222,
                "num_kept_lambda": 157,
                "num_values_explored": 6920,
                "num_values_kept": 379,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71989
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18853336316533387,
            "num_unique_values": 164,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.6,
                "explored_percent_lambda": 47.6,
                "explored_percent_none": 6.8,
                "kept_percent_concrete": 35.22012578616352,
                "kept_percent_lambda": 64.77987421383648,
                "num_examples": 3,
                "num_explored_concrete": 114,
                "num_explored_lambda": 119,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 103,
                "num_values_explored": 250,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20518468413501978,
            "num_unique_values": 250,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.33830845771145,
                "explored_percent_lambda": 7.711442786069652,
                "explored_percent_none": 9.950248756218905,
                "kept_percent_concrete": 89.34426229508196,
                "kept_percent_lambda": 10.655737704918034,
                "num_examples": 5,
                "num_explored_concrete": 331,
                "num_explored_lambda": 31,
                "num_explored_none": 40,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 26,
                "num_values_explored": 402,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 402
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34115352388471365,
            "num_unique_values": 336,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.43267776096823,
                "explored_percent_lambda": 21.02874432677761,
                "explored_percent_none": 4.53857791225416,
                "kept_percent_concrete": 68.78787878787878,
                "kept_percent_lambda": 31.21212121212121,
                "num_examples": 3,
                "num_explored_concrete": 492,
                "num_explored_lambda": 139,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 103,
                "num_values_explored": 661,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.6716129870619625,
            "num_unique_values": 157,
            "solution": "Multiply(Subtract(Square(Add(x1, x1)), Square(Subtract(-1, Add(1, x1)))), Max(x1, 1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 12.88468041934393,
                "explored_percent_lambda": 17.55157253973622,
                "explored_percent_none": 69.56374704091985,
                "kept_percent_concrete": 53.28947368421053,
                "kept_percent_lambda": 46.71052631578947,
                "num_examples": 2,
                "num_explored_concrete": 381,
                "num_explored_lambda": 519,
                "num_explored_none": 2057,
                "num_inputs": 1,
                "num_kept_concrete": 81,
                "num_kept_lambda": 71,
                "num_values_explored": 2957,
                "num_values_kept": 152,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4517
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3422204898670316,
            "num_unique_values": 280,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.42042042042043,
                "explored_percent_lambda": 19.36936936936937,
                "explored_percent_none": 10.21021021021021,
                "kept_percent_concrete": 66.05839416058394,
                "kept_percent_lambda": 33.941605839416056,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 129,
                "num_explored_none": 68,
                "num_inputs": 2,
                "num_kept_concrete": 181,
                "num_kept_lambda": 93,
                "num_values_explored": 666,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 666
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2287134330254048,
            "num_unique_values": 302,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.04194260485652,
                "explored_percent_lambda": 16.11479028697572,
                "explored_percent_none": 6.843267108167771,
                "kept_percent_concrete": 77.36486486486487,
                "kept_percent_lambda": 22.635135135135137,
                "num_examples": 3,
                "num_explored_concrete": 349,
                "num_explored_lambda": 73,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 67,
                "num_values_explored": 453,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13980444218032,
            "num_unique_values": 1362,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.73574933937335,
                "explored_percent_lambda": 32.59720649301623,
                "explored_percent_none": 17.66704416761042,
                "kept_percent_concrete": 50.405305821665436,
                "kept_percent_lambda": 49.594694178334564,
                "num_examples": 2,
                "num_explored_concrete": 2635,
                "num_explored_lambda": 1727,
                "num_explored_none": 936,
                "num_inputs": 1,
                "num_kept_concrete": 684,
                "num_kept_lambda": 673,
                "num_values_explored": 5298,
                "num_values_kept": 1357,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60399
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21717430208809674,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.06642066420664,
                "explored_percent_lambda": 49.81549815498155,
                "explored_percent_none": 8.118081180811808,
                "kept_percent_concrete": 26.573426573426573,
                "kept_percent_lambda": 73.42657342657343,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 135,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 105,
                "num_values_explored": 271,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.38785869092680514,
            "num_unique_values": 337,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.5839636913767,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 4.236006051437216,
                "kept_percent_concrete": 68.58006042296073,
                "kept_percent_lambda": 31.419939577039276,
                "num_examples": 5,
                "num_explored_concrete": 493,
                "num_explored_lambda": 140,
                "num_explored_none": 28,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 104,
                "num_values_explored": 661,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 86.5633923150599,
            "num_unique_values": 727,
            "solution": "Min(Add(x1, Sum(fn_9(Sum(x2), x2, x2))), Subtract(x3, Sum(x2)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 60.81349206349206,
                "explored_percent_lambda": 11.631944444444445,
                "explored_percent_none": 27.55456349206349,
                "kept_percent_concrete": 72.08333333333333,
                "kept_percent_lambda": 27.916666666666668,
                "num_examples": 2,
                "num_explored_concrete": 2452,
                "num_explored_lambda": 469,
                "num_explored_none": 1111,
                "num_inputs": 3,
                "num_kept_concrete": 519,
                "num_kept_lambda": 201,
                "num_values_explored": 4032,
                "num_values_kept": 720,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 61959
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 75.104942841921,
            "num_unique_values": 646,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 35.06637168141593,
                "explored_percent_lambda": 39.8783185840708,
                "explored_percent_none": 25.055309734513273,
                "kept_percent_concrete": 43.05772230889236,
                "kept_percent_lambda": 56.94227769110764,
                "num_examples": 2,
                "num_explored_concrete": 634,
                "num_explored_lambda": 721,
                "num_explored_none": 453,
                "num_inputs": 1,
                "num_kept_concrete": 276,
                "num_kept_lambda": 365,
                "num_values_explored": 1808,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 37023
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13660399406217,
            "num_unique_values": 1106,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.2201646090535,
                "explored_percent_lambda": 23.679698216735254,
                "explored_percent_none": 13.100137174211248,
                "kept_percent_concrete": 53.76930063578565,
                "kept_percent_lambda": 46.23069936421435,
                "num_examples": 2,
                "num_explored_concrete": 3687,
                "num_explored_lambda": 1381,
                "num_explored_none": 764,
                "num_inputs": 1,
                "num_kept_concrete": 592,
                "num_kept_lambda": 509,
                "num_values_explored": 5832,
                "num_values_kept": 1101,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62512
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.61592760798521,
            "num_unique_values": 311,
            "solution": "Min(Subtract(Subtract(x1, x2), If(IsEven(x1), Add(x2, x2), x1)), If(IsEven(x1), 1, Subtract(x1, x2)))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 19.24926322320459,
                "explored_percent_lambda": 14.59593609430743,
                "explored_percent_none": 66.15480068248797,
                "kept_percent_concrete": 55.73770491803279,
                "kept_percent_lambda": 44.26229508196721,
                "num_examples": 2,
                "num_explored_concrete": 1241,
                "num_explored_lambda": 941,
                "num_explored_none": 4265,
                "num_inputs": 2,
                "num_kept_concrete": 170,
                "num_kept_lambda": 135,
                "num_values_explored": 6447,
                "num_values_kept": 305,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 29611
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.66708096698858,
            "num_unique_values": 724,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.792237883761345,
                "explored_percent_lambda": 23.575979918903265,
                "explored_percent_none": 32.63178219733539,
                "kept_percent_concrete": 42.33983286908078,
                "kept_percent_lambda": 57.66016713091922,
                "num_examples": 4,
                "num_explored_concrete": 2268,
                "num_explored_lambda": 1221,
                "num_explored_none": 1690,
                "num_inputs": 2,
                "num_kept_concrete": 304,
                "num_kept_lambda": 414,
                "num_values_explored": 5179,
                "num_values_kept": 718,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53731
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25908456509932876,
            "num_unique_values": 201,
            "solution": "fn_9(1, x1, x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 58.333333333333336,
                "explored_percent_lambda": 35.57692307692308,
                "explored_percent_none": 6.089743589743589,
                "kept_percent_concrete": 51.794871794871796,
                "kept_percent_lambda": 48.205128205128204,
                "num_examples": 3,
                "num_explored_concrete": 182,
                "num_explored_lambda": 111,
                "num_explored_none": 19,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 94,
                "num_values_explored": 312,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 74.29501129197888,
            "num_unique_values": 378,
            "solution": "Multiply(Add(1, 1), Add(Head(x1), Square(Square(Add(-1, -1)))))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 41.86471663619744,
                "explored_percent_lambda": 30.956733698964047,
                "explored_percent_none": 27.178549664838513,
                "kept_percent_concrete": 58.44504021447721,
                "kept_percent_lambda": 41.55495978552279,
                "num_examples": 4,
                "num_explored_concrete": 687,
                "num_explored_lambda": 508,
                "num_explored_none": 446,
                "num_inputs": 1,
                "num_kept_concrete": 218,
                "num_kept_lambda": 155,
                "num_values_explored": 1641,
                "num_values_kept": 373,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 44239
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52699379110709,
            "num_unique_values": 261,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.093049971280873,
                "explored_percent_lambda": 25.253685621290447,
                "explored_percent_none": 56.65326440742868,
                "kept_percent_concrete": 35.9375,
                "kept_percent_lambda": 64.0625,
                "num_examples": 5,
                "num_explored_concrete": 945,
                "num_explored_lambda": 1319,
                "num_explored_none": 2959,
                "num_inputs": 1,
                "num_kept_concrete": 92,
                "num_kept_lambda": 164,
                "num_values_explored": 5223,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53269
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5423937570303679,
            "num_unique_values": 259,
            "solution": "Take(Count((lambda u1: IsOdd(-1)), x3), fn_9(Multiply(x1, -1), x2, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.41589648798521,
                "explored_percent_lambda": 20.147874306839185,
                "explored_percent_none": 4.436229205175601,
                "kept_percent_concrete": 67.06349206349206,
                "kept_percent_lambda": 32.93650793650794,
                "num_examples": 2,
                "num_explored_concrete": 408,
                "num_explored_lambda": 109,
                "num_explored_none": 24,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 83,
                "num_values_explored": 541,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 85.72932163090445,
            "num_unique_values": 193,
            "solution": "Min(IntDivide(x1, Square(Subtract(-1, 1))), IntDivide(Subtract(x1, x2), Subtract(-1, x2)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 15.949119373776908,
                "explored_percent_lambda": 15.622961513372472,
                "explored_percent_none": 68.42791911285062,
                "kept_percent_concrete": 62.5668449197861,
                "kept_percent_lambda": 37.4331550802139,
                "num_examples": 2,
                "num_explored_concrete": 489,
                "num_explored_lambda": 479,
                "num_explored_none": 2098,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 70,
                "num_values_explored": 3066,
                "num_values_kept": 187,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 53433
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2412729209754616,
            "num_unique_values": 185,
            "solution": "fn_9(Multiply(x1, -1), x3, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.17948717948718,
                "explored_percent_lambda": 29.807692307692307,
                "explored_percent_none": 8.012820512820513,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 93,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 312,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.380344757810235,
            "num_unique_values": 358,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 79.42122186495178,
                "explored_percent_lambda": 16.881028938906752,
                "explored_percent_none": 3.697749196141479,
                "kept_percent_concrete": 73.78917378917379,
                "kept_percent_lambda": 26.210826210826212,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 105,
                "num_explored_none": 23,
                "num_inputs": 3,
                "num_kept_concrete": 259,
                "num_kept_lambda": 92,
                "num_values_explored": 622,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58359493990429,
            "num_unique_values": 315,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.925394548063128,
                "explored_percent_lambda": 8.837876614060258,
                "explored_percent_none": 65.23672883787661,
                "kept_percent_concrete": 74.11003236245955,
                "kept_percent_lambda": 25.889967637540455,
                "num_examples": 4,
                "num_explored_concrete": 1807,
                "num_explored_lambda": 616,
                "num_explored_none": 4547,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 80,
                "num_values_explored": 6970,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66681
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.24567064107396,
            "num_unique_values": 1265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.14412238325282,
                "explored_percent_lambda": 22.665056360708533,
                "explored_percent_none": 14.190821256038648,
                "kept_percent_concrete": 62.46031746031746,
                "kept_percent_lambda": 37.53968253968254,
                "num_examples": 5,
                "num_explored_concrete": 3137,
                "num_explored_lambda": 1126,
                "num_explored_none": 705,
                "num_inputs": 1,
                "num_kept_concrete": 787,
                "num_kept_lambda": 473,
                "num_values_explored": 4968,
                "num_values_kept": 1260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48892
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2672864820342511,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 33.57142857142857,
                "explored_percent_none": 9.285714285714286,
                "kept_percent_concrete": 48.23529411764706,
                "kept_percent_lambda": 51.76470588235294,
                "num_examples": 5,
                "num_explored_concrete": 160,
                "num_explored_lambda": 94,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.37135090189986,
            "num_unique_values": 939,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.477292202227936,
                "explored_percent_lambda": 26.328191945158526,
                "explored_percent_none": 19.194515852613538,
                "kept_percent_concrete": 54.389721627408996,
                "kept_percent_lambda": 45.610278372591004,
                "num_examples": 3,
                "num_explored_concrete": 2543,
                "num_explored_lambda": 1229,
                "num_explored_none": 896,
                "num_inputs": 1,
                "num_kept_concrete": 508,
                "num_kept_lambda": 426,
                "num_values_explored": 4668,
                "num_values_kept": 934,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49495
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6078158868476748,
            "num_unique_values": 322,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.3609022556391,
                "explored_percent_lambda": 30.526315789473685,
                "explored_percent_none": 5.112781954887218,
                "kept_percent_concrete": 55.379746835443036,
                "kept_percent_lambda": 44.620253164556964,
                "num_examples": 4,
                "num_explored_concrete": 428,
                "num_explored_lambda": 203,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 141,
                "num_values_explored": 665,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.92055323300883,
            "num_unique_values": 1746,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.91044776119404,
                "explored_percent_lambda": 17.29353233830846,
                "explored_percent_none": 12.796019900497512,
                "kept_percent_concrete": 74.52558941920644,
                "kept_percent_lambda": 25.47441058079356,
                "num_examples": 5,
                "num_explored_concrete": 3513,
                "num_explored_lambda": 869,
                "num_explored_none": 643,
                "num_inputs": 3,
                "num_kept_concrete": 1296,
                "num_kept_lambda": 443,
                "num_values_explored": 5025,
                "num_values_kept": 1739,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50415
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4881882509216666,
            "num_unique_values": 302,
            "solution": "Take(fn_11(x2, x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.77079482439926,
                "explored_percent_lambda": 31.97781885397412,
                "explored_percent_none": 4.251386321626617,
                "kept_percent_concrete": 54.729729729729726,
                "kept_percent_lambda": 45.270270270270274,
                "num_examples": 5,
                "num_explored_concrete": 345,
                "num_explored_lambda": 173,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 162,
                "num_kept_lambda": 134,
                "num_values_explored": 541,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90856381808408,
            "num_unique_values": 647,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.16529429704178,
                "explored_percent_lambda": 8.752668496492833,
                "explored_percent_none": 39.08203720646539,
                "kept_percent_concrete": 72.38689547581903,
                "kept_percent_lambda": 27.61310452418097,
                "num_examples": 5,
                "num_explored_concrete": 3421,
                "num_explored_lambda": 574,
                "num_explored_none": 2563,
                "num_inputs": 2,
                "num_kept_concrete": 464,
                "num_kept_lambda": 177,
                "num_values_explored": 6558,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67960
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.248672435060143,
            "num_unique_values": 569,
            "solution": "Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), Sort(Scanl1((lambda u1, u2: x1), fn_0(Map((lambda u1: ((lambda v1: IntDivide(((lambda v1: Add(v1, x1)))(v1), x1)))(u1)), x2)))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 53.910323253388945,
                "explored_percent_lambda": 22.002085505735142,
                "explored_percent_none": 24.087591240875913,
                "kept_percent_concrete": 46.35879218472469,
                "kept_percent_lambda": 53.64120781527531,
                "num_examples": 2,
                "num_explored_concrete": 1551,
                "num_explored_lambda": 633,
                "num_explored_none": 693,
                "num_inputs": 2,
                "num_kept_concrete": 261,
                "num_kept_lambda": 302,
                "num_values_explored": 2877,
                "num_values_kept": 563,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10179
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7131579509005,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.074396782841823,
                "explored_percent_lambda": 16.57171581769437,
                "explored_percent_none": 66.3538873994638,
                "kept_percent_concrete": 40.89068825910931,
                "kept_percent_lambda": 59.10931174089069,
                "num_examples": 4,
                "num_explored_concrete": 1019,
                "num_explored_lambda": 989,
                "num_explored_none": 3960,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 146,
                "num_values_explored": 5968,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60120
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.48151445598342,
            "num_unique_values": 1065,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.05936073059361,
                "explored_percent_lambda": 29.5662100456621,
                "explored_percent_none": 17.374429223744293,
                "kept_percent_concrete": 57.79036827195468,
                "kept_percent_lambda": 42.20963172804532,
                "num_examples": 4,
                "num_explored_concrete": 2324,
                "num_explored_lambda": 1295,
                "num_explored_none": 761,
                "num_inputs": 2,
                "num_kept_concrete": 612,
                "num_kept_lambda": 447,
                "num_values_explored": 4380,
                "num_values_kept": 1059,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49877
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.30972147895955,
            "num_unique_values": 1178,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.2969129379119,
                "explored_percent_lambda": 18.296912937911898,
                "explored_percent_none": 13.406174124176205,
                "kept_percent_concrete": 64.45012787723785,
                "kept_percent_lambda": 35.549872122762146,
                "num_examples": 3,
                "num_explored_concrete": 3938,
                "num_explored_lambda": 1055,
                "num_explored_none": 773,
                "num_inputs": 1,
                "num_kept_concrete": 756,
                "num_kept_lambda": 417,
                "num_values_explored": 5766,
                "num_values_kept": 1173,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59148
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3861849519889802,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.0196671709531,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 11.800302571860817,
                "kept_percent_concrete": 59.36073059360731,
                "kept_percent_lambda": 40.63926940639269,
                "num_examples": 2,
                "num_explored_concrete": 443,
                "num_explored_lambda": 140,
                "num_explored_none": 78,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 89,
                "num_values_explored": 661,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75271690497175,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.303850552802135,
                "explored_percent_lambda": 23.808616088448343,
                "explored_percent_none": 64.88753335874952,
                "kept_percent_concrete": 32.69230769230769,
                "kept_percent_lambda": 67.3076923076923,
                "num_examples": 4,
                "num_explored_concrete": 593,
                "num_explored_lambda": 1249,
                "num_explored_none": 3404,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 175,
                "num_values_explored": 5246,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52775
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.40207611699589,
            "num_unique_values": 1340,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.5365512416929,
                "explored_percent_lambda": 15.127667016439315,
                "explored_percent_none": 10.335781741867786,
                "kept_percent_concrete": 71.43928035982009,
                "kept_percent_lambda": 28.56071964017991,
                "num_examples": 2,
                "num_explored_concrete": 4262,
                "num_explored_lambda": 865,
                "num_explored_none": 591,
                "num_inputs": 2,
                "num_kept_concrete": 953,
                "num_kept_lambda": 381,
                "num_values_explored": 5718,
                "num_values_kept": 1334,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60209
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.49212867300957,
            "num_unique_values": 1209,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.11125777861588,
                "explored_percent_lambda": 11.10692061097492,
                "explored_percent_none": 18.781821610409203,
                "kept_percent_concrete": 79.05236907730674,
                "kept_percent_lambda": 20.947630922693268,
                "num_examples": 5,
                "num_explored_concrete": 3718,
                "num_explored_lambda": 589,
                "num_explored_none": 996,
                "num_inputs": 2,
                "num_kept_concrete": 951,
                "num_kept_lambda": 252,
                "num_values_explored": 5303,
                "num_values_kept": 1203,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61060
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31292819790542,
            "num_unique_values": 1203,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.17718869898849,
                "explored_percent_lambda": 16.358562957795606,
                "explored_percent_none": 7.464248343215905,
                "kept_percent_concrete": 66.69449081803005,
                "kept_percent_lambda": 33.30550918196995,
                "num_examples": 3,
                "num_explored_concrete": 4368,
                "num_explored_lambda": 938,
                "num_explored_none": 428,
                "num_inputs": 1,
                "num_kept_concrete": 799,
                "num_kept_lambda": 399,
                "num_values_explored": 5734,
                "num_values_kept": 1198,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54568
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.40473493305035,
            "num_unique_values": 1696,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.96009975062344,
                "explored_percent_lambda": 13.250207813798836,
                "explored_percent_none": 10.789692435577722,
                "kept_percent_concrete": 78.87573964497041,
                "kept_percent_lambda": 21.124260355029588,
                "num_examples": 5,
                "num_explored_concrete": 4569,
                "num_explored_lambda": 797,
                "num_explored_none": 649,
                "num_inputs": 2,
                "num_kept_concrete": 1333,
                "num_kept_lambda": 357,
                "num_values_explored": 6015,
                "num_values_kept": 1690,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58070
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.53943221201189,
            "num_unique_values": 1561,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.98223615464995,
                "explored_percent_lambda": 25.768025078369906,
                "explored_percent_none": 13.249738766980146,
                "kept_percent_concrete": 61.88946015424165,
                "kept_percent_lambda": 38.11053984575835,
                "num_examples": 2,
                "num_explored_concrete": 2918,
                "num_explored_lambda": 1233,
                "num_explored_none": 634,
                "num_inputs": 1,
                "num_kept_concrete": 963,
                "num_kept_lambda": 593,
                "num_values_explored": 4785,
                "num_values_kept": 1556,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49030
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.15954626095481,
            "num_unique_values": 1331,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.11102448152191,
                "explored_percent_lambda": 9.621082176828317,
                "explored_percent_none": 14.267893341649774,
                "kept_percent_concrete": 80.58912386706949,
                "kept_percent_lambda": 19.410876132930515,
                "num_examples": 4,
                "num_explored_concrete": 4881,
                "num_explored_lambda": 617,
                "num_explored_none": 915,
                "num_inputs": 3,
                "num_kept_concrete": 1067,
                "num_kept_lambda": 257,
                "num_values_explored": 6413,
                "num_values_kept": 1324,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65324
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7003428840544075,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: Add(Sum(fn_9(IntDivide(Head(x1), Square(Add(-1, -1))), x1, x1)), -1)), x1)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67334446299388,
                "explored_percent_lambda": 16.30495269894268,
                "explored_percent_none": 13.021702838063439,
                "kept_percent_concrete": 37.58389261744966,
                "kept_percent_lambda": 62.41610738255034,
                "num_examples": 2,
                "num_explored_concrete": 1270,
                "num_explored_lambda": 293,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 93,
                "num_values_explored": 1797,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1797
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04711841722019,
            "num_unique_values": 1374,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.30003161555486,
                "explored_percent_lambda": 7.5403098324375595,
                "explored_percent_none": 15.159658552007588,
                "kept_percent_concrete": 85.29626920263351,
                "kept_percent_lambda": 14.703730797366497,
                "num_examples": 4,
                "num_explored_concrete": 4890,
                "num_explored_lambda": 477,
                "num_explored_none": 959,
                "num_inputs": 3,
                "num_kept_concrete": 1166,
                "num_kept_lambda": 201,
                "num_values_explored": 6326,
                "num_values_kept": 1367,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65993
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.62325704307295,
            "num_unique_values": 1086,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.09180243082493,
                "explored_percent_lambda": 40.21205068528575,
                "explored_percent_none": 24.69614688388932,
                "kept_percent_concrete": 45.14338575393155,
                "kept_percent_lambda": 54.85661424606845,
                "num_examples": 3,
                "num_explored_concrete": 1357,
                "num_explored_lambda": 1555,
                "num_explored_none": 955,
                "num_inputs": 1,
                "num_kept_concrete": 488,
                "num_kept_lambda": 593,
                "num_values_explored": 3867,
                "num_values_kept": 1081,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 39698
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76349083590321,
            "num_unique_values": 261,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.956127080181544,
                "explored_percent_lambda": 24.111195158850226,
                "explored_percent_none": 61.93267776096823,
                "kept_percent_concrete": 36.71875,
                "kept_percent_lambda": 63.28125,
                "num_examples": 4,
                "num_explored_concrete": 738,
                "num_explored_lambda": 1275,
                "num_explored_none": 3275,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 162,
                "num_values_explored": 5288,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54117
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2701572231017,
            "num_unique_values": 1220,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.852795165119794,
                "explored_percent_lambda": 28.44808979063242,
                "explored_percent_none": 17.699115044247787,
                "kept_percent_concrete": 55.63786008230453,
                "kept_percent_lambda": 44.36213991769547,
                "num_examples": 2,
                "num_explored_concrete": 2495,
                "num_explored_lambda": 1318,
                "num_explored_none": 820,
                "num_inputs": 1,
                "num_kept_concrete": 676,
                "num_kept_lambda": 539,
                "num_values_explored": 4633,
                "num_values_kept": 1215,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49469
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.72314625279978,
            "num_unique_values": 1460,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.22841965471447,
                "explored_percent_lambda": 13.230411686586985,
                "explored_percent_none": 10.54116865869854,
                "kept_percent_concrete": 76.46249139710943,
                "kept_percent_lambda": 23.537508602890572,
                "num_examples": 5,
                "num_explored_concrete": 4592,
                "num_explored_lambda": 797,
                "num_explored_none": 635,
                "num_inputs": 3,
                "num_kept_concrete": 1111,
                "num_kept_lambda": 342,
                "num_values_explored": 6024,
                "num_values_kept": 1453,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61050
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.14327958016656,
            "num_unique_values": 950,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Drop(Subtract(-1, Sum(x2)), Map((lambda u1: Sum(fn_22(fn_14(x1)))), x1))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 72.15344022731885,
                "explored_percent_lambda": 19.626547594885327,
                "explored_percent_none": 8.22001217779582,
                "kept_percent_concrete": 52.22457627118644,
                "kept_percent_lambda": 47.77542372881356,
                "num_examples": 2,
                "num_explored_concrete": 3555,
                "num_explored_lambda": 967,
                "num_explored_none": 405,
                "num_inputs": 2,
                "num_kept_concrete": 493,
                "num_kept_lambda": 451,
                "num_values_explored": 4927,
                "num_values_kept": 944,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 22655
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21929359086789,
            "num_unique_values": 561,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.22722914669223,
                "explored_percent_lambda": 27.88111217641419,
                "explored_percent_none": 30.891658676893577,
                "kept_percent_concrete": 46.94244604316547,
                "kept_percent_lambda": 53.05755395683453,
                "num_examples": 3,
                "num_explored_concrete": 2150,
                "num_explored_lambda": 1454,
                "num_explored_none": 1611,
                "num_inputs": 1,
                "num_kept_concrete": 261,
                "num_kept_lambda": 295,
                "num_values_explored": 5215,
                "num_values_kept": 556,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53883
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 70.64688284788281,
            "num_unique_values": 1868,
            "solution": "Min(Sum(fn_1(fn_1(Map((lambda u1: x2), x3)))), Sum(Scanl1((lambda u1, u2: Add(x2, -1)), x1)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 79.9121473221828,
                "explored_percent_lambda": 7.281635411387058,
                "explored_percent_none": 12.80621726643014,
                "kept_percent_concrete": 89.52176249328318,
                "kept_percent_lambda": 10.47823750671682,
                "num_examples": 5,
                "num_explored_concrete": 4730,
                "num_explored_lambda": 431,
                "num_explored_none": 758,
                "num_inputs": 3,
                "num_kept_concrete": 1666,
                "num_kept_lambda": 195,
                "num_values_explored": 5919,
                "num_values_kept": 1861,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 45872
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.299559605075046,
            "num_unique_values": 968,
            "solution": "Scanl1((lambda u1, u2: Subtract(-1, fn_3(ZipWith((lambda u1, u2: ((lambda v1: IntDivide(Subtract(-1, x1), v1)))(u1)), x3, x2), x1))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 67.07418151678408,
                "explored_percent_lambda": 14.566929133858268,
                "explored_percent_none": 18.358889349357646,
                "kept_percent_concrete": 68.47034339229968,
                "kept_percent_lambda": 31.52965660770031,
                "num_examples": 4,
                "num_explored_concrete": 3237,
                "num_explored_lambda": 703,
                "num_explored_none": 886,
                "num_inputs": 3,
                "num_kept_concrete": 658,
                "num_kept_lambda": 303,
                "num_values_explored": 4826,
                "num_values_kept": 961,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 18524
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.35743656102568,
            "num_unique_values": 1367,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.313164349959116,
                "explored_percent_lambda": 32.42027800490597,
                "explored_percent_none": 13.266557645134915,
                "kept_percent_concrete": 58.44346549192364,
                "kept_percent_lambda": 41.55653450807636,
                "num_examples": 2,
                "num_explored_concrete": 2657,
                "num_explored_lambda": 1586,
                "num_explored_none": 649,
                "num_inputs": 1,
                "num_kept_concrete": 796,
                "num_kept_lambda": 566,
                "num_values_explored": 4892,
                "num_values_kept": 1362,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52585
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.40856311284006,
            "num_unique_values": 1441,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.18225983388184,
                "explored_percent_lambda": 10.233505720106566,
                "explored_percent_none": 12.584234446011598,
                "kept_percent_concrete": 83.62369337979094,
                "kept_percent_lambda": 16.37630662020906,
                "num_examples": 3,
                "num_explored_concrete": 4925,
                "num_explored_lambda": 653,
                "num_explored_none": 803,
                "num_inputs": 2,
                "num_kept_concrete": 1200,
                "num_kept_lambda": 235,
                "num_values_explored": 6381,
                "num_values_kept": 1435,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64916
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58680171193555,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.982693258612164,
                "explored_percent_lambda": 15.691445524971156,
                "explored_percent_none": 69.32586121641668,
                "kept_percent_concrete": 57.30769230769231,
                "kept_percent_lambda": 42.69230769230769,
                "num_examples": 4,
                "num_explored_concrete": 909,
                "num_explored_lambda": 952,
                "num_explored_none": 4206,
                "num_inputs": 2,
                "num_kept_concrete": 149,
                "num_kept_lambda": 111,
                "num_values_explored": 6067,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61777
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29309055488557,
            "num_unique_values": 1345,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.16233649883533,
                "explored_percent_lambda": 13.366780146927074,
                "explored_percent_none": 12.470883354237591,
                "kept_percent_concrete": 78.35820895522389,
                "kept_percent_lambda": 21.64179104477612,
                "num_examples": 5,
                "num_explored_concrete": 4139,
                "num_explored_lambda": 746,
                "num_explored_none": 696,
                "num_inputs": 1,
                "num_kept_concrete": 1050,
                "num_kept_lambda": 290,
                "num_values_explored": 5581,
                "num_values_kept": 1340,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60821
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.902997415047139,
            "num_unique_values": 747,
            "solution": "IntDivide(Multiply(fn_11(x1, Map((lambda u1: Sum(fn_21(Map((lambda u1: ((lambda v1: Subtract(Square(x2), v1)))(u1)), x1)))), x1)), Add(-1, Square(x2))), -1)",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 65.6895589056393,
                "explored_percent_lambda": 12.534896705750977,
                "explored_percent_none": 21.775544388609717,
                "kept_percent_concrete": 79.35222672064778,
                "kept_percent_lambda": 20.647773279352226,
                "num_examples": 4,
                "num_explored_concrete": 2353,
                "num_explored_lambda": 449,
                "num_explored_none": 780,
                "num_inputs": 2,
                "num_kept_concrete": 588,
                "num_kept_lambda": 153,
                "num_values_explored": 3582,
                "num_values_kept": 741,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57747793709859,
            "num_unique_values": 264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.26950354609929,
                "explored_percent_lambda": 16.79078014184397,
                "explored_percent_none": 65.93971631205673,
                "kept_percent_concrete": 52.50965250965251,
                "kept_percent_lambda": 47.49034749034749,
                "num_examples": 3,
                "num_explored_concrete": 974,
                "num_explored_lambda": 947,
                "num_explored_none": 3719,
                "num_inputs": 1,
                "num_kept_concrete": 136,
                "num_kept_lambda": 123,
                "num_values_explored": 5640,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58232
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2876679149922,
            "num_unique_values": 1303,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.3050139275766,
                "explored_percent_lambda": 20.438718662952645,
                "explored_percent_none": 12.256267409470752,
                "kept_percent_concrete": 65.45875096376253,
                "kept_percent_lambda": 34.541249036237474,
                "num_examples": 3,
                "num_explored_concrete": 3866,
                "num_explored_lambda": 1174,
                "num_explored_none": 704,
                "num_inputs": 2,
                "num_kept_concrete": 849,
                "num_kept_lambda": 448,
                "num_values_explored": 5744,
                "num_values_kept": 1297,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56963
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.59144450188614,
            "num_unique_values": 758,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.804597701149426,
                "explored_percent_lambda": 32.61494252873563,
                "explored_percent_none": 26.580459770114942,
                "kept_percent_concrete": 49.00398406374502,
                "kept_percent_lambda": 50.99601593625498,
                "num_examples": 5,
                "num_explored_concrete": 1704,
                "num_explored_lambda": 1362,
                "num_explored_none": 1110,
                "num_inputs": 1,
                "num_kept_concrete": 369,
                "num_kept_lambda": 384,
                "num_values_explored": 4176,
                "num_values_kept": 753,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51955
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.74241863493808,
            "num_unique_values": 1162,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.51428571428572,
                "explored_percent_lambda": 16.304761904761904,
                "explored_percent_none": 17.18095238095238,
                "kept_percent_concrete": 68.79861711322386,
                "kept_percent_lambda": 31.201382886776145,
                "num_examples": 5,
                "num_explored_concrete": 3492,
                "num_explored_lambda": 856,
                "num_explored_none": 902,
                "num_inputs": 1,
                "num_kept_concrete": 796,
                "num_kept_lambda": 361,
                "num_values_explored": 5250,
                "num_values_kept": 1157,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56876
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88413710799068,
            "num_unique_values": 836,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.26470588235294,
                "explored_percent_lambda": 15.506535947712418,
                "explored_percent_none": 25.22875816993464,
                "kept_percent_concrete": 62.81588447653429,
                "kept_percent_lambda": 37.18411552346571,
                "num_examples": 2,
                "num_explored_concrete": 3627,
                "num_explored_lambda": 949,
                "num_explored_none": 1544,
                "num_inputs": 1,
                "num_kept_concrete": 522,
                "num_kept_lambda": 309,
                "num_values_explored": 6120,
                "num_values_kept": 831,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58359
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 102.1090084221214,
            "num_unique_values": 947,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.41139383021842,
                "explored_percent_lambda": 23.823463183967576,
                "explored_percent_none": 22.765142985814006,
                "kept_percent_concrete": 57.85562632696391,
                "kept_percent_lambda": 42.14437367303609,
                "num_examples": 4,
                "num_explored_concrete": 2372,
                "num_explored_lambda": 1058,
                "num_explored_none": 1011,
                "num_inputs": 1,
                "num_kept_concrete": 545,
                "num_kept_lambda": 397,
                "num_values_explored": 4441,
                "num_values_kept": 942,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48624
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99256970104761,
            "num_unique_values": 491,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.574259294206456,
                "explored_percent_lambda": 25.665219852802416,
                "explored_percent_none": 30.76052085299113,
                "kept_percent_concrete": 38.68312757201646,
                "kept_percent_lambda": 61.31687242798354,
                "num_examples": 2,
                "num_explored_concrete": 2309,
                "num_explored_lambda": 1360,
                "num_explored_none": 1630,
                "num_inputs": 1,
                "num_kept_concrete": 188,
                "num_kept_lambda": 298,
                "num_values_explored": 5299,
                "num_values_kept": 486,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50394
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.33742650295608,
            "num_unique_values": 701,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.23898781630741,
                "explored_percent_lambda": 23.298969072164947,
                "explored_percent_none": 21.46204311152765,
                "kept_percent_concrete": 44.827586206896555,
                "kept_percent_lambda": 55.172413793103445,
                "num_examples": 2,
                "num_explored_concrete": 2947,
                "num_explored_lambda": 1243,
                "num_explored_none": 1145,
                "num_inputs": 1,
                "num_kept_concrete": 312,
                "num_kept_lambda": 384,
                "num_values_explored": 5335,
                "num_values_kept": 696,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52708
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.527768565109,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.212109886002617,
                "explored_percent_lambda": 22.687348159222577,
                "explored_percent_none": 62.10054195477481,
                "kept_percent_concrete": 30.76923076923077,
                "kept_percent_lambda": 69.23076923076923,
                "num_examples": 2,
                "num_explored_concrete": 814,
                "num_explored_lambda": 1214,
                "num_explored_none": 3323,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 180,
                "num_values_explored": 5351,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55806
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65395062300377,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.755102040816327,
                "explored_percent_lambda": 27.897959183673468,
                "explored_percent_none": 61.3469387755102,
                "kept_percent_concrete": 29.23076923076923,
                "kept_percent_lambda": 70.76923076923077,
                "num_examples": 2,
                "num_explored_concrete": 527,
                "num_explored_lambda": 1367,
                "num_explored_none": 3006,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 184,
                "num_values_explored": 4900,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53000
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82417345815338,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.53417501088376,
                "explored_percent_lambda": 38.15846756639095,
                "explored_percent_none": 52.307357422725296,
                "kept_percent_concrete": 12.692307692307692,
                "kept_percent_lambda": 87.3076923076923,
                "num_examples": 2,
                "num_explored_concrete": 438,
                "num_explored_lambda": 1753,
                "num_explored_none": 2403,
                "num_inputs": 2,
                "num_kept_concrete": 33,
                "num_kept_lambda": 227,
                "num_values_explored": 4594,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46868
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6560710822232,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.588260681916271,
                "explored_percent_lambda": 37.6348726801899,
                "explored_percent_none": 50.776866637893825,
                "kept_percent_concrete": 13.461538461538462,
                "kept_percent_lambda": 86.53846153846153,
                "num_examples": 2,
                "num_explored_concrete": 537,
                "num_explored_lambda": 1744,
                "num_explored_none": 2353,
                "num_inputs": 2,
                "num_kept_concrete": 35,
                "num_kept_lambda": 225,
                "num_values_explored": 4634,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47246
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56839901395142,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.469995803608896,
                "explored_percent_lambda": 37.347880822492655,
                "explored_percent_none": 52.18212337389845,
                "kept_percent_concrete": 15.0,
                "kept_percent_lambda": 85.0,
                "num_examples": 2,
                "num_explored_concrete": 499,
                "num_explored_lambda": 1780,
                "num_explored_none": 2487,
                "num_inputs": 2,
                "num_kept_concrete": 39,
                "num_kept_lambda": 221,
                "num_values_explored": 4766,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47311
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61975393490866,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.047713717693837,
                "explored_percent_lambda": 31.888667992047715,
                "explored_percent_none": 56.06361829025845,
                "kept_percent_concrete": 16.923076923076923,
                "kept_percent_lambda": 83.07692307692308,
                "num_examples": 2,
                "num_explored_concrete": 606,
                "num_explored_lambda": 1604,
                "num_explored_none": 2820,
                "num_inputs": 2,
                "num_kept_concrete": 44,
                "num_kept_lambda": 216,
                "num_values_explored": 5030,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50371
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.19079052400775,
            "num_unique_values": 537,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.28754813863928,
                "explored_percent_lambda": 24.31688978543921,
                "explored_percent_none": 31.39556207592151,
                "kept_percent_concrete": 41.91729323308271,
                "kept_percent_lambda": 58.08270676691729,
                "num_examples": 2,
                "num_explored_concrete": 2415,
                "num_explored_lambda": 1326,
                "num_explored_none": 1712,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 309,
                "num_values_explored": 5453,
                "num_values_kept": 532,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57783
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64637026400305,
            "num_unique_values": 256,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.805818895063746,
                "explored_percent_lambda": 16.067342268715265,
                "explored_percent_none": 68.12683883622098,
                "kept_percent_concrete": 37.05179282868526,
                "kept_percent_lambda": 62.94820717131474,
                "num_examples": 3,
                "num_explored_concrete": 967,
                "num_explored_lambda": 983,
                "num_explored_none": 4168,
                "num_inputs": 1,
                "num_kept_concrete": 93,
                "num_kept_lambda": 158,
                "num_values_explored": 6118,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62707
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}