{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.5159069090150297,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 52.38095238095238,
                "explored_percent_none": 4.761904761904762,
                "kept_percent_concrete": 30.87248322147651,
                "kept_percent_lambda": 69.12751677852349,
                "num_examples": 2,
                "num_explored_concrete": 99,
                "num_explored_lambda": 121,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16312062204815447,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.730627306273064,
                "explored_percent_lambda": 32.103321033210335,
                "explored_percent_none": 5.166051660516605,
                "kept_percent_concrete": 51.851851851851855,
                "kept_percent_lambda": 48.148148148148145,
                "num_examples": 3,
                "num_explored_concrete": 170,
                "num_explored_lambda": 87,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12087005702778697,
            "num_unique_values": 114,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.41618497109827,
                "explored_percent_lambda": 56.64739884393064,
                "explored_percent_none": 6.936416184971098,
                "kept_percent_concrete": 22.01834862385321,
                "kept_percent_lambda": 77.98165137614679,
                "num_examples": 5,
                "num_explored_concrete": 63,
                "num_explored_lambda": 98,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 85,
                "num_values_explored": 173,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 173
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5466648291330785,
            "num_unique_values": 350,
            "solution": "Reverse(fn_1(fn_1(fn_1(fn_1(Reverse(x1))))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.95310907237513,
                "explored_percent_lambda": 29.153924566768602,
                "explored_percent_none": 4.892966360856269,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 5,
                "num_explored_concrete": 647,
                "num_explored_lambda": 286,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 160,
                "num_values_explored": 981,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1073389200028032,
            "num_unique_values": 99,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.682119205298015,
                "explored_percent_lambda": 45.6953642384106,
                "explored_percent_none": 6.622516556291391,
                "kept_percent_concrete": 34.40860215053763,
                "kept_percent_lambda": 65.59139784946237,
                "num_examples": 4,
                "num_explored_concrete": 72,
                "num_explored_lambda": 69,
                "num_explored_none": 10,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 61,
                "num_values_explored": 151,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10605314490385354,
            "num_unique_values": 89,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 43.47826086956522,
                "explored_percent_lambda": 48.4472049689441,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 19.27710843373494,
                "kept_percent_lambda": 80.72289156626506,
                "num_examples": 4,
                "num_explored_concrete": 70,
                "num_explored_lambda": 78,
                "num_explored_none": 13,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 67,
                "num_values_explored": 161,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13273422792553902,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.395061728395063,
                "explored_percent_lambda": 66.04938271604938,
                "explored_percent_none": 5.555555555555555,
                "kept_percent_concrete": 12.612612612612613,
                "kept_percent_lambda": 87.38738738738739,
                "num_examples": 2,
                "num_explored_concrete": 46,
                "num_explored_lambda": 107,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 97,
                "num_values_explored": 162,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13904467783868313,
            "num_unique_values": 122,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 24.539877300613497,
                "explored_percent_lambda": 70.5521472392638,
                "explored_percent_none": 4.9079754601226995,
                "kept_percent_concrete": 13.675213675213675,
                "kept_percent_lambda": 86.32478632478633,
                "num_examples": 2,
                "num_explored_concrete": 40,
                "num_explored_lambda": 115,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 101,
                "num_values_explored": 163,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.6904463928658515,
            "num_unique_values": 268,
            "solution": "Scanl1((lambda u1, u2: Subtract(1, Add(-1, -1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.985680190930786,
                "explored_percent_lambda": 41.288782816229116,
                "explored_percent_none": 34.7255369928401,
                "kept_percent_concrete": 22.433460076045627,
                "kept_percent_lambda": 77.56653992395437,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 346,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 204,
                "num_values_explored": 838,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09865080006420612,
            "num_unique_values": 99,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 57.30994152046784,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 14.035087719298245,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 98,
                "num_explored_lambda": 49,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 48,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23767181695438921,
            "num_unique_values": 201,
            "solution": "fn_24((lambda u1: fn_14(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 75.97911227154047,
                "explored_percent_lambda": 11.488250652741515,
                "explored_percent_none": 12.532637075718016,
                "kept_percent_concrete": 81.02564102564102,
                "kept_percent_lambda": 18.974358974358974,
                "num_examples": 4,
                "num_explored_concrete": 291,
                "num_explored_lambda": 44,
                "num_explored_none": 48,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 37,
                "num_values_explored": 383,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16480970103293657,
            "num_unique_values": 77,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.59423503325942,
                "explored_percent_lambda": 19.068736141906875,
                "explored_percent_none": 48.3370288248337,
                "kept_percent_concrete": 40.27777777777778,
                "kept_percent_lambda": 59.72222222222222,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 86,
                "num_explored_none": 218,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 43,
                "num_values_explored": 451,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.23435680894181132,
            "num_unique_values": 277,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.28087167070218,
                "explored_percent_lambda": 24.455205811138015,
                "explored_percent_none": 7.263922518159807,
                "kept_percent_concrete": 66.17647058823529,
                "kept_percent_lambda": 33.8235294117647,
                "num_examples": 4,
                "num_explored_concrete": 282,
                "num_explored_lambda": 101,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 92,
                "num_values_explored": 413,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20311023597605526,
            "num_unique_values": 220,
            "solution": "IntDivide(Square(Add(-1, -1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.16587677725119,
                "explored_percent_lambda": 23.222748815165875,
                "explored_percent_none": 11.611374407582938,
                "kept_percent_concrete": 63.72093023255814,
                "kept_percent_lambda": 36.27906976744186,
                "num_examples": 2,
                "num_explored_concrete": 275,
                "num_explored_lambda": 98,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 78,
                "num_values_explored": 422,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16428949707187712,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 55.71955719557196,
                "explored_percent_lambda": 37.638376383763834,
                "explored_percent_none": 6.642066420664206,
                "kept_percent_concrete": 46.103896103896105,
                "kept_percent_lambda": 53.896103896103895,
                "num_examples": 5,
                "num_explored_concrete": 151,
                "num_explored_lambda": 102,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 83,
                "num_values_explored": 271,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3421442729886621,
            "num_unique_values": 290,
            "solution": "IntDivide(Sum(fn_9(1, x1, x1)), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.00986436498151,
                "explored_percent_lambda": 18.249075215782984,
                "explored_percent_none": 9.741060419235511,
                "kept_percent_concrete": 60.70175438596491,
                "kept_percent_lambda": 39.29824561403509,
                "num_examples": 3,
                "num_explored_concrete": 584,
                "num_explored_lambda": 148,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 112,
                "num_values_explored": 811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 811
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1691643358208239,
            "num_unique_values": 178,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 59.40959409594096,
                "explored_percent_lambda": 36.53136531365314,
                "explored_percent_none": 4.059040590405904,
                "kept_percent_concrete": 51.16279069767442,
                "kept_percent_lambda": 48.83720930232558,
                "num_examples": 2,
                "num_explored_concrete": 161,
                "num_explored_lambda": 99,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 84,
                "num_values_explored": 271,
                "num_values_kept": 172,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19529345398768783,
            "num_unique_values": 162,
            "solution": "fn_1(Sort(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.23711340206186,
                "explored_percent_lambda": 43.6426116838488,
                "explored_percent_none": 15.120274914089347,
                "kept_percent_concrete": 28.662420382165607,
                "kept_percent_lambda": 71.3375796178344,
                "num_examples": 3,
                "num_explored_concrete": 120,
                "num_explored_lambda": 127,
                "num_explored_none": 44,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 112,
                "num_values_explored": 291,
                "num_values_kept": 157,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1056765210814774,
            "num_unique_values": 128,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 21.71945701357466,
                "explored_percent_none": 10.407239819004525,
                "kept_percent_concrete": 66.39344262295081,
                "kept_percent_lambda": 33.60655737704918,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 48,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 41,
                "num_values_explored": 221,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10901330783963203,
            "num_unique_values": 93,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.70967741935484,
                "explored_percent_lambda": 58.064516129032256,
                "explored_percent_none": 3.225806451612903,
                "kept_percent_concrete": 16.091954022988507,
                "kept_percent_lambda": 83.9080459770115,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 90,
                "num_explored_none": 5,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 73,
                "num_values_explored": 155,
                "num_values_kept": 87,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15771281998604536,
            "num_unique_values": 130,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.81818181818182,
                "explored_percent_lambda": 34.90909090909091,
                "explored_percent_none": 15.272727272727273,
                "kept_percent_concrete": 36.29032258064516,
                "kept_percent_lambda": 63.70967741935484,
                "num_examples": 3,
                "num_explored_concrete": 137,
                "num_explored_lambda": 96,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 45,
                "num_kept_lambda": 79,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.83775398810394,
            "num_unique_values": 806,
            "solution": "Max(fn_3(fn_14(fn_1(Scanl1((lambda u1, u2: 1), Sort(x1)))), Subtract(1, Minimum(x1))), Max(Minimum(x1), Add(1, 1)))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 72.20092024539878,
                "explored_percent_lambda": 15.797546012269938,
                "explored_percent_none": 12.001533742331288,
                "kept_percent_concrete": 73.875,
                "kept_percent_lambda": 26.125,
                "num_examples": 4,
                "num_explored_concrete": 1883,
                "num_explored_lambda": 412,
                "num_explored_none": 313,
                "num_inputs": 2,
                "num_kept_concrete": 591,
                "num_kept_lambda": 209,
                "num_values_explored": 2608,
                "num_values_kept": 800,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19636
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 75.04978970601223,
            "num_unique_values": 768,
            "solution": "IntDivide(Square(Square(Add(-1, -1))), Head(x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.03177004538578,
                "explored_percent_lambda": 21.40695915279879,
                "explored_percent_none": 14.56127080181543,
                "kept_percent_concrete": 71.82175622542594,
                "kept_percent_lambda": 28.17824377457405,
                "num_examples": 5,
                "num_explored_concrete": 1693,
                "num_explored_lambda": 566,
                "num_explored_none": 385,
                "num_inputs": 1,
                "num_kept_concrete": 548,
                "num_kept_lambda": 215,
                "num_values_explored": 2644,
                "num_values_kept": 763,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 54136
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3737561679445207,
            "num_unique_values": 394,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 78.66868381240545,
                "explored_percent_lambda": 18.15431164901664,
                "explored_percent_none": 3.177004538577912,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 120,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 97,
                "num_values_explored": 661,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1632443331182003,
            "num_unique_values": 172,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.76470588235294,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 51.204819277108435,
                "kept_percent_lambda": 48.795180722891565,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 88,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 81,
                "num_values_explored": 272,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09390159090980887,
            "num_unique_values": 92,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.72839506172839,
                "explored_percent_lambda": 30.246913580246915,
                "explored_percent_none": 8.024691358024691,
                "kept_percent_concrete": 50.588235294117645,
                "kept_percent_lambda": 49.411764705882355,
                "num_examples": 2,
                "num_explored_concrete": 100,
                "num_explored_lambda": 49,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 43,
                "num_kept_lambda": 42,
                "num_values_explored": 162,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4772099391557276,
            "num_unique_values": 433,
            "solution": "IntDivide(Last(fn_9(Last(x2), x1, x1)), -1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51290591174022,
                "explored_percent_lambda": 8.742714404662781,
                "explored_percent_none": 6.7443796835970025,
                "kept_percent_concrete": 82.43559718969556,
                "kept_percent_lambda": 17.56440281030445,
                "num_examples": 5,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 105,
                "num_explored_none": 81,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 75,
                "num_values_explored": 1201,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1201
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50398312998004,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.09004739336493,
                "explored_percent_lambda": 14.270668773038441,
                "explored_percent_none": 64.63928383359664,
                "kept_percent_concrete": 65.45961002785515,
                "kept_percent_lambda": 34.540389972144844,
                "num_examples": 5,
                "num_explored_concrete": 1602,
                "num_explored_lambda": 1084,
                "num_explored_none": 4910,
                "num_inputs": 1,
                "num_kept_concrete": 235,
                "num_kept_lambda": 124,
                "num_values_explored": 7596,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75066
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1779051700141281,
            "num_unique_values": 164,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.6,
                "explored_percent_lambda": 47.6,
                "explored_percent_none": 6.8,
                "kept_percent_concrete": 35.22012578616352,
                "kept_percent_lambda": 64.77987421383648,
                "num_examples": 3,
                "num_explored_concrete": 114,
                "num_explored_lambda": 119,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 103,
                "num_values_explored": 250,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19193869293667376,
            "num_unique_values": 250,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.33830845771145,
                "explored_percent_lambda": 7.711442786069652,
                "explored_percent_none": 9.950248756218905,
                "kept_percent_concrete": 89.34426229508196,
                "kept_percent_lambda": 10.655737704918034,
                "num_examples": 5,
                "num_explored_concrete": 331,
                "num_explored_lambda": 31,
                "num_explored_none": 40,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 26,
                "num_values_explored": 402,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 402
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3233283208683133,
            "num_unique_values": 336,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.43267776096823,
                "explored_percent_lambda": 21.02874432677761,
                "explored_percent_none": 4.53857791225416,
                "kept_percent_concrete": 68.78787878787878,
                "kept_percent_lambda": 31.21212121212121,
                "num_examples": 3,
                "num_explored_concrete": 492,
                "num_explored_lambda": 139,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 103,
                "num_values_explored": 661,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 69.27334510302171,
            "num_unique_values": 295,
            "solution": "IntDivide(Multiply(Subtract(Square(Subtract(-1, Add(1, x1))), Square(Add(x1, x1))), Max(x1, 1)), -1)",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 16.183574879227052,
                "explored_percent_lambda": 17.52012882447665,
                "explored_percent_none": 66.29629629629629,
                "kept_percent_concrete": 55.172413793103445,
                "kept_percent_lambda": 44.827586206896555,
                "num_examples": 2,
                "num_explored_concrete": 1005,
                "num_explored_lambda": 1088,
                "num_explored_none": 4117,
                "num_inputs": 1,
                "num_kept_concrete": 160,
                "num_kept_lambda": 130,
                "num_values_explored": 6210,
                "num_values_kept": 290,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 53081
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3270605078432709,
            "num_unique_values": 280,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.42042042042043,
                "explored_percent_lambda": 19.36936936936937,
                "explored_percent_none": 10.21021021021021,
                "kept_percent_concrete": 66.05839416058394,
                "kept_percent_lambda": 33.941605839416056,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 129,
                "num_explored_none": 68,
                "num_inputs": 2,
                "num_kept_concrete": 181,
                "num_kept_lambda": 93,
                "num_values_explored": 666,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 666
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21534029999747872,
            "num_unique_values": 302,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.04194260485652,
                "explored_percent_lambda": 16.11479028697572,
                "explored_percent_none": 6.843267108167771,
                "kept_percent_concrete": 77.36486486486487,
                "kept_percent_lambda": 22.635135135135137,
                "num_examples": 3,
                "num_explored_concrete": 349,
                "num_explored_lambda": 73,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 67,
                "num_values_explored": 453,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.15767329512164,
            "num_unique_values": 1358,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.93023255813954,
                "explored_percent_lambda": 37.13774597495528,
                "explored_percent_none": 11.932021466905187,
                "kept_percent_concrete": 51.36733185513673,
                "kept_percent_lambda": 48.63266814486327,
                "num_examples": 2,
                "num_explored_concrete": 2847,
                "num_explored_lambda": 2076,
                "num_explored_none": 667,
                "num_inputs": 1,
                "num_kept_concrete": 695,
                "num_kept_lambda": 658,
                "num_values_explored": 5590,
                "num_values_kept": 1353,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61910
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2109057391062379,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.06642066420664,
                "explored_percent_lambda": 49.81549815498155,
                "explored_percent_none": 8.118081180811808,
                "kept_percent_concrete": 26.573426573426573,
                "kept_percent_lambda": 73.42657342657343,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 135,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 105,
                "num_values_explored": 271,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3604305610060692,
            "num_unique_values": 337,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.5839636913767,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 4.236006051437216,
                "kept_percent_concrete": 68.58006042296073,
                "kept_percent_lambda": 31.419939577039276,
                "num_examples": 5,
                "num_explored_concrete": 493,
                "num_explored_lambda": 140,
                "num_explored_none": 28,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 104,
                "num_values_explored": 661,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83004822209477,
            "num_unique_values": 1150,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.34333120612635,
                "explored_percent_lambda": 10.146777281429483,
                "explored_percent_none": 23.50989151244416,
                "kept_percent_concrete": 72.26596675415573,
                "kept_percent_lambda": 27.73403324584427,
                "num_examples": 2,
                "num_explored_concrete": 5198,
                "num_explored_lambda": 795,
                "num_explored_none": 1842,
                "num_inputs": 3,
                "num_kept_concrete": 826,
                "num_kept_lambda": 317,
                "num_values_explored": 7835,
                "num_values_kept": 1143,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77554
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.32412832300179,
            "num_unique_values": 1270,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.531772575250834,
                "explored_percent_lambda": 47.97240802675585,
                "explored_percent_none": 17.495819397993312,
                "kept_percent_concrete": 43.3201581027668,
                "kept_percent_lambda": 56.6798418972332,
                "num_examples": 2,
                "num_explored_concrete": 1652,
                "num_explored_lambda": 2295,
                "num_explored_none": 837,
                "num_inputs": 1,
                "num_kept_concrete": 548,
                "num_kept_lambda": 717,
                "num_values_explored": 4784,
                "num_values_kept": 1265,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50514
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17900742404163,
            "num_unique_values": 1306,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.76217583807717,
                "explored_percent_lambda": 18.516761543327007,
                "explored_percent_none": 10.721062618595825,
                "kept_percent_concrete": 58.10914681014604,
                "kept_percent_lambda": 41.89085318985396,
                "num_examples": 2,
                "num_explored_concrete": 4475,
                "num_explored_lambda": 1171,
                "num_explored_none": 678,
                "num_inputs": 1,
                "num_kept_concrete": 756,
                "num_kept_lambda": 545,
                "num_values_explored": 6324,
                "num_values_kept": 1301,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64239
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.292955953162163,
            "num_unique_values": 314,
            "solution": "Min(If(IsOdd(x1), Subtract(x1, x2), 1), Add(Subtract(x1, x2), Square(Min(x2, 1))))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 19.1859561907721,
                "explored_percent_lambda": 15.006990834239552,
                "explored_percent_none": 65.80705297498835,
                "kept_percent_concrete": 57.142857142857146,
                "kept_percent_lambda": 42.857142857142854,
                "num_examples": 2,
                "num_explored_concrete": 1235,
                "num_explored_lambda": 966,
                "num_explored_none": 4236,
                "num_inputs": 2,
                "num_kept_concrete": 176,
                "num_kept_lambda": 132,
                "num_values_explored": 6437,
                "num_values_kept": 308,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 23500
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6447136180941,
            "num_unique_values": 761,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.39424364123159,
                "explored_percent_lambda": 25.36813922356091,
                "explored_percent_none": 30.237617135207497,
                "kept_percent_concrete": 41.98675496688742,
                "kept_percent_lambda": 58.01324503311258,
                "num_examples": 4,
                "num_explored_concrete": 2653,
                "num_explored_lambda": 1516,
                "num_explored_none": 1807,
                "num_inputs": 2,
                "num_kept_concrete": 317,
                "num_kept_lambda": 438,
                "num_values_explored": 5976,
                "num_values_kept": 755,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58839
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2146214039530605,
            "num_unique_values": 201,
            "solution": "fn_9(1, x1, x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 58.333333333333336,
                "explored_percent_lambda": 35.57692307692308,
                "explored_percent_none": 6.089743589743589,
                "kept_percent_concrete": 51.794871794871796,
                "kept_percent_lambda": 48.205128205128204,
                "num_examples": 3,
                "num_explored_concrete": 182,
                "num_explored_lambda": 111,
                "num_explored_none": 19,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 94,
                "num_values_explored": 312,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 55.9478900921531,
            "num_unique_values": 733,
            "solution": "IntDivide(Multiply(Multiply(Sum(x1), Add(Head(x1), Square(Square(Add(-1, -1))))), Add(1, 1)), Sum(x1))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 57.409470752089135,
                "explored_percent_lambda": 17.465181058495823,
                "explored_percent_none": 25.125348189415043,
                "kept_percent_concrete": 69.64285714285714,
                "kept_percent_lambda": 30.357142857142858,
                "num_examples": 4,
                "num_explored_concrete": 2061,
                "num_explored_lambda": 627,
                "num_explored_none": 902,
                "num_inputs": 1,
                "num_kept_concrete": 507,
                "num_kept_lambda": 221,
                "num_values_explored": 3590,
                "num_values_kept": 728,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 42034
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.42394260293804,
            "num_unique_values": 316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.06423000458786,
                "explored_percent_lambda": 23.612173115155223,
                "explored_percent_none": 56.32359688025692,
                "kept_percent_concrete": 45.337620578778136,
                "kept_percent_lambda": 54.662379421221864,
                "num_examples": 5,
                "num_explored_concrete": 1312,
                "num_explored_lambda": 1544,
                "num_explored_none": 3683,
                "num_inputs": 1,
                "num_kept_concrete": 141,
                "num_kept_lambda": 170,
                "num_values_explored": 6539,
                "num_values_kept": 311,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65362
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2629420191515237,
            "num_unique_values": 259,
            "solution": "Take(Count((lambda u1: IsOdd(-1)), x3), fn_9(Multiply(x1, -1), x2, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.41589648798521,
                "explored_percent_lambda": 20.147874306839185,
                "explored_percent_none": 4.436229205175601,
                "kept_percent_concrete": 67.06349206349206,
                "kept_percent_lambda": 32.93650793650794,
                "num_examples": 2,
                "num_explored_concrete": 408,
                "num_explored_lambda": 109,
                "num_explored_none": 24,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 83,
                "num_values_explored": 541,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 89.44987626117654,
            "num_unique_values": 315,
            "solution": "Min(Subtract(Square(Square(Subtract(-1, 1))), Max(x2, IntDivide(x1, x2))), Add(Add(x1, x2), Square(Subtract(-1, 1))))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 17.269972891085953,
                "explored_percent_lambda": 16.010205708818372,
                "explored_percent_none": 66.71982140009568,
                "kept_percent_concrete": 55.98705501618123,
                "kept_percent_lambda": 44.01294498381877,
                "num_examples": 2,
                "num_explored_concrete": 1083,
                "num_explored_lambda": 1004,
                "num_explored_none": 4184,
                "num_inputs": 2,
                "num_kept_concrete": 173,
                "num_kept_lambda": 136,
                "num_values_explored": 6271,
                "num_values_kept": 309,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 67309
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19168758881278336,
            "num_unique_values": 185,
            "solution": "fn_9(Multiply(x1, -1), x3, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.17948717948718,
                "explored_percent_lambda": 29.807692307692307,
                "explored_percent_none": 8.012820512820513,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 93,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 312,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3072798391804099,
            "num_unique_values": 358,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 79.42122186495178,
                "explored_percent_lambda": 16.881028938906752,
                "explored_percent_none": 3.697749196141479,
                "kept_percent_concrete": 73.78917378917379,
                "kept_percent_lambda": 26.210826210826212,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 105,
                "num_explored_none": 23,
                "num_inputs": 3,
                "num_kept_concrete": 259,
                "num_kept_lambda": 92,
                "num_values_explored": 622,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.41001454298384,
            "num_unique_values": 330,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.16717885679164,
                "explored_percent_lambda": 12.022126613398894,
                "explored_percent_none": 63.81069452980947,
                "kept_percent_concrete": 73.45679012345678,
                "kept_percent_lambda": 26.54320987654321,
                "num_examples": 4,
                "num_explored_concrete": 1966,
                "num_explored_lambda": 978,
                "num_explored_none": 5191,
                "num_inputs": 2,
                "num_kept_concrete": 238,
                "num_kept_lambda": 86,
                "num_values_explored": 8135,
                "num_values_kept": 324,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 84117
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03757661301643,
            "num_unique_values": 1439,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.63973063973064,
                "explored_percent_lambda": 19.09090909090909,
                "explored_percent_none": 15.26936026936027,
                "kept_percent_concrete": 64.29567642956765,
                "kept_percent_lambda": 35.70432357043236,
                "num_examples": 5,
                "num_explored_concrete": 3899,
                "num_explored_lambda": 1134,
                "num_explored_none": 907,
                "num_inputs": 1,
                "num_kept_concrete": 922,
                "num_kept_lambda": 512,
                "num_values_explored": 5940,
                "num_values_kept": 1434,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61701
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22032234398648143,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 33.57142857142857,
                "explored_percent_none": 9.285714285714286,
                "kept_percent_concrete": 48.23529411764706,
                "kept_percent_lambda": 51.76470588235294,
                "num_examples": 5,
                "num_explored_concrete": 160,
                "num_explored_lambda": 94,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04579323600046,
            "num_unique_values": 1101,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.5656855707107,
                "explored_percent_lambda": 21.231155778894472,
                "explored_percent_none": 19.20315865039483,
                "kept_percent_concrete": 60.76642335766423,
                "kept_percent_lambda": 39.23357664233577,
                "num_examples": 3,
                "num_explored_concrete": 3319,
                "num_explored_lambda": 1183,
                "num_explored_none": 1070,
                "num_inputs": 1,
                "num_kept_concrete": 666,
                "num_kept_lambda": 430,
                "num_values_explored": 5572,
                "num_values_kept": 1096,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61718
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43179441103711724,
            "num_unique_values": 322,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.3609022556391,
                "explored_percent_lambda": 30.526315789473685,
                "explored_percent_none": 5.112781954887218,
                "kept_percent_concrete": 55.379746835443036,
                "kept_percent_lambda": 44.620253164556964,
                "num_examples": 4,
                "num_explored_concrete": 428,
                "num_explored_lambda": 203,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 141,
                "num_values_explored": 665,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 83.51240441505797,
            "num_unique_values": 653,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 59.63041933191187,
                "explored_percent_lambda": 22.81449893390192,
                "explored_percent_none": 17.555081734186214,
                "kept_percent_concrete": 71.9814241486068,
                "kept_percent_lambda": 28.018575851393187,
                "num_examples": 5,
                "num_explored_concrete": 839,
                "num_explored_lambda": 321,
                "num_explored_none": 247,
                "num_inputs": 3,
                "num_kept_concrete": 465,
                "num_kept_lambda": 181,
                "num_values_explored": 1407,
                "num_values_kept": 646,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 52175
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3358137879986316,
            "num_unique_values": 302,
            "solution": "Take(fn_11(x2, x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.77079482439926,
                "explored_percent_lambda": 31.97781885397412,
                "explored_percent_none": 4.251386321626617,
                "kept_percent_concrete": 54.729729729729726,
                "kept_percent_lambda": 45.270270270270274,
                "num_examples": 5,
                "num_explored_concrete": 345,
                "num_explored_lambda": 173,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 162,
                "num_kept_lambda": 134,
                "num_values_explored": 541,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7021261958871,
            "num_unique_values": 758,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.94842829076621,
                "explored_percent_lambda": 7.0604125736738705,
                "explored_percent_none": 37.99115913555992,
                "kept_percent_concrete": 75.79787234042553,
                "kept_percent_lambda": 24.20212765957447,
                "num_examples": 5,
                "num_explored_concrete": 4475,
                "num_explored_lambda": 575,
                "num_explored_none": 3094,
                "num_inputs": 2,
                "num_kept_concrete": 570,
                "num_kept_lambda": 182,
                "num_values_explored": 8144,
                "num_values_kept": 752,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74945
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.506277480861172,
            "num_unique_values": 854,
            "solution": "Reverse(fn_0(Scanl1((lambda u1, u2: Sum(fn_21(fn_1(ZipWith((lambda u1, u2: ((lambda v1: IntDivide(((lambda v1: Add(v1, x1)))(v1), x1)))(u2)), x2, x2))))), Map((lambda u1: 1), x2))))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 59.8326359832636,
                "explored_percent_lambda": 20.30284917314206,
                "explored_percent_none": 19.864514843594343,
                "kept_percent_concrete": 52.240566037735846,
                "kept_percent_lambda": 47.759433962264154,
                "num_examples": 2,
                "num_explored_concrete": 3003,
                "num_explored_lambda": 1019,
                "num_explored_none": 997,
                "num_inputs": 2,
                "num_kept_concrete": 443,
                "num_kept_lambda": 405,
                "num_values_explored": 5019,
                "num_values_kept": 848,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 13379
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60475480603054,
            "num_unique_values": 319,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.397727272727273,
                "explored_percent_lambda": 15.823863636363637,
                "explored_percent_none": 58.77840909090909,
                "kept_percent_concrete": 46.496815286624205,
                "kept_percent_lambda": 53.503184713375795,
                "num_examples": 4,
                "num_explored_concrete": 1788,
                "num_explored_lambda": 1114,
                "num_explored_none": 4138,
                "num_inputs": 1,
                "num_kept_concrete": 146,
                "num_kept_lambda": 168,
                "num_values_explored": 7040,
                "num_values_kept": 314,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71027
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 53.541510513052344,
            "num_unique_values": 499,
            "solution": "If(IsOdd(x2), x1, fn_21(ZipWith((lambda u1, u2: ((lambda v1: Count((lambda u1: ((lambda v1: Greater(Add(x2, 1), v1)))(v1)), x1)))(u2)), x1, x1)))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 51.26541207008436,
                "explored_percent_lambda": 27.968851395197923,
                "explored_percent_none": 20.765736534717714,
                "kept_percent_concrete": 54.563894523326574,
                "kept_percent_lambda": 45.436105476673426,
                "num_examples": 4,
                "num_explored_concrete": 790,
                "num_explored_lambda": 431,
                "num_explored_none": 320,
                "num_inputs": 2,
                "num_kept_concrete": 269,
                "num_kept_lambda": 224,
                "num_values_explored": 1541,
                "num_values_kept": 493,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 33610
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02690332592465,
            "num_unique_values": 1340,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.88588993852152,
                "explored_percent_lambda": 16.899085320137953,
                "explored_percent_none": 14.21502474134053,
                "kept_percent_concrete": 69.21348314606742,
                "kept_percent_lambda": 30.786516853932586,
                "num_examples": 3,
                "num_explored_concrete": 4594,
                "num_explored_lambda": 1127,
                "num_explored_none": 948,
                "num_inputs": 1,
                "num_kept_concrete": 924,
                "num_kept_lambda": 411,
                "num_values_explored": 6669,
                "num_values_kept": 1335,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71301
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3004729251842946,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.0196671709531,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 11.800302571860817,
                "kept_percent_concrete": 59.36073059360731,
                "kept_percent_lambda": 40.63926940639269,
                "num_examples": 2,
                "num_explored_concrete": 443,
                "num_explored_lambda": 140,
                "num_explored_none": 78,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 89,
                "num_values_explored": 661,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59999910090119,
            "num_unique_values": 365,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.78141660319878,
                "explored_percent_lambda": 20.99009900990099,
                "explored_percent_none": 60.22848438690023,
                "kept_percent_concrete": 45.0,
                "kept_percent_lambda": 55.0,
                "num_examples": 4,
                "num_explored_concrete": 1233,
                "num_explored_lambda": 1378,
                "num_explored_none": 3954,
                "num_inputs": 1,
                "num_kept_concrete": 162,
                "num_kept_lambda": 198,
                "num_values_explored": 6565,
                "num_values_kept": 360,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66858
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0941452041734,
            "num_unique_values": 1487,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.95451231958012,
                "explored_percent_lambda": 15.71657676046071,
                "explored_percent_none": 16.328910919959178,
                "kept_percent_concrete": 69.88521269412558,
                "kept_percent_lambda": 30.114787305874408,
                "num_examples": 2,
                "num_explored_concrete": 4661,
                "num_explored_lambda": 1078,
                "num_explored_none": 1120,
                "num_inputs": 2,
                "num_kept_concrete": 1035,
                "num_kept_lambda": 446,
                "num_values_explored": 6859,
                "num_values_kept": 1481,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75641
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02921264013276,
            "num_unique_values": 1502,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.15730337078652,
                "explored_percent_lambda": 7.133524954272276,
                "explored_percent_none": 18.709171674941206,
                "kept_percent_concrete": 82.88770053475936,
                "kept_percent_lambda": 17.112299465240643,
                "num_examples": 5,
                "num_explored_concrete": 5676,
                "num_explored_lambda": 546,
                "num_explored_none": 1432,
                "num_inputs": 2,
                "num_kept_concrete": 1240,
                "num_kept_lambda": 256,
                "num_values_explored": 7654,
                "num_values_kept": 1496,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75679
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17825543717481,
            "num_unique_values": 1381,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.83935151068533,
                "explored_percent_lambda": 16.949152542372882,
                "explored_percent_none": 9.211495946941783,
                "kept_percent_concrete": 68.45930232558139,
                "kept_percent_lambda": 31.540697674418606,
                "num_examples": 3,
                "num_explored_concrete": 5010,
                "num_explored_lambda": 1150,
                "num_explored_none": 625,
                "num_inputs": 1,
                "num_kept_concrete": 942,
                "num_kept_lambda": 434,
                "num_values_explored": 6785,
                "num_values_kept": 1376,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67689
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.144509436097,
            "num_unique_values": 1827,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.57210503659061,
                "explored_percent_lambda": 11.56550437652461,
                "explored_percent_none": 10.862390586884775,
                "kept_percent_concrete": 80.45030203185063,
                "kept_percent_lambda": 19.549697968149367,
                "num_examples": 5,
                "num_explored_concrete": 5406,
                "num_explored_lambda": 806,
                "num_explored_none": 757,
                "num_inputs": 2,
                "num_kept_concrete": 1465,
                "num_kept_lambda": 356,
                "num_values_explored": 6969,
                "num_values_kept": 1821,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71045
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16261017112993,
            "num_unique_values": 1584,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.30377427629168,
                "explored_percent_lambda": 36.9366068156834,
                "explored_percent_none": 13.759618908024917,
                "kept_percent_concrete": 53.57821405953135,
                "kept_percent_lambda": 46.42178594046865,
                "num_examples": 2,
                "num_explored_concrete": 2691,
                "num_explored_lambda": 2016,
                "num_explored_none": 751,
                "num_inputs": 1,
                "num_kept_concrete": 846,
                "num_kept_lambda": 733,
                "num_values_explored": 5458,
                "num_values_kept": 1579,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57181
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.89930828404613,
            "num_unique_values": 1505,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.6077574433215,
                "explored_percent_lambda": 9.464627151051625,
                "explored_percent_none": 14.927615405626877,
                "kept_percent_concrete": 82.04272363150868,
                "kept_percent_lambda": 17.95727636849132,
                "num_examples": 4,
                "num_explored_concrete": 5536,
                "num_explored_lambda": 693,
                "num_explored_none": 1093,
                "num_inputs": 3,
                "num_kept_concrete": 1229,
                "num_kept_lambda": 269,
                "num_values_explored": 7322,
                "num_values_kept": 1498,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75732
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5698577461298555,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: Add(Sum(fn_9(IntDivide(Head(x1), Square(Add(-1, -1))), x1, x1)), -1)), x1)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67334446299388,
                "explored_percent_lambda": 16.30495269894268,
                "explored_percent_none": 13.021702838063439,
                "kept_percent_concrete": 37.58389261744966,
                "kept_percent_lambda": 62.41610738255034,
                "num_examples": 2,
                "num_explored_concrete": 1270,
                "num_explored_lambda": 293,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 93,
                "num_values_explored": 1797,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1797
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.83687453810126,
            "num_unique_values": 1624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.60441818648857,
                "explored_percent_lambda": 5.972257898792705,
                "explored_percent_none": 14.423323914718726,
                "kept_percent_concrete": 88.24984539270254,
                "kept_percent_lambda": 11.750154607297464,
                "num_examples": 4,
                "num_explored_concrete": 6198,
                "num_explored_lambda": 465,
                "num_explored_none": 1123,
                "num_inputs": 3,
                "num_kept_concrete": 1427,
                "num_kept_lambda": 190,
                "num_values_explored": 7786,
                "num_values_kept": 1617,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 80484
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.22589862905443,
            "num_unique_values": 1144,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.40628584537738,
                "explored_percent_lambda": 51.02087634778619,
                "explored_percent_none": 17.57283780683643,
                "kept_percent_concrete": 38.63037752414399,
                "kept_percent_lambda": 61.36962247585601,
                "num_examples": 3,
                "num_explored_concrete": 1369,
                "num_explored_lambda": 2224,
                "num_explored_none": 766,
                "num_inputs": 1,
                "num_kept_concrete": 440,
                "num_kept_lambda": 699,
                "num_values_explored": 4359,
                "num_values_kept": 1139,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47088
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64084941893816,
            "num_unique_values": 322,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.82315112540193,
                "explored_percent_lambda": 23.569131832797428,
                "explored_percent_none": 61.60771704180064,
                "kept_percent_concrete": 48.58044164037855,
                "kept_percent_lambda": 51.41955835962145,
                "num_examples": 4,
                "num_explored_concrete": 922,
                "num_explored_lambda": 1466,
                "num_explored_none": 3832,
                "num_inputs": 1,
                "num_kept_concrete": 154,
                "num_kept_lambda": 163,
                "num_values_explored": 6220,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66053
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04187073698267,
            "num_unique_values": 1352,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.05220811728947,
                "explored_percent_lambda": 25.54979438583944,
                "explored_percent_none": 18.39799749687109,
                "kept_percent_concrete": 57.089829250185595,
                "kept_percent_lambda": 42.910170749814405,
                "num_examples": 2,
                "num_explored_concrete": 3135,
                "num_explored_lambda": 1429,
                "num_explored_none": 1029,
                "num_inputs": 1,
                "num_kept_concrete": 769,
                "num_kept_lambda": 578,
                "num_values_explored": 5593,
                "num_values_kept": 1347,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61514
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 18.404468583175912,
            "num_unique_values": 1317,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), Map((lambda u1: ((lambda v1: Square(((lambda v1: Subtract(-1, v1)))(v1))))(u1)), fn_9(-1, x3, x2)))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 76.58391261171798,
                "explored_percent_lambda": 14.915590863952334,
                "explored_percent_none": 8.500496524329693,
                "kept_percent_concrete": 74.27480916030534,
                "kept_percent_lambda": 25.72519083969466,
                "num_examples": 5,
                "num_explored_concrete": 3856,
                "num_explored_lambda": 751,
                "num_explored_none": 428,
                "num_inputs": 3,
                "num_kept_concrete": 973,
                "num_kept_lambda": 337,
                "num_values_explored": 5035,
                "num_values_kept": 1310,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 15347
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.14802773389965,
            "num_unique_values": 957,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Reverse(Take(fn_11(x2, fn_14(x2)), Scanl1((lambda u1, u2: Add(-1, -1)), Reverse(x2)))))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 63.43408900083963,
                "explored_percent_lambda": 24.87405541561713,
                "explored_percent_none": 11.69185558354324,
                "kept_percent_concrete": 47.63406940063091,
                "kept_percent_lambda": 52.36593059936909,
                "num_examples": 2,
                "num_explored_concrete": 3022,
                "num_explored_lambda": 1185,
                "num_explored_none": 557,
                "num_inputs": 2,
                "num_kept_concrete": 453,
                "num_kept_lambda": 498,
                "num_values_explored": 4764,
                "num_values_kept": 951,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 34697
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9590258798562,
            "num_unique_values": 681,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.407775020678244,
                "explored_percent_lambda": 26.583953680727873,
                "explored_percent_none": 30.00827129859388,
                "kept_percent_concrete": 39.053254437869825,
                "kept_percent_lambda": 60.946745562130175,
                "num_examples": 3,
                "num_explored_concrete": 2624,
                "num_explored_lambda": 1607,
                "num_explored_none": 1814,
                "num_inputs": 1,
                "num_kept_concrete": 264,
                "num_kept_lambda": 412,
                "num_values_explored": 6045,
                "num_values_kept": 676,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64373
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08935084892437,
            "num_unique_values": 2231,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.71554819110743,
                "explored_percent_lambda": 7.35984534658934,
                "explored_percent_none": 12.924606462303231,
                "kept_percent_concrete": 89.52338129496403,
                "kept_percent_lambda": 10.476618705035971,
                "num_examples": 5,
                "num_explored_concrete": 5773,
                "num_explored_lambda": 533,
                "num_explored_none": 936,
                "num_inputs": 3,
                "num_kept_concrete": 1991,
                "num_kept_lambda": 233,
                "num_values_explored": 7242,
                "num_values_kept": 2224,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76633
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 67.56511929491535,
            "num_unique_values": 997,
            "solution": "Scanl1((lambda u1, u2: Subtract(-1, fn_3(ZipWith((lambda u1, u2: ((lambda v1: IntDivide(Subtract(1, x1), v1)))(u2)), x2, x3), x1))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 63.04155614500442,
                "explored_percent_lambda": 16.799292661361626,
                "explored_percent_none": 20.159151193633953,
                "kept_percent_concrete": 68.08080808080808,
                "kept_percent_lambda": 31.91919191919192,
                "num_examples": 4,
                "num_explored_concrete": 2852,
                "num_explored_lambda": 760,
                "num_explored_none": 912,
                "num_inputs": 3,
                "num_kept_concrete": 674,
                "num_kept_lambda": 316,
                "num_values_explored": 4524,
                "num_values_kept": 990,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 46675
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08233349095099,
            "num_unique_values": 1395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.65079365079365,
                "explored_percent_lambda": 32.36331569664903,
                "explored_percent_none": 13.98589065255732,
                "kept_percent_concrete": 55.75539568345324,
                "kept_percent_lambda": 44.24460431654676,
                "num_examples": 2,
                "num_explored_concrete": 3042,
                "num_explored_lambda": 1835,
                "num_explored_none": 793,
                "num_inputs": 1,
                "num_kept_concrete": 775,
                "num_kept_lambda": 615,
                "num_values_explored": 5670,
                "num_values_kept": 1390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62247
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.87433838006109,
            "num_unique_values": 1530,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.8479347540121,
                "explored_percent_lambda": 10.03683241252302,
                "explored_percent_none": 12.115232833464878,
                "kept_percent_concrete": 80.70866141732283,
                "kept_percent_lambda": 19.291338582677167,
                "num_examples": 3,
                "num_explored_concrete": 5918,
                "num_explored_lambda": 763,
                "num_explored_none": 921,
                "num_inputs": 2,
                "num_kept_concrete": 1230,
                "num_kept_lambda": 294,
                "num_values_explored": 7602,
                "num_values_kept": 1524,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79222
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46392234088853,
            "num_unique_values": 382,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.311025781678552,
                "explored_percent_lambda": 14.824465167306638,
                "explored_percent_none": 63.864509051014814,
                "kept_percent_concrete": 56.648936170212764,
                "kept_percent_lambda": 43.351063829787236,
                "num_examples": 4,
                "num_explored_concrete": 1554,
                "num_explored_lambda": 1081,
                "num_explored_none": 4657,
                "num_inputs": 2,
                "num_kept_concrete": 213,
                "num_kept_lambda": 163,
                "num_values_explored": 7292,
                "num_values_kept": 376,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76822
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07928644889034,
            "num_unique_values": 1672,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.7864768683274,
                "explored_percent_lambda": 12.683274021352313,
                "explored_percent_none": 11.530249110320284,
                "kept_percent_concrete": 79.90401919616077,
                "kept_percent_lambda": 20.095980803839232,
                "num_examples": 5,
                "num_explored_concrete": 5324,
                "num_explored_lambda": 891,
                "num_explored_none": 810,
                "num_inputs": 1,
                "num_kept_concrete": 1332,
                "num_kept_lambda": 335,
                "num_values_explored": 7025,
                "num_values_kept": 1667,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72392
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 58.59104296704754,
            "num_unique_values": 1032,
            "solution": "Multiply(-1, Square(Sum(fn_21(ZipWith((lambda u1, u2: ((lambda v1: Subtract(Square(x2), v1)))(u1)), x1, x1)))))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 74.50913436913095,
                "explored_percent_lambda": 8.434352057367253,
                "explored_percent_none": 17.056513573501793,
                "kept_percent_concrete": 82.74853801169591,
                "kept_percent_lambda": 17.251461988304094,
                "num_examples": 4,
                "num_explored_concrete": 4364,
                "num_explored_lambda": 494,
                "num_explored_none": 999,
                "num_inputs": 2,
                "num_kept_concrete": 849,
                "num_kept_lambda": 177,
                "num_values_explored": 5857,
                "num_values_kept": 1026,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 46610
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49636646197177,
            "num_unique_values": 364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.106274731486717,
                "explored_percent_lambda": 15.842283776144715,
                "explored_percent_none": 61.05144149236857,
                "kept_percent_concrete": 56.26740947075209,
                "kept_percent_lambda": 43.73259052924791,
                "num_examples": 3,
                "num_explored_concrete": 1635,
                "num_explored_lambda": 1121,
                "num_explored_none": 4320,
                "num_inputs": 1,
                "num_kept_concrete": 202,
                "num_kept_lambda": 157,
                "num_values_explored": 7076,
                "num_values_kept": 359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71214
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05743866506964,
            "num_unique_values": 1248,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.0981240981241,
                "explored_percent_lambda": 17.4025974025974,
                "explored_percent_none": 8.4992784992785,
                "kept_percent_concrete": 65.21739130434783,
                "kept_percent_lambda": 34.78260869565217,
                "num_examples": 3,
                "num_explored_concrete": 5135,
                "num_explored_lambda": 1206,
                "num_explored_none": 589,
                "num_inputs": 2,
                "num_kept_concrete": 810,
                "num_kept_lambda": 432,
                "num_values_explored": 6930,
                "num_values_kept": 1242,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67818
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27952339197509,
            "num_unique_values": 1019,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.35424926736769,
                "explored_percent_lambda": 30.63264954318221,
                "explored_percent_none": 24.013101189450094,
                "kept_percent_concrete": 54.33925049309665,
                "kept_percent_lambda": 45.66074950690335,
                "num_examples": 5,
                "num_explored_concrete": 2631,
                "num_explored_lambda": 1777,
                "num_explored_none": 1393,
                "num_inputs": 1,
                "num_kept_concrete": 551,
                "num_kept_lambda": 463,
                "num_values_explored": 5801,
                "num_values_kept": 1014,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62508
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.39635538891889,
            "num_unique_values": 1410,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.06495263870094,
                "explored_percent_lambda": 14.268531047962712,
                "explored_percent_none": 17.66651631333634,
                "kept_percent_concrete": 72.45551601423487,
                "kept_percent_lambda": 27.544483985765126,
                "num_examples": 5,
                "num_explored_concrete": 4527,
                "num_explored_lambda": 949,
                "num_explored_none": 1175,
                "num_inputs": 1,
                "num_kept_concrete": 1018,
                "num_kept_lambda": 387,
                "num_values_explored": 6651,
                "num_values_kept": 1405,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67989
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68404659302905,
            "num_unique_values": 928,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.508083140877595,
                "explored_percent_lambda": 15.50230946882217,
                "explored_percent_none": 23.989607390300232,
                "kept_percent_concrete": 62.18851570964247,
                "kept_percent_lambda": 37.81148429035753,
                "num_examples": 2,
                "num_explored_concrete": 4192,
                "num_explored_lambda": 1074,
                "num_explored_none": 1662,
                "num_inputs": 1,
                "num_kept_concrete": 574,
                "num_kept_lambda": 349,
                "num_values_explored": 6928,
                "num_values_kept": 923,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70874
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29464738513343,
            "num_unique_values": 1026,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.5374449339207,
                "explored_percent_lambda": 27.929515418502202,
                "explored_percent_none": 17.53303964757709,
                "kept_percent_concrete": 55.82761998041136,
                "kept_percent_lambda": 44.17238001958864,
                "num_examples": 4,
                "num_explored_concrete": 3095,
                "num_explored_lambda": 1585,
                "num_explored_none": 995,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 451,
                "num_values_explored": 5675,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58651
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76415805891156,
            "num_unique_values": 646,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.64800678541137,
                "explored_percent_lambda": 28.78710771840543,
                "explored_percent_none": 26.564885496183205,
                "kept_percent_concrete": 33.541341653666144,
                "kept_percent_lambda": 66.45865834633385,
                "num_examples": 2,
                "num_explored_concrete": 2632,
                "num_explored_lambda": 1697,
                "num_explored_none": 1566,
                "num_inputs": 1,
                "num_kept_concrete": 215,
                "num_kept_lambda": 426,
                "num_values_explored": 5895,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60389
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99945105588995,
            "num_unique_values": 885,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.131964809384165,
                "explored_percent_lambda": 21.928967090257412,
                "explored_percent_none": 22.939068100358423,
                "kept_percent_concrete": 47.95454545454545,
                "kept_percent_lambda": 52.04545454545455,
                "num_examples": 2,
                "num_explored_concrete": 3384,
                "num_explored_lambda": 1346,
                "num_explored_none": 1408,
                "num_inputs": 1,
                "num_kept_concrete": 422,
                "num_kept_lambda": 458,
                "num_values_explored": 6138,
                "num_values_kept": 880,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63375
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.42942415294237,
            "num_unique_values": 329,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.927922471229557,
                "explored_percent_lambda": 21.532404603270745,
                "explored_percent_none": 59.539672925499694,
                "kept_percent_concrete": 40.4320987654321,
                "kept_percent_lambda": 59.5679012345679,
                "num_examples": 2,
                "num_explored_concrete": 1250,
                "num_explored_lambda": 1422,
                "num_explored_none": 3932,
                "num_inputs": 1,
                "num_kept_concrete": 131,
                "num_kept_lambda": 193,
                "num_values_explored": 6604,
                "num_values_kept": 324,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67737
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.53183027310297,
            "num_unique_values": 328,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.304819661666135,
                "explored_percent_lambda": 24.976061283115225,
                "explored_percent_none": 59.71911905521864,
                "kept_percent_concrete": 41.795665634674926,
                "kept_percent_lambda": 58.204334365325074,
                "num_examples": 2,
                "num_explored_concrete": 959,
                "num_explored_lambda": 1565,
                "num_explored_none": 3742,
                "num_inputs": 1,
                "num_kept_concrete": 135,
                "num_kept_lambda": 188,
                "num_values_explored": 6266,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62455
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7297443440184,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.633633633633634,
                "explored_percent_lambda": 37.012012012012015,
                "explored_percent_none": 54.354354354354356,
                "kept_percent_concrete": 11.923076923076923,
                "kept_percent_lambda": 88.07692307692308,
                "num_examples": 2,
                "num_explored_concrete": 460,
                "num_explored_lambda": 1972,
                "num_explored_none": 2896,
                "num_inputs": 2,
                "num_kept_concrete": 31,
                "num_kept_lambda": 229,
                "num_values_explored": 5328,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55123
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5328928460367,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.44910616563298,
                "explored_percent_lambda": 34.53119299525721,
                "explored_percent_none": 56.01970083910982,
                "kept_percent_concrete": 15.0,
                "kept_percent_lambda": 85.0,
                "num_examples": 2,
                "num_explored_concrete": 518,
                "num_explored_lambda": 1893,
                "num_explored_none": 3071,
                "num_inputs": 2,
                "num_kept_concrete": 39,
                "num_kept_lambda": 221,
                "num_values_explored": 5482,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57004
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45758343301713,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.685580050596315,
                "explored_percent_lambda": 35.59812070834839,
                "explored_percent_none": 54.716299241055296,
                "kept_percent_concrete": 13.846153846153847,
                "kept_percent_lambda": 86.15384615384616,
                "num_examples": 2,
                "num_explored_concrete": 536,
                "num_explored_lambda": 1970,
                "num_explored_none": 3028,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 224,
                "num_values_explored": 5534,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56201
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52885361085646,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.777313848295059,
                "explored_percent_lambda": 30.880306193458594,
                "explored_percent_none": 59.34237995824635,
                "kept_percent_concrete": 16.53846153846154,
                "kept_percent_lambda": 83.46153846153847,
                "num_examples": 2,
                "num_explored_concrete": 562,
                "num_explored_lambda": 1775,
                "num_explored_none": 3411,
                "num_inputs": 2,
                "num_kept_concrete": 43,
                "num_kept_lambda": 217,
                "num_values_explored": 5748,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57691
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01667798310518,
            "num_unique_values": 531,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.59940603860749,
                "explored_percent_lambda": 21.003134796238246,
                "explored_percent_none": 31.397459165154267,
                "kept_percent_concrete": 41.06463878326996,
                "kept_percent_lambda": 58.93536121673004,
                "num_examples": 2,
                "num_explored_concrete": 2885,
                "num_explored_lambda": 1273,
                "num_explored_none": 1903,
                "num_inputs": 1,
                "num_kept_concrete": 216,
                "num_kept_lambda": 310,
                "num_values_explored": 6061,
                "num_values_kept": 526,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63572
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57619949197397,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.30950433502372,
                "explored_percent_lambda": 16.58760019630296,
                "explored_percent_none": 67.10289546867332,
                "kept_percent_concrete": 38.372093023255815,
                "kept_percent_lambda": 61.627906976744185,
                "num_examples": 3,
                "num_explored_concrete": 997,
                "num_explored_lambda": 1014,
                "num_explored_none": 4102,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 159,
                "num_values_explored": 6113,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63738
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}