{
    "num_tasks": 100,
    "num_tasks_solved": 53,
    "results": [
        {
            "elapsed_time": 0.6700435779057443,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 52.38095238095238,
                "explored_percent_none": 4.761904761904762,
                "kept_percent_concrete": 30.87248322147651,
                "kept_percent_lambda": 69.12751677852349,
                "num_examples": 2,
                "num_explored_concrete": 99,
                "num_explored_lambda": 121,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19830125896260142,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.730627306273064,
                "explored_percent_lambda": 32.103321033210335,
                "explored_percent_none": 5.166051660516605,
                "kept_percent_concrete": 51.851851851851855,
                "kept_percent_lambda": 48.148148148148145,
                "num_examples": 3,
                "num_explored_concrete": 170,
                "num_explored_lambda": 87,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14915440580807626,
            "num_unique_values": 114,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.41618497109827,
                "explored_percent_lambda": 56.64739884393064,
                "explored_percent_none": 6.936416184971098,
                "kept_percent_concrete": 22.01834862385321,
                "kept_percent_lambda": 77.98165137614679,
                "num_examples": 5,
                "num_explored_concrete": 63,
                "num_explored_lambda": 98,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 85,
                "num_values_explored": 173,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 173
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6868769740685821,
            "num_unique_values": 350,
            "solution": "Reverse(fn_1(fn_1(fn_1(fn_1(Reverse(x1))))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.95310907237513,
                "explored_percent_lambda": 29.153924566768602,
                "explored_percent_none": 4.892966360856269,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 5,
                "num_explored_concrete": 647,
                "num_explored_lambda": 286,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 160,
                "num_values_explored": 981,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1302429330535233,
            "num_unique_values": 99,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.682119205298015,
                "explored_percent_lambda": 45.6953642384106,
                "explored_percent_none": 6.622516556291391,
                "kept_percent_concrete": 34.40860215053763,
                "kept_percent_lambda": 65.59139784946237,
                "num_examples": 4,
                "num_explored_concrete": 72,
                "num_explored_lambda": 69,
                "num_explored_none": 10,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 61,
                "num_values_explored": 151,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13612044206820428,
            "num_unique_values": 89,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 43.47826086956522,
                "explored_percent_lambda": 48.4472049689441,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 19.27710843373494,
                "kept_percent_lambda": 80.72289156626506,
                "num_examples": 4,
                "num_explored_concrete": 70,
                "num_explored_lambda": 78,
                "num_explored_none": 13,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 67,
                "num_values_explored": 161,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16271438705734909,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.395061728395063,
                "explored_percent_lambda": 66.04938271604938,
                "explored_percent_none": 5.555555555555555,
                "kept_percent_concrete": 12.612612612612613,
                "kept_percent_lambda": 87.38738738738739,
                "num_examples": 2,
                "num_explored_concrete": 46,
                "num_explored_lambda": 107,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 97,
                "num_values_explored": 162,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15938022080808878,
            "num_unique_values": 122,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 24.539877300613497,
                "explored_percent_lambda": 70.5521472392638,
                "explored_percent_none": 4.9079754601226995,
                "kept_percent_concrete": 13.675213675213675,
                "kept_percent_lambda": 86.32478632478633,
                "num_examples": 2,
                "num_explored_concrete": 40,
                "num_explored_lambda": 115,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 101,
                "num_values_explored": 163,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.19941035611555,
            "num_unique_values": 268,
            "solution": "Scanl1((lambda u1, u2: Subtract(1, Add(-1, -1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.985680190930786,
                "explored_percent_lambda": 41.288782816229116,
                "explored_percent_none": 34.7255369928401,
                "kept_percent_concrete": 22.433460076045627,
                "kept_percent_lambda": 77.56653992395437,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 346,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 204,
                "num_values_explored": 838,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.120775590185076,
            "num_unique_values": 99,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 57.30994152046784,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 14.035087719298245,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 98,
                "num_explored_lambda": 49,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 48,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.308703965973109,
            "num_unique_values": 201,
            "solution": "fn_24((lambda u1: fn_14(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 75.97911227154047,
                "explored_percent_lambda": 11.488250652741515,
                "explored_percent_none": 12.532637075718016,
                "kept_percent_concrete": 81.02564102564102,
                "kept_percent_lambda": 18.974358974358974,
                "num_examples": 4,
                "num_explored_concrete": 291,
                "num_explored_lambda": 44,
                "num_explored_none": 48,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 37,
                "num_values_explored": 383,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19870712398551404,
            "num_unique_values": 77,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.59423503325942,
                "explored_percent_lambda": 19.068736141906875,
                "explored_percent_none": 48.3370288248337,
                "kept_percent_concrete": 40.27777777777778,
                "kept_percent_lambda": 59.72222222222222,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 86,
                "num_explored_none": 218,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 43,
                "num_values_explored": 451,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27677116612903774,
            "num_unique_values": 277,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.28087167070218,
                "explored_percent_lambda": 24.455205811138015,
                "explored_percent_none": 7.263922518159807,
                "kept_percent_concrete": 66.17647058823529,
                "kept_percent_lambda": 33.8235294117647,
                "num_examples": 4,
                "num_explored_concrete": 282,
                "num_explored_lambda": 101,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 92,
                "num_values_explored": 413,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.25369783490896225,
            "num_unique_values": 220,
            "solution": "IntDivide(Square(Add(-1, -1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.16587677725119,
                "explored_percent_lambda": 23.222748815165875,
                "explored_percent_none": 11.611374407582938,
                "kept_percent_concrete": 63.72093023255814,
                "kept_percent_lambda": 36.27906976744186,
                "num_examples": 2,
                "num_explored_concrete": 275,
                "num_explored_lambda": 98,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 78,
                "num_values_explored": 422,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2076506009325385,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 55.71955719557196,
                "explored_percent_lambda": 37.638376383763834,
                "explored_percent_none": 6.642066420664206,
                "kept_percent_concrete": 46.103896103896105,
                "kept_percent_lambda": 53.896103896103895,
                "num_examples": 5,
                "num_explored_concrete": 151,
                "num_explored_lambda": 102,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 83,
                "num_values_explored": 271,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4547861139290035,
            "num_unique_values": 290,
            "solution": "IntDivide(Sum(fn_9(1, x1, x1)), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.00986436498151,
                "explored_percent_lambda": 18.249075215782984,
                "explored_percent_none": 9.741060419235511,
                "kept_percent_concrete": 60.70175438596491,
                "kept_percent_lambda": 39.29824561403509,
                "num_examples": 3,
                "num_explored_concrete": 584,
                "num_explored_lambda": 148,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 112,
                "num_values_explored": 811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 811
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22114478098228574,
            "num_unique_values": 178,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 59.40959409594096,
                "explored_percent_lambda": 36.53136531365314,
                "explored_percent_none": 4.059040590405904,
                "kept_percent_concrete": 51.16279069767442,
                "kept_percent_lambda": 48.83720930232558,
                "num_examples": 2,
                "num_explored_concrete": 161,
                "num_explored_lambda": 99,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 84,
                "num_values_explored": 271,
                "num_values_kept": 172,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2449065549299121,
            "num_unique_values": 162,
            "solution": "fn_1(Sort(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.23711340206186,
                "explored_percent_lambda": 43.6426116838488,
                "explored_percent_none": 15.120274914089347,
                "kept_percent_concrete": 28.662420382165607,
                "kept_percent_lambda": 71.3375796178344,
                "num_examples": 3,
                "num_explored_concrete": 120,
                "num_explored_lambda": 127,
                "num_explored_none": 44,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 112,
                "num_values_explored": 291,
                "num_values_kept": 157,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13369990605860949,
            "num_unique_values": 128,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 21.71945701357466,
                "explored_percent_none": 10.407239819004525,
                "kept_percent_concrete": 66.39344262295081,
                "kept_percent_lambda": 33.60655737704918,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 48,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 41,
                "num_values_explored": 221,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14052992593497038,
            "num_unique_values": 93,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.70967741935484,
                "explored_percent_lambda": 58.064516129032256,
                "explored_percent_none": 3.225806451612903,
                "kept_percent_concrete": 16.091954022988507,
                "kept_percent_lambda": 83.9080459770115,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 90,
                "num_explored_none": 5,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 73,
                "num_values_explored": 155,
                "num_values_kept": 87,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17426319606602192,
            "num_unique_values": 130,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.81818181818182,
                "explored_percent_lambda": 34.90909090909091,
                "explored_percent_none": 15.272727272727273,
                "kept_percent_concrete": 36.29032258064516,
                "kept_percent_lambda": 63.70967741935484,
                "num_examples": 3,
                "num_explored_concrete": 137,
                "num_explored_lambda": 96,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 45,
                "num_kept_lambda": 79,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 19.17495681787841,
            "num_unique_values": 1162,
            "solution": "Max(Min(If(Less(Square(Minimum(x1)), Last(x2)), Minimum(x1), Sum(x1)), Minimum(fn_21(fn_10(x2)))), Add(1, 1))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 75.5657093124456,
                "explored_percent_lambda": 13.446475195822455,
                "explored_percent_none": 10.98781549173194,
                "kept_percent_concrete": 74.82698961937716,
                "kept_percent_lambda": 25.173010380622838,
                "num_examples": 4,
                "num_explored_concrete": 3473,
                "num_explored_lambda": 618,
                "num_explored_none": 505,
                "num_inputs": 2,
                "num_kept_concrete": 865,
                "num_kept_lambda": 291,
                "num_values_explored": 4596,
                "num_values_kept": 1156,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 13743
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.39659549412318,
            "num_unique_values": 1256,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 70.17281488866733,
                "explored_percent_lambda": 14.938517779993353,
                "explored_percent_none": 14.888667331339315,
                "kept_percent_concrete": 73.78097521982414,
                "kept_percent_lambda": 26.21902478017586,
                "num_examples": 5,
                "num_explored_concrete": 4223,
                "num_explored_lambda": 899,
                "num_explored_none": 896,
                "num_inputs": 1,
                "num_kept_concrete": 923,
                "num_kept_lambda": 328,
                "num_values_explored": 6018,
                "num_values_kept": 1251,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63396
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4679265799932182,
            "num_unique_values": 394,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 78.66868381240545,
                "explored_percent_lambda": 18.15431164901664,
                "explored_percent_none": 3.177004538577912,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 120,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 97,
                "num_values_explored": 661,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2904663560912013,
            "num_unique_values": 172,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.76470588235294,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 51.204819277108435,
                "kept_percent_lambda": 48.795180722891565,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 88,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 81,
                "num_values_explored": 272,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11944960593245924,
            "num_unique_values": 92,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.72839506172839,
                "explored_percent_lambda": 30.246913580246915,
                "explored_percent_none": 8.024691358024691,
                "kept_percent_concrete": 50.588235294117645,
                "kept_percent_lambda": 49.411764705882355,
                "num_examples": 2,
                "num_explored_concrete": 100,
                "num_explored_lambda": 49,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 43,
                "num_kept_lambda": 42,
                "num_values_explored": 162,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5841392290312797,
            "num_unique_values": 433,
            "solution": "IntDivide(Last(fn_9(Last(x2), x1, x1)), -1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51290591174022,
                "explored_percent_lambda": 8.742714404662781,
                "explored_percent_none": 6.7443796835970025,
                "kept_percent_concrete": 82.43559718969556,
                "kept_percent_lambda": 17.56440281030445,
                "num_examples": 5,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 105,
                "num_explored_none": 81,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 75,
                "num_values_explored": 1201,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1201
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55867859814316,
            "num_unique_values": 313,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.85230024213075,
                "explored_percent_lambda": 15.49636803874092,
                "explored_percent_none": 67.65133171912834,
                "kept_percent_concrete": 64.28571428571429,
                "kept_percent_lambda": 35.714285714285715,
                "num_examples": 5,
                "num_explored_concrete": 1044,
                "num_explored_lambda": 960,
                "num_explored_none": 4191,
                "num_inputs": 1,
                "num_kept_concrete": 198,
                "num_kept_lambda": 110,
                "num_values_explored": 6195,
                "num_values_kept": 308,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63671
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22176568116992712,
            "num_unique_values": 164,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.6,
                "explored_percent_lambda": 47.6,
                "explored_percent_none": 6.8,
                "kept_percent_concrete": 35.22012578616352,
                "kept_percent_lambda": 64.77987421383648,
                "num_examples": 3,
                "num_explored_concrete": 114,
                "num_explored_lambda": 119,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 103,
                "num_values_explored": 250,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2453578340355307,
            "num_unique_values": 250,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.33830845771145,
                "explored_percent_lambda": 7.711442786069652,
                "explored_percent_none": 9.950248756218905,
                "kept_percent_concrete": 89.34426229508196,
                "kept_percent_lambda": 10.655737704918034,
                "num_examples": 5,
                "num_explored_concrete": 331,
                "num_explored_lambda": 31,
                "num_explored_none": 40,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 26,
                "num_values_explored": 402,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 402
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3854113391134888,
            "num_unique_values": 336,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.43267776096823,
                "explored_percent_lambda": 21.02874432677761,
                "explored_percent_none": 4.53857791225416,
                "kept_percent_concrete": 68.78787878787878,
                "kept_percent_lambda": 31.21212121212121,
                "num_examples": 3,
                "num_explored_concrete": 492,
                "num_explored_lambda": 139,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 103,
                "num_values_explored": 661,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 60.1706236039754,
            "num_unique_values": 272,
            "solution": "Subtract(Add(Square(Add(x1, x1)), Multiply(Square(x1), Max(x1, 1))), Square(x1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 16.5940977261732,
                "explored_percent_lambda": 15.820029027576197,
                "explored_percent_none": 67.5858732462506,
                "kept_percent_concrete": 57.30337078651685,
                "kept_percent_lambda": 42.69662921348315,
                "num_examples": 2,
                "num_explored_concrete": 1029,
                "num_explored_lambda": 981,
                "num_explored_none": 4191,
                "num_inputs": 1,
                "num_kept_concrete": 153,
                "num_kept_lambda": 114,
                "num_values_explored": 6201,
                "num_values_kept": 267,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 40001
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3984461920335889,
            "num_unique_values": 280,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.42042042042043,
                "explored_percent_lambda": 19.36936936936937,
                "explored_percent_none": 10.21021021021021,
                "kept_percent_concrete": 66.05839416058394,
                "kept_percent_lambda": 33.941605839416056,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 129,
                "num_explored_none": 68,
                "num_inputs": 2,
                "num_kept_concrete": 181,
                "num_kept_lambda": 93,
                "num_values_explored": 666,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 666
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2658212329261005,
            "num_unique_values": 302,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.04194260485652,
                "explored_percent_lambda": 16.11479028697572,
                "explored_percent_none": 6.843267108167771,
                "kept_percent_concrete": 77.36486486486487,
                "kept_percent_lambda": 22.635135135135137,
                "num_examples": 3,
                "num_explored_concrete": 349,
                "num_explored_lambda": 73,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 67,
                "num_values_explored": 453,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34097519796342,
            "num_unique_values": 1171,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.941332742971,
                "explored_percent_lambda": 39.78304184193048,
                "explored_percent_none": 15.275625415098517,
                "kept_percent_concrete": 45.96912521440823,
                "kept_percent_lambda": 54.03087478559177,
                "num_examples": 2,
                "num_explored_concrete": 2030,
                "num_explored_lambda": 1797,
                "num_explored_none": 690,
                "num_inputs": 1,
                "num_kept_concrete": 536,
                "num_kept_lambda": 630,
                "num_values_explored": 4517,
                "num_values_kept": 1166,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53759
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2614544660318643,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.06642066420664,
                "explored_percent_lambda": 49.81549815498155,
                "explored_percent_none": 8.118081180811808,
                "kept_percent_concrete": 26.573426573426573,
                "kept_percent_lambda": 73.42657342657343,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 135,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 105,
                "num_values_explored": 271,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4475599250290543,
            "num_unique_values": 337,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.5839636913767,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 4.236006051437216,
                "kept_percent_concrete": 68.58006042296073,
                "kept_percent_lambda": 31.419939577039276,
                "num_examples": 5,
                "num_explored_concrete": 493,
                "num_explored_lambda": 140,
                "num_explored_none": 28,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 104,
                "num_values_explored": 661,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 50.80133103416301,
            "num_unique_values": 1013,
            "solution": "Min(Subtract(x1, If(IsEven(x1), Head(x2), Sum(x2))), Subtract(x3, Sum(x2)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 68.79411323021475,
                "explored_percent_lambda": 9.13050007508635,
                "explored_percent_none": 22.075386694698903,
                "kept_percent_concrete": 74.15506958250496,
                "kept_percent_lambda": 25.84493041749503,
                "num_examples": 2,
                "num_explored_concrete": 4581,
                "num_explored_lambda": 608,
                "num_explored_none": 1470,
                "num_inputs": 3,
                "num_kept_concrete": 746,
                "num_kept_lambda": 260,
                "num_values_explored": 6659,
                "num_values_kept": 1006,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 34117
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.42596656316891,
            "num_unique_values": 1237,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.55868544600939,
                "explored_percent_lambda": 44.95305164319249,
                "explored_percent_none": 22.488262910798124,
                "kept_percent_concrete": 42.20779220779221,
                "kept_percent_lambda": 57.79220779220779,
                "num_examples": 2,
                "num_explored_concrete": 1387,
                "num_explored_lambda": 1915,
                "num_explored_none": 958,
                "num_inputs": 1,
                "num_kept_concrete": 520,
                "num_kept_lambda": 712,
                "num_values_explored": 4260,
                "num_values_kept": 1232,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44983
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.23721469403245,
            "num_unique_values": 1116,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.9816337239811,
                "explored_percent_lambda": 18.38376771033759,
                "explored_percent_none": 16.6345985656813,
                "kept_percent_concrete": 55.355535553555356,
                "kept_percent_lambda": 44.644464446444644,
                "num_examples": 2,
                "num_explored_concrete": 3715,
                "num_explored_lambda": 1051,
                "num_explored_none": 951,
                "num_inputs": 1,
                "num_kept_concrete": 615,
                "num_kept_lambda": 496,
                "num_values_explored": 5717,
                "num_values_kept": 1111,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56620
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 49.482028444996104,
            "num_unique_values": 308,
            "solution": "Min(IntDivide(Subtract(x1, x2), Min(x2, 1)), Add(Subtract(x1, x2), Square(Min(x2, -1))))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 19.489414694894148,
                "explored_percent_lambda": 12.889165628891655,
                "explored_percent_none": 67.6214196762142,
                "kept_percent_concrete": 62.25165562913907,
                "kept_percent_lambda": 37.74834437086093,
                "num_examples": 2,
                "num_explored_concrete": 1252,
                "num_explored_lambda": 828,
                "num_explored_none": 4344,
                "num_inputs": 2,
                "num_kept_concrete": 188,
                "num_kept_lambda": 114,
                "num_values_explored": 6424,
                "num_values_kept": 302,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 35186
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69499918981455,
            "num_unique_values": 751,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.84878048780488,
                "explored_percent_lambda": 27.102439024390243,
                "explored_percent_none": 30.048780487804876,
                "kept_percent_concrete": 38.92617449664429,
                "kept_percent_lambda": 61.07382550335571,
                "num_examples": 4,
                "num_explored_concrete": 2196,
                "num_explored_lambda": 1389,
                "num_explored_none": 1540,
                "num_inputs": 2,
                "num_kept_concrete": 290,
                "num_kept_lambda": 455,
                "num_values_explored": 5125,
                "num_values_kept": 745,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55263
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22657383303157985,
            "num_unique_values": 201,
            "solution": "fn_9(1, x1, x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 58.333333333333336,
                "explored_percent_lambda": 35.57692307692308,
                "explored_percent_none": 6.089743589743589,
                "kept_percent_concrete": 51.794871794871796,
                "kept_percent_lambda": 48.205128205128204,
                "num_examples": 3,
                "num_explored_concrete": 182,
                "num_explored_lambda": 111,
                "num_explored_none": 19,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 94,
                "num_values_explored": 312,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88347739097662,
            "num_unique_values": 1082,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.41309113686188,
                "explored_percent_lambda": 12.809270278734733,
                "explored_percent_none": 19.777638584403384,
                "kept_percent_concrete": 74.28040854224699,
                "kept_percent_lambda": 25.71959145775302,
                "num_examples": 4,
                "num_explored_concrete": 4305,
                "num_explored_lambda": 818,
                "num_explored_none": 1263,
                "num_inputs": 1,
                "num_kept_concrete": 800,
                "num_kept_lambda": 277,
                "num_values_explored": 6386,
                "num_values_kept": 1077,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65277
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.46016258210875,
            "num_unique_values": 259,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.612104539202202,
                "explored_percent_lambda": 26.323933975240717,
                "explored_percent_none": 58.06396148555709,
                "kept_percent_concrete": 33.07086614173228,
                "kept_percent_lambda": 66.92913385826772,
                "num_examples": 5,
                "num_explored_concrete": 908,
                "num_explored_lambda": 1531,
                "num_explored_none": 3377,
                "num_inputs": 1,
                "num_kept_concrete": 84,
                "num_kept_lambda": 170,
                "num_values_explored": 5816,
                "num_values_kept": 254,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60093
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27939949510619044,
            "num_unique_values": 259,
            "solution": "Take(Count((lambda u1: IsOdd(-1)), x3), fn_9(Multiply(x1, -1), x2, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.41589648798521,
                "explored_percent_lambda": 20.147874306839185,
                "explored_percent_none": 4.436229205175601,
                "kept_percent_concrete": 67.06349206349206,
                "kept_percent_lambda": 32.93650793650794,
                "num_examples": 2,
                "num_explored_concrete": 408,
                "num_explored_lambda": 109,
                "num_explored_none": 24,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 83,
                "num_values_explored": 541,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 89.66516484692693,
            "num_unique_values": 316,
            "solution": "Min(IntDivide(Subtract(x2, x1), Add(x2, 1)), IntDivide(x1, Square(Subtract(-1, 1))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 17.771419488157687,
                "explored_percent_lambda": 14.751231918613893,
                "explored_percent_none": 67.47734859322843,
                "kept_percent_concrete": 60.645161290322584,
                "kept_percent_lambda": 39.354838709677416,
                "num_examples": 2,
                "num_explored_concrete": 1118,
                "num_explored_lambda": 928,
                "num_explored_none": 4245,
                "num_inputs": 2,
                "num_kept_concrete": 188,
                "num_kept_lambda": 122,
                "num_values_explored": 6291,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 64353
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2020889618434012,
            "num_unique_values": 185,
            "solution": "fn_9(Multiply(x1, -1), x3, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.17948717948718,
                "explored_percent_lambda": 29.807692307692307,
                "explored_percent_none": 8.012820512820513,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 93,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 312,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32248317799530923,
            "num_unique_values": 358,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 79.42122186495178,
                "explored_percent_lambda": 16.881028938906752,
                "explored_percent_none": 3.697749196141479,
                "kept_percent_concrete": 73.78917378917379,
                "kept_percent_lambda": 26.210826210826212,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 105,
                "num_explored_none": 23,
                "num_inputs": 3,
                "num_kept_concrete": 259,
                "num_kept_lambda": 92,
                "num_values_explored": 622,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 69.01095488388091,
            "num_unique_values": 305,
            "solution": "Max(Min(Add(x2, x2), Add(x1, Max(1, Subtract(x1, x2)))), Add(x1, IntDivide(Add(x1, 1), x2)))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 20.87895142636854,
                "explored_percent_lambda": 9.575944487278335,
                "explored_percent_none": 69.54510408635312,
                "kept_percent_concrete": 76.5886287625418,
                "kept_percent_lambda": 23.411371237458194,
                "num_examples": 4,
                "num_explored_concrete": 1354,
                "num_explored_lambda": 621,
                "num_explored_none": 4510,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 70,
                "num_values_explored": 6485,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 53690
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09854273800738,
            "num_unique_values": 1317,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.26935735319591,
                "explored_percent_lambda": 20.249437034470812,
                "explored_percent_none": 14.481205612333275,
                "kept_percent_concrete": 61.50914634146341,
                "kept_percent_lambda": 38.49085365853659,
                "num_examples": 5,
                "num_explored_concrete": 3768,
                "num_explored_lambda": 1169,
                "num_explored_none": 836,
                "num_inputs": 1,
                "num_kept_concrete": 807,
                "num_kept_lambda": 505,
                "num_values_explored": 5773,
                "num_values_kept": 1312,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59300
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2179817259311676,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 33.57142857142857,
                "explored_percent_none": 9.285714285714286,
                "kept_percent_concrete": 48.23529411764706,
                "kept_percent_lambda": 51.76470588235294,
                "num_examples": 5,
                "num_explored_concrete": 160,
                "num_explored_lambda": 94,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07135494612157,
            "num_unique_values": 1124,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.7493549576115,
                "explored_percent_lambda": 21.65499447106524,
                "explored_percent_none": 18.595650571323258,
                "kept_percent_concrete": 59.24932975871314,
                "kept_percent_lambda": 40.75067024128686,
                "num_examples": 3,
                "num_explored_concrete": 3242,
                "num_explored_lambda": 1175,
                "num_explored_none": 1009,
                "num_inputs": 1,
                "num_kept_concrete": 663,
                "num_kept_lambda": 456,
                "num_values_explored": 5426,
                "num_values_kept": 1119,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55819
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.41220164601691067,
            "num_unique_values": 322,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.3609022556391,
                "explored_percent_lambda": 30.526315789473685,
                "explored_percent_none": 5.112781954887218,
                "kept_percent_concrete": 55.379746835443036,
                "kept_percent_lambda": 44.620253164556964,
                "num_examples": 4,
                "num_explored_concrete": 428,
                "num_explored_lambda": 203,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 141,
                "num_values_explored": 665,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.099001487949863,
            "num_unique_values": 1029,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.77749790092359,
                "explored_percent_lambda": 20.52896725440806,
                "explored_percent_none": 14.693534844668346,
                "kept_percent_concrete": 72.70058708414872,
                "kept_percent_lambda": 27.29941291585127,
                "num_examples": 5,
                "num_explored_concrete": 1543,
                "num_explored_lambda": 489,
                "num_explored_none": 350,
                "num_inputs": 3,
                "num_kept_concrete": 743,
                "num_kept_lambda": 279,
                "num_values_explored": 2382,
                "num_values_kept": 1022,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10658
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3606746660079807,
            "num_unique_values": 302,
            "solution": "Take(fn_11(x2, x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.77079482439926,
                "explored_percent_lambda": 31.97781885397412,
                "explored_percent_none": 4.251386321626617,
                "kept_percent_concrete": 54.729729729729726,
                "kept_percent_lambda": 45.270270270270274,
                "num_examples": 5,
                "num_explored_concrete": 345,
                "num_explored_lambda": 173,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 162,
                "num_kept_lambda": 134,
                "num_values_explored": 541,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.73928249208257,
            "num_unique_values": 689,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.18342266963002,
                "explored_percent_lambda": 8.118708327885999,
                "explored_percent_none": 38.69786900248398,
                "kept_percent_concrete": 74.08491947291361,
                "kept_percent_lambda": 25.915080527086385,
                "num_examples": 5,
                "num_explored_concrete": 4068,
                "num_explored_lambda": 621,
                "num_explored_none": 2960,
                "num_inputs": 2,
                "num_kept_concrete": 506,
                "num_kept_lambda": 177,
                "num_values_explored": 7649,
                "num_values_kept": 683,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77894
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.87920861807652,
            "num_unique_values": 906,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.764532744665196,
                "explored_percent_lambda": 25.662251655629138,
                "explored_percent_none": 19.573215599705666,
                "kept_percent_concrete": 42.22222222222222,
                "kept_percent_lambda": 57.77777777777778,
                "num_examples": 2,
                "num_explored_concrete": 2977,
                "num_explored_lambda": 1395,
                "num_explored_none": 1064,
                "num_inputs": 2,
                "num_kept_concrete": 380,
                "num_kept_lambda": 520,
                "num_values_explored": 5436,
                "num_values_kept": 900,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58968
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72315316088498,
            "num_unique_values": 243,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.976595062520037,
                "explored_percent_lambda": 18.21096505290157,
                "explored_percent_none": 64.8124398845784,
                "kept_percent_concrete": 39.91596638655462,
                "kept_percent_lambda": 60.08403361344538,
                "num_examples": 4,
                "num_explored_concrete": 1059,
                "num_explored_lambda": 1136,
                "num_explored_none": 4043,
                "num_inputs": 1,
                "num_kept_concrete": 95,
                "num_kept_lambda": 143,
                "num_values_explored": 6238,
                "num_values_kept": 238,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65725
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.26940561505035,
            "num_unique_values": 1236,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.12367491166078,
                "explored_percent_lambda": 27.859401153059327,
                "explored_percent_none": 17.016923935279895,
                "kept_percent_concrete": 57.642276422764226,
                "kept_percent_lambda": 42.357723577235774,
                "num_examples": 4,
                "num_explored_concrete": 2964,
                "num_explored_lambda": 1498,
                "num_explored_none": 915,
                "num_inputs": 2,
                "num_kept_concrete": 709,
                "num_kept_lambda": 521,
                "num_values_explored": 5377,
                "num_values_kept": 1230,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57063
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08137718494982,
            "num_unique_values": 1210,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.17904880323283,
                "explored_percent_lambda": 14.951818464407834,
                "explored_percent_none": 12.869132732359342,
                "kept_percent_concrete": 69.54356846473028,
                "kept_percent_lambda": 30.456431535269708,
                "num_examples": 3,
                "num_explored_concrete": 4644,
                "num_explored_lambda": 962,
                "num_explored_none": 828,
                "num_inputs": 1,
                "num_kept_concrete": 838,
                "num_kept_lambda": 367,
                "num_values_explored": 6434,
                "num_values_kept": 1205,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66202
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32533270586282015,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.0196671709531,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 11.800302571860817,
                "kept_percent_concrete": 59.36073059360731,
                "kept_percent_lambda": 40.63926940639269,
                "num_examples": 2,
                "num_explored_concrete": 443,
                "num_explored_lambda": 140,
                "num_explored_none": 78,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 89,
                "num_values_explored": 661,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.63874297705479,
            "num_unique_values": 299,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 13.33993726267129,
                "explored_percent_lambda": 21.627868581806176,
                "explored_percent_none": 65.03219415552253,
                "kept_percent_concrete": 46.93877551020408,
                "kept_percent_lambda": 53.06122448979592,
                "num_examples": 4,
                "num_explored_concrete": 808,
                "num_explored_lambda": 1310,
                "num_explored_none": 3939,
                "num_inputs": 1,
                "num_kept_concrete": 138,
                "num_kept_lambda": 156,
                "num_values_explored": 6057,
                "num_values_kept": 294,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59924
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03615729510784,
            "num_unique_values": 1516,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.86760888376118,
                "explored_percent_lambda": 13.138159792327661,
                "explored_percent_none": 9.994231323911162,
                "kept_percent_concrete": 73.17880794701986,
                "kept_percent_lambda": 26.821192052980134,
                "num_examples": 2,
                "num_explored_concrete": 5330,
                "num_explored_lambda": 911,
                "num_explored_none": 693,
                "num_inputs": 2,
                "num_kept_concrete": 1105,
                "num_kept_lambda": 405,
                "num_values_explored": 6934,
                "num_values_kept": 1510,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71000
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12329192808829,
            "num_unique_values": 1396,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.51680551565642,
                "explored_percent_lambda": 9.04912381499569,
                "explored_percent_none": 19.43407066934789,
                "kept_percent_concrete": 82.3021582733813,
                "kept_percent_lambda": 17.697841726618705,
                "num_examples": 5,
                "num_explored_concrete": 4979,
                "num_explored_lambda": 630,
                "num_explored_none": 1353,
                "num_inputs": 2,
                "num_kept_concrete": 1144,
                "num_kept_lambda": 246,
                "num_values_explored": 6962,
                "num_values_kept": 1390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71519
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16338905482553,
            "num_unique_values": 1332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.87746305418719,
                "explored_percent_lambda": 16.00985221674877,
                "explored_percent_none": 8.11268472906404,
                "kept_percent_concrete": 69.25395629238885,
                "kept_percent_lambda": 30.746043707611154,
                "num_examples": 3,
                "num_explored_concrete": 4929,
                "num_explored_lambda": 1040,
                "num_explored_none": 527,
                "num_inputs": 1,
                "num_kept_concrete": 919,
                "num_kept_lambda": 408,
                "num_values_explored": 6496,
                "num_values_kept": 1327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63005
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21377628017217,
            "num_unique_values": 1802,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.71524186188013,
                "explored_percent_lambda": 11.86492242166109,
                "explored_percent_none": 10.419835716458778,
                "kept_percent_concrete": 79.73273942093542,
                "kept_percent_lambda": 20.267260579064587,
                "num_examples": 5,
                "num_explored_concrete": 5109,
                "num_explored_lambda": 780,
                "num_explored_none": 685,
                "num_inputs": 2,
                "num_kept_concrete": 1432,
                "num_kept_lambda": 364,
                "num_values_explored": 6574,
                "num_values_kept": 1796,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67559
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.30552345188335,
            "num_unique_values": 1471,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.252587198160214,
                "explored_percent_lambda": 37.86891529321579,
                "explored_percent_none": 12.878497508623994,
                "kept_percent_concrete": 56.957708049113236,
                "kept_percent_lambda": 43.042291950886764,
                "num_examples": 2,
                "num_explored_concrete": 2570,
                "num_explored_lambda": 1976,
                "num_explored_none": 672,
                "num_inputs": 1,
                "num_kept_concrete": 835,
                "num_kept_lambda": 631,
                "num_values_explored": 5218,
                "num_values_kept": 1466,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56699
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97962793614715,
            "num_unique_values": 1437,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.24844376815604,
                "explored_percent_lambda": 8.618066122561903,
                "explored_percent_none": 15.133490109282059,
                "kept_percent_concrete": 82.0979020979021,
                "kept_percent_lambda": 17.902097902097903,
                "num_examples": 4,
                "num_explored_concrete": 5512,
                "num_explored_lambda": 623,
                "num_explored_none": 1094,
                "num_inputs": 3,
                "num_kept_concrete": 1174,
                "num_kept_lambda": 256,
                "num_values_explored": 7229,
                "num_values_kept": 1430,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73062
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5995949080679566,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: Add(Sum(fn_9(IntDivide(Head(x1), Square(Add(-1, -1))), x1, x1)), -1)), x1)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67334446299388,
                "explored_percent_lambda": 16.30495269894268,
                "explored_percent_none": 13.021702838063439,
                "kept_percent_concrete": 37.58389261744966,
                "kept_percent_lambda": 62.41610738255034,
                "num_examples": 2,
                "num_explored_concrete": 1270,
                "num_explored_lambda": 293,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 93,
                "num_values_explored": 1797,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1797
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.91310867504217,
            "num_unique_values": 1423,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.14715543292603,
                "explored_percent_lambda": 5.807384049402181,
                "explored_percent_none": 14.04546051767179,
                "kept_percent_concrete": 86.93502824858757,
                "kept_percent_lambda": 13.064971751412429,
                "num_examples": 4,
                "num_explored_concrete": 6100,
                "num_explored_lambda": 442,
                "num_explored_none": 1069,
                "num_inputs": 3,
                "num_kept_concrete": 1231,
                "num_kept_lambda": 185,
                "num_values_explored": 7611,
                "num_values_kept": 1416,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 77296
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.29976175003685,
            "num_unique_values": 1087,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.88202383848212,
                "explored_percent_lambda": 44.368766723424955,
                "explored_percent_none": 20.749209438092922,
                "kept_percent_concrete": 40.85027726432532,
                "kept_percent_lambda": 59.14972273567468,
                "num_examples": 3,
                "num_explored_concrete": 1434,
                "num_explored_lambda": 1824,
                "num_explored_none": 853,
                "num_inputs": 1,
                "num_kept_concrete": 442,
                "num_kept_lambda": 640,
                "num_values_explored": 4111,
                "num_values_kept": 1082,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 44836
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71818021708168,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.857116139891527,
                "explored_percent_lambda": 25.472227417243314,
                "explored_percent_none": 62.67065644286516,
                "kept_percent_concrete": 36.434108527131784,
                "kept_percent_lambda": 63.565891472868216,
                "num_examples": 4,
                "num_explored_concrete": 634,
                "num_explored_lambda": 1362,
                "num_explored_none": 3351,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 164,
                "num_values_explored": 5347,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59720
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12704662885517,
            "num_unique_values": 1288,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.2383229128356,
                "explored_percent_lambda": 28.94446487679294,
                "explored_percent_none": 12.81721221037146,
                "kept_percent_concrete": 55.65081839438815,
                "kept_percent_lambda": 44.34918160561185,
                "num_examples": 2,
                "num_explored_concrete": 3167,
                "num_explored_lambda": 1574,
                "num_explored_none": 697,
                "num_inputs": 1,
                "num_kept_concrete": 714,
                "num_kept_lambda": 569,
                "num_values_explored": 5438,
                "num_values_kept": 1283,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57841
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 11.037649733014405,
            "num_unique_values": 1618,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(Last(x1), ((lambda v1: IsOdd(v1)))(v1))))(u1)), x2))), x3)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 78.40138508151782,
                "explored_percent_lambda": 13.215986149184822,
                "explored_percent_none": 8.38262876929736,
                "kept_percent_concrete": 75.23277467411546,
                "kept_percent_lambda": 24.767225325884542,
                "num_examples": 5,
                "num_explored_concrete": 5434,
                "num_explored_lambda": 916,
                "num_explored_none": 581,
                "num_inputs": 3,
                "num_kept_concrete": 1212,
                "num_kept_lambda": 399,
                "num_values_explored": 6931,
                "num_values_kept": 1611,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 10051
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.32487780111842,
            "num_unique_values": 961,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Take(fn_11(x2, fn_14(x2)), Sort(Scanl1((lambda u1, u2: Add(-1, -1)), x1))))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 62.013256006628005,
                "explored_percent_lambda": 25.973487986743994,
                "explored_percent_none": 12.013256006628003,
                "kept_percent_concrete": 49.424083769633505,
                "kept_percent_lambda": 50.575916230366495,
                "num_examples": 2,
                "num_explored_concrete": 2994,
                "num_explored_lambda": 1254,
                "num_explored_none": 580,
                "num_inputs": 2,
                "num_kept_concrete": 472,
                "num_kept_lambda": 483,
                "num_values_explored": 4828,
                "num_values_kept": 955,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 27542
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11925735883415,
            "num_unique_values": 661,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.49827274222734,
                "explored_percent_lambda": 21.23704556670505,
                "explored_percent_none": 29.26468169106761,
                "kept_percent_concrete": 50.30487804878049,
                "kept_percent_lambda": 49.69512195121951,
                "num_examples": 3,
                "num_explored_concrete": 3009,
                "num_explored_lambda": 1291,
                "num_explored_none": 1779,
                "num_inputs": 1,
                "num_kept_concrete": 330,
                "num_kept_lambda": 326,
                "num_values_explored": 6079,
                "num_values_kept": 656,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61275
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.23964013997465,
            "num_unique_values": 1967,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.70489844683394,
                "explored_percent_lambda": 7.093787335722819,
                "explored_percent_none": 12.20131421744325,
                "kept_percent_concrete": 89.03061224489795,
                "kept_percent_lambda": 10.96938775510204,
                "num_examples": 5,
                "num_explored_concrete": 5404,
                "num_explored_lambda": 475,
                "num_explored_none": 817,
                "num_inputs": 3,
                "num_kept_concrete": 1745,
                "num_kept_lambda": 215,
                "num_values_explored": 6696,
                "num_values_kept": 1960,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70049
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 38.25446116901003,
            "num_unique_values": 980,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), fn_14(Scanl1((lambda u1, u2: ((lambda v1: IntDivide(-1, v1)))(u2)), Map((lambda u1: Min(x1, 1)), x2))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 59.7027972027972,
                "explored_percent_lambda": 19.64597902097902,
                "explored_percent_none": 20.651223776223777,
                "kept_percent_concrete": 64.13155190133607,
                "kept_percent_lambda": 35.868448098663926,
                "num_examples": 4,
                "num_explored_concrete": 2732,
                "num_explored_lambda": 899,
                "num_explored_none": 945,
                "num_inputs": 3,
                "num_kept_concrete": 624,
                "num_kept_lambda": 349,
                "num_values_explored": 4576,
                "num_values_kept": 973,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 25328
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17175468499772,
            "num_unique_values": 1430,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.66034088912318,
                "explored_percent_lambda": 23.422948515199437,
                "explored_percent_none": 13.916710595677385,
                "kept_percent_concrete": 64.91228070175438,
                "kept_percent_lambda": 35.08771929824562,
                "num_examples": 2,
                "num_explored_concrete": 3566,
                "num_explored_lambda": 1333,
                "num_explored_none": 792,
                "num_inputs": 1,
                "num_kept_concrete": 925,
                "num_kept_lambda": 500,
                "num_values_explored": 5691,
                "num_values_kept": 1425,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58707
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.94840088416822,
            "num_unique_values": 1458,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.50871080139373,
                "explored_percent_lambda": 9.533101045296167,
                "explored_percent_none": 11.958188153310104,
                "kept_percent_concrete": 82.57575757575758,
                "kept_percent_lambda": 17.424242424242426,
                "num_examples": 3,
                "num_explored_concrete": 5633,
                "num_explored_lambda": 684,
                "num_explored_none": 858,
                "num_inputs": 2,
                "num_kept_concrete": 1199,
                "num_kept_lambda": 253,
                "num_values_explored": 7175,
                "num_values_kept": 1452,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73828
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58631454291753,
            "num_unique_values": 349,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.239756971490888,
                "explored_percent_lambda": 16.24863685932388,
                "explored_percent_none": 64.51160616918523,
                "kept_percent_concrete": 60.64139941690962,
                "kept_percent_lambda": 39.35860058309038,
                "num_examples": 4,
                "num_explored_concrete": 1235,
                "num_explored_lambda": 1043,
                "num_explored_none": 4141,
                "num_inputs": 2,
                "num_kept_concrete": 208,
                "num_kept_lambda": 135,
                "num_values_explored": 6419,
                "num_values_kept": 343,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67207
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 95.20344167808071,
            "num_unique_values": 757,
            "solution": "Add(1, fn_24((lambda u1: fn_21(fn_9(Square(fn_3(ZipWith((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u2)), x1, Reverse(x1)), Head(x1))), x1, x1))), x1))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 62.75808336579665,
                "explored_percent_lambda": 21.464744838332685,
                "explored_percent_none": 15.777171795870666,
                "kept_percent_concrete": 73.93617021276596,
                "kept_percent_lambda": 26.06382978723404,
                "num_examples": 5,
                "num_explored_concrete": 1611,
                "num_explored_lambda": 551,
                "num_explored_none": 405,
                "num_inputs": 1,
                "num_kept_concrete": 556,
                "num_kept_lambda": 196,
                "num_values_explored": 2567,
                "num_values_kept": 752,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63134
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 29.0147151730489,
            "num_unique_values": 1090,
            "solution": "Min(x2, Add(-1, fn_24((lambda u1: fn_9(Square(fn_3(Map((lambda u1: ((lambda v1: Subtract(Square(x2), v1)))(u1)), fn_21(x1)), x2)), x1, x1)), x1)))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 72.85308729595458,
                "explored_percent_lambda": 9.528034066713982,
                "explored_percent_none": 17.61887863733144,
                "kept_percent_concrete": 82.19557195571956,
                "kept_percent_lambda": 17.804428044280442,
                "num_examples": 4,
                "num_explored_concrete": 4106,
                "num_explored_lambda": 537,
                "num_explored_none": 993,
                "num_inputs": 2,
                "num_kept_concrete": 891,
                "num_kept_lambda": 193,
                "num_values_explored": 5636,
                "num_values_kept": 1084,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 22621
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.60025174217299,
            "num_unique_values": 267,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.59051370425078,
                "explored_percent_lambda": 17.971442639094043,
                "explored_percent_none": 67.43804365665518,
                "kept_percent_concrete": 47.32824427480916,
                "kept_percent_lambda": 52.67175572519084,
                "num_examples": 3,
                "num_explored_concrete": 889,
                "num_explored_lambda": 1095,
                "num_explored_none": 4109,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 138,
                "num_values_explored": 6093,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63053
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.128110592952,
            "num_unique_values": 1149,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.630087209302324,
                "explored_percent_lambda": 27.9796511627907,
                "explored_percent_none": 13.390261627906977,
                "kept_percent_concrete": 58.180227471566056,
                "kept_percent_lambda": 41.819772528433944,
                "num_examples": 3,
                "num_explored_concrete": 3227,
                "num_explored_lambda": 1540,
                "num_explored_none": 737,
                "num_inputs": 2,
                "num_kept_concrete": 665,
                "num_kept_lambda": 478,
                "num_values_explored": 5504,
                "num_values_kept": 1143,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62437
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27316566091031,
            "num_unique_values": 796,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.196294151708166,
                "explored_percent_lambda": 29.859100559737502,
                "explored_percent_none": 26.94460528855433,
                "kept_percent_concrete": 52.718078381795195,
                "kept_percent_lambda": 47.281921618204805,
                "num_examples": 5,
                "num_explored_concrete": 2238,
                "num_explored_lambda": 1547,
                "num_explored_none": 1396,
                "num_inputs": 1,
                "num_kept_concrete": 417,
                "num_kept_lambda": 374,
                "num_values_explored": 5181,
                "num_values_kept": 791,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56110
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.69647120102309,
            "num_unique_values": 1347,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 62.28085709226138,
                "explored_percent_lambda": 20.913759518328316,
                "explored_percent_none": 16.805383389410306,
                "kept_percent_concrete": 64.82861400894188,
                "kept_percent_lambda": 35.17138599105812,
                "num_examples": 5,
                "num_explored_concrete": 3517,
                "num_explored_lambda": 1181,
                "num_explored_none": 949,
                "num_inputs": 1,
                "num_kept_concrete": 870,
                "num_kept_lambda": 472,
                "num_values_explored": 5647,
                "num_values_kept": 1342,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.92875284492038,
            "num_unique_values": 814,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.92803372478169,
                "explored_percent_lambda": 16.064438422162,
                "explored_percent_none": 25.00752785305631,
                "kept_percent_concrete": 62.422744128553774,
                "kept_percent_lambda": 37.577255871446226,
                "num_examples": 2,
                "num_explored_concrete": 3914,
                "num_explored_lambda": 1067,
                "num_explored_none": 1661,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 304,
                "num_values_explored": 6642,
                "num_values_kept": 809,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65534
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.41907953191549,
            "num_unique_values": 1007,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.6937984496124,
                "explored_percent_lambda": 29.9031007751938,
                "explored_percent_none": 22.4031007751938,
                "kept_percent_concrete": 57.58483033932136,
                "kept_percent_lambda": 42.41516966067864,
                "num_examples": 4,
                "num_explored_concrete": 2461,
                "num_explored_lambda": 1543,
                "num_explored_none": 1156,
                "num_inputs": 1,
                "num_kept_concrete": 577,
                "num_kept_lambda": 425,
                "num_values_explored": 5160,
                "num_values_kept": 1002,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55273
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8824283760041,
            "num_unique_values": 666,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.888888888888886,
                "explored_percent_lambda": 31.795150199058995,
                "explored_percent_none": 29.315960912052116,
                "kept_percent_concrete": 27.68532526475038,
                "kept_percent_lambda": 72.31467473524962,
                "num_examples": 2,
                "num_explored_concrete": 2149,
                "num_explored_lambda": 1757,
                "num_explored_none": 1620,
                "num_inputs": 1,
                "num_kept_concrete": 183,
                "num_kept_lambda": 478,
                "num_values_explored": 5526,
                "num_values_kept": 661,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56873
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2236623968929,
            "num_unique_values": 829,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 55.21202905896266,
                "explored_percent_lambda": 23.754012502111845,
                "explored_percent_none": 21.033958438925495,
                "kept_percent_concrete": 46.237864077669904,
                "kept_percent_lambda": 53.762135922330096,
                "num_examples": 2,
                "num_explored_concrete": 3268,
                "num_explored_lambda": 1406,
                "num_explored_none": 1245,
                "num_inputs": 1,
                "num_kept_concrete": 381,
                "num_kept_lambda": 443,
                "num_values_explored": 5919,
                "num_values_kept": 824,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62178
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47647725697607,
            "num_unique_values": 276,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.885066709532229,
                "explored_percent_lambda": 22.03825751486899,
                "explored_percent_none": 63.07667577559878,
                "kept_percent_concrete": 37.638376383763834,
                "kept_percent_lambda": 62.361623616236166,
                "num_examples": 2,
                "num_explored_concrete": 926,
                "num_explored_lambda": 1371,
                "num_explored_none": 3924,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 169,
                "num_values_explored": 6221,
                "num_values_kept": 271,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63401
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57280667498708,
            "num_unique_values": 262,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.809889173060528,
                "explored_percent_lambda": 26.138107416879794,
                "explored_percent_none": 63.052003410059676,
                "kept_percent_concrete": 31.1284046692607,
                "kept_percent_lambda": 68.8715953307393,
                "num_examples": 2,
                "num_explored_concrete": 634,
                "num_explored_lambda": 1533,
                "num_explored_none": 3698,
                "num_inputs": 1,
                "num_kept_concrete": 80,
                "num_kept_lambda": 177,
                "num_values_explored": 5865,
                "num_values_kept": 257,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59244
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76637600106187,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 7.30784547988849,
                "explored_percent_lambda": 37.05694942254082,
                "explored_percent_none": 55.63520509757069,
                "kept_percent_concrete": 11.538461538461538,
                "kept_percent_lambda": 88.46153846153847,
                "num_examples": 2,
                "num_explored_concrete": 367,
                "num_explored_lambda": 1861,
                "num_explored_none": 2794,
                "num_inputs": 2,
                "num_kept_concrete": 30,
                "num_kept_lambda": 230,
                "num_values_explored": 5022,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52266
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6045700837858,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.563049853372434,
                "explored_percent_lambda": 35.483870967741936,
                "explored_percent_none": 55.95307917888563,
                "kept_percent_concrete": 15.0,
                "kept_percent_lambda": 85.0,
                "num_examples": 2,
                "num_explored_concrete": 438,
                "num_explored_lambda": 1815,
                "num_explored_none": 2862,
                "num_inputs": 2,
                "num_kept_concrete": 39,
                "num_kept_lambda": 221,
                "num_values_explored": 5115,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52573
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.49930589599535,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.720649301623254,
                "explored_percent_lambda": 35.881464703661756,
                "explored_percent_none": 54.39788599471499,
                "kept_percent_concrete": 15.384615384615385,
                "kept_percent_lambda": 84.61538461538461,
                "num_examples": 2,
                "num_explored_concrete": 515,
                "num_explored_lambda": 1901,
                "num_explored_none": 2882,
                "num_inputs": 2,
                "num_kept_concrete": 40,
                "num_kept_lambda": 220,
                "num_values_explored": 5298,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52087
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57902658800595,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.027332704995288,
                "explored_percent_lambda": 33.34590009425071,
                "explored_percent_none": 55.626767200754,
                "kept_percent_concrete": 14.23076923076923,
                "kept_percent_lambda": 85.76923076923077,
                "num_examples": 2,
                "num_explored_concrete": 585,
                "num_explored_lambda": 1769,
                "num_explored_none": 2951,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 223,
                "num_values_explored": 5305,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53906
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09243683307432,
            "num_unique_values": 514,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.63639582226943,
                "explored_percent_lambda": 22.65887767746504,
                "explored_percent_none": 31.704726500265533,
                "kept_percent_concrete": 42.04322200392927,
                "kept_percent_lambda": 57.95677799607073,
                "num_examples": 2,
                "num_explored_concrete": 2578,
                "num_explored_lambda": 1280,
                "num_explored_none": 1791,
                "num_inputs": 1,
                "num_kept_concrete": 214,
                "num_kept_lambda": 295,
                "num_values_explored": 5649,
                "num_values_kept": 509,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61292
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.65117941913195,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.338442920532472,
                "explored_percent_lambda": 32.91649858814038,
                "explored_percent_none": 57.74505849132715,
                "kept_percent_concrete": 17.307692307692307,
                "kept_percent_lambda": 82.6923076923077,
                "num_examples": 3,
                "num_explored_concrete": 463,
                "num_explored_lambda": 1632,
                "num_explored_none": 2863,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 215,
                "num_values_explored": 4958,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63593
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.53
}