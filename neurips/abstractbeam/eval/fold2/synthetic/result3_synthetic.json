{
    "num_tasks": 100,
    "num_tasks_solved": 52,
    "results": [
        {
            "elapsed_time": 0.5973455021157861,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 52.38095238095238,
                "explored_percent_none": 4.761904761904762,
                "kept_percent_concrete": 30.87248322147651,
                "kept_percent_lambda": 69.12751677852349,
                "num_examples": 2,
                "num_explored_concrete": 99,
                "num_explored_lambda": 121,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17225751094520092,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.730627306273064,
                "explored_percent_lambda": 32.103321033210335,
                "explored_percent_none": 5.166051660516605,
                "kept_percent_concrete": 51.851851851851855,
                "kept_percent_lambda": 48.148148148148145,
                "num_examples": 3,
                "num_explored_concrete": 170,
                "num_explored_lambda": 87,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1263226259034127,
            "num_unique_values": 114,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.41618497109827,
                "explored_percent_lambda": 56.64739884393064,
                "explored_percent_none": 6.936416184971098,
                "kept_percent_concrete": 22.01834862385321,
                "kept_percent_lambda": 77.98165137614679,
                "num_examples": 5,
                "num_explored_concrete": 63,
                "num_explored_lambda": 98,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 85,
                "num_values_explored": 173,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 173
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6104047810658813,
            "num_unique_values": 350,
            "solution": "Reverse(fn_1(fn_1(fn_1(fn_1(Reverse(x1))))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.95310907237513,
                "explored_percent_lambda": 29.153924566768602,
                "explored_percent_none": 4.892966360856269,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 5,
                "num_explored_concrete": 647,
                "num_explored_lambda": 286,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 160,
                "num_values_explored": 981,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11093840701505542,
            "num_unique_values": 99,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.682119205298015,
                "explored_percent_lambda": 45.6953642384106,
                "explored_percent_none": 6.622516556291391,
                "kept_percent_concrete": 34.40860215053763,
                "kept_percent_lambda": 65.59139784946237,
                "num_examples": 4,
                "num_explored_concrete": 72,
                "num_explored_lambda": 69,
                "num_explored_none": 10,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 61,
                "num_values_explored": 151,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10939070791937411,
            "num_unique_values": 89,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 43.47826086956522,
                "explored_percent_lambda": 48.4472049689441,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 19.27710843373494,
                "kept_percent_lambda": 80.72289156626506,
                "num_examples": 4,
                "num_explored_concrete": 70,
                "num_explored_lambda": 78,
                "num_explored_none": 13,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 67,
                "num_values_explored": 161,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13860457995906472,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.395061728395063,
                "explored_percent_lambda": 66.04938271604938,
                "explored_percent_none": 5.555555555555555,
                "kept_percent_concrete": 12.612612612612613,
                "kept_percent_lambda": 87.38738738738739,
                "num_examples": 2,
                "num_explored_concrete": 46,
                "num_explored_lambda": 107,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 97,
                "num_values_explored": 162,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1465911502018571,
            "num_unique_values": 122,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 24.539877300613497,
                "explored_percent_lambda": 70.5521472392638,
                "explored_percent_none": 4.9079754601226995,
                "kept_percent_concrete": 13.675213675213675,
                "kept_percent_lambda": 86.32478632478633,
                "num_examples": 2,
                "num_explored_concrete": 40,
                "num_explored_lambda": 115,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 101,
                "num_values_explored": 163,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.8553042102139443,
            "num_unique_values": 268,
            "solution": "Scanl1((lambda u1, u2: Subtract(1, Add(-1, -1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.985680190930786,
                "explored_percent_lambda": 41.288782816229116,
                "explored_percent_none": 34.7255369928401,
                "kept_percent_concrete": 22.433460076045627,
                "kept_percent_lambda": 77.56653992395437,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 346,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 204,
                "num_values_explored": 838,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10405709990300238,
            "num_unique_values": 99,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 57.30994152046784,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 14.035087719298245,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 98,
                "num_explored_lambda": 49,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 48,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2565811490640044,
            "num_unique_values": 201,
            "solution": "fn_24((lambda u1: fn_14(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 75.97911227154047,
                "explored_percent_lambda": 11.488250652741515,
                "explored_percent_none": 12.532637075718016,
                "kept_percent_concrete": 81.02564102564102,
                "kept_percent_lambda": 18.974358974358974,
                "num_examples": 4,
                "num_explored_concrete": 291,
                "num_explored_lambda": 44,
                "num_explored_none": 48,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 37,
                "num_values_explored": 383,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16400672285817564,
            "num_unique_values": 77,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.59423503325942,
                "explored_percent_lambda": 19.068736141906875,
                "explored_percent_none": 48.3370288248337,
                "kept_percent_concrete": 40.27777777777778,
                "kept_percent_lambda": 59.72222222222222,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 86,
                "num_explored_none": 218,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 43,
                "num_values_explored": 451,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2431501429527998,
            "num_unique_values": 277,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.28087167070218,
                "explored_percent_lambda": 24.455205811138015,
                "explored_percent_none": 7.263922518159807,
                "kept_percent_concrete": 66.17647058823529,
                "kept_percent_lambda": 33.8235294117647,
                "num_examples": 4,
                "num_explored_concrete": 282,
                "num_explored_lambda": 101,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 92,
                "num_values_explored": 413,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21248056110925972,
            "num_unique_values": 220,
            "solution": "IntDivide(Square(Add(-1, -1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.16587677725119,
                "explored_percent_lambda": 23.222748815165875,
                "explored_percent_none": 11.611374407582938,
                "kept_percent_concrete": 63.72093023255814,
                "kept_percent_lambda": 36.27906976744186,
                "num_examples": 2,
                "num_explored_concrete": 275,
                "num_explored_lambda": 98,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 78,
                "num_values_explored": 422,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17951826099306345,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 55.71955719557196,
                "explored_percent_lambda": 37.638376383763834,
                "explored_percent_none": 6.642066420664206,
                "kept_percent_concrete": 46.103896103896105,
                "kept_percent_lambda": 53.896103896103895,
                "num_examples": 5,
                "num_explored_concrete": 151,
                "num_explored_lambda": 102,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 83,
                "num_values_explored": 271,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36450960696674883,
            "num_unique_values": 290,
            "solution": "IntDivide(Sum(fn_9(1, x1, x1)), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.00986436498151,
                "explored_percent_lambda": 18.249075215782984,
                "explored_percent_none": 9.741060419235511,
                "kept_percent_concrete": 60.70175438596491,
                "kept_percent_lambda": 39.29824561403509,
                "num_examples": 3,
                "num_explored_concrete": 584,
                "num_explored_lambda": 148,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 112,
                "num_values_explored": 811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 811
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17671699915081263,
            "num_unique_values": 178,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 59.40959409594096,
                "explored_percent_lambda": 36.53136531365314,
                "explored_percent_none": 4.059040590405904,
                "kept_percent_concrete": 51.16279069767442,
                "kept_percent_lambda": 48.83720930232558,
                "num_examples": 2,
                "num_explored_concrete": 161,
                "num_explored_lambda": 99,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 84,
                "num_values_explored": 271,
                "num_values_kept": 172,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2020878940820694,
            "num_unique_values": 162,
            "solution": "fn_1(Sort(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.23711340206186,
                "explored_percent_lambda": 43.6426116838488,
                "explored_percent_none": 15.120274914089347,
                "kept_percent_concrete": 28.662420382165607,
                "kept_percent_lambda": 71.3375796178344,
                "num_examples": 3,
                "num_explored_concrete": 120,
                "num_explored_lambda": 127,
                "num_explored_none": 44,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 112,
                "num_values_explored": 291,
                "num_values_kept": 157,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11157669802196324,
            "num_unique_values": 128,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 21.71945701357466,
                "explored_percent_none": 10.407239819004525,
                "kept_percent_concrete": 66.39344262295081,
                "kept_percent_lambda": 33.60655737704918,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 48,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 41,
                "num_values_explored": 221,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11527031799778342,
            "num_unique_values": 93,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.70967741935484,
                "explored_percent_lambda": 58.064516129032256,
                "explored_percent_none": 3.225806451612903,
                "kept_percent_concrete": 16.091954022988507,
                "kept_percent_lambda": 83.9080459770115,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 90,
                "num_explored_none": 5,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 73,
                "num_values_explored": 155,
                "num_values_kept": 87,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17026560683734715,
            "num_unique_values": 130,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.81818181818182,
                "explored_percent_lambda": 34.90909090909091,
                "explored_percent_none": 15.272727272727273,
                "kept_percent_concrete": 36.29032258064516,
                "kept_percent_lambda": 63.70967741935484,
                "num_examples": 3,
                "num_explored_concrete": 137,
                "num_explored_lambda": 96,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 45,
                "num_kept_lambda": 79,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.580789922969416,
            "num_unique_values": 1091,
            "solution": "fn_24((lambda u1: ZipWith((lambda u1, u2: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2, x2)), x2)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 77.64003673094582,
                "explored_percent_lambda": 11.409550045913683,
                "explored_percent_none": 10.950413223140496,
                "kept_percent_concrete": 76.95852534562212,
                "kept_percent_lambda": 23.04147465437788,
                "num_examples": 4,
                "num_explored_concrete": 3382,
                "num_explored_lambda": 497,
                "num_explored_none": 477,
                "num_inputs": 2,
                "num_kept_concrete": 835,
                "num_kept_lambda": 250,
                "num_values_explored": 4356,
                "num_values_kept": 1085,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 14198
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25125123094767,
            "num_unique_values": 1332,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.60220994475138,
                "explored_percent_lambda": 13.93843725335438,
                "explored_percent_none": 14.459352801894239,
                "kept_percent_concrete": 75.20723436322533,
                "kept_percent_lambda": 24.79276563677468,
                "num_examples": 5,
                "num_explored_concrete": 4536,
                "num_explored_lambda": 883,
                "num_explored_none": 916,
                "num_inputs": 1,
                "num_kept_concrete": 998,
                "num_kept_lambda": 329,
                "num_values_explored": 6335,
                "num_values_kept": 1327,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67448
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3992336532101035,
            "num_unique_values": 394,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 78.66868381240545,
                "explored_percent_lambda": 18.15431164901664,
                "explored_percent_none": 3.177004538577912,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 120,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 97,
                "num_values_explored": 661,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17412232398055494,
            "num_unique_values": 172,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.76470588235294,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 51.204819277108435,
                "kept_percent_lambda": 48.795180722891565,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 88,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 81,
                "num_values_explored": 272,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1016997629776597,
            "num_unique_values": 92,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.72839506172839,
                "explored_percent_lambda": 30.246913580246915,
                "explored_percent_none": 8.024691358024691,
                "kept_percent_concrete": 50.588235294117645,
                "kept_percent_lambda": 49.411764705882355,
                "num_examples": 2,
                "num_explored_concrete": 100,
                "num_explored_lambda": 49,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 43,
                "num_kept_lambda": 42,
                "num_values_explored": 162,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4964988559950143,
            "num_unique_values": 433,
            "solution": "IntDivide(Last(fn_9(Last(x2), x1, x1)), -1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51290591174022,
                "explored_percent_lambda": 8.742714404662781,
                "explored_percent_none": 6.7443796835970025,
                "kept_percent_concrete": 82.43559718969556,
                "kept_percent_lambda": 17.56440281030445,
                "num_examples": 5,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 105,
                "num_explored_none": 81,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 75,
                "num_values_explored": 1201,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1201
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51168152713217,
            "num_unique_values": 354,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.95881895881896,
                "explored_percent_lambda": 16.736596736596738,
                "explored_percent_none": 64.30458430458431,
                "kept_percent_concrete": 61.60458452722063,
                "kept_percent_lambda": 38.39541547277937,
                "num_examples": 5,
                "num_explored_concrete": 1220,
                "num_explored_lambda": 1077,
                "num_explored_none": 4138,
                "num_inputs": 1,
                "num_kept_concrete": 215,
                "num_kept_lambda": 134,
                "num_values_explored": 6435,
                "num_values_kept": 349,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69748
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18540119100362062,
            "num_unique_values": 164,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.6,
                "explored_percent_lambda": 47.6,
                "explored_percent_none": 6.8,
                "kept_percent_concrete": 35.22012578616352,
                "kept_percent_lambda": 64.77987421383648,
                "num_examples": 3,
                "num_explored_concrete": 114,
                "num_explored_lambda": 119,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 103,
                "num_values_explored": 250,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.30498619680292904,
            "num_unique_values": 250,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.33830845771145,
                "explored_percent_lambda": 7.711442786069652,
                "explored_percent_none": 9.950248756218905,
                "kept_percent_concrete": 89.34426229508196,
                "kept_percent_lambda": 10.655737704918034,
                "num_examples": 5,
                "num_explored_concrete": 331,
                "num_explored_lambda": 31,
                "num_explored_none": 40,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 26,
                "num_values_explored": 402,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 402
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.336756156058982,
            "num_unique_values": 336,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.43267776096823,
                "explored_percent_lambda": 21.02874432677761,
                "explored_percent_none": 4.53857791225416,
                "kept_percent_concrete": 68.78787878787878,
                "kept_percent_lambda": 31.21212121212121,
                "num_examples": 3,
                "num_explored_concrete": 492,
                "num_explored_lambda": 139,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 103,
                "num_values_explored": 661,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.99590778793208,
            "num_unique_values": 304,
            "solution": "Max(Multiply(Add(x1, x1), Add(Add(x1, 1), Square(Subtract(1, x1)))), Square(Square(Add(-1, -1))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 21.067931456548347,
                "explored_percent_lambda": 12.714198286413708,
                "explored_percent_none": 66.21787025703794,
                "kept_percent_concrete": 64.54849498327759,
                "kept_percent_lambda": 35.45150501672241,
                "num_examples": 2,
                "num_explored_concrete": 1377,
                "num_explored_lambda": 831,
                "num_explored_none": 4328,
                "num_inputs": 1,
                "num_kept_concrete": 193,
                "num_kept_lambda": 106,
                "num_values_explored": 6536,
                "num_values_kept": 299,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 28916
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3710190188139677,
            "num_unique_values": 280,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.42042042042043,
                "explored_percent_lambda": 19.36936936936937,
                "explored_percent_none": 10.21021021021021,
                "kept_percent_concrete": 66.05839416058394,
                "kept_percent_lambda": 33.941605839416056,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 129,
                "num_explored_none": 68,
                "num_inputs": 2,
                "num_kept_concrete": 181,
                "num_kept_lambda": 93,
                "num_values_explored": 666,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 666
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2652641960885376,
            "num_unique_values": 302,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.04194260485652,
                "explored_percent_lambda": 16.11479028697572,
                "explored_percent_none": 6.843267108167771,
                "kept_percent_concrete": 77.36486486486487,
                "kept_percent_lambda": 22.635135135135137,
                "num_examples": 3,
                "num_explored_concrete": 349,
                "num_explored_lambda": 73,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 67,
                "num_values_explored": 453,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2428975389339,
            "num_unique_values": 1307,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.13351713272942,
                "explored_percent_lambda": 38.7160299330445,
                "explored_percent_none": 12.150452934226074,
                "kept_percent_concrete": 48.31029185867896,
                "kept_percent_lambda": 51.68970814132104,
                "num_examples": 2,
                "num_explored_concrete": 2495,
                "num_explored_lambda": 1966,
                "num_explored_none": 617,
                "num_inputs": 1,
                "num_kept_concrete": 629,
                "num_kept_lambda": 673,
                "num_values_explored": 5078,
                "num_values_kept": 1302,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55948
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24911006609909236,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.06642066420664,
                "explored_percent_lambda": 49.81549815498155,
                "explored_percent_none": 8.118081180811808,
                "kept_percent_concrete": 26.573426573426573,
                "kept_percent_lambda": 73.42657342657343,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 135,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 105,
                "num_values_explored": 271,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4404247950296849,
            "num_unique_values": 337,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.5839636913767,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 4.236006051437216,
                "kept_percent_concrete": 68.58006042296073,
                "kept_percent_lambda": 31.419939577039276,
                "num_examples": 5,
                "num_explored_concrete": 493,
                "num_explored_lambda": 140,
                "num_explored_none": 28,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 104,
                "num_values_explored": 661,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.92042097589001,
            "num_unique_values": 375,
            "solution": "Min(Subtract(x1, Sum(x2)), Subtract(x3, Sum(x2)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 48.873981792045996,
                "explored_percent_lambda": 14.326784858648779,
                "explored_percent_none": 36.799233349305226,
                "kept_percent_concrete": 67.93478260869566,
                "kept_percent_lambda": 32.06521739130435,
                "num_examples": 2,
                "num_explored_concrete": 1020,
                "num_explored_lambda": 299,
                "num_explored_none": 768,
                "num_inputs": 3,
                "num_kept_concrete": 250,
                "num_kept_lambda": 118,
                "num_values_explored": 2087,
                "num_values_kept": 368,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 24379
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 52.99016698705964,
            "num_unique_values": 261,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 23.186528497409327,
                "explored_percent_lambda": 46.63212435233161,
                "explored_percent_none": 30.181347150259068,
                "kept_percent_concrete": 30.078125,
                "kept_percent_lambda": 69.921875,
                "num_examples": 2,
                "num_explored_concrete": 179,
                "num_explored_lambda": 360,
                "num_explored_none": 233,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 179,
                "num_values_explored": 772,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 7,
                "total_num_values_explored": 25998
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17011941713281,
            "num_unique_values": 1139,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 67.85201149425288,
                "explored_percent_lambda": 22.611350574712645,
                "explored_percent_none": 9.536637931034482,
                "kept_percent_concrete": 54.85008818342152,
                "kept_percent_lambda": 45.14991181657848,
                "num_examples": 2,
                "num_explored_concrete": 3778,
                "num_explored_lambda": 1259,
                "num_explored_none": 531,
                "num_inputs": 1,
                "num_kept_concrete": 622,
                "num_kept_lambda": 512,
                "num_values_explored": 5568,
                "num_values_kept": 1134,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57432
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.47601519688033,
            "num_unique_values": 312,
            "solution": "Min(Multiply(Min(x2, 1), If(IsOdd(x1), Subtract(x1, x2), x2)), Add(Subtract(x1, x2), Square(Min(x2, -1))))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 18.08728533165275,
                "explored_percent_lambda": 16.8741137545297,
                "explored_percent_none": 65.03860091381755,
                "kept_percent_concrete": 56.5359477124183,
                "kept_percent_lambda": 43.4640522875817,
                "num_examples": 2,
                "num_explored_concrete": 1148,
                "num_explored_lambda": 1071,
                "num_explored_none": 4128,
                "num_inputs": 2,
                "num_kept_concrete": 173,
                "num_kept_lambda": 133,
                "num_values_explored": 6347,
                "num_values_kept": 306,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 54281
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.76075902185403,
            "num_unique_values": 745,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.14099108438731,
                "explored_percent_lambda": 26.373626373626372,
                "explored_percent_none": 33.48538254198632,
                "kept_percent_concrete": 41.13667117726658,
                "kept_percent_lambda": 58.86332882273342,
                "num_examples": 4,
                "num_explored_concrete": 1936,
                "num_explored_lambda": 1272,
                "num_explored_none": 1615,
                "num_inputs": 2,
                "num_kept_concrete": 304,
                "num_kept_lambda": 435,
                "num_values_explored": 4823,
                "num_values_kept": 739,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51599
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26792441704310477,
            "num_unique_values": 201,
            "solution": "fn_9(1, x1, x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 58.333333333333336,
                "explored_percent_lambda": 35.57692307692308,
                "explored_percent_none": 6.089743589743589,
                "kept_percent_concrete": 51.794871794871796,
                "kept_percent_lambda": 48.205128205128204,
                "num_examples": 3,
                "num_explored_concrete": 182,
                "num_explored_lambda": 111,
                "num_explored_none": 19,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 94,
                "num_values_explored": 312,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01500939717516,
            "num_unique_values": 1106,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.44019471488178,
                "explored_percent_lambda": 16.70723226703755,
                "explored_percent_none": 23.85257301808067,
                "kept_percent_concrete": 72.47956403269755,
                "kept_percent_lambda": 27.52043596730245,
                "num_examples": 4,
                "num_explored_concrete": 3419,
                "num_explored_lambda": 961,
                "num_explored_none": 1372,
                "num_inputs": 1,
                "num_kept_concrete": 798,
                "num_kept_lambda": 303,
                "num_values_explored": 5752,
                "num_values_kept": 1101,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62709
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51441414211877,
            "num_unique_values": 264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.966101694915253,
                "explored_percent_lambda": 22.11864406779661,
                "explored_percent_none": 60.91525423728814,
                "kept_percent_concrete": 43.24324324324324,
                "kept_percent_lambda": 56.75675675675676,
                "num_examples": 5,
                "num_explored_concrete": 1001,
                "num_explored_lambda": 1305,
                "num_explored_none": 3594,
                "num_inputs": 1,
                "num_kept_concrete": 112,
                "num_kept_lambda": 147,
                "num_values_explored": 5900,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58833
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3072522401344031,
            "num_unique_values": 259,
            "solution": "Take(Count((lambda u1: IsOdd(-1)), x3), fn_9(Multiply(x1, -1), x2, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.41589648798521,
                "explored_percent_lambda": 20.147874306839185,
                "explored_percent_none": 4.436229205175601,
                "kept_percent_concrete": 67.06349206349206,
                "kept_percent_lambda": 32.93650793650794,
                "num_examples": 2,
                "num_explored_concrete": 408,
                "num_explored_lambda": 109,
                "num_explored_none": 24,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 83,
                "num_values_explored": 541,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.43536252900958,
            "num_unique_values": 313,
            "solution": "Max(Subtract(x1, x2), Subtract(Add(Add(x1, x2), Square(Subtract(-1, 1))), 1))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 19.56386292834891,
                "explored_percent_lambda": 13.81619937694704,
                "explored_percent_none": 66.61993769470405,
                "kept_percent_concrete": 64.16938110749186,
                "kept_percent_lambda": 35.83061889250814,
                "num_examples": 2,
                "num_explored_concrete": 1256,
                "num_explored_lambda": 887,
                "num_explored_none": 4277,
                "num_inputs": 2,
                "num_kept_concrete": 197,
                "num_kept_lambda": 110,
                "num_values_explored": 6420,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 53395
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32703417097218335,
            "num_unique_values": 185,
            "solution": "fn_9(Multiply(x1, -1), x3, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.17948717948718,
                "explored_percent_lambda": 29.807692307692307,
                "explored_percent_none": 8.012820512820513,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 93,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 312,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.33211535098962486,
            "num_unique_values": 358,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 79.42122186495178,
                "explored_percent_lambda": 16.881028938906752,
                "explored_percent_none": 3.697749196141479,
                "kept_percent_concrete": 73.78917378917379,
                "kept_percent_lambda": 26.210826210826212,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 105,
                "num_explored_none": 23,
                "num_inputs": 3,
                "num_kept_concrete": 259,
                "num_kept_lambda": 92,
                "num_values_explored": 622,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48303790413775,
            "num_unique_values": 325,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.779891304347824,
                "explored_percent_lambda": 8.967391304347826,
                "explored_percent_none": 64.25271739130434,
                "kept_percent_concrete": 76.8025078369906,
                "kept_percent_lambda": 23.197492163009404,
                "num_examples": 4,
                "num_explored_concrete": 1971,
                "num_explored_lambda": 660,
                "num_explored_none": 4729,
                "num_inputs": 2,
                "num_kept_concrete": 245,
                "num_kept_lambda": 74,
                "num_values_explored": 7360,
                "num_values_kept": 319,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73472
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1949348738417,
            "num_unique_values": 1289,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.8023469013568,
                "explored_percent_lambda": 26.12761276127613,
                "explored_percent_none": 17.07004033736707,
                "kept_percent_concrete": 58.8006230529595,
                "kept_percent_lambda": 41.1993769470405,
                "num_examples": 5,
                "num_explored_concrete": 3098,
                "num_explored_lambda": 1425,
                "num_explored_none": 931,
                "num_inputs": 1,
                "num_kept_concrete": 755,
                "num_kept_lambda": 529,
                "num_values_explored": 5454,
                "num_values_kept": 1284,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53981
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2221216270700097,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 33.57142857142857,
                "explored_percent_none": 9.285714285714286,
                "kept_percent_concrete": 48.23529411764706,
                "kept_percent_lambda": 51.76470588235294,
                "num_examples": 5,
                "num_explored_concrete": 160,
                "num_explored_lambda": 94,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07600605604239,
            "num_unique_values": 1016,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.18289197942465,
                "explored_percent_lambda": 20.651552676700323,
                "explored_percent_none": 19.165555343875024,
                "kept_percent_concrete": 63.00692383778437,
                "kept_percent_lambda": 36.99307616221563,
                "num_examples": 3,
                "num_explored_concrete": 3159,
                "num_explored_lambda": 1084,
                "num_explored_none": 1006,
                "num_inputs": 1,
                "num_kept_concrete": 637,
                "num_kept_lambda": 374,
                "num_values_explored": 5249,
                "num_values_kept": 1011,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55464
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6084493780508637,
            "num_unique_values": 322,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.3609022556391,
                "explored_percent_lambda": 30.526315789473685,
                "explored_percent_none": 5.112781954887218,
                "kept_percent_concrete": 55.379746835443036,
                "kept_percent_lambda": 44.620253164556964,
                "num_examples": 4,
                "num_explored_concrete": 428,
                "num_explored_lambda": 203,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 141,
                "num_values_explored": 665,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.48297719587572,
            "num_unique_values": 1029,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.92445896284198,
                "explored_percent_lambda": 19.926500612494895,
                "explored_percent_none": 15.149040424663127,
                "kept_percent_concrete": 72.70058708414872,
                "kept_percent_lambda": 27.29941291585127,
                "num_examples": 5,
                "num_explored_concrete": 1590,
                "num_explored_lambda": 488,
                "num_explored_none": 371,
                "num_inputs": 3,
                "num_kept_concrete": 743,
                "num_kept_lambda": 279,
                "num_values_explored": 2449,
                "num_values_kept": 1022,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43757776310667396,
            "num_unique_values": 302,
            "solution": "Take(fn_11(x2, x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.77079482439926,
                "explored_percent_lambda": 31.97781885397412,
                "explored_percent_none": 4.251386321626617,
                "kept_percent_concrete": 54.729729729729726,
                "kept_percent_lambda": 45.270270270270274,
                "num_examples": 5,
                "num_explored_concrete": 345,
                "num_explored_lambda": 173,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 162,
                "num_kept_lambda": 134,
                "num_values_explored": 541,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79882075288333,
            "num_unique_values": 688,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.66413662239089,
                "explored_percent_lambda": 10.451029046854474,
                "explored_percent_none": 38.884834330754636,
                "kept_percent_concrete": 68.18181818181819,
                "kept_percent_lambda": 31.818181818181817,
                "num_examples": 5,
                "num_explored_concrete": 3471,
                "num_explored_lambda": 716,
                "num_explored_none": 2664,
                "num_inputs": 2,
                "num_kept_concrete": 465,
                "num_kept_lambda": 217,
                "num_values_explored": 6851,
                "num_values_kept": 682,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72572
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 75.85788043099456,
            "num_unique_values": 563,
            "solution": "Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), Sort(Scanl1((lambda u1, u2: x1), fn_0(Map((lambda u1: ((lambda v1: IntDivide(((lambda v1: Add(x1, v1)))(v1), x1)))(u1)), x2)))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 49.9264705882353,
                "explored_percent_lambda": 24.705882352941178,
                "explored_percent_none": 25.36764705882353,
                "kept_percent_concrete": 46.6786355475763,
                "kept_percent_lambda": 53.3213644524237,
                "num_examples": 2,
                "num_explored_concrete": 1358,
                "num_explored_lambda": 672,
                "num_explored_none": 690,
                "num_inputs": 2,
                "num_kept_concrete": 260,
                "num_kept_lambda": 297,
                "num_values_explored": 2720,
                "num_values_kept": 557,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 40992
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.699672318995,
            "num_unique_values": 252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.473746015769166,
                "explored_percent_lambda": 17.31253145445395,
                "explored_percent_none": 66.21372252977689,
                "kept_percent_concrete": 40.89068825910931,
                "kept_percent_lambda": 59.10931174089069,
                "num_examples": 4,
                "num_explored_concrete": 982,
                "num_explored_lambda": 1032,
                "num_explored_none": 3947,
                "num_inputs": 1,
                "num_kept_concrete": 101,
                "num_kept_lambda": 146,
                "num_values_explored": 5961,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62254
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.37990755797364,
            "num_unique_values": 1343,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.10132158590309,
                "explored_percent_lambda": 19.24229074889868,
                "explored_percent_none": 17.65638766519824,
                "kept_percent_concrete": 61.78010471204188,
                "kept_percent_lambda": 38.21989528795812,
                "num_examples": 4,
                "num_explored_concrete": 3581,
                "num_explored_lambda": 1092,
                "num_explored_none": 1002,
                "num_inputs": 2,
                "num_kept_concrete": 826,
                "num_kept_lambda": 511,
                "num_values_explored": 5675,
                "num_values_kept": 1337,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55544
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.14819249790162,
            "num_unique_values": 1144,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.71832479236615,
                "explored_percent_lambda": 18.148082700123698,
                "explored_percent_none": 16.133592507510162,
                "kept_percent_concrete": 65.67164179104478,
                "kept_percent_lambda": 34.32835820895522,
                "num_examples": 3,
                "num_explored_concrete": 3719,
                "num_explored_lambda": 1027,
                "num_explored_none": 913,
                "num_inputs": 1,
                "num_kept_concrete": 748,
                "num_kept_lambda": 391,
                "num_values_explored": 5659,
                "num_values_kept": 1139,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62755
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3774376178625971,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.0196671709531,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 11.800302571860817,
                "kept_percent_concrete": 59.36073059360731,
                "kept_percent_lambda": 40.63926940639269,
                "num_examples": 2,
                "num_explored_concrete": 443,
                "num_explored_lambda": 140,
                "num_explored_none": 78,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 89,
                "num_values_explored": 661,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70861837314442,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.162162162162161,
                "explored_percent_lambda": 20.03079028395484,
                "explored_percent_none": 67.807047553883,
                "kept_percent_concrete": 41.15384615384615,
                "kept_percent_lambda": 58.84615384615385,
                "num_examples": 4,
                "num_explored_concrete": 711,
                "num_explored_lambda": 1171,
                "num_explored_none": 3964,
                "num_inputs": 1,
                "num_kept_concrete": 107,
                "num_kept_lambda": 153,
                "num_values_explored": 5846,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56560
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16718620201573,
            "num_unique_values": 1506,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.63713080168776,
                "explored_percent_lambda": 12.376933895921237,
                "explored_percent_none": 9.985935302390999,
                "kept_percent_concrete": 73.53333333333333,
                "kept_percent_lambda": 26.466666666666665,
                "num_examples": 2,
                "num_explored_concrete": 4968,
                "num_explored_lambda": 792,
                "num_explored_none": 639,
                "num_inputs": 2,
                "num_kept_concrete": 1103,
                "num_kept_lambda": 397,
                "num_values_explored": 6399,
                "num_values_kept": 1500,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66341
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.23273227899335,
            "num_unique_values": 1389,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.08917005573129,
                "explored_percent_lambda": 8.736255460159663,
                "explored_percent_none": 19.17457448410905,
                "kept_percent_concrete": 82.57411424439624,
                "kept_percent_lambda": 17.42588575560376,
                "num_examples": 5,
                "num_explored_concrete": 4786,
                "num_explored_lambda": 580,
                "num_explored_none": 1273,
                "num_inputs": 2,
                "num_kept_concrete": 1142,
                "num_kept_lambda": 241,
                "num_values_explored": 6639,
                "num_values_kept": 1383,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66563
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27132664201781,
            "num_unique_values": 1308,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.3698722259583,
                "explored_percent_lambda": 16.661062542030933,
                "explored_percent_none": 7.96906523201076,
                "kept_percent_concrete": 68.53415195702226,
                "kept_percent_lambda": 31.465848042977743,
                "num_examples": 3,
                "num_explored_concrete": 4483,
                "num_explored_lambda": 991,
                "num_explored_none": 474,
                "num_inputs": 1,
                "num_kept_concrete": 893,
                "num_kept_lambda": 410,
                "num_values_explored": 5948,
                "num_values_kept": 1303,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58739
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.35116083198227,
            "num_unique_values": 1806,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.95721077654517,
                "explored_percent_lambda": 12.123613312202853,
                "explored_percent_none": 10.919175911251982,
                "kept_percent_concrete": 79.5,
                "kept_percent_lambda": 20.5,
                "num_examples": 5,
                "num_explored_concrete": 4856,
                "num_explored_lambda": 765,
                "num_explored_none": 689,
                "num_inputs": 2,
                "num_kept_concrete": 1431,
                "num_kept_lambda": 369,
                "num_values_explored": 6310,
                "num_values_kept": 1800,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63386
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.38692347495817,
            "num_unique_values": 1488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.87380258225739,
                "explored_percent_lambda": 36.48479800083299,
                "explored_percent_none": 10.641399416909621,
                "kept_percent_concrete": 57.99055967633176,
                "kept_percent_lambda": 42.00944032366824,
                "num_examples": 2,
                "num_explored_concrete": 2539,
                "num_explored_lambda": 1752,
                "num_explored_none": 511,
                "num_inputs": 1,
                "num_kept_concrete": 860,
                "num_kept_lambda": 623,
                "num_values_explored": 4802,
                "num_values_kept": 1483,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52851
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01406177086756,
            "num_unique_values": 1161,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.16095942072711,
                "explored_percent_lambda": 9.156735555890783,
                "explored_percent_none": 13.682305023382108,
                "kept_percent_concrete": 80.15597920277297,
                "kept_percent_lambda": 19.844020797227035,
                "num_examples": 4,
                "num_explored_concrete": 5115,
                "num_explored_lambda": 607,
                "num_explored_none": 907,
                "num_inputs": 3,
                "num_kept_concrete": 925,
                "num_kept_lambda": 229,
                "num_values_explored": 6629,
                "num_values_kept": 1154,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68816
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.7891739150509238,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: Add(Sum(fn_9(IntDivide(Head(x1), Square(Add(-1, -1))), x1, x1)), -1)), x1)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67334446299388,
                "explored_percent_lambda": 16.30495269894268,
                "explored_percent_none": 13.021702838063439,
                "kept_percent_concrete": 37.58389261744966,
                "kept_percent_lambda": 62.41610738255034,
                "num_examples": 2,
                "num_explored_concrete": 1270,
                "num_explored_lambda": 293,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 93,
                "num_values_explored": 1797,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1797
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02860364317894,
            "num_unique_values": 1479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 79.21000843407366,
                "explored_percent_lambda": 6.311498453753162,
                "explored_percent_none": 14.47849311217318,
                "kept_percent_concrete": 86.54891304347827,
                "kept_percent_lambda": 13.451086956521738,
                "num_examples": 4,
                "num_explored_concrete": 5635,
                "num_explored_lambda": 449,
                "num_explored_none": 1030,
                "num_inputs": 3,
                "num_kept_concrete": 1274,
                "num_kept_lambda": 198,
                "num_values_explored": 7114,
                "num_values_kept": 1472,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70619
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.43283177097328,
            "num_unique_values": 989,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.78936499741869,
                "explored_percent_lambda": 47.702632937532265,
                "explored_percent_none": 18.508002065049045,
                "kept_percent_concrete": 41.46341463414634,
                "kept_percent_lambda": 58.53658536585366,
                "num_examples": 3,
                "num_explored_concrete": 1309,
                "num_explored_lambda": 1848,
                "num_explored_none": 717,
                "num_inputs": 1,
                "num_kept_concrete": 408,
                "num_kept_lambda": 576,
                "num_values_explored": 3874,
                "num_values_kept": 984,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42598
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75302128400654,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.376476811849763,
                "explored_percent_lambda": 22.32410509610298,
                "explored_percent_none": 62.299418092047254,
                "kept_percent_concrete": 44.96124031007752,
                "kept_percent_lambda": 55.03875968992248,
                "num_examples": 4,
                "num_explored_concrete": 872,
                "num_explored_lambda": 1266,
                "num_explored_none": 3533,
                "num_inputs": 1,
                "num_kept_concrete": 116,
                "num_kept_lambda": 142,
                "num_values_explored": 5671,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57430
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25945746898651,
            "num_unique_values": 1280,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.865546218487395,
                "explored_percent_lambda": 25.30557677616501,
                "explored_percent_none": 10.828877005347593,
                "kept_percent_concrete": 59.6078431372549,
                "kept_percent_lambda": 40.3921568627451,
                "num_examples": 2,
                "num_explored_concrete": 3344,
                "num_explored_lambda": 1325,
                "num_explored_none": 567,
                "num_inputs": 1,
                "num_kept_concrete": 760,
                "num_kept_lambda": 515,
                "num_values_explored": 5236,
                "num_values_kept": 1275,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54175
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.61505234800279,
            "num_unique_values": 1507,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 77.63802678863117,
                "explored_percent_lambda": 12.77360339758249,
                "explored_percent_none": 9.588369813786345,
                "kept_percent_concrete": 76.46666666666667,
                "kept_percent_lambda": 23.533333333333335,
                "num_examples": 5,
                "num_explored_concrete": 4753,
                "num_explored_lambda": 782,
                "num_explored_none": 587,
                "num_inputs": 3,
                "num_kept_concrete": 1147,
                "num_kept_lambda": 353,
                "num_values_explored": 6122,
                "num_values_kept": 1500,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64994
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.93182749603875,
            "num_unique_values": 938,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Take(Add(1, Sum(x2)), Scanl1((lambda u1, u2: ((lambda v1: Subtract(1, v1)))(u2)), x1))))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 72.45298615416408,
                "explored_percent_lambda": 19.40483570985741,
                "explored_percent_none": 8.142178135978508,
                "kept_percent_concrete": 52.682403433476395,
                "kept_percent_lambda": 47.317596566523605,
                "num_examples": 2,
                "num_explored_concrete": 3506,
                "num_explored_lambda": 939,
                "num_explored_none": 394,
                "num_inputs": 2,
                "num_kept_concrete": 491,
                "num_kept_lambda": 441,
                "num_values_explored": 4839,
                "num_values_kept": 932,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 30861
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17460191412829,
            "num_unique_values": 652,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.21799424995772,
                "explored_percent_lambda": 22.645019448672418,
                "explored_percent_none": 30.136986301369863,
                "kept_percent_concrete": 48.068006182380216,
                "kept_percent_lambda": 51.931993817619784,
                "num_examples": 3,
                "num_explored_concrete": 2792,
                "num_explored_lambda": 1339,
                "num_explored_none": 1782,
                "num_inputs": 1,
                "num_kept_concrete": 311,
                "num_kept_lambda": 336,
                "num_values_explored": 5913,
                "num_values_kept": 647,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57566
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2856958010234,
            "num_unique_values": 2015,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 81.68278826961462,
                "explored_percent_lambda": 6.786427145708583,
                "explored_percent_none": 11.5307845846768,
                "kept_percent_concrete": 90.63745019920319,
                "kept_percent_lambda": 9.362549800796813,
                "num_examples": 5,
                "num_explored_concrete": 5320,
                "num_explored_lambda": 442,
                "num_explored_none": 751,
                "num_inputs": 3,
                "num_kept_concrete": 1820,
                "num_kept_lambda": 188,
                "num_values_explored": 6513,
                "num_values_kept": 2008,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68376
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 14.976687900954857,
            "num_unique_values": 632,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 52.22634508348794,
                "explored_percent_lambda": 24.11873840445269,
                "explored_percent_none": 23.65491651205937,
                "kept_percent_concrete": 63.2,
                "kept_percent_lambda": 36.8,
                "num_examples": 4,
                "num_explored_concrete": 1126,
                "num_explored_lambda": 520,
                "num_explored_none": 510,
                "num_inputs": 3,
                "num_kept_concrete": 395,
                "num_kept_lambda": 230,
                "num_values_explored": 2156,
                "num_values_kept": 625,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10376
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.43061597901396,
            "num_unique_values": 1608,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.430832759807295,
                "explored_percent_lambda": 25.911906400550585,
                "explored_percent_none": 15.65726083964212,
                "kept_percent_concrete": 60.885839051777914,
                "kept_percent_lambda": 39.114160948222086,
                "num_examples": 2,
                "num_explored_concrete": 3396,
                "num_explored_lambda": 1506,
                "num_explored_none": 910,
                "num_inputs": 1,
                "num_kept_concrete": 976,
                "num_kept_lambda": 627,
                "num_values_explored": 5812,
                "num_values_kept": 1603,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55331
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9628447399009,
            "num_unique_values": 1630,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 78.16618116243585,
                "explored_percent_lambda": 9.585240671382994,
                "explored_percent_none": 12.248578166181163,
                "kept_percent_concrete": 83.06650246305419,
                "kept_percent_lambda": 16.93349753694581,
                "num_examples": 3,
                "num_explored_concrete": 5635,
                "num_explored_lambda": 691,
                "num_explored_none": 883,
                "num_inputs": 2,
                "num_kept_concrete": 1349,
                "num_kept_lambda": 275,
                "num_values_explored": 7209,
                "num_values_kept": 1624,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74853
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.50319166714326,
            "num_unique_values": 373,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.13033104682374,
                "explored_percent_lambda": 14.777810915597971,
                "explored_percent_none": 64.09185803757829,
                "kept_percent_concrete": 59.67302452316076,
                "kept_percent_lambda": 40.32697547683924,
                "num_examples": 4,
                "num_explored_concrete": 1417,
                "num_explored_lambda": 991,
                "num_explored_none": 4298,
                "num_inputs": 2,
                "num_kept_concrete": 219,
                "num_kept_lambda": 148,
                "num_values_explored": 6706,
                "num_values_kept": 367,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71917
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20981719205156,
            "num_unique_values": 1549,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.1352120694563,
                "explored_percent_lambda": 11.514375177910617,
                "explored_percent_none": 13.350412752633078,
                "kept_percent_concrete": 81.67098445595855,
                "kept_percent_lambda": 18.32901554404145,
                "num_examples": 5,
                "num_explored_concrete": 5279,
                "num_explored_lambda": 809,
                "num_explored_none": 938,
                "num_inputs": 1,
                "num_kept_concrete": 1261,
                "num_kept_lambda": 283,
                "num_values_explored": 7026,
                "num_values_kept": 1544,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69849
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 66.05632527219132,
            "num_unique_values": 740,
            "solution": "IntDivide(Multiply(fn_11(x1, Map((lambda u1: Sum(fn_21(Map((lambda u1: ((lambda v1: Subtract(Square(x2), v1)))(u1)), x1)))), x1)), Add(-1, Square(x2))), -1)",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 64.53488372093024,
                "explored_percent_lambda": 13.517441860465116,
                "explored_percent_none": 21.947674418604652,
                "kept_percent_concrete": 76.70299727520435,
                "kept_percent_lambda": 23.29700272479564,
                "num_examples": 4,
                "num_explored_concrete": 2220,
                "num_explored_lambda": 465,
                "num_explored_none": 755,
                "num_inputs": 2,
                "num_kept_concrete": 563,
                "num_kept_lambda": 171,
                "num_values_explored": 3440,
                "num_values_kept": 734,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 50661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52739609102719,
            "num_unique_values": 336,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.129113130680036,
                "explored_percent_lambda": 17.768724537762456,
                "explored_percent_none": 64.10216233155751,
                "kept_percent_concrete": 58.91238670694864,
                "kept_percent_lambda": 41.08761329305136,
                "num_examples": 3,
                "num_explored_concrete": 1157,
                "num_explored_lambda": 1134,
                "num_explored_none": 4091,
                "num_inputs": 1,
                "num_kept_concrete": 195,
                "num_kept_lambda": 136,
                "num_values_explored": 6382,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65781
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12424531998113,
            "num_unique_values": 1337,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.94784353059177,
                "explored_percent_lambda": 21.230357739886326,
                "explored_percent_none": 12.821798729521898,
                "kept_percent_concrete": 64.91359879789631,
                "kept_percent_lambda": 35.08640120210368,
                "num_examples": 3,
                "num_explored_concrete": 3945,
                "num_explored_lambda": 1270,
                "num_explored_none": 767,
                "num_inputs": 2,
                "num_kept_concrete": 864,
                "num_kept_lambda": 467,
                "num_values_explored": 5982,
                "num_values_kept": 1331,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64825
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.26819308008999,
            "num_unique_values": 972,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.94624352331606,
                "explored_percent_lambda": 23.42940414507772,
                "explored_percent_none": 19.624352331606218,
                "kept_percent_concrete": 59.97931747673216,
                "kept_percent_lambda": 40.02068252326784,
                "num_examples": 5,
                "num_explored_concrete": 3517,
                "num_explored_lambda": 1447,
                "num_explored_none": 1212,
                "num_inputs": 1,
                "num_kept_concrete": 580,
                "num_kept_lambda": 387,
                "num_values_explored": 6176,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60975
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.45634623197839,
            "num_unique_values": 1330,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.53459839685915,
                "explored_percent_lambda": 16.58760019630296,
                "explored_percent_none": 18.877801406837886,
                "kept_percent_concrete": 70.64150943396227,
                "kept_percent_lambda": 29.358490566037737,
                "num_examples": 5,
                "num_explored_concrete": 3945,
                "num_explored_lambda": 1014,
                "num_explored_none": 1154,
                "num_inputs": 1,
                "num_kept_concrete": 936,
                "num_kept_lambda": 389,
                "num_values_explored": 6113,
                "num_values_kept": 1325,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65291
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70299394987524,
            "num_unique_values": 884,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.6401028277635,
                "explored_percent_lambda": 14.925147436866778,
                "explored_percent_none": 25.434749735369728,
                "kept_percent_concrete": 64.84641638225256,
                "kept_percent_lambda": 35.153583617747444,
                "num_examples": 2,
                "num_explored_concrete": 3944,
                "num_explored_lambda": 987,
                "num_explored_none": 1682,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 309,
                "num_values_explored": 6613,
                "num_values_kept": 879,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66803
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2678511699196,
            "num_unique_values": 1015,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.900529963310234,
                "explored_percent_lambda": 34.14186710150836,
                "explored_percent_none": 17.95760293518141,
                "kept_percent_concrete": 53.86138613861386,
                "kept_percent_lambda": 46.13861386138614,
                "num_examples": 4,
                "num_explored_concrete": 2350,
                "num_explored_lambda": 1675,
                "num_explored_none": 881,
                "num_inputs": 1,
                "num_kept_concrete": 544,
                "num_kept_lambda": 466,
                "num_values_explored": 4906,
                "num_values_kept": 1010,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53134
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81852947012521,
            "num_unique_values": 604,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.7436974789916,
                "explored_percent_lambda": 25.612745098039216,
                "explored_percent_none": 27.643557422969188,
                "kept_percent_concrete": 39.39899833055092,
                "kept_percent_lambda": 60.60100166944908,
                "num_examples": 2,
                "num_explored_concrete": 2670,
                "num_explored_lambda": 1463,
                "num_explored_none": 1579,
                "num_inputs": 1,
                "num_kept_concrete": 236,
                "num_kept_lambda": 363,
                "num_values_explored": 5712,
                "num_values_kept": 599,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57585
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05517124105245,
            "num_unique_values": 791,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.19017094017094,
                "explored_percent_lambda": 24.89316239316239,
                "explored_percent_none": 22.916666666666668,
                "kept_percent_concrete": 41.73027989821883,
                "kept_percent_lambda": 58.26972010178117,
                "num_examples": 2,
                "num_explored_concrete": 2931,
                "num_explored_lambda": 1398,
                "num_explored_none": 1287,
                "num_inputs": 1,
                "num_kept_concrete": 328,
                "num_kept_lambda": 458,
                "num_values_explored": 5616,
                "num_values_kept": 786,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60090
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4355095459614,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.225329214761828,
                "explored_percent_lambda": 22.825556820029263,
                "explored_percent_none": 62.94911396520891,
                "kept_percent_concrete": 36.15384615384615,
                "kept_percent_lambda": 63.84615384615385,
                "num_examples": 2,
                "num_explored_concrete": 875,
                "num_explored_lambda": 1404,
                "num_explored_none": 3872,
                "num_inputs": 1,
                "num_kept_concrete": 94,
                "num_kept_lambda": 166,
                "num_values_explored": 6151,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62251
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56852966709994,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.800601956358165,
                "explored_percent_lambda": 29.138449962377727,
                "explored_percent_none": 61.06094808126411,
                "kept_percent_concrete": 30.0,
                "kept_percent_lambda": 70.0,
                "num_examples": 2,
                "num_explored_concrete": 521,
                "num_explored_lambda": 1549,
                "num_explored_none": 3246,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 182,
                "num_values_explored": 5316,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57963
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.68821263988502,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.576923076923077,
                "explored_percent_lambda": 36.13461538461539,
                "explored_percent_none": 55.28846153846154,
                "kept_percent_concrete": 13.076923076923077,
                "kept_percent_lambda": 86.92307692307692,
                "num_examples": 2,
                "num_explored_concrete": 446,
                "num_explored_lambda": 1879,
                "num_explored_none": 2875,
                "num_inputs": 2,
                "num_kept_concrete": 34,
                "num_kept_lambda": 226,
                "num_values_explored": 5200,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52596
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56038732989691,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.071284957046243,
                "explored_percent_lambda": 34.56406507037105,
                "explored_percent_none": 55.36464997258271,
                "kept_percent_concrete": 16.53846153846154,
                "kept_percent_lambda": 83.46153846153847,
                "num_examples": 2,
                "num_explored_concrete": 551,
                "num_explored_lambda": 1891,
                "num_explored_none": 3029,
                "num_inputs": 2,
                "num_kept_concrete": 43,
                "num_kept_lambda": 217,
                "num_values_explored": 5471,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53720
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47901525790803,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.661277906081601,
                "explored_percent_lambda": 35.85450346420323,
                "explored_percent_none": 54.484218629715166,
                "kept_percent_concrete": 12.692307692307692,
                "kept_percent_lambda": 87.3076923076923,
                "num_examples": 2,
                "num_explored_concrete": 502,
                "num_explored_lambda": 1863,
                "num_explored_none": 2831,
                "num_inputs": 2,
                "num_kept_concrete": 33,
                "num_kept_lambda": 227,
                "num_values_explored": 5196,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53595
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56356756202877,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.83735057809132,
                "explored_percent_lambda": 34.705075445816185,
                "explored_percent_none": 55.4575739760925,
                "kept_percent_concrete": 13.846153846153847,
                "kept_percent_lambda": 86.15384615384616,
                "num_examples": 2,
                "num_explored_concrete": 502,
                "num_explored_lambda": 1771,
                "num_explored_none": 2830,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 224,
                "num_values_explored": 5103,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54523
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07537629106082,
            "num_unique_values": 647,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.75,
                "explored_percent_lambda": 27.117208672086722,
                "explored_percent_none": 29.132791327913278,
                "kept_percent_concrete": 37.850467289719624,
                "kept_percent_lambda": 62.149532710280376,
                "num_examples": 2,
                "num_explored_concrete": 2583,
                "num_explored_lambda": 1601,
                "num_explored_none": 1720,
                "num_inputs": 1,
                "num_kept_concrete": 243,
                "num_kept_lambda": 399,
                "num_values_explored": 5904,
                "num_values_kept": 642,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63334
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58249538694508,
            "num_unique_values": 310,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.06371790906279,
                "explored_percent_lambda": 19.239096814104546,
                "explored_percent_none": 62.69718527683266,
                "kept_percent_concrete": 43.9344262295082,
                "kept_percent_lambda": 56.0655737704918,
                "num_examples": 3,
                "num_explored_concrete": 1168,
                "num_explored_lambda": 1244,
                "num_explored_none": 4054,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 171,
                "num_values_explored": 6466,
                "num_values_kept": 305,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67959
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.52
}