{
    "num_tasks": 100,
    "num_tasks_solved": 49,
    "results": [
        {
            "elapsed_time": 0.6678488880861551,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 42.857142857142854,
                "explored_percent_lambda": 52.38095238095238,
                "explored_percent_none": 4.761904761904762,
                "kept_percent_concrete": 30.87248322147651,
                "kept_percent_lambda": 69.12751677852349,
                "num_examples": 2,
                "num_explored_concrete": 99,
                "num_explored_lambda": 121,
                "num_explored_none": 11,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20260967686772346,
            "num_unique_values": 168,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), x2, x2)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 62.730627306273064,
                "explored_percent_lambda": 32.103321033210335,
                "explored_percent_none": 5.166051660516605,
                "kept_percent_concrete": 51.851851851851855,
                "kept_percent_lambda": 48.148148148148145,
                "num_examples": 3,
                "num_explored_concrete": 170,
                "num_explored_lambda": 87,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 84,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1523893689736724,
            "num_unique_values": 114,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.41618497109827,
                "explored_percent_lambda": 56.64739884393064,
                "explored_percent_none": 6.936416184971098,
                "kept_percent_concrete": 22.01834862385321,
                "kept_percent_lambda": 77.98165137614679,
                "num_examples": 5,
                "num_explored_concrete": 63,
                "num_explored_lambda": 98,
                "num_explored_none": 12,
                "num_inputs": 1,
                "num_kept_concrete": 24,
                "num_kept_lambda": 85,
                "num_values_explored": 173,
                "num_values_kept": 109,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 173
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6998198160436004,
            "num_unique_values": 350,
            "solution": "Reverse(fn_1(fn_1(fn_1(fn_1(Reverse(x1))))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.95310907237513,
                "explored_percent_lambda": 29.153924566768602,
                "explored_percent_none": 4.892966360856269,
                "kept_percent_concrete": 53.6231884057971,
                "kept_percent_lambda": 46.3768115942029,
                "num_examples": 5,
                "num_explored_concrete": 647,
                "num_explored_lambda": 286,
                "num_explored_none": 48,
                "num_inputs": 1,
                "num_kept_concrete": 185,
                "num_kept_lambda": 160,
                "num_values_explored": 981,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 981
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13359206588938832,
            "num_unique_values": 99,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 47.682119205298015,
                "explored_percent_lambda": 45.6953642384106,
                "explored_percent_none": 6.622516556291391,
                "kept_percent_concrete": 34.40860215053763,
                "kept_percent_lambda": 65.59139784946237,
                "num_examples": 4,
                "num_explored_concrete": 72,
                "num_explored_lambda": 69,
                "num_explored_none": 10,
                "num_inputs": 2,
                "num_kept_concrete": 32,
                "num_kept_lambda": 61,
                "num_values_explored": 151,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13880245201289654,
            "num_unique_values": 89,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 43.47826086956522,
                "explored_percent_lambda": 48.4472049689441,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 19.27710843373494,
                "kept_percent_lambda": 80.72289156626506,
                "num_examples": 4,
                "num_explored_concrete": 70,
                "num_explored_lambda": 78,
                "num_explored_none": 13,
                "num_inputs": 2,
                "num_kept_concrete": 16,
                "num_kept_lambda": 67,
                "num_values_explored": 161,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16817106516100466,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 28.395061728395063,
                "explored_percent_lambda": 66.04938271604938,
                "explored_percent_none": 5.555555555555555,
                "kept_percent_concrete": 12.612612612612613,
                "kept_percent_lambda": 87.38738738738739,
                "num_examples": 2,
                "num_explored_concrete": 46,
                "num_explored_lambda": 107,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 14,
                "num_kept_lambda": 97,
                "num_values_explored": 162,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16884388495236635,
            "num_unique_values": 122,
            "solution": "Drop(Add(-1, -1), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 24.539877300613497,
                "explored_percent_lambda": 70.5521472392638,
                "explored_percent_none": 4.9079754601226995,
                "kept_percent_concrete": 13.675213675213675,
                "kept_percent_lambda": 86.32478632478633,
                "num_examples": 2,
                "num_explored_concrete": 40,
                "num_explored_lambda": 115,
                "num_explored_none": 8,
                "num_inputs": 1,
                "num_kept_concrete": 16,
                "num_kept_lambda": 101,
                "num_values_explored": 163,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.1877081349957734,
            "num_unique_values": 268,
            "solution": "Scanl1((lambda u1, u2: Subtract(1, Add(-1, -1))), x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 23.985680190930786,
                "explored_percent_lambda": 41.288782816229116,
                "explored_percent_none": 34.7255369928401,
                "kept_percent_concrete": 22.433460076045627,
                "kept_percent_lambda": 77.56653992395437,
                "num_examples": 4,
                "num_explored_concrete": 201,
                "num_explored_lambda": 346,
                "num_explored_none": 291,
                "num_inputs": 1,
                "num_kept_concrete": 59,
                "num_kept_lambda": 204,
                "num_values_explored": 838,
                "num_values_kept": 263,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3178
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12051755096763372,
            "num_unique_values": 99,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 57.30994152046784,
                "explored_percent_lambda": 28.65497076023392,
                "explored_percent_none": 14.035087719298245,
                "kept_percent_concrete": 51.61290322580645,
                "kept_percent_lambda": 48.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 98,
                "num_explored_lambda": 49,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 48,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 93,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2642309828661382,
            "num_unique_values": 201,
            "solution": "fn_24((lambda u1: fn_14(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 75.97911227154047,
                "explored_percent_lambda": 11.488250652741515,
                "explored_percent_none": 12.532637075718016,
                "kept_percent_concrete": 81.02564102564102,
                "kept_percent_lambda": 18.974358974358974,
                "num_examples": 4,
                "num_explored_concrete": 291,
                "num_explored_lambda": 44,
                "num_explored_none": 48,
                "num_inputs": 2,
                "num_kept_concrete": 158,
                "num_kept_lambda": 37,
                "num_values_explored": 383,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 383
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19316021096892655,
            "num_unique_values": 77,
            "solution": "Max(x1, Square(Square(Add(-1, -1))))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 32.59423503325942,
                "explored_percent_lambda": 19.068736141906875,
                "explored_percent_none": 48.3370288248337,
                "kept_percent_concrete": 40.27777777777778,
                "kept_percent_lambda": 59.72222222222222,
                "num_examples": 2,
                "num_explored_concrete": 147,
                "num_explored_lambda": 86,
                "num_explored_none": 218,
                "num_inputs": 1,
                "num_kept_concrete": 29,
                "num_kept_lambda": 43,
                "num_values_explored": 451,
                "num_values_kept": 72,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.29211639799177647,
            "num_unique_values": 277,
            "solution": "Multiply(Minimum(x1), Square(Add(-1, -1)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 68.28087167070218,
                "explored_percent_lambda": 24.455205811138015,
                "explored_percent_none": 7.263922518159807,
                "kept_percent_concrete": 66.17647058823529,
                "kept_percent_lambda": 33.8235294117647,
                "num_examples": 4,
                "num_explored_concrete": 282,
                "num_explored_lambda": 101,
                "num_explored_none": 30,
                "num_inputs": 1,
                "num_kept_concrete": 180,
                "num_kept_lambda": 92,
                "num_values_explored": 413,
                "num_values_kept": 272,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 413
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.252150404965505,
            "num_unique_values": 220,
            "solution": "IntDivide(Square(Add(-1, -1)), Sum(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 65.16587677725119,
                "explored_percent_lambda": 23.222748815165875,
                "explored_percent_none": 11.611374407582938,
                "kept_percent_concrete": 63.72093023255814,
                "kept_percent_lambda": 36.27906976744186,
                "num_examples": 2,
                "num_explored_concrete": 275,
                "num_explored_lambda": 98,
                "num_explored_none": 49,
                "num_inputs": 1,
                "num_kept_concrete": 137,
                "num_kept_lambda": 78,
                "num_values_explored": 422,
                "num_values_kept": 215,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 422
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1864711761008948,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 55.71955719557196,
                "explored_percent_lambda": 37.638376383763834,
                "explored_percent_none": 6.642066420664206,
                "kept_percent_concrete": 46.103896103896105,
                "kept_percent_lambda": 53.896103896103895,
                "num_examples": 5,
                "num_explored_concrete": 151,
                "num_explored_lambda": 102,
                "num_explored_none": 18,
                "num_inputs": 2,
                "num_kept_concrete": 71,
                "num_kept_lambda": 83,
                "num_values_explored": 271,
                "num_values_kept": 154,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4139903688337654,
            "num_unique_values": 290,
            "solution": "IntDivide(Sum(fn_9(1, x1, x1)), -1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 72.00986436498151,
                "explored_percent_lambda": 18.249075215782984,
                "explored_percent_none": 9.741060419235511,
                "kept_percent_concrete": 60.70175438596491,
                "kept_percent_lambda": 39.29824561403509,
                "num_examples": 3,
                "num_explored_concrete": 584,
                "num_explored_lambda": 148,
                "num_explored_none": 79,
                "num_inputs": 1,
                "num_kept_concrete": 173,
                "num_kept_lambda": 112,
                "num_values_explored": 811,
                "num_values_kept": 285,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 811
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20258194813504815,
            "num_unique_values": 178,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 59.40959409594096,
                "explored_percent_lambda": 36.53136531365314,
                "explored_percent_none": 4.059040590405904,
                "kept_percent_concrete": 51.16279069767442,
                "kept_percent_lambda": 48.83720930232558,
                "num_examples": 2,
                "num_explored_concrete": 161,
                "num_explored_lambda": 99,
                "num_explored_none": 11,
                "num_inputs": 2,
                "num_kept_concrete": 88,
                "num_kept_lambda": 84,
                "num_values_explored": 271,
                "num_values_kept": 172,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22817892394959927,
            "num_unique_values": 162,
            "solution": "fn_1(Sort(x1))",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.23711340206186,
                "explored_percent_lambda": 43.6426116838488,
                "explored_percent_none": 15.120274914089347,
                "kept_percent_concrete": 28.662420382165607,
                "kept_percent_lambda": 71.3375796178344,
                "num_examples": 3,
                "num_explored_concrete": 120,
                "num_explored_lambda": 127,
                "num_explored_none": 44,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 112,
                "num_values_explored": 291,
                "num_values_kept": 157,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 291
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12983172899112105,
            "num_unique_values": 128,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.87330316742081,
                "explored_percent_lambda": 21.71945701357466,
                "explored_percent_none": 10.407239819004525,
                "kept_percent_concrete": 66.39344262295081,
                "kept_percent_lambda": 33.60655737704918,
                "num_examples": 3,
                "num_explored_concrete": 150,
                "num_explored_lambda": 48,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 81,
                "num_kept_lambda": 41,
                "num_values_explored": 221,
                "num_values_kept": 122,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13296578591689467,
            "num_unique_values": 93,
            "solution": "Take(Add(-1, -1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 38.70967741935484,
                "explored_percent_lambda": 58.064516129032256,
                "explored_percent_none": 3.225806451612903,
                "kept_percent_concrete": 16.091954022988507,
                "kept_percent_lambda": 83.9080459770115,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 90,
                "num_explored_none": 5,
                "num_inputs": 2,
                "num_kept_concrete": 14,
                "num_kept_lambda": 73,
                "num_values_explored": 155,
                "num_values_kept": 87,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 155
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19409725698642433,
            "num_unique_values": 130,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.81818181818182,
                "explored_percent_lambda": 34.90909090909091,
                "explored_percent_none": 15.272727272727273,
                "kept_percent_concrete": 36.29032258064516,
                "kept_percent_lambda": 63.70967741935484,
                "num_examples": 3,
                "num_explored_concrete": 137,
                "num_explored_lambda": 96,
                "num_explored_none": 42,
                "num_inputs": 2,
                "num_kept_concrete": 45,
                "num_kept_lambda": 79,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 45.24325596098788,
            "num_unique_values": 738,
            "solution": "fn_24((lambda u1: Map((lambda u1: ((lambda v1: IntDivide(Sum(x1), v1)))(u1)), x2)), x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.18518518518519,
                "explored_percent_lambda": 18.257080610021788,
                "explored_percent_none": 16.55773420479303,
                "kept_percent_concrete": 71.99453551912568,
                "kept_percent_lambda": 28.005464480874316,
                "num_examples": 4,
                "num_explored_concrete": 1496,
                "num_explored_lambda": 419,
                "num_explored_none": 380,
                "num_inputs": 2,
                "num_kept_concrete": 527,
                "num_kept_lambda": 205,
                "num_values_explored": 2295,
                "num_values_kept": 732,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 29514
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.43098994111642,
            "num_unique_values": 1278,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.54792280013085,
                "explored_percent_lambda": 14.131501472031402,
                "explored_percent_none": 10.320575727837749,
                "kept_percent_concrete": 76.35506677140613,
                "kept_percent_lambda": 23.644933228593874,
                "num_examples": 5,
                "num_explored_concrete": 4619,
                "num_explored_lambda": 864,
                "num_explored_none": 631,
                "num_inputs": 1,
                "num_kept_concrete": 972,
                "num_kept_lambda": 301,
                "num_values_explored": 6114,
                "num_values_kept": 1273,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62990
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.438847579061985,
            "num_unique_values": 394,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 78.66868381240545,
                "explored_percent_lambda": 18.15431164901664,
                "explored_percent_none": 3.177004538577912,
                "kept_percent_concrete": 75.0,
                "kept_percent_lambda": 25.0,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 120,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 291,
                "num_kept_lambda": 97,
                "num_values_explored": 661,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19534756592474878,
            "num_unique_values": 172,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 61.76470588235294,
                "explored_percent_lambda": 32.35294117647059,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 51.204819277108435,
                "kept_percent_lambda": 48.795180722891565,
                "num_examples": 2,
                "num_explored_concrete": 168,
                "num_explored_lambda": 88,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 85,
                "num_kept_lambda": 81,
                "num_values_explored": 272,
                "num_values_kept": 166,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11322589800693095,
            "num_unique_values": 92,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 61.72839506172839,
                "explored_percent_lambda": 30.246913580246915,
                "explored_percent_none": 8.024691358024691,
                "kept_percent_concrete": 50.588235294117645,
                "kept_percent_lambda": 49.411764705882355,
                "num_examples": 2,
                "num_explored_concrete": 100,
                "num_explored_lambda": 49,
                "num_explored_none": 13,
                "num_inputs": 3,
                "num_kept_concrete": 43,
                "num_kept_lambda": 42,
                "num_values_explored": 162,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5598009470850229,
            "num_unique_values": 433,
            "solution": "IntDivide(Last(fn_9(Last(x2), x1, x1)), -1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51290591174022,
                "explored_percent_lambda": 8.742714404662781,
                "explored_percent_none": 6.7443796835970025,
                "kept_percent_concrete": 82.43559718969556,
                "kept_percent_lambda": 17.56440281030445,
                "num_examples": 5,
                "num_explored_concrete": 1015,
                "num_explored_lambda": 105,
                "num_explored_none": 81,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 75,
                "num_values_explored": 1201,
                "num_values_kept": 427,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1201
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58668850804679,
            "num_unique_values": 297,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.909390444810544,
                "explored_percent_lambda": 15.453047775947281,
                "explored_percent_none": 69.63756177924218,
                "kept_percent_concrete": 62.32876712328767,
                "kept_percent_lambda": 37.67123287671233,
                "num_examples": 5,
                "num_explored_concrete": 905,
                "num_explored_lambda": 938,
                "num_explored_none": 4227,
                "num_inputs": 1,
                "num_kept_concrete": 182,
                "num_kept_lambda": 110,
                "num_values_explored": 6070,
                "num_values_kept": 292,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63601
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20527039794251323,
            "num_unique_values": 164,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.6,
                "explored_percent_lambda": 47.6,
                "explored_percent_none": 6.8,
                "kept_percent_concrete": 35.22012578616352,
                "kept_percent_lambda": 64.77987421383648,
                "num_examples": 3,
                "num_explored_concrete": 114,
                "num_explored_lambda": 119,
                "num_explored_none": 17,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 103,
                "num_values_explored": 250,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 250
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24072668701410294,
            "num_unique_values": 250,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.33830845771145,
                "explored_percent_lambda": 7.711442786069652,
                "explored_percent_none": 9.950248756218905,
                "kept_percent_concrete": 89.34426229508196,
                "kept_percent_lambda": 10.655737704918034,
                "num_examples": 5,
                "num_explored_concrete": 331,
                "num_explored_lambda": 31,
                "num_explored_none": 40,
                "num_inputs": 2,
                "num_kept_concrete": 218,
                "num_kept_lambda": 26,
                "num_values_explored": 402,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 402
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39948919299058616,
            "num_unique_values": 336,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.43267776096823,
                "explored_percent_lambda": 21.02874432677761,
                "explored_percent_none": 4.53857791225416,
                "kept_percent_concrete": 68.78787878787878,
                "kept_percent_lambda": 31.21212121212121,
                "num_examples": 3,
                "num_explored_concrete": 492,
                "num_explored_lambda": 139,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 103,
                "num_values_explored": 661,
                "num_values_kept": 330,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.16460869810544,
            "num_unique_values": 317,
            "solution": "Max(Square(Add(x1, x1)), Subtract(Multiply(Square(x1), If(Greater(1, x1), Square(x1), Add(x1, x1))), Square(x1)))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 20.672707725387806,
                "explored_percent_lambda": 13.024113039471663,
                "explored_percent_none": 66.30317923514053,
                "kept_percent_concrete": 62.17948717948718,
                "kept_percent_lambda": 37.82051282051282,
                "num_examples": 2,
                "num_explored_concrete": 1346,
                "num_explored_lambda": 848,
                "num_explored_none": 4317,
                "num_inputs": 1,
                "num_kept_concrete": 194,
                "num_kept_lambda": 118,
                "num_values_explored": 6511,
                "num_values_kept": 312,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65646
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39999360288493335,
            "num_unique_values": 280,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 70.42042042042043,
                "explored_percent_lambda": 19.36936936936937,
                "explored_percent_none": 10.21021021021021,
                "kept_percent_concrete": 66.05839416058394,
                "kept_percent_lambda": 33.941605839416056,
                "num_examples": 5,
                "num_explored_concrete": 469,
                "num_explored_lambda": 129,
                "num_explored_none": 68,
                "num_inputs": 2,
                "num_kept_concrete": 181,
                "num_kept_lambda": 93,
                "num_values_explored": 666,
                "num_values_kept": 274,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 666
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2641150108538568,
            "num_unique_values": 302,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 77.04194260485652,
                "explored_percent_lambda": 16.11479028697572,
                "explored_percent_none": 6.843267108167771,
                "kept_percent_concrete": 77.36486486486487,
                "kept_percent_lambda": 22.635135135135137,
                "num_examples": 3,
                "num_explored_concrete": 349,
                "num_explored_lambda": 73,
                "num_explored_none": 31,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 67,
                "num_values_explored": 453,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 453
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.28590995189734,
            "num_unique_values": 1357,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.0986790986791,
                "explored_percent_lambda": 35.236985236985234,
                "explored_percent_none": 10.664335664335665,
                "kept_percent_concrete": 53.328402366863905,
                "kept_percent_lambda": 46.671597633136095,
                "num_examples": 2,
                "num_explored_concrete": 2785,
                "num_explored_lambda": 1814,
                "num_explored_none": 549,
                "num_inputs": 1,
                "num_kept_concrete": 721,
                "num_kept_lambda": 631,
                "num_values_explored": 5148,
                "num_values_kept": 1352,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56427
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24134066700935364,
            "num_unique_values": 148,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 42.06642066420664,
                "explored_percent_lambda": 49.81549815498155,
                "explored_percent_none": 8.118081180811808,
                "kept_percent_concrete": 26.573426573426573,
                "kept_percent_lambda": 73.42657342657343,
                "num_examples": 4,
                "num_explored_concrete": 114,
                "num_explored_lambda": 135,
                "num_explored_none": 22,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 105,
                "num_values_explored": 271,
                "num_values_kept": 143,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3870382630266249,
            "num_unique_values": 337,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 74.5839636913767,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 4.236006051437216,
                "kept_percent_concrete": 68.58006042296073,
                "kept_percent_lambda": 31.419939577039276,
                "num_examples": 5,
                "num_explored_concrete": 493,
                "num_explored_lambda": 140,
                "num_explored_none": 28,
                "num_inputs": 2,
                "num_kept_concrete": 227,
                "num_kept_lambda": 104,
                "num_values_explored": 661,
                "num_values_kept": 331,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 67.15620459383354,
            "num_unique_values": 701,
            "solution": "Min(Subtract(Subtract(x1, Sum(x2)), Sum(Drop(1, Take(x1, x2)))), Add(fn_11(ZipWith((lambda u1, u2: -1), x2, x2), x2), x3))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 62.26280834914611,
                "explored_percent_lambda": 11.764705882352942,
                "explored_percent_none": 25.97248576850095,
                "kept_percent_concrete": 71.61383285302594,
                "kept_percent_lambda": 28.386167146974064,
                "num_examples": 2,
                "num_explored_concrete": 2625,
                "num_explored_lambda": 496,
                "num_explored_none": 1095,
                "num_inputs": 3,
                "num_kept_concrete": 497,
                "num_kept_lambda": 197,
                "num_values_explored": 4216,
                "num_values_kept": 694,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 45498
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3204795808997,
            "num_unique_values": 1228,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 35.61253561253561,
                "explored_percent_lambda": 44.91927825261158,
                "explored_percent_none": 19.4681861348528,
                "kept_percent_concrete": 43.99018806214227,
                "kept_percent_lambda": 56.00981193785773,
                "num_examples": 2,
                "num_explored_concrete": 1500,
                "num_explored_lambda": 1892,
                "num_explored_none": 820,
                "num_inputs": 1,
                "num_kept_concrete": 538,
                "num_kept_lambda": 685,
                "num_values_explored": 4212,
                "num_values_kept": 1223,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46369
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.321454227902,
            "num_unique_values": 1097,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.445109407144194,
                "explored_percent_lambda": 24.387507013278473,
                "explored_percent_none": 15.167383579577333,
                "kept_percent_concrete": 54.853479853479854,
                "kept_percent_lambda": 45.146520146520146,
                "num_examples": 2,
                "num_explored_concrete": 3232,
                "num_explored_lambda": 1304,
                "num_explored_none": 811,
                "num_inputs": 1,
                "num_kept_concrete": 599,
                "num_kept_lambda": 493,
                "num_values_explored": 5347,
                "num_values_kept": 1092,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57086
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 15.553760462906212,
            "num_unique_values": 197,
            "solution": "Max(Subtract(x1, x2), Subtract(x1, Add(x2, Add(x2, x2))))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 17.28748806112703,
                "explored_percent_lambda": 16.523400191021967,
                "explored_percent_none": 66.189111747851,
                "kept_percent_concrete": 56.544502617801044,
                "kept_percent_lambda": 43.455497382198956,
                "num_examples": 2,
                "num_explored_concrete": 543,
                "num_explored_lambda": 519,
                "num_explored_none": 2079,
                "num_inputs": 2,
                "num_kept_concrete": 108,
                "num_kept_lambda": 83,
                "num_values_explored": 3141,
                "num_values_kept": 191,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11409
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72781574493274,
            "num_unique_values": 752,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.012884043607535,
                "explored_percent_lambda": 25.66897918731417,
                "explored_percent_none": 31.318136769078297,
                "kept_percent_concrete": 40.75067024128686,
                "kept_percent_lambda": 59.24932975871314,
                "num_examples": 4,
                "num_explored_concrete": 2170,
                "num_explored_lambda": 1295,
                "num_explored_none": 1580,
                "num_inputs": 2,
                "num_kept_concrete": 304,
                "num_kept_lambda": 442,
                "num_values_explored": 5045,
                "num_values_kept": 746,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52314
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2628746300470084,
            "num_unique_values": 201,
            "solution": "fn_9(1, x1, x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 58.333333333333336,
                "explored_percent_lambda": 35.57692307692308,
                "explored_percent_none": 6.089743589743589,
                "kept_percent_concrete": 51.794871794871796,
                "kept_percent_lambda": 48.205128205128204,
                "num_examples": 3,
                "num_explored_concrete": 182,
                "num_explored_lambda": 111,
                "num_explored_none": 19,
                "num_inputs": 2,
                "num_kept_concrete": 101,
                "num_kept_lambda": 94,
                "num_values_explored": 312,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 40.70037509314716,
            "num_unique_values": 1042,
            "solution": "IntDivide(Multiply(Multiply(Sum(x1), Add(Head(x1), Square(Square(Add(-1, -1))))), Add(1, 1)), Sum(x1))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 64.50718015665797,
                "explored_percent_lambda": 12.304177545691905,
                "explored_percent_none": 23.18864229765013,
                "kept_percent_concrete": 73.57762777242044,
                "kept_percent_lambda": 26.422372227579558,
                "num_examples": 4,
                "num_explored_concrete": 3953,
                "num_explored_lambda": 754,
                "num_explored_none": 1421,
                "num_inputs": 1,
                "num_kept_concrete": 763,
                "num_kept_lambda": 274,
                "num_values_explored": 6128,
                "num_values_kept": 1037,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 26658
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.51330943289213,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.439429928741093,
                "explored_percent_lambda": 27.315914489311165,
                "explored_percent_none": 57.24465558194775,
                "kept_percent_concrete": 30.232558139534884,
                "kept_percent_lambda": 69.76744186046511,
                "num_examples": 5,
                "num_explored_concrete": 845,
                "num_explored_lambda": 1495,
                "num_explored_none": 3133,
                "num_inputs": 1,
                "num_kept_concrete": 78,
                "num_kept_lambda": 180,
                "num_values_explored": 5473,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57215
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3199172851163894,
            "num_unique_values": 259,
            "solution": "Take(Count((lambda u1: IsOdd(-1)), x3), fn_9(Multiply(x1, -1), x2, x2))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 75.41589648798521,
                "explored_percent_lambda": 20.147874306839185,
                "explored_percent_none": 4.436229205175601,
                "kept_percent_concrete": 67.06349206349206,
                "kept_percent_lambda": 32.93650793650794,
                "num_examples": 2,
                "num_explored_concrete": 408,
                "num_explored_lambda": 109,
                "num_explored_none": 24,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 83,
                "num_values_explored": 541,
                "num_values_kept": 252,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.64868514984846,
            "num_unique_values": 321,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.164197723374397,
                "explored_percent_lambda": 14.486199906440044,
                "explored_percent_none": 66.34960237018556,
                "kept_percent_concrete": 59.682539682539684,
                "kept_percent_lambda": 40.317460317460316,
                "num_examples": 2,
                "num_explored_concrete": 1229,
                "num_explored_lambda": 929,
                "num_explored_none": 4255,
                "num_inputs": 2,
                "num_kept_concrete": 188,
                "num_kept_lambda": 127,
                "num_values_explored": 6413,
                "num_values_kept": 315,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66549
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20896462397649884,
            "num_unique_values": 185,
            "solution": "fn_9(Multiply(x1, -1), x3, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 62.17948717948718,
                "explored_percent_lambda": 29.807692307692307,
                "explored_percent_none": 8.012820512820513,
                "kept_percent_concrete": 53.37078651685393,
                "kept_percent_lambda": 46.62921348314607,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 93,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 95,
                "num_kept_lambda": 83,
                "num_values_explored": 312,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 312
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3732573729939759,
            "num_unique_values": 358,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 79.42122186495178,
                "explored_percent_lambda": 16.881028938906752,
                "explored_percent_none": 3.697749196141479,
                "kept_percent_concrete": 73.78917378917379,
                "kept_percent_lambda": 26.210826210826212,
                "num_examples": 4,
                "num_explored_concrete": 494,
                "num_explored_lambda": 105,
                "num_explored_none": 23,
                "num_inputs": 3,
                "num_kept_concrete": 259,
                "num_kept_lambda": 92,
                "num_values_explored": 622,
                "num_values_kept": 351,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 622
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.47968491795473,
            "num_unique_values": 313,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.662721893491124,
                "explored_percent_lambda": 8.781603012372242,
                "explored_percent_none": 63.55567509413663,
                "kept_percent_concrete": 77.1986970684039,
                "kept_percent_lambda": 22.80130293159609,
                "num_examples": 4,
                "num_explored_concrete": 2057,
                "num_explored_lambda": 653,
                "num_explored_none": 4726,
                "num_inputs": 2,
                "num_kept_concrete": 237,
                "num_kept_lambda": 70,
                "num_values_explored": 7436,
                "num_values_kept": 307,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73302
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.32797563099302,
            "num_unique_values": 1032,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.17958412098299,
                "explored_percent_lambda": 28.271371560596513,
                "explored_percent_none": 26.5490443184205,
                "kept_percent_concrete": 57.351509250243424,
                "kept_percent_lambda": 42.648490749756576,
                "num_examples": 5,
                "num_explored_concrete": 2151,
                "num_explored_lambda": 1346,
                "num_explored_none": 1264,
                "num_inputs": 1,
                "num_kept_concrete": 589,
                "num_kept_lambda": 438,
                "num_values_explored": 4761,
                "num_values_kept": 1027,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54575
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2382771698758006,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: x3), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 57.142857142857146,
                "explored_percent_lambda": 33.57142857142857,
                "explored_percent_none": 9.285714285714286,
                "kept_percent_concrete": 48.23529411764706,
                "kept_percent_lambda": 51.76470588235294,
                "num_examples": 5,
                "num_explored_concrete": 160,
                "num_explored_lambda": 94,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 88,
                "num_values_explored": 280,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 280
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.22540296986699,
            "num_unique_values": 968,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.79275653923541,
                "explored_percent_lambda": 22.43460764587525,
                "explored_percent_none": 18.772635814889338,
                "kept_percent_concrete": 59.190031152647975,
                "kept_percent_lambda": 40.809968847352025,
                "num_examples": 3,
                "num_explored_concrete": 2922,
                "num_explored_lambda": 1115,
                "num_explored_none": 933,
                "num_inputs": 1,
                "num_kept_concrete": 570,
                "num_kept_lambda": 393,
                "num_values_explored": 4970,
                "num_values_kept": 963,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53147
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.49200810003094375,
            "num_unique_values": 322,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 64.3609022556391,
                "explored_percent_lambda": 30.526315789473685,
                "explored_percent_none": 5.112781954887218,
                "kept_percent_concrete": 55.379746835443036,
                "kept_percent_lambda": 44.620253164556964,
                "num_examples": 4,
                "num_explored_concrete": 428,
                "num_explored_lambda": 203,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 141,
                "num_values_explored": 665,
                "num_values_kept": 316,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 665
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 85.97680601011962,
            "num_unique_values": 1028,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 66.30652260904361,
                "explored_percent_lambda": 18.367346938775512,
                "explored_percent_none": 15.326130452180873,
                "kept_percent_concrete": 74.04505386875613,
                "kept_percent_lambda": 25.95494613124388,
                "num_examples": 5,
                "num_explored_concrete": 1657,
                "num_explored_lambda": 459,
                "num_explored_none": 383,
                "num_inputs": 3,
                "num_kept_concrete": 756,
                "num_kept_lambda": 265,
                "num_values_explored": 2499,
                "num_values_kept": 1021,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 46019
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.446213933872059,
            "num_unique_values": 302,
            "solution": "Take(fn_11(x2, x2), Map((lambda u1: Sum(x1)), x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 63.77079482439926,
                "explored_percent_lambda": 31.97781885397412,
                "explored_percent_none": 4.251386321626617,
                "kept_percent_concrete": 54.729729729729726,
                "kept_percent_lambda": 45.270270270270274,
                "num_examples": 5,
                "num_explored_concrete": 345,
                "num_explored_lambda": 173,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 162,
                "num_kept_lambda": 134,
                "num_values_explored": 541,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 541
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81187004200183,
            "num_unique_values": 670,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.82732286805261,
                "explored_percent_lambda": 8.754065902984019,
                "explored_percent_none": 40.41861122896337,
                "kept_percent_concrete": 71.53614457831326,
                "kept_percent_lambda": 28.46385542168675,
                "num_examples": 5,
                "num_explored_concrete": 3594,
                "num_explored_lambda": 619,
                "num_explored_none": 2858,
                "num_inputs": 2,
                "num_kept_concrete": 475,
                "num_kept_lambda": 189,
                "num_values_explored": 7071,
                "num_values_kept": 664,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71129
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.9707748349756,
            "num_unique_values": 899,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 58.04308797127469,
                "explored_percent_lambda": 21.597845601436266,
                "explored_percent_none": 20.359066427289047,
                "kept_percent_concrete": 47.03247480403135,
                "kept_percent_lambda": 52.96752519596865,
                "num_examples": 2,
                "num_explored_concrete": 3233,
                "num_explored_lambda": 1203,
                "num_explored_none": 1134,
                "num_inputs": 2,
                "num_kept_concrete": 420,
                "num_kept_lambda": 473,
                "num_values_explored": 5570,
                "num_values_kept": 893,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55886
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.78466906887479,
            "num_unique_values": 256,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.729906864436014,
                "explored_percent_lambda": 19.092790617454295,
                "explored_percent_none": 64.1773025181097,
                "kept_percent_concrete": 42.62948207171315,
                "kept_percent_lambda": 57.37051792828685,
                "num_examples": 4,
                "num_explored_concrete": 970,
                "num_explored_lambda": 1107,
                "num_explored_none": 3721,
                "num_inputs": 1,
                "num_kept_concrete": 107,
                "num_kept_lambda": 144,
                "num_values_explored": 5798,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62709
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.38669940992258,
            "num_unique_values": 1174,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.54575432811212,
                "explored_percent_lambda": 29.657873042044518,
                "explored_percent_none": 18.796372629843365,
                "kept_percent_concrete": 55.907534246575345,
                "kept_percent_lambda": 44.092465753424655,
                "num_examples": 4,
                "num_explored_concrete": 2501,
                "num_explored_lambda": 1439,
                "num_explored_none": 912,
                "num_inputs": 2,
                "num_kept_concrete": 653,
                "num_kept_lambda": 515,
                "num_values_explored": 4852,
                "num_values_kept": 1168,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52360
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21751026599668,
            "num_unique_values": 1222,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 66.34795970633431,
                "explored_percent_lambda": 18.524842069318765,
                "explored_percent_none": 15.127198224346936,
                "kept_percent_concrete": 67.6253081347576,
                "kept_percent_lambda": 32.3746918652424,
                "num_examples": 3,
                "num_explored_concrete": 3886,
                "num_explored_lambda": 1085,
                "num_explored_none": 886,
                "num_inputs": 1,
                "num_kept_concrete": 823,
                "num_kept_lambda": 394,
                "num_values_explored": 5857,
                "num_values_kept": 1217,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62072
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3505567740648985,
            "num_unique_values": 225,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 67.0196671709531,
                "explored_percent_lambda": 21.180030257186083,
                "explored_percent_none": 11.800302571860817,
                "kept_percent_concrete": 59.36073059360731,
                "kept_percent_lambda": 40.63926940639269,
                "num_examples": 2,
                "num_explored_concrete": 443,
                "num_explored_lambda": 140,
                "num_explored_none": 78,
                "num_inputs": 2,
                "num_kept_concrete": 130,
                "num_kept_lambda": 89,
                "num_values_explored": 661,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 661
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7240939149633,
            "num_unique_values": 265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.383763837638377,
                "explored_percent_lambda": 23.690036900369005,
                "explored_percent_none": 64.92619926199262,
                "kept_percent_concrete": 34.23076923076923,
                "kept_percent_lambda": 65.76923076923077,
                "num_examples": 4,
                "num_explored_concrete": 617,
                "num_explored_lambda": 1284,
                "num_explored_none": 3519,
                "num_inputs": 1,
                "num_kept_concrete": 89,
                "num_kept_lambda": 171,
                "num_values_explored": 5420,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55593
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31994617800228,
            "num_unique_values": 1420,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.29768605378362,
                "explored_percent_lambda": 13.148843026891807,
                "explored_percent_none": 10.553470919324578,
                "kept_percent_concrete": 74.8939179632249,
                "kept_percent_lambda": 25.106082036775106,
                "num_examples": 2,
                "num_explored_concrete": 4880,
                "num_explored_lambda": 841,
                "num_explored_none": 675,
                "num_inputs": 2,
                "num_kept_concrete": 1059,
                "num_kept_lambda": 355,
                "num_values_explored": 6396,
                "num_values_kept": 1414,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66021
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34505792916752,
            "num_unique_values": 1365,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.38095238095238,
                "explored_percent_lambda": 8.19672131147541,
                "explored_percent_none": 19.42232630757221,
                "kept_percent_concrete": 82.92862398822663,
                "kept_percent_lambda": 17.071376011773364,
                "num_examples": 5,
                "num_explored_concrete": 4636,
                "num_explored_lambda": 525,
                "num_explored_none": 1244,
                "num_inputs": 2,
                "num_kept_concrete": 1127,
                "num_kept_lambda": 232,
                "num_values_explored": 6405,
                "num_values_kept": 1359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66632
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.26955321687274,
            "num_unique_values": 1252,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 75.89343729694608,
                "explored_percent_lambda": 17.576348278102664,
                "explored_percent_none": 6.530214424951267,
                "kept_percent_concrete": 67.84282277465918,
                "kept_percent_lambda": 32.15717722534082,
                "num_examples": 3,
                "num_explored_concrete": 4672,
                "num_explored_lambda": 1082,
                "num_explored_none": 402,
                "num_inputs": 1,
                "num_kept_concrete": 846,
                "num_kept_lambda": 401,
                "num_values_explored": 6156,
                "num_values_kept": 1247,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59568
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.37124608992599,
            "num_unique_values": 1525,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.96530997767474,
                "explored_percent_lambda": 14.288167611196977,
                "explored_percent_none": 11.746522411128284,
                "kept_percent_concrete": 76.76102699144174,
                "kept_percent_lambda": 23.23897300855826,
                "num_examples": 5,
                "num_explored_concrete": 4307,
                "num_explored_lambda": 832,
                "num_explored_none": 684,
                "num_inputs": 2,
                "num_kept_concrete": 1166,
                "num_kept_lambda": 353,
                "num_values_explored": 5823,
                "num_values_kept": 1519,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63734
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.41946822707541,
            "num_unique_values": 1533,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 59.17798028640506,
                "explored_percent_lambda": 27.320066951831876,
                "explored_percent_none": 13.501952761763064,
                "kept_percent_concrete": 61.64921465968586,
                "kept_percent_lambda": 38.35078534031414,
                "num_examples": 2,
                "num_explored_concrete": 3182,
                "num_explored_lambda": 1469,
                "num_explored_none": 726,
                "num_inputs": 1,
                "num_kept_concrete": 942,
                "num_kept_lambda": 586,
                "num_values_explored": 5377,
                "num_values_kept": 1528,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52807
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08097233204171,
            "num_unique_values": 1430,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.90631089791636,
                "explored_percent_lambda": 9.323939439364413,
                "explored_percent_none": 15.769749662719233,
                "kept_percent_concrete": 81.79901616303584,
                "kept_percent_lambda": 18.20098383696416,
                "num_examples": 4,
                "num_explored_concrete": 4997,
                "num_explored_lambda": 622,
                "num_explored_none": 1052,
                "num_inputs": 3,
                "num_kept_concrete": 1164,
                "num_kept_lambda": 259,
                "num_values_explored": 6671,
                "num_values_kept": 1423,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67193
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6592389040160924,
            "num_unique_values": 154,
            "solution": "Map((lambda u1: Add(Sum(fn_9(IntDivide(Head(x1), Square(Add(-1, -1))), x1, x1)), -1)), x1)",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 70.67334446299388,
                "explored_percent_lambda": 16.30495269894268,
                "explored_percent_none": 13.021702838063439,
                "kept_percent_concrete": 37.58389261744966,
                "kept_percent_lambda": 62.41610738255034,
                "num_examples": 2,
                "num_explored_concrete": 1270,
                "num_explored_lambda": 293,
                "num_explored_none": 234,
                "num_inputs": 1,
                "num_kept_concrete": 56,
                "num_kept_lambda": 93,
                "num_values_explored": 1797,
                "num_values_kept": 149,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1797
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.97552831098437,
            "num_unique_values": 1440,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.9858621192246,
                "explored_percent_lambda": 6.5005101297187,
                "explored_percent_none": 16.513627751056696,
                "kept_percent_concrete": 87.85764131193301,
                "kept_percent_lambda": 12.142358688066992,
                "num_examples": 4,
                "num_explored_concrete": 5282,
                "num_explored_lambda": 446,
                "num_explored_none": 1133,
                "num_inputs": 3,
                "num_kept_concrete": 1259,
                "num_kept_lambda": 174,
                "num_values_explored": 6861,
                "num_values_kept": 1433,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72412
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.37763055204414,
            "num_unique_values": 1091,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 34.305101784367935,
                "explored_percent_lambda": 46.89620507665243,
                "explored_percent_none": 18.798693138979644,
                "kept_percent_concrete": 41.34438305709024,
                "kept_percent_lambda": 58.65561694290976,
                "num_examples": 3,
                "num_explored_concrete": 1365,
                "num_explored_lambda": 1866,
                "num_explored_none": 748,
                "num_inputs": 1,
                "num_kept_concrete": 449,
                "num_kept_lambda": 637,
                "num_values_explored": 3979,
                "num_values_kept": 1086,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41755
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71360477712005,
            "num_unique_values": 260,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.534309240622141,
                "explored_percent_lambda": 26.495882891125344,
                "explored_percent_none": 60.969807868252516,
                "kept_percent_concrete": 35.68627450980392,
                "kept_percent_lambda": 64.31372549019608,
                "num_examples": 4,
                "num_explored_concrete": 685,
                "num_explored_lambda": 1448,
                "num_explored_none": 3332,
                "num_inputs": 1,
                "num_kept_concrete": 91,
                "num_kept_lambda": 164,
                "num_values_explored": 5465,
                "num_values_kept": 255,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57891
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20956294611096,
            "num_unique_values": 1282,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.98322478784291,
                "explored_percent_lambda": 31.32030787448194,
                "explored_percent_none": 13.696467337675154,
                "kept_percent_concrete": 57.635082223962414,
                "kept_percent_lambda": 42.364917776037586,
                "num_examples": 2,
                "num_explored_concrete": 2786,
                "num_explored_lambda": 1587,
                "num_explored_none": 694,
                "num_inputs": 1,
                "num_kept_concrete": 736,
                "num_kept_lambda": 541,
                "num_values_explored": 5067,
                "num_values_kept": 1277,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52956
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.85081971413456,
            "num_unique_values": 1273,
            "solution": "Map((lambda u1: Square(Count((lambda u1: ((lambda v1: Equal(v1, Last(x1))))(u1)), x2))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), Take(Add(1, 1), fn_21(fn_14(x1)))))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 75.79629629629629,
                "explored_percent_lambda": 13.351851851851851,
                "explored_percent_none": 10.851851851851851,
                "kept_percent_concrete": 74.565560821485,
                "kept_percent_lambda": 25.434439178515007,
                "num_examples": 5,
                "num_explored_concrete": 4093,
                "num_explored_lambda": 721,
                "num_explored_none": 586,
                "num_inputs": 3,
                "num_kept_concrete": 944,
                "num_kept_lambda": 322,
                "num_values_explored": 5400,
                "num_values_kept": 1266,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 27536
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.92016230616719,
            "num_unique_values": 1225,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.80697740920789,
                "explored_percent_lambda": 17.872462110380326,
                "explored_percent_none": 7.320560480411782,
                "kept_percent_concrete": 54.14273995077933,
                "kept_percent_lambda": 45.85726004922067,
                "num_examples": 2,
                "num_explored_concrete": 5232,
                "num_explored_lambda": 1250,
                "num_explored_none": 512,
                "num_inputs": 2,
                "num_kept_concrete": 660,
                "num_kept_lambda": 559,
                "num_values_explored": 6994,
                "num_values_kept": 1219,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67214
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.01833564485423,
            "num_unique_values": 693,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.323005019906525,
                "explored_percent_lambda": 27.903756274883158,
                "explored_percent_none": 29.773238705210318,
                "kept_percent_concrete": 38.95348837209303,
                "kept_percent_lambda": 61.04651162790697,
                "num_examples": 3,
                "num_explored_concrete": 2445,
                "num_explored_lambda": 1612,
                "num_explored_none": 1720,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 420,
                "num_values_explored": 5777,
                "num_values_kept": 688,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62635
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12180092814378,
            "num_unique_values": 2043,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 82.39636570130608,
                "explored_percent_lambda": 6.147075525269733,
                "explored_percent_none": 11.456558773424192,
                "kept_percent_concrete": 90.6188605108055,
                "kept_percent_lambda": 9.3811394891945,
                "num_examples": 5,
                "num_explored_concrete": 5804,
                "num_explored_lambda": 433,
                "num_explored_none": 807,
                "num_inputs": 3,
                "num_kept_concrete": 1845,
                "num_kept_lambda": 191,
                "num_values_explored": 7044,
                "num_values_kept": 2036,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74818
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 34.5418236698024,
            "num_unique_values": 636,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 54.083885209713024,
                "explored_percent_lambda": 24.503311258278146,
                "explored_percent_none": 21.41280353200883,
                "kept_percent_concrete": 65.97774244833069,
                "kept_percent_lambda": 34.02225755166932,
                "num_examples": 4,
                "num_explored_concrete": 1225,
                "num_explored_lambda": 555,
                "num_explored_none": 485,
                "num_inputs": 3,
                "num_kept_concrete": 415,
                "num_kept_lambda": 214,
                "num_values_explored": 2265,
                "num_values_kept": 629,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 23065
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11959370714612,
            "num_unique_values": 1395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.29794582803127,
                "explored_percent_lambda": 27.013270314488274,
                "explored_percent_none": 11.688783857480457,
                "kept_percent_concrete": 60.79136690647482,
                "kept_percent_lambda": 39.20863309352518,
                "num_examples": 2,
                "num_explored_concrete": 3372,
                "num_explored_lambda": 1486,
                "num_explored_none": 643,
                "num_inputs": 1,
                "num_kept_concrete": 845,
                "num_kept_lambda": 545,
                "num_values_explored": 5501,
                "num_values_kept": 1390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58029
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95359387015924,
            "num_unique_values": 1524,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.2260917634052,
                "explored_percent_lambda": 11.691542288557214,
                "explored_percent_none": 14.08236594803759,
                "kept_percent_concrete": 81.02766798418972,
                "kept_percent_lambda": 18.972332015810277,
                "num_examples": 3,
                "num_explored_concrete": 5371,
                "num_explored_lambda": 846,
                "num_explored_none": 1019,
                "num_inputs": 2,
                "num_kept_concrete": 1230,
                "num_kept_lambda": 288,
                "num_values_explored": 7236,
                "num_values_kept": 1518,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 73961
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.48975153500214,
            "num_unique_values": 379,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.903974470554104,
                "explored_percent_lambda": 15.172613867130838,
                "explored_percent_none": 61.923411662315054,
                "kept_percent_concrete": 59.24932975871314,
                "kept_percent_lambda": 40.75067024128686,
                "num_examples": 4,
                "num_explored_concrete": 1579,
                "num_explored_lambda": 1046,
                "num_explored_none": 4269,
                "num_inputs": 2,
                "num_kept_concrete": 221,
                "num_kept_lambda": 152,
                "num_values_explored": 6894,
                "num_values_kept": 373,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69125
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09676754311658,
            "num_unique_values": 1395,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.36877718704689,
                "explored_percent_lambda": 17.061382310294828,
                "explored_percent_none": 9.56984050265829,
                "kept_percent_concrete": 75.53956834532374,
                "kept_percent_lambda": 24.46043165467626,
                "num_examples": 5,
                "num_explored_concrete": 4554,
                "num_explored_lambda": 1059,
                "num_explored_none": 594,
                "num_inputs": 1,
                "num_kept_concrete": 1050,
                "num_kept_lambda": 340,
                "num_values_explored": 6207,
                "num_values_kept": 1390,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69153
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.100372441113,
            "num_unique_values": 1182,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 80.30643243957205,
                "explored_percent_lambda": 6.841896711134592,
                "explored_percent_none": 12.851670849293356,
                "kept_percent_concrete": 85.20408163265306,
                "kept_percent_lambda": 14.795918367346939,
                "num_examples": 4,
                "num_explored_concrete": 6080,
                "num_explored_lambda": 518,
                "num_explored_none": 973,
                "num_inputs": 2,
                "num_kept_concrete": 1002,
                "num_kept_lambda": 174,
                "num_values_explored": 7571,
                "num_values_kept": 1176,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76678
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.52068289299496,
            "num_unique_values": 339,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 19.584934665641814,
                "explored_percent_lambda": 18.524212144504226,
                "explored_percent_none": 61.89085318985396,
                "kept_percent_concrete": 57.48502994011976,
                "kept_percent_lambda": 42.51497005988024,
                "num_examples": 3,
                "num_explored_concrete": 1274,
                "num_explored_lambda": 1205,
                "num_explored_none": 4026,
                "num_inputs": 1,
                "num_kept_concrete": 192,
                "num_kept_lambda": 142,
                "num_values_explored": 6505,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66697
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07400992396288,
            "num_unique_values": 1400,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 73.92355340685904,
                "explored_percent_lambda": 16.241124036863575,
                "explored_percent_none": 9.835322556277383,
                "kept_percent_concrete": 70.58823529411765,
                "kept_percent_lambda": 29.41176470588235,
                "num_examples": 3,
                "num_explored_concrete": 4893,
                "num_explored_lambda": 1075,
                "num_explored_none": 651,
                "num_inputs": 2,
                "num_kept_concrete": 984,
                "num_kept_lambda": 410,
                "num_values_explored": 6619,
                "num_values_kept": 1394,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65833
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.22371789999306,
            "num_unique_values": 820,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.79696394686907,
                "explored_percent_lambda": 30.94876660341556,
                "explored_percent_none": 28.25426944971537,
                "kept_percent_concrete": 45.88957055214724,
                "kept_percent_lambda": 54.11042944785276,
                "num_examples": 5,
                "num_explored_concrete": 2150,
                "num_explored_lambda": 1631,
                "num_explored_none": 1489,
                "num_inputs": 1,
                "num_kept_concrete": 374,
                "num_kept_lambda": 441,
                "num_values_explored": 5270,
                "num_values_kept": 815,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58995
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.56239989795722,
            "num_unique_values": 1364,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.77380952380952,
                "explored_percent_lambda": 16.005291005291006,
                "explored_percent_none": 18.22089947089947,
                "kept_percent_concrete": 72.55334805003679,
                "kept_percent_lambda": 27.446651949963208,
                "num_examples": 5,
                "num_explored_concrete": 3978,
                "num_explored_lambda": 968,
                "num_explored_none": 1102,
                "num_inputs": 1,
                "num_kept_concrete": 986,
                "num_kept_lambda": 373,
                "num_values_explored": 6048,
                "num_values_kept": 1359,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63661
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.69519784883596,
            "num_unique_values": 823,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.97473717244626,
                "explored_percent_lambda": 22.375647261886083,
                "explored_percent_none": 20.64961556566766,
                "kept_percent_concrete": 59.779951100244496,
                "kept_percent_lambda": 40.220048899755504,
                "num_examples": 2,
                "num_explored_concrete": 3631,
                "num_explored_lambda": 1426,
                "num_explored_none": 1316,
                "num_inputs": 1,
                "num_kept_concrete": 489,
                "num_kept_lambda": 329,
                "num_values_explored": 6373,
                "num_values_kept": 818,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66165
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27484072791412,
            "num_unique_values": 1025,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.0986431976531,
                "explored_percent_lambda": 25.44921158782545,
                "explored_percent_none": 21.45214521452145,
                "kept_percent_concrete": 60.294117647058826,
                "kept_percent_lambda": 39.705882352941174,
                "num_examples": 4,
                "num_explored_concrete": 2896,
                "num_explored_lambda": 1388,
                "num_explored_none": 1170,
                "num_inputs": 1,
                "num_kept_concrete": 615,
                "num_kept_lambda": 405,
                "num_values_explored": 5454,
                "num_values_kept": 1020,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53819
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.82333433022723,
            "num_unique_values": 607,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.336288535160186,
                "explored_percent_lambda": 30.546040701188797,
                "explored_percent_none": 32.11767076365102,
                "kept_percent_concrete": 24.916943521594686,
                "kept_percent_lambda": 75.08305647840531,
                "num_examples": 2,
                "num_explored_concrete": 1853,
                "num_explored_lambda": 1516,
                "num_explored_none": 1594,
                "num_inputs": 1,
                "num_kept_concrete": 150,
                "num_kept_lambda": 452,
                "num_values_explored": 4963,
                "num_values_kept": 602,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55707
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.08337849588133,
            "num_unique_values": 849,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.2610541209763,
                "explored_percent_lambda": 24.177573399363283,
                "explored_percent_none": 19.561372479660417,
                "kept_percent_concrete": 44.43127962085308,
                "kept_percent_lambda": 55.56872037914692,
                "num_examples": 2,
                "num_explored_concrete": 3181,
                "num_explored_lambda": 1367,
                "num_explored_none": 1106,
                "num_inputs": 1,
                "num_kept_concrete": 375,
                "num_kept_lambda": 469,
                "num_values_explored": 5654,
                "num_values_kept": 844,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59951
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.43964875210077,
            "num_unique_values": 263,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.0981929764746,
                "explored_percent_lambda": 22.195704057279237,
                "explored_percent_none": 63.70610296624616,
                "kept_percent_concrete": 32.945736434108525,
                "kept_percent_lambda": 67.05426356589147,
                "num_examples": 2,
                "num_explored_concrete": 827,
                "num_explored_lambda": 1302,
                "num_explored_none": 3737,
                "num_inputs": 1,
                "num_kept_concrete": 85,
                "num_kept_lambda": 173,
                "num_values_explored": 5866,
                "num_values_kept": 258,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59276
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.54834234900773,
            "num_unique_values": 264,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.94209161624892,
                "explored_percent_lambda": 25.980985306828003,
                "explored_percent_none": 63.07692307692308,
                "kept_percent_concrete": 28.571428571428573,
                "kept_percent_lambda": 71.42857142857143,
                "num_examples": 2,
                "num_explored_concrete": 633,
                "num_explored_lambda": 1503,
                "num_explored_none": 3649,
                "num_inputs": 1,
                "num_kept_concrete": 74,
                "num_kept_lambda": 185,
                "num_values_explored": 5785,
                "num_values_kept": 259,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56614
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67036999901757,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.363201911589009,
                "explored_percent_lambda": 36.79808841099164,
                "explored_percent_none": 54.83870967741935,
                "kept_percent_concrete": 11.153846153846153,
                "kept_percent_lambda": 88.84615384615384,
                "num_examples": 2,
                "num_explored_concrete": 420,
                "num_explored_lambda": 1848,
                "num_explored_none": 2754,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 231,
                "num_values_explored": 5022,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52384
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.55767966201529,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.041346721795628,
                "explored_percent_lambda": 35.38098050797401,
                "explored_percent_none": 54.57767277023036,
                "kept_percent_concrete": 13.846153846153847,
                "kept_percent_lambda": 86.15384615384616,
                "num_examples": 2,
                "num_explored_concrete": 510,
                "num_explored_lambda": 1797,
                "num_explored_none": 2772,
                "num_inputs": 2,
                "num_kept_concrete": 36,
                "num_kept_lambda": 224,
                "num_values_explored": 5079,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53825
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56825127010234,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.555421444377389,
                "explored_percent_lambda": 36.753168376584185,
                "explored_percent_none": 53.69141017903842,
                "kept_percent_concrete": 14.23076923076923,
                "kept_percent_lambda": 85.76923076923077,
                "num_examples": 2,
                "num_explored_concrete": 475,
                "num_explored_lambda": 1827,
                "num_explored_none": 2669,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 223,
                "num_values_explored": 4971,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52201
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57296262006275,
            "num_unique_values": 266,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.548442575960252,
                "explored_percent_lambda": 35.849417160328684,
                "explored_percent_none": 53.602140263711064,
                "kept_percent_concrete": 14.23076923076923,
                "kept_percent_lambda": 85.76923076923077,
                "num_examples": 2,
                "num_explored_concrete": 552,
                "num_explored_lambda": 1876,
                "num_explored_none": 2805,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 223,
                "num_values_explored": 5233,
                "num_values_kept": 260,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54226
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0470016959589,
            "num_unique_values": 613,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.734076702145636,
                "explored_percent_lambda": 25.274539618178746,
                "explored_percent_none": 28.99138367967562,
                "kept_percent_concrete": 33.55263157894737,
                "kept_percent_lambda": 66.44736842105263,
                "num_examples": 2,
                "num_explored_concrete": 2707,
                "num_explored_lambda": 1496,
                "num_explored_none": 1716,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 404,
                "num_values_explored": 5919,
                "num_values_kept": 608,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61812
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56347996508703,
            "num_unique_values": 291,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.96556102205999,
                "explored_percent_lambda": 17.66386287890811,
                "explored_percent_none": 65.3705760990319,
                "kept_percent_concrete": 46.15384615384615,
                "kept_percent_lambda": 53.84615384615385,
                "num_examples": 3,
                "num_explored_concrete": 1069,
                "num_explored_lambda": 1113,
                "num_explored_none": 4119,
                "num_inputs": 1,
                "num_kept_concrete": 132,
                "num_kept_lambda": 154,
                "num_values_explored": 6301,
                "num_values_kept": 286,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.49
}