{
    "num_tasks": 100,
    "num_tasks_solved": 54,
    "results": [
        {
            "elapsed_time": 0.5056763020111248,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.16883116883117,
                "explored_percent_lambda": 57.142857142857146,
                "explored_percent_none": 11.688311688311689,
                "kept_percent_concrete": 18.253968253968253,
                "kept_percent_lambda": 81.74603174603175,
                "num_examples": 2,
                "num_explored_concrete": 72,
                "num_explored_lambda": 132,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17515338701196015,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.927536231884055,
                "explored_percent_lambda": 40.21739130434783,
                "explored_percent_none": 14.855072463768115,
                "kept_percent_concrete": 39.86486486486486,
                "kept_percent_lambda": 60.13513513513514,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 111,
                "num_explored_none": 41,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 89,
                "num_values_explored": 276,
                "num_values_kept": 148,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13388193200808018,
            "num_unique_values": 122,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.906976744186046,
                "explored_percent_lambda": 63.372093023255815,
                "explored_percent_none": 8.720930232558139,
                "kept_percent_concrete": 18.96551724137931,
                "kept_percent_lambda": 81.03448275862068,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 109,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 94,
                "num_values_explored": 172,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20337759400717914,
            "num_unique_values": 123,
            "solution": "Drop(Square(Subtract(-1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.85207100591716,
                "explored_percent_lambda": 69.8224852071006,
                "explored_percent_none": 5.325443786982248,
                "kept_percent_concrete": 16.23931623931624,
                "kept_percent_lambda": 83.76068376068376,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 118,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 98,
                "num_values_explored": 169,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09043680597096682,
            "num_unique_values": 82,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.29139072847682,
                "explored_percent_lambda": 39.0728476821192,
                "explored_percent_none": 4.635761589403973,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 4,
                "num_explored_concrete": 85,
                "num_explored_lambda": 59,
                "num_explored_none": 7,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 46,
                "num_values_explored": 151,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13664908497594297,
            "num_unique_values": 121,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.875776397515526,
                "explored_percent_lambda": 71.42857142857143,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 9.649122807017545,
                "kept_percent_lambda": 90.35087719298245,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 115,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 11,
                "num_kept_lambda": 103,
                "num_values_explored": 161,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1390254939906299,
            "num_unique_values": 117,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.11801242236025,
                "explored_percent_lambda": 72.67080745341615,
                "explored_percent_none": 6.211180124223603,
                "kept_percent_concrete": 10.81081081081081,
                "kept_percent_lambda": 89.1891891891892,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 117,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 99,
                "num_values_explored": 161,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4410497860517353,
            "num_unique_values": 285,
            "solution": "Drop(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.986301369863014,
                "explored_percent_lambda": 51.076320939334636,
                "explored_percent_none": 11.937377690802348,
                "kept_percent_concrete": 27.240143369175627,
                "kept_percent_lambda": 72.75985663082437,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 261,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 203,
                "num_values_explored": 511,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 511
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39421220403164625,
            "num_unique_values": 285,
            "solution": "Scanl1((lambda u1, u2: fn_3(Square(fn_3(-1)))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.29299363057325,
                "explored_percent_lambda": 37.261146496815286,
                "explored_percent_none": 15.445859872611464,
                "kept_percent_concrete": 40.50179211469534,
                "kept_percent_lambda": 59.49820788530466,
                "num_examples": 4,
                "num_explored_concrete": 297,
                "num_explored_lambda": 234,
                "num_explored_none": 97,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 166,
                "num_values_explored": 628,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10077358898706734,
            "num_unique_values": 105,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.06432748538012,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 5,
                "num_explored_concrete": 101,
                "num_explored_lambda": 54,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24949663504958153,
            "num_unique_values": 246,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.18672199170125,
                "explored_percent_lambda": 26.348547717842322,
                "explored_percent_none": 18.46473029045643,
                "kept_percent_concrete": 61.92468619246862,
                "kept_percent_lambda": 38.07531380753138,
                "num_examples": 4,
                "num_explored_concrete": 266,
                "num_explored_lambda": 127,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 91,
                "num_values_explored": 482,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1855020800139755,
            "num_unique_values": 105,
            "solution": "Max(x1, Square(Square(fn_3(-1))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.79318734793188,
                "explored_percent_lambda": 31.386861313868614,
                "explored_percent_none": 33.819951338199516,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 129,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 72,
                "num_values_explored": 411,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22244585200678557,
            "num_unique_values": 220,
            "solution": "Multiply(Square(fn_3(-1)), Minimum(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.36927223719677,
                "explored_percent_lambda": 34.23180592991914,
                "explored_percent_none": 12.398921832884097,
                "kept_percent_concrete": 51.401869158878505,
                "kept_percent_lambda": 48.598130841121495,
                "num_examples": 4,
                "num_explored_concrete": 198,
                "num_explored_lambda": 127,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 104,
                "num_values_explored": 371,
                "num_values_kept": 214,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 371
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27177154109813273,
            "num_unique_values": 176,
            "solution": "Multiply(Square(fn_3(-1)), fn_0(1, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 51.344086021505376,
                "explored_percent_lambda": 31.989247311827956,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 44.705882352941174,
                "kept_percent_lambda": 55.294117647058826,
                "num_examples": 2,
                "num_explored_concrete": 191,
                "num_explored_lambda": 119,
                "num_explored_none": 62,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 94,
                "num_values_explored": 372,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17484603100456297,
            "num_unique_values": 176,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.779411764705884,
                "explored_percent_lambda": 39.338235294117645,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 47.337278106508876,
                "kept_percent_lambda": 52.662721893491124,
                "num_examples": 5,
                "num_explored_concrete": 149,
                "num_explored_lambda": 107,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 89,
                "num_values_explored": 272,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.311222149990499,
            "num_unique_values": 248,
            "solution": "Sum(Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.53415061295972,
                "explored_percent_lambda": 39.05429071803853,
                "explored_percent_none": 15.411558669001751,
                "kept_percent_concrete": 40.082644628099175,
                "kept_percent_lambda": 59.917355371900825,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 223,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 145,
                "num_values_explored": 571,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1776561139849946,
            "num_unique_values": 186,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.34782608695652,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 7.608695652173913,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 105,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 96,
                "num_values_explored": 276,
                "num_values_kept": 179,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3875411020126194,
            "num_unique_values": 251,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 40.119760479041915,
                "explored_percent_lambda": 49.10179640718563,
                "explored_percent_none": 10.778443113772456,
                "kept_percent_concrete": 29.387755102040817,
                "kept_percent_lambda": 70.61224489795919,
                "num_examples": 3,
                "num_explored_concrete": 201,
                "num_explored_lambda": 246,
                "num_explored_none": 54,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 173,
                "num_values_explored": 501,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1383904729736969,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.036199095022624,
                "explored_percent_lambda": 32.126696832579185,
                "explored_percent_none": 15.83710407239819,
                "kept_percent_concrete": 51.5625,
                "kept_percent_lambda": 48.4375,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 71,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 66,
                "num_kept_lambda": 62,
                "num_values_explored": 221,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10865221498534083,
            "num_unique_values": 90,
            "solution": "Take(Subtract(-1, 1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.66233766233766,
                "explored_percent_lambda": 58.44155844155844,
                "explored_percent_none": 3.896103896103896,
                "kept_percent_concrete": 14.457831325301205,
                "kept_percent_lambda": 85.5421686746988,
                "num_examples": 2,
                "num_explored_concrete": 58,
                "num_explored_lambda": 90,
                "num_explored_none": 6,
                "num_inputs": 2,
                "num_kept_concrete": 12,
                "num_kept_lambda": 71,
                "num_values_explored": 154,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17944402003195137,
            "num_unique_values": 154,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.7007299270073,
                "explored_percent_lambda": 44.89051094890511,
                "explored_percent_none": 12.408759124087592,
                "kept_percent_concrete": 31.292517006802722,
                "kept_percent_lambda": 68.70748299319727,
                "num_examples": 3,
                "num_explored_concrete": 117,
                "num_explored_lambda": 123,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 101,
                "num_values_explored": 274,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 37.83297893090639,
            "num_unique_values": 1005,
            "solution": "Subtract(Max(Add(fn_0(Head(x1), x2), Minimum(x1)), Add(1, 1)), fn_5(Maximum(x2), x1))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 65.76419213973799,
                "explored_percent_lambda": 14.716157205240174,
                "explored_percent_none": 19.519650655021834,
                "kept_percent_concrete": 69.63927855711422,
                "kept_percent_lambda": 30.360721442885772,
                "num_examples": 4,
                "num_explored_concrete": 3012,
                "num_explored_lambda": 674,
                "num_explored_none": 894,
                "num_inputs": 2,
                "num_kept_concrete": 695,
                "num_kept_lambda": 303,
                "num_values_explored": 4580,
                "num_values_kept": 998,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 25619
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 16.152427077991888,
            "num_unique_values": 660,
            "solution": "IntDivide(Square(Square(fn_3(-1))), Head(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.16723549488054,
                "explored_percent_lambda": 22.96928327645051,
                "explored_percent_none": 19.86348122866894,
                "kept_percent_concrete": 63.30275229357798,
                "kept_percent_lambda": 36.69724770642202,
                "num_examples": 5,
                "num_explored_concrete": 1675,
                "num_explored_lambda": 673,
                "num_explored_none": 582,
                "num_inputs": 1,
                "num_kept_concrete": 414,
                "num_kept_lambda": 240,
                "num_values_explored": 2930,
                "num_values_kept": 654,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10907
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.36349064798559994,
            "num_unique_values": 347,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(v1, Square(Minimum(x1)))))(u1)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.02086677367576,
                "explored_percent_lambda": 23.59550561797753,
                "explored_percent_none": 7.38362760834671,
                "kept_percent_concrete": 67.3529411764706,
                "kept_percent_lambda": 32.64705882352941,
                "num_examples": 5,
                "num_explored_concrete": 430,
                "num_explored_lambda": 147,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 111,
                "num_values_explored": 623,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17057301697786897,
            "num_unique_values": 169,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.971326164874554,
                "explored_percent_lambda": 38.70967741935484,
                "explored_percent_none": 9.31899641577061,
                "kept_percent_concrete": 46.91358024691358,
                "kept_percent_lambda": 53.08641975308642,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 108,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 86,
                "num_values_explored": 279,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 279
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08621600095648319,
            "num_unique_values": 91,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.905325443786985,
                "explored_percent_lambda": 26.035502958579883,
                "explored_percent_none": 10.059171597633137,
                "kept_percent_concrete": 53.01204819277108,
                "kept_percent_lambda": 46.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 108,
                "num_explored_lambda": 44,
                "num_explored_none": 17,
                "num_inputs": 3,
                "num_kept_concrete": 44,
                "num_kept_lambda": 39,
                "num_values_explored": 169,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.5493831749772653,
            "num_unique_values": 352,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 35.05244755244755,
                "explored_percent_lambda": 38.8986013986014,
                "explored_percent_none": 26.04895104895105,
                "kept_percent_concrete": 56.52173913043478,
                "kept_percent_lambda": 43.47826086956522,
                "num_examples": 5,
                "num_explored_concrete": 401,
                "num_explored_lambda": 445,
                "num_explored_none": 298,
                "num_inputs": 2,
                "num_kept_concrete": 195,
                "num_kept_lambda": 150,
                "num_values_explored": 1144,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2894
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04533778899349,
            "num_unique_values": 496,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.55452270289596,
                "explored_percent_lambda": 26.421165534501252,
                "explored_percent_none": 56.024311762602785,
                "kept_percent_concrete": 54.69387755102041,
                "kept_percent_lambda": 45.30612244897959,
                "num_examples": 5,
                "num_explored_concrete": 982,
                "num_explored_lambda": 1478,
                "num_explored_none": 3134,
                "num_inputs": 1,
                "num_kept_concrete": 268,
                "num_kept_lambda": 222,
                "num_values_explored": 5594,
                "num_values_kept": 490,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61028
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18519063293933868,
            "num_unique_values": 167,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.83402489626556,
                "explored_percent_lambda": 53.52697095435685,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 31.055900621118013,
                "kept_percent_lambda": 68.94409937888199,
                "num_examples": 3,
                "num_explored_concrete": 96,
                "num_explored_lambda": 129,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 50,
                "num_kept_lambda": 111,
                "num_values_explored": 241,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34082385594956577,
            "num_unique_values": 334,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 72.62569832402235,
                "explored_percent_lambda": 13.547486033519553,
                "explored_percent_none": 13.8268156424581,
                "kept_percent_concrete": 78.2874617737003,
                "kept_percent_lambda": 21.712538226299696,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 97,
                "num_explored_none": 99,
                "num_inputs": 2,
                "num_kept_concrete": 256,
                "num_kept_lambda": 71,
                "num_values_explored": 716,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31804092694073915,
            "num_unique_values": 296,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.77367576243981,
                "explored_percent_lambda": 24.077046548956663,
                "explored_percent_none": 9.149277688603531,
                "kept_percent_concrete": 61.937716262975776,
                "kept_percent_lambda": 38.062283737024224,
                "num_examples": 3,
                "num_explored_concrete": 416,
                "num_explored_lambda": 150,
                "num_explored_none": 57,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 110,
                "num_values_explored": 623,
                "num_values_kept": 289,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.841144665959291,
            "num_unique_values": 427,
            "solution": "Max(Subtract(Multiply(Square(x1), fn_1((lambda u1: ((lambda v1: Multiply(x1, v1)))(u1)), x1)), Square(x1)), Square(Add(x1, x1)))",
            "solution_weight": 17,
            "stats": {
                "explored_percent_concrete": 22.906197654941373,
                "explored_percent_lambda": 24.05778894472362,
                "explored_percent_none": 53.03601340033501,
                "kept_percent_concrete": 54.86935866983373,
                "kept_percent_lambda": 45.13064133016627,
                "num_examples": 2,
                "num_explored_concrete": 1094,
                "num_explored_lambda": 1149,
                "num_explored_none": 2533,
                "num_inputs": 1,
                "num_kept_concrete": 231,
                "num_kept_lambda": 190,
                "num_values_explored": 4776,
                "num_values_kept": 421,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6876
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18007251003291458,
            "num_unique_values": 131,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.18181818181818,
                "explored_percent_lambda": 42.90909090909091,
                "explored_percent_none": 22.90909090909091,
                "kept_percent_concrete": 29.838709677419356,
                "kept_percent_lambda": 70.16129032258064,
                "num_examples": 5,
                "num_explored_concrete": 94,
                "num_explored_lambda": 118,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 87,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2992612359812483,
            "num_unique_values": 269,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.66183574879227,
                "explored_percent_lambda": 29.468599033816425,
                "explored_percent_none": 10.869565217391305,
                "kept_percent_concrete": 61.06870229007634,
                "kept_percent_lambda": 38.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 122,
                "num_explored_none": 45,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 102,
                "num_values_explored": 414,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 414
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3058092049323,
            "num_unique_values": 1238,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.36,
                "explored_percent_lambda": 33.28,
                "explored_percent_none": 19.36,
                "kept_percent_concrete": 35.47077922077922,
                "kept_percent_lambda": 64.52922077922078,
                "num_examples": 2,
                "num_explored_concrete": 2368,
                "num_explored_lambda": 1664,
                "num_explored_none": 968,
                "num_inputs": 1,
                "num_kept_concrete": 437,
                "num_kept_lambda": 795,
                "num_values_explored": 5000,
                "num_values_kept": 1232,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53013
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.593735709087923,
            "num_unique_values": 250,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 19.59287531806616,
                "explored_percent_lambda": 49.87277353689567,
                "explored_percent_none": 30.53435114503817,
                "kept_percent_concrete": 31.147540983606557,
                "kept_percent_lambda": 68.85245901639344,
                "num_examples": 4,
                "num_explored_concrete": 231,
                "num_explored_lambda": 588,
                "num_explored_none": 360,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 168,
                "num_values_explored": 1179,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3979
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37010137701872736,
            "num_unique_values": 258,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.71337579617835,
                "explored_percent_lambda": 23.726114649681527,
                "explored_percent_none": 16.56050955414013,
                "kept_percent_concrete": 58.56573705179283,
                "kept_percent_lambda": 41.43426294820717,
                "num_examples": 5,
                "num_explored_concrete": 375,
                "num_explored_lambda": 149,
                "num_explored_none": 104,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 104,
                "num_values_explored": 628,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80612501199357,
            "num_unique_values": 826,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.563995215311,
                "explored_percent_lambda": 13.830741626794259,
                "explored_percent_none": 29.605263157894736,
                "kept_percent_concrete": 68.09290953545232,
                "kept_percent_lambda": 31.90709046454768,
                "num_examples": 2,
                "num_explored_concrete": 3783,
                "num_explored_lambda": 925,
                "num_explored_none": 1980,
                "num_inputs": 3,
                "num_kept_concrete": 557,
                "num_kept_lambda": 261,
                "num_values_explored": 6688,
                "num_values_kept": 818,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69842
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.67487201502081,
            "num_unique_values": 596,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, Add(1, 1))))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 29.182712879760377,
                "explored_percent_lambda": 41.7201540436457,
                "explored_percent_none": 29.097133076593924,
                "kept_percent_concrete": 37.28813559322034,
                "kept_percent_lambda": 62.71186440677966,
                "num_examples": 2,
                "num_explored_concrete": 682,
                "num_explored_lambda": 975,
                "num_explored_none": 680,
                "num_inputs": 1,
                "num_kept_concrete": 220,
                "num_kept_lambda": 370,
                "num_values_explored": 2337,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 14258
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.20150389906485,
            "num_unique_values": 1086,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.79383886255924,
                "explored_percent_lambda": 28.850710900473935,
                "explored_percent_none": 25.355450236966824,
                "kept_percent_concrete": 37.77777777777778,
                "kept_percent_lambda": 62.22222222222222,
                "num_examples": 2,
                "num_explored_concrete": 2319,
                "num_explored_lambda": 1461,
                "num_explored_none": 1284,
                "num_inputs": 1,
                "num_kept_concrete": 408,
                "num_kept_lambda": 672,
                "num_values_explored": 5064,
                "num_values_kept": 1080,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53937
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 28.26775916700717,
            "num_unique_values": 354,
            "solution": "fn_8((lambda u1: ((lambda v1: Subtract(Subtract(x1, x2), v1)))(u1)), Add(x2, x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 18.630389670278994,
                "explored_percent_lambda": 21.812312658519716,
                "explored_percent_none": 59.55729767120129,
                "kept_percent_concrete": 57.636887608069166,
                "kept_percent_lambda": 42.363112391930834,
                "num_examples": 2,
                "num_explored_concrete": 808,
                "num_explored_lambda": 946,
                "num_explored_none": 2583,
                "num_inputs": 2,
                "num_kept_concrete": 200,
                "num_kept_lambda": 147,
                "num_values_explored": 4337,
                "num_values_kept": 347,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 18830
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.128642181982286,
            "num_unique_values": 751,
            "solution": "Map((lambda u1: Max(Subtract(1, fn_3(-1)), fn_3(IntDivide(x2, Square(fn_3(-1)))))), x1)",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 25.980694187718218,
                "explored_percent_lambda": 30.64284247278702,
                "explored_percent_none": 43.37646333949476,
                "kept_percent_concrete": 33.87096774193548,
                "kept_percent_lambda": 66.12903225806451,
                "num_examples": 4,
                "num_explored_concrete": 1265,
                "num_explored_lambda": 1492,
                "num_explored_none": 2112,
                "num_inputs": 2,
                "num_kept_concrete": 252,
                "num_kept_lambda": 492,
                "num_values_explored": 4869,
                "num_values_kept": 744,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11614
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37062119599431753,
            "num_unique_values": 333,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: fn_3(v1)))(u1)), x1, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.52202283849918,
                "explored_percent_lambda": 31.484502446982056,
                "explored_percent_none": 7.993474714518761,
                "kept_percent_concrete": 54.29447852760736,
                "kept_percent_lambda": 45.70552147239264,
                "num_examples": 3,
                "num_explored_concrete": 371,
                "num_explored_lambda": 193,
                "num_explored_none": 49,
                "num_inputs": 2,
                "num_kept_concrete": 177,
                "num_kept_lambda": 149,
                "num_values_explored": 613,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 613
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 97.03999365598429,
            "num_unique_values": 661,
            "solution": "IntDivide(Multiply(fn_3(-1), Add(Head(x1), Square(Square(fn_3(-1))))), -1)",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 43.89758179231863,
                "explored_percent_lambda": 28.278805120910384,
                "explored_percent_none": 27.823613086770983,
                "kept_percent_concrete": 51.908396946564885,
                "kept_percent_lambda": 48.091603053435115,
                "num_examples": 4,
                "num_explored_concrete": 1543,
                "num_explored_lambda": 994,
                "num_explored_none": 978,
                "num_inputs": 1,
                "num_kept_concrete": 340,
                "num_kept_lambda": 315,
                "num_values_explored": 3515,
                "num_values_kept": 655,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58585
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 9.505411903955974,
            "num_unique_values": 380,
            "solution": "Multiply(If(IsEven(x1), 0, 1), Subtract(Add(x1, 1), fn_3(-1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 18.297331639135958,
                "explored_percent_lambda": 31.13087674714104,
                "explored_percent_none": 50.571791613723,
                "kept_percent_concrete": 31.28342245989305,
                "kept_percent_lambda": 68.71657754010695,
                "num_examples": 5,
                "num_explored_concrete": 864,
                "num_explored_lambda": 1470,
                "num_explored_none": 2388,
                "num_inputs": 1,
                "num_kept_concrete": 117,
                "num_kept_lambda": 257,
                "num_values_explored": 4722,
                "num_values_kept": 374,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 6822
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.2710445339325815,
            "num_unique_values": 255,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 28.295454545454547,
                "explored_percent_lambda": 51.70454545454545,
                "explored_percent_none": 20.0,
                "kept_percent_concrete": 36.8421052631579,
                "kept_percent_lambda": 63.1578947368421,
                "num_examples": 2,
                "num_explored_concrete": 249,
                "num_explored_lambda": 455,
                "num_explored_none": 176,
                "num_inputs": 3,
                "num_kept_concrete": 91,
                "num_kept_lambda": 156,
                "num_values_explored": 880,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2980
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.5842837250093,
            "num_unique_values": 479,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.40969507427678,
                "explored_percent_lambda": 22.93979671618452,
                "explored_percent_none": 52.6505082095387,
                "kept_percent_concrete": 56.355932203389834,
                "kept_percent_lambda": 43.644067796610166,
                "num_examples": 2,
                "num_explored_concrete": 1561,
                "num_explored_lambda": 1467,
                "num_explored_none": 3367,
                "num_inputs": 2,
                "num_kept_concrete": 266,
                "num_kept_lambda": 206,
                "num_values_explored": 6395,
                "num_values_kept": 472,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64561
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.18760642898268998,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.31460674157304,
                "explored_percent_lambda": 44.19475655430712,
                "explored_percent_none": 7.49063670411985,
                "kept_percent_concrete": 37.908496732026144,
                "kept_percent_lambda": 62.091503267973856,
                "num_examples": 4,
                "num_explored_concrete": 129,
                "num_explored_lambda": 118,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 58,
                "num_kept_lambda": 95,
                "num_values_explored": 267,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 267
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.31384761701337993,
            "num_unique_values": 331,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.69759450171821,
                "explored_percent_lambda": 23.195876288659793,
                "explored_percent_none": 9.106529209621993,
                "kept_percent_concrete": 65.94427244582043,
                "kept_percent_lambda": 34.05572755417957,
                "num_examples": 4,
                "num_explored_concrete": 394,
                "num_explored_lambda": 135,
                "num_explored_none": 53,
                "num_inputs": 3,
                "num_kept_concrete": 213,
                "num_kept_lambda": 110,
                "num_values_explored": 582,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81101048004348,
            "num_unique_values": 475,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.57811768378336,
                "explored_percent_lambda": 20.94584048696738,
                "explored_percent_none": 50.47604182924926,
                "kept_percent_concrete": 59.61538461538461,
                "kept_percent_lambda": 40.38461538461539,
                "num_examples": 4,
                "num_explored_concrete": 1831,
                "num_explored_lambda": 1342,
                "num_explored_none": 3234,
                "num_inputs": 2,
                "num_kept_concrete": 279,
                "num_kept_lambda": 189,
                "num_values_explored": 6407,
                "num_values_kept": 468,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65897
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21883852803148,
            "num_unique_values": 1183,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.64561806352851,
                "explored_percent_lambda": 29.295828549559893,
                "explored_percent_none": 19.058553386911594,
                "kept_percent_concrete": 43.07561597281224,
                "kept_percent_lambda": 56.92438402718776,
                "num_examples": 5,
                "num_explored_concrete": 2699,
                "num_explored_lambda": 1531,
                "num_explored_none": 996,
                "num_inputs": 1,
                "num_kept_concrete": 507,
                "num_kept_lambda": 670,
                "num_values_explored": 5226,
                "num_values_kept": 1177,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54595
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17977799591608346,
            "num_unique_values": 147,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.043795620437955,
                "explored_percent_lambda": 23.722627737226276,
                "explored_percent_none": 14.233576642335766,
                "kept_percent_concrete": 58.992805755395686,
                "kept_percent_lambda": 41.007194244604314,
                "num_examples": 5,
                "num_explored_concrete": 170,
                "num_explored_lambda": 65,
                "num_explored_none": 39,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 57,
                "num_values_explored": 274,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31801418703981,
            "num_unique_values": 1208,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 46.450450450450454,
                "explored_percent_lambda": 24.55855855855856,
                "explored_percent_none": 28.99099099099099,
                "kept_percent_concrete": 46.67221297836939,
                "kept_percent_lambda": 53.32778702163061,
                "num_examples": 3,
                "num_explored_concrete": 2578,
                "num_explored_lambda": 1363,
                "num_explored_none": 1609,
                "num_inputs": 1,
                "num_kept_concrete": 561,
                "num_kept_lambda": 641,
                "num_values_explored": 5550,
                "num_values_kept": 1202,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56280
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3779443330131471,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(x1, ((lambda v1: fn_3(v1)))(v1))))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.54545454545455,
                "explored_percent_lambda": 31.738437001594896,
                "explored_percent_none": 13.716108452950559,
                "kept_percent_concrete": 43.032786885245905,
                "kept_percent_lambda": 56.967213114754095,
                "num_examples": 4,
                "num_explored_concrete": 342,
                "num_explored_lambda": 199,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 139,
                "num_values_explored": 627,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.15441323095001,
            "num_unique_values": 1375,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 56.66412795125667,
                "explored_percent_lambda": 19.725818735719727,
                "explored_percent_none": 23.61005331302361,
                "kept_percent_concrete": 61.37527432333577,
                "kept_percent_lambda": 38.62472567666423,
                "num_examples": 5,
                "num_explored_concrete": 2976,
                "num_explored_lambda": 1036,
                "num_explored_none": 1240,
                "num_inputs": 3,
                "num_kept_concrete": 839,
                "num_kept_lambda": 528,
                "num_values_explored": 5252,
                "num_values_kept": 1367,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57046
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.715240204008296,
            "num_unique_values": 483,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 37.385019710906704,
                "explored_percent_lambda": 39.81603153745072,
                "explored_percent_none": 22.798948751642577,
                "kept_percent_concrete": 42.226890756302524,
                "kept_percent_lambda": 57.773109243697476,
                "num_examples": 5,
                "num_explored_concrete": 569,
                "num_explored_lambda": 606,
                "num_explored_none": 347,
                "num_inputs": 2,
                "num_kept_concrete": 201,
                "num_kept_lambda": 275,
                "num_values_explored": 1522,
                "num_values_kept": 476,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61357812595088,
            "num_unique_values": 654,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 39.45100542610916,
                "explored_percent_lambda": 20.15639961698053,
                "explored_percent_none": 40.39259495691031,
                "kept_percent_concrete": 54.404945904173104,
                "kept_percent_lambda": 45.595054095826896,
                "num_examples": 5,
                "num_explored_concrete": 2472,
                "num_explored_lambda": 1263,
                "num_explored_none": 2531,
                "num_inputs": 2,
                "num_kept_concrete": 352,
                "num_kept_lambda": 295,
                "num_values_explored": 6266,
                "num_values_kept": 647,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62979
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 30.20841364900116,
            "num_unique_values": 834,
            "solution": "Scanl1((lambda u1, u2: Max(1, IntDivide(IntDivide(Last(x2), x1), x1))), Reverse(Scanl1((lambda u1, u2: If(IsOdd(IntDivide(Last(x2), x1)), 0, 1)), x2)))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 44.51109778044391,
                "explored_percent_lambda": 27.334533093381324,
                "explored_percent_none": 28.154369126174764,
                "kept_percent_concrete": 31.318016928657798,
                "kept_percent_lambda": 68.6819830713422,
                "num_examples": 2,
                "num_explored_concrete": 2226,
                "num_explored_lambda": 1367,
                "num_explored_none": 1408,
                "num_inputs": 2,
                "num_kept_concrete": 259,
                "num_kept_lambda": 568,
                "num_values_explored": 5001,
                "num_values_kept": 827,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17548
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8655309980968,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.428571428571427,
                "explored_percent_lambda": 36.265306122448976,
                "explored_percent_none": 47.30612244897959,
                "kept_percent_concrete": 24.43064182194617,
                "kept_percent_lambda": 75.56935817805383,
                "num_examples": 4,
                "num_explored_concrete": 805,
                "num_explored_lambda": 1777,
                "num_explored_none": 2318,
                "num_inputs": 1,
                "num_kept_concrete": 118,
                "num_kept_lambda": 365,
                "num_values_explored": 4900,
                "num_values_kept": 483,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51851
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 36.7776502489578,
            "num_unique_values": 795,
            "solution": "If(IsOdd(x2), x1, ZipWith((lambda u1, u2: ((lambda v1: fn_0(((lambda v1: Subtract(x2, v1)))(v1), x1)))(u1)), x1, Sort(x1)))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 38.97399358745992,
                "explored_percent_lambda": 34.66334164588529,
                "explored_percent_none": 26.36266476665479,
                "kept_percent_concrete": 42.63959390862944,
                "kept_percent_lambda": 57.36040609137056,
                "num_examples": 4,
                "num_explored_concrete": 1094,
                "num_explored_lambda": 973,
                "num_explored_none": 740,
                "num_inputs": 2,
                "num_kept_concrete": 336,
                "num_kept_lambda": 452,
                "num_values_explored": 2807,
                "num_values_kept": 788,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 21012
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.88171256799251,
            "num_unique_values": 1082,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.90055248618785,
                "explored_percent_lambda": 21.236187845303867,
                "explored_percent_none": 25.863259668508288,
                "kept_percent_concrete": 52.23048327137546,
                "kept_percent_lambda": 47.76951672862454,
                "num_examples": 3,
                "num_explored_concrete": 3064,
                "num_explored_lambda": 1230,
                "num_explored_none": 1498,
                "num_inputs": 1,
                "num_kept_concrete": 562,
                "num_kept_lambda": 514,
                "num_values_explored": 5792,
                "num_values_kept": 1076,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58586
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3268716890597716,
            "num_unique_values": 220,
            "solution": "Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.82003395585738,
                "explored_percent_lambda": 30.899830220713074,
                "explored_percent_none": 15.280135823429541,
                "kept_percent_concrete": 43.66197183098591,
                "kept_percent_lambda": 56.33802816901409,
                "num_examples": 2,
                "num_explored_concrete": 317,
                "num_explored_lambda": 182,
                "num_explored_none": 90,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 120,
                "num_values_explored": 589,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.72834415000398,
            "num_unique_values": 484,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.25567620927937,
                "explored_percent_lambda": 32.161895360315896,
                "explored_percent_none": 50.58242843040474,
                "kept_percent_concrete": 34.93723849372385,
                "kept_percent_lambda": 65.06276150627615,
                "num_examples": 4,
                "num_explored_concrete": 874,
                "num_explored_lambda": 1629,
                "num_explored_none": 2562,
                "num_inputs": 1,
                "num_kept_concrete": 167,
                "num_kept_lambda": 311,
                "num_values_explored": 5065,
                "num_values_kept": 478,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51747
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5704463280271739,
            "num_unique_values": 382,
            "solution": "Scanl1((lambda u1, u2: fn_3(fn_3(IntDivide(Last(x1), Head(x2))))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.3875094055681,
                "explored_percent_lambda": 24.52972159518435,
                "explored_percent_none": 10.082768999247554,
                "kept_percent_concrete": 57.86666666666667,
                "kept_percent_lambda": 42.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 869,
                "num_explored_lambda": 326,
                "num_explored_none": 134,
                "num_inputs": 2,
                "num_kept_concrete": 217,
                "num_kept_lambda": 158,
                "num_values_explored": 1329,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1329
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05242299591191,
            "num_unique_values": 1320,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.71830020562029,
                "explored_percent_lambda": 18.865661411925977,
                "explored_percent_none": 27.416038382453735,
                "kept_percent_concrete": 64.43259710586443,
                "kept_percent_lambda": 35.56740289413557,
                "num_examples": 5,
                "num_explored_concrete": 3135,
                "num_explored_lambda": 1101,
                "num_explored_none": 1600,
                "num_inputs": 2,
                "num_kept_concrete": 846,
                "num_kept_lambda": 467,
                "num_values_explored": 5836,
                "num_values_kept": 1313,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60445
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11257723206654,
            "num_unique_values": 1206,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.57212885154062,
                "explored_percent_lambda": 22.26890756302521,
                "explored_percent_none": 16.158963585434172,
                "kept_percent_concrete": 48.583333333333336,
                "kept_percent_lambda": 51.416666666666664,
                "num_examples": 3,
                "num_explored_concrete": 3517,
                "num_explored_lambda": 1272,
                "num_explored_none": 923,
                "num_inputs": 1,
                "num_kept_concrete": 583,
                "num_kept_lambda": 617,
                "num_values_explored": 5712,
                "num_values_kept": 1200,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59354
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07204869098496,
            "num_unique_values": 1429,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.62264150943396,
                "explored_percent_lambda": 15.591766723842195,
                "explored_percent_none": 14.785591766723842,
                "kept_percent_concrete": 72.15189873417721,
                "kept_percent_lambda": 27.848101265822784,
                "num_examples": 5,
                "num_explored_concrete": 4059,
                "num_explored_lambda": 909,
                "num_explored_none": 862,
                "num_inputs": 2,
                "num_kept_concrete": 1026,
                "num_kept_lambda": 396,
                "num_values_explored": 5830,
                "num_values_kept": 1422,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60356
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.15546397608705,
            "num_unique_values": 1209,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.461082576056896,
                "explored_percent_lambda": 30.93638877913868,
                "explored_percent_none": 25.602528644804426,
                "kept_percent_concrete": 39.484621778886115,
                "kept_percent_lambda": 60.515378221113885,
                "num_examples": 2,
                "num_explored_concrete": 2200,
                "num_explored_lambda": 1566,
                "num_explored_none": 1296,
                "num_inputs": 1,
                "num_kept_concrete": 475,
                "num_kept_lambda": 728,
                "num_values_explored": 5062,
                "num_values_kept": 1203,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50917
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13078254007269,
            "num_unique_values": 1205,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.69743935309973,
                "explored_percent_lambda": 15.835579514824797,
                "explored_percent_none": 23.46698113207547,
                "kept_percent_concrete": 62.82372598162072,
                "kept_percent_lambda": 37.17627401837928,
                "num_examples": 4,
                "num_explored_concrete": 3603,
                "num_explored_lambda": 940,
                "num_explored_none": 1393,
                "num_inputs": 3,
                "num_kept_concrete": 752,
                "num_kept_lambda": 445,
                "num_values_explored": 5936,
                "num_values_kept": 1197,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62223
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31533445999958,
            "num_unique_values": 792,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.772639691714836,
                "explored_percent_lambda": 43.37400984799829,
                "explored_percent_none": 34.853350460286876,
                "kept_percent_concrete": 12.468193384223918,
                "kept_percent_lambda": 87.53180661577608,
                "num_examples": 2,
                "num_explored_concrete": 1017,
                "num_explored_lambda": 2026,
                "num_explored_none": 1628,
                "num_inputs": 1,
                "num_kept_concrete": 98,
                "num_kept_lambda": 688,
                "num_values_explored": 4671,
                "num_values_kept": 786,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47857
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02354426600505,
            "num_unique_values": 1265,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.45133784181124,
                "explored_percent_lambda": 10.879153190238165,
                "explored_percent_none": 23.669508967950602,
                "kept_percent_concrete": 75.97454256165473,
                "kept_percent_lambda": 24.025457438345267,
                "num_examples": 4,
                "num_explored_concrete": 4452,
                "num_explored_lambda": 740,
                "num_explored_none": 1610,
                "num_inputs": 3,
                "num_kept_concrete": 955,
                "num_kept_lambda": 302,
                "num_values_explored": 6802,
                "num_values_kept": 1257,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 70731
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.34931201604195,
            "num_unique_values": 1158,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.66427213184027,
                "explored_percent_lambda": 38.51679695753222,
                "explored_percent_none": 28.818930910627508,
                "kept_percent_concrete": 29.6875,
                "kept_percent_lambda": 70.3125,
                "num_examples": 3,
                "num_explored_concrete": 1546,
                "num_explored_lambda": 1823,
                "num_explored_none": 1364,
                "num_inputs": 1,
                "num_kept_concrete": 342,
                "num_kept_lambda": 810,
                "num_values_explored": 4733,
                "num_values_kept": 1152,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48701
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95639425597619,
            "num_unique_values": 491,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.71836346336822,
                "explored_percent_lambda": 32.540437678401524,
                "explored_percent_none": 51.741198858230256,
                "kept_percent_concrete": 37.31958762886598,
                "kept_percent_lambda": 62.68041237113402,
                "num_examples": 4,
                "num_explored_concrete": 826,
                "num_explored_lambda": 1710,
                "num_explored_none": 2719,
                "num_inputs": 1,
                "num_kept_concrete": 181,
                "num_kept_lambda": 304,
                "num_values_explored": 5255,
                "num_values_kept": 485,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53311
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3094602690544,
            "num_unique_values": 1148,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 53.46023839174524,
                "explored_percent_lambda": 23.910336239103362,
                "explored_percent_none": 22.629425369151395,
                "kept_percent_concrete": 44.220665499124344,
                "kept_percent_lambda": 55.779334500875656,
                "num_examples": 2,
                "num_explored_concrete": 3005,
                "num_explored_lambda": 1344,
                "num_explored_none": 1272,
                "num_inputs": 1,
                "num_kept_concrete": 505,
                "num_kept_lambda": 637,
                "num_values_explored": 5621,
                "num_values_kept": 1142,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59540
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3922793719684705,
            "num_unique_values": 325,
            "solution": "Map((lambda u1: Square(fn_5(Last(x1), x2))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.76230899830221,
                "explored_percent_lambda": 33.446519524618,
                "explored_percent_none": 6.791171477079796,
                "kept_percent_concrete": 53.31230283911672,
                "kept_percent_lambda": 46.68769716088328,
                "num_examples": 5,
                "num_explored_concrete": 352,
                "num_explored_lambda": 197,
                "num_explored_none": 40,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 148,
                "num_values_explored": 589,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 8.343718481017277,
            "num_unique_values": 878,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: fn_3(-1)), Drop(Head(x2), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 44.92619926199262,
                "explored_percent_lambda": 36.07011070110701,
                "explored_percent_none": 19.00369003690037,
                "kept_percent_concrete": 33.0654420206659,
                "kept_percent_lambda": 66.9345579793341,
                "num_examples": 2,
                "num_explored_concrete": 1948,
                "num_explored_lambda": 1564,
                "num_explored_none": 824,
                "num_inputs": 2,
                "num_kept_concrete": 288,
                "num_kept_lambda": 583,
                "num_values_explored": 4336,
                "num_values_kept": 871,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5736
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.21401141595561,
            "num_unique_values": 703,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.30654645237162,
                "explored_percent_lambda": 41.25833006664053,
                "explored_percent_none": 40.43512348098785,
                "kept_percent_concrete": 19.225251076040173,
                "kept_percent_lambda": 80.77474892395983,
                "num_examples": 3,
                "num_explored_concrete": 934,
                "num_explored_lambda": 2105,
                "num_explored_none": 2063,
                "num_inputs": 1,
                "num_kept_concrete": 134,
                "num_kept_lambda": 563,
                "num_values_explored": 5102,
                "num_values_kept": 697,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55136
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90301217208616,
            "num_unique_values": 1624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 76.72780630961115,
                "explored_percent_lambda": 9.00953778429934,
                "explored_percent_none": 14.262655906089508,
                "kept_percent_concrete": 80.25990099009901,
                "kept_percent_lambda": 19.74009900990099,
                "num_examples": 5,
                "num_explored_concrete": 5229,
                "num_explored_lambda": 614,
                "num_explored_none": 972,
                "num_inputs": 3,
                "num_kept_concrete": 1297,
                "num_kept_lambda": 319,
                "num_values_explored": 6815,
                "num_values_kept": 1616,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68696
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.503194145043381,
            "num_unique_values": 598,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Map((lambda u1: Min(x1, 1)), x2))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 49.6427070197562,
                "explored_percent_lambda": 23.41319882303489,
                "explored_percent_none": 26.944094157208912,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 4,
                "num_explored_concrete": 1181,
                "num_explored_lambda": 557,
                "num_explored_none": 641,
                "num_inputs": 3,
                "num_kept_concrete": 354,
                "num_kept_lambda": 236,
                "num_values_explored": 2379,
                "num_values_kept": 590,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4129
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0502171680564,
            "num_unique_values": 1255,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.16359320796056,
                "explored_percent_lambda": 26.821252510498446,
                "explored_percent_none": 21.01515428154099,
                "kept_percent_concrete": 43.795036028823056,
                "kept_percent_lambda": 56.204963971176944,
                "num_examples": 2,
                "num_explored_concrete": 2857,
                "num_explored_lambda": 1469,
                "num_explored_none": 1151,
                "num_inputs": 1,
                "num_kept_concrete": 547,
                "num_kept_lambda": 702,
                "num_values_explored": 5477,
                "num_values_kept": 1249,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57888
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04631103097927,
            "num_unique_values": 1160,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.50835717512423,
                "explored_percent_lambda": 14.244842644180093,
                "explored_percent_none": 21.24680018069568,
                "kept_percent_concrete": 66.78230702515178,
                "kept_percent_lambda": 33.21769297484822,
                "num_examples": 3,
                "num_explored_concrete": 4284,
                "num_explored_lambda": 946,
                "num_explored_none": 1411,
                "num_inputs": 2,
                "num_kept_concrete": 770,
                "num_kept_lambda": 383,
                "num_values_explored": 6641,
                "num_values_kept": 1153,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67713
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61995657300577,
            "num_unique_values": 484,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.735462735462736,
                "explored_percent_lambda": 23.177723177723177,
                "explored_percent_none": 54.08681408681409,
                "kept_percent_concrete": 52.83018867924528,
                "kept_percent_lambda": 47.16981132075472,
                "num_examples": 4,
                "num_explored_concrete": 1388,
                "num_explored_lambda": 1415,
                "num_explored_none": 3302,
                "num_inputs": 2,
                "num_kept_concrete": 252,
                "num_kept_lambda": 225,
                "num_values_explored": 6105,
                "num_values_kept": 477,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64181
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.16752526001073,
            "num_unique_values": 1358,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 61.833280102203766,
                "explored_percent_lambda": 17.773874161609708,
                "explored_percent_none": 20.392845736186523,
                "kept_percent_concrete": 69.23076923076923,
                "kept_percent_lambda": 30.76923076923077,
                "num_examples": 5,
                "num_explored_concrete": 3872,
                "num_explored_lambda": 1113,
                "num_explored_none": 1277,
                "num_inputs": 1,
                "num_kept_concrete": 936,
                "num_kept_lambda": 416,
                "num_values_explored": 6262,
                "num_values_kept": 1352,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 65902
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81788081198465,
            "num_unique_values": 973,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.36262866191607,
                "explored_percent_lambda": 16.23119556611243,
                "explored_percent_none": 29.406175771971498,
                "kept_percent_concrete": 62.939958592132506,
                "kept_percent_lambda": 37.060041407867494,
                "num_examples": 4,
                "num_explored_concrete": 3433,
                "num_explored_lambda": 1025,
                "num_explored_none": 1857,
                "num_inputs": 2,
                "num_kept_concrete": 608,
                "num_kept_lambda": 358,
                "num_values_explored": 6315,
                "num_values_kept": 966,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64913
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.10549718304537,
            "num_unique_values": 489,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.250231181801368,
                "explored_percent_lambda": 26.835583502866655,
                "explored_percent_none": 51.91418531533198,
                "kept_percent_concrete": 46.16977225672878,
                "kept_percent_lambda": 53.83022774327122,
                "num_examples": 3,
                "num_explored_concrete": 1149,
                "num_explored_lambda": 1451,
                "num_explored_none": 2807,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 260,
                "num_values_explored": 5407,
                "num_values_kept": 483,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57928
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03453377098776,
            "num_unique_values": 1177,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 60.07610853739246,
                "explored_percent_lambda": 20.681667769688946,
                "explored_percent_none": 19.242223692918596,
                "kept_percent_concrete": 53.162393162393165,
                "kept_percent_lambda": 46.837606837606835,
                "num_examples": 3,
                "num_explored_concrete": 3631,
                "num_explored_lambda": 1250,
                "num_explored_none": 1163,
                "num_inputs": 2,
                "num_kept_concrete": 622,
                "num_kept_lambda": 548,
                "num_values_explored": 6044,
                "num_values_kept": 1170,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61490
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.17187251301948,
            "num_unique_values": 1118,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.54605606825701,
                "explored_percent_lambda": 30.854953856869233,
                "explored_percent_none": 20.59899007487376,
                "kept_percent_concrete": 45.23381294964029,
                "kept_percent_lambda": 54.76618705035971,
                "num_examples": 5,
                "num_explored_concrete": 2788,
                "num_explored_lambda": 1772,
                "num_explored_none": 1183,
                "num_inputs": 1,
                "num_kept_concrete": 503,
                "num_kept_lambda": 609,
                "num_values_explored": 5743,
                "num_values_kept": 1112,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 59206
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.04475251305848,
            "num_unique_values": 1098,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.105717023315236,
                "explored_percent_lambda": 16.911529862663684,
                "explored_percent_none": 33.98275311402108,
                "kept_percent_concrete": 64.56043956043956,
                "kept_percent_lambda": 35.43956043956044,
                "num_examples": 5,
                "num_explored_concrete": 3075,
                "num_explored_lambda": 1059,
                "num_explored_none": 2128,
                "num_inputs": 1,
                "num_kept_concrete": 705,
                "num_kept_lambda": 387,
                "num_values_explored": 6262,
                "num_values_kept": 1092,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 64010
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.12053331907373,
            "num_unique_values": 836,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.682992951382616,
                "explored_percent_lambda": 28.284836435929876,
                "explored_percent_none": 34.03217061268751,
                "kept_percent_concrete": 34.69879518072289,
                "kept_percent_lambda": 65.3012048192771,
                "num_examples": 2,
                "num_explored_concrete": 2085,
                "num_explored_lambda": 1565,
                "num_explored_none": 1883,
                "num_inputs": 1,
                "num_kept_concrete": 288,
                "num_kept_lambda": 542,
                "num_values_explored": 5533,
                "num_values_kept": 830,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 58706
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.1020509150112,
            "num_unique_values": 1233,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.09366236679753,
                "explored_percent_lambda": 24.247522901476913,
                "explored_percent_none": 24.658814731725556,
                "kept_percent_concrete": 52.07823960880196,
                "kept_percent_lambda": 47.92176039119804,
                "num_examples": 4,
                "num_explored_concrete": 2733,
                "num_explored_lambda": 1297,
                "num_explored_none": 1319,
                "num_inputs": 1,
                "num_kept_concrete": 639,
                "num_kept_lambda": 588,
                "num_values_explored": 5349,
                "num_values_kept": 1227,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55194
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.14746933605056,
            "num_unique_values": 838,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 23.6174365647365,
                "explored_percent_lambda": 42.39861201474734,
                "explored_percent_none": 33.983951420516156,
                "kept_percent_concrete": 12.860576923076923,
                "kept_percent_lambda": 87.13942307692308,
                "num_examples": 2,
                "num_explored_concrete": 1089,
                "num_explored_lambda": 1955,
                "num_explored_none": 1567,
                "num_inputs": 1,
                "num_kept_concrete": 107,
                "num_kept_lambda": 725,
                "num_values_explored": 4611,
                "num_values_kept": 832,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48536
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25226420199033,
            "num_unique_values": 1018,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.23502011433411,
                "explored_percent_lambda": 40.44039805208554,
                "explored_percent_none": 29.32458183358035,
                "kept_percent_concrete": 17.292490118577074,
                "kept_percent_lambda": 82.70750988142292,
                "num_examples": 2,
                "num_explored_concrete": 1428,
                "num_explored_lambda": 1910,
                "num_explored_none": 1385,
                "num_inputs": 1,
                "num_kept_concrete": 175,
                "num_kept_lambda": 837,
                "num_values_explored": 4723,
                "num_values_kept": 1012,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49458
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77800627995748,
            "num_unique_values": 492,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.368505195843325,
                "explored_percent_lambda": 35.851318944844124,
                "explored_percent_none": 49.78017585931255,
                "kept_percent_concrete": 15.843621399176955,
                "kept_percent_lambda": 84.15637860082305,
                "num_examples": 2,
                "num_explored_concrete": 719,
                "num_explored_lambda": 1794,
                "num_explored_none": 2491,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 409,
                "num_values_explored": 5004,
                "num_values_kept": 486,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52761
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.81907001999207,
            "num_unique_values": 488,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.74375363160953,
                "explored_percent_lambda": 30.234359868293627,
                "explored_percent_none": 49.02188650009684,
                "kept_percent_concrete": 35.06224066390042,
                "kept_percent_lambda": 64.93775933609959,
                "num_examples": 2,
                "num_explored_concrete": 1071,
                "num_explored_lambda": 1561,
                "num_explored_none": 2531,
                "num_inputs": 1,
                "num_kept_concrete": 169,
                "num_kept_lambda": 313,
                "num_values_explored": 5163,
                "num_values_kept": 482,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 54926
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07448089192621,
            "num_unique_values": 425,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.17840658238009,
                "explored_percent_lambda": 34.236403772827614,
                "explored_percent_none": 48.585189644792294,
                "kept_percent_concrete": 24.401913875598087,
                "kept_percent_lambda": 75.59808612440192,
                "num_examples": 2,
                "num_explored_concrete": 856,
                "num_explored_lambda": 1706,
                "num_explored_none": 2421,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 316,
                "num_values_explored": 4983,
                "num_values_kept": 418,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 51526
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.71206459100358,
            "num_unique_values": 442,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 17.092619096299327,
                "explored_percent_lambda": 36.311592721324885,
                "explored_percent_none": 46.59578818237579,
                "kept_percent_concrete": 26.896551724137932,
                "kept_percent_lambda": 73.10344827586206,
                "num_examples": 2,
                "num_explored_concrete": 836,
                "num_explored_lambda": 1776,
                "num_explored_none": 2279,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 318,
                "num_values_explored": 4891,
                "num_values_kept": 435,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53364
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.07079416303895,
            "num_unique_values": 493,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.723421756117624,
                "explored_percent_lambda": 40.9829323462883,
                "explored_percent_none": 44.293645897594075,
                "kept_percent_concrete": 22.016460905349795,
                "kept_percent_lambda": 77.98353909465021,
                "num_examples": 2,
                "num_explored_concrete": 716,
                "num_explored_lambda": 1993,
                "num_explored_none": 2154,
                "num_inputs": 2,
                "num_kept_concrete": 107,
                "num_kept_lambda": 379,
                "num_values_explored": 4863,
                "num_values_kept": 486,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 53683
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.70372019195929,
            "num_unique_values": 460,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 18.073745718315536,
                "explored_percent_lambda": 36.44972798710457,
                "explored_percent_none": 45.47652629457989,
                "kept_percent_concrete": 19.205298013245034,
                "kept_percent_lambda": 80.79470198675497,
                "num_examples": 2,
                "num_explored_concrete": 897,
                "num_explored_lambda": 1809,
                "num_explored_none": 2257,
                "num_inputs": 2,
                "num_kept_concrete": 87,
                "num_kept_lambda": 366,
                "num_values_explored": 4963,
                "num_values_kept": 453,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52130
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03213357401546,
            "num_unique_values": 838,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 25.19803040034254,
                "explored_percent_lambda": 43.88781845429244,
                "explored_percent_none": 30.914151145365018,
                "kept_percent_concrete": 9.85576923076923,
                "kept_percent_lambda": 90.14423076923077,
                "num_examples": 2,
                "num_explored_concrete": 1177,
                "num_explored_lambda": 2050,
                "num_explored_none": 1444,
                "num_inputs": 1,
                "num_kept_concrete": 82,
                "num_kept_lambda": 750,
                "num_values_explored": 4671,
                "num_values_kept": 832,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48059
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.8204736529151,
            "num_unique_values": 450,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 24.933231590995803,
                "explored_percent_lambda": 31.075925219381915,
                "explored_percent_none": 43.99084318962228,
                "kept_percent_concrete": 32.88288288288288,
                "kept_percent_lambda": 67.11711711711712,
                "num_examples": 3,
                "num_explored_concrete": 1307,
                "num_explored_lambda": 1629,
                "num_explored_none": 2306,
                "num_inputs": 1,
                "num_kept_concrete": 146,
                "num_kept_lambda": 298,
                "num_values_explored": 5242,
                "num_values_kept": 444,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55013
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.54
}