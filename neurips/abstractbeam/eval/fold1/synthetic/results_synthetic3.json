{
    "num_tasks": 100,
    "num_tasks_solved": 53,
    "results": [
        {
            "elapsed_time": 0.6989597020437941,
            "num_unique_values": 132,
            "solution": "Map((lambda u1: ((lambda v1: If(((lambda v1: IsOdd(v1)))(v1), 1, 1)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 31.16883116883117,
                "explored_percent_lambda": 57.142857142857146,
                "explored_percent_none": 11.688311688311689,
                "kept_percent_concrete": 18.253968253968253,
                "kept_percent_lambda": 81.74603174603175,
                "num_examples": 2,
                "num_explored_concrete": 72,
                "num_explored_lambda": 132,
                "num_explored_none": 27,
                "num_inputs": 1,
                "num_kept_concrete": 23,
                "num_kept_lambda": 103,
                "num_values_explored": 231,
                "num_values_kept": 126,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 231
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.203556943917647,
            "num_unique_values": 155,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 44.927536231884055,
                "explored_percent_lambda": 40.21739130434783,
                "explored_percent_none": 14.855072463768115,
                "kept_percent_concrete": 39.86486486486486,
                "kept_percent_lambda": 60.13513513513514,
                "num_examples": 3,
                "num_explored_concrete": 124,
                "num_explored_lambda": 111,
                "num_explored_none": 41,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 89,
                "num_values_explored": 276,
                "num_values_kept": 148,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15425923094153404,
            "num_unique_values": 122,
            "solution": "Access(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 27.906976744186046,
                "explored_percent_lambda": 63.372093023255815,
                "explored_percent_none": 8.720930232558139,
                "kept_percent_concrete": 18.96551724137931,
                "kept_percent_lambda": 81.03448275862068,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 109,
                "num_explored_none": 15,
                "num_inputs": 1,
                "num_kept_concrete": 22,
                "num_kept_lambda": 94,
                "num_values_explored": 172,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2989843670511618,
            "num_unique_values": 123,
            "solution": "Drop(Square(Subtract(-1, 1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 24.85207100591716,
                "explored_percent_lambda": 69.8224852071006,
                "explored_percent_none": 5.325443786982248,
                "kept_percent_concrete": 16.23931623931624,
                "kept_percent_lambda": 83.76068376068376,
                "num_examples": 5,
                "num_explored_concrete": 42,
                "num_explored_lambda": 118,
                "num_explored_none": 9,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 98,
                "num_values_explored": 169,
                "num_values_kept": 117,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.10994840797502548,
            "num_unique_values": 82,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 56.29139072847682,
                "explored_percent_lambda": 39.0728476821192,
                "explored_percent_none": 4.635761589403973,
                "kept_percent_concrete": 38.666666666666664,
                "kept_percent_lambda": 61.333333333333336,
                "num_examples": 4,
                "num_explored_concrete": 85,
                "num_explored_lambda": 59,
                "num_explored_none": 7,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 46,
                "num_values_explored": 151,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1651409090263769,
            "num_unique_values": 121,
            "solution": "Drop(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 19.875776397515526,
                "explored_percent_lambda": 71.42857142857143,
                "explored_percent_none": 8.695652173913043,
                "kept_percent_concrete": 9.649122807017545,
                "kept_percent_lambda": 90.35087719298245,
                "num_examples": 4,
                "num_explored_concrete": 32,
                "num_explored_lambda": 115,
                "num_explored_none": 14,
                "num_inputs": 2,
                "num_kept_concrete": 11,
                "num_kept_lambda": 103,
                "num_values_explored": 161,
                "num_values_kept": 114,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1646079660858959,
            "num_unique_values": 117,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 21.11801242236025,
                "explored_percent_lambda": 72.67080745341615,
                "explored_percent_none": 6.211180124223603,
                "kept_percent_concrete": 10.81081081081081,
                "kept_percent_lambda": 89.1891891891892,
                "num_examples": 2,
                "num_explored_concrete": 34,
                "num_explored_lambda": 117,
                "num_explored_none": 10,
                "num_inputs": 1,
                "num_kept_concrete": 12,
                "num_kept_lambda": 99,
                "num_values_explored": 161,
                "num_values_kept": 111,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.432667498011142,
            "num_unique_values": 285,
            "solution": "Drop(1, Drop(1, x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 36.986301369863014,
                "explored_percent_lambda": 51.076320939334636,
                "explored_percent_none": 11.937377690802348,
                "kept_percent_concrete": 27.240143369175627,
                "kept_percent_lambda": 72.75985663082437,
                "num_examples": 2,
                "num_explored_concrete": 189,
                "num_explored_lambda": 261,
                "num_explored_none": 61,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 203,
                "num_values_explored": 511,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 511
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.45358839398249984,
            "num_unique_values": 285,
            "solution": "Scanl1((lambda u1, u2: fn_3(Square(fn_3(-1)))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 47.29299363057325,
                "explored_percent_lambda": 37.261146496815286,
                "explored_percent_none": 15.445859872611464,
                "kept_percent_concrete": 40.50179211469534,
                "kept_percent_lambda": 59.49820788530466,
                "num_examples": 4,
                "num_explored_concrete": 297,
                "num_explored_lambda": 234,
                "num_explored_none": 97,
                "num_inputs": 1,
                "num_kept_concrete": 113,
                "num_kept_lambda": 166,
                "num_values_explored": 628,
                "num_values_kept": 279,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.11786374205257744,
            "num_unique_values": 105,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 59.06432748538012,
                "explored_percent_lambda": 31.57894736842105,
                "explored_percent_none": 9.35672514619883,
                "kept_percent_concrete": 54.08163265306123,
                "kept_percent_lambda": 45.91836734693877,
                "num_examples": 5,
                "num_explored_concrete": 101,
                "num_explored_lambda": 54,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 53,
                "num_kept_lambda": 45,
                "num_values_explored": 171,
                "num_values_kept": 98,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3033643939998001,
            "num_unique_values": 246,
            "solution": "Head(Map((lambda u1: ((lambda v1: IntDivide(v1, x1)))(u1)), x2))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 55.18672199170125,
                "explored_percent_lambda": 26.348547717842322,
                "explored_percent_none": 18.46473029045643,
                "kept_percent_concrete": 61.92468619246862,
                "kept_percent_lambda": 38.07531380753138,
                "num_examples": 4,
                "num_explored_concrete": 266,
                "num_explored_lambda": 127,
                "num_explored_none": 89,
                "num_inputs": 2,
                "num_kept_concrete": 148,
                "num_kept_lambda": 91,
                "num_values_explored": 482,
                "num_values_kept": 239,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 482
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22931418207008392,
            "num_unique_values": 105,
            "solution": "Max(x1, Square(Square(fn_3(-1))))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.79318734793188,
                "explored_percent_lambda": 31.386861313868614,
                "explored_percent_none": 33.819951338199516,
                "kept_percent_concrete": 27.272727272727273,
                "kept_percent_lambda": 72.72727272727273,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 129,
                "num_explored_none": 139,
                "num_inputs": 1,
                "num_kept_concrete": 27,
                "num_kept_lambda": 72,
                "num_values_explored": 411,
                "num_values_kept": 99,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 411
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.26576903997920454,
            "num_unique_values": 220,
            "solution": "Multiply(Square(fn_3(-1)), Minimum(x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 53.36927223719677,
                "explored_percent_lambda": 34.23180592991914,
                "explored_percent_none": 12.398921832884097,
                "kept_percent_concrete": 51.401869158878505,
                "kept_percent_lambda": 48.598130841121495,
                "num_examples": 4,
                "num_explored_concrete": 198,
                "num_explored_lambda": 127,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 110,
                "num_kept_lambda": 104,
                "num_values_explored": 371,
                "num_values_kept": 214,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 371
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3964480160502717,
            "num_unique_values": 176,
            "solution": "Multiply(Square(fn_3(-1)), fn_0(1, x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 51.344086021505376,
                "explored_percent_lambda": 31.989247311827956,
                "explored_percent_none": 16.666666666666668,
                "kept_percent_concrete": 44.705882352941174,
                "kept_percent_lambda": 55.294117647058826,
                "num_examples": 2,
                "num_explored_concrete": 191,
                "num_explored_lambda": 119,
                "num_explored_none": 62,
                "num_inputs": 1,
                "num_kept_concrete": 76,
                "num_kept_lambda": 94,
                "num_values_explored": 372,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 372
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2217409840086475,
            "num_unique_values": 176,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.779411764705884,
                "explored_percent_lambda": 39.338235294117645,
                "explored_percent_none": 5.882352941176471,
                "kept_percent_concrete": 47.337278106508876,
                "kept_percent_lambda": 52.662721893491124,
                "num_examples": 5,
                "num_explored_concrete": 149,
                "num_explored_lambda": 107,
                "num_explored_none": 16,
                "num_inputs": 2,
                "num_kept_concrete": 80,
                "num_kept_lambda": 89,
                "num_values_explored": 272,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4755465480266139,
            "num_unique_values": 248,
            "solution": "Sum(Map((lambda u1: ((lambda v1: Subtract(1, v1)))(u1)), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 45.53415061295972,
                "explored_percent_lambda": 39.05429071803853,
                "explored_percent_none": 15.411558669001751,
                "kept_percent_concrete": 40.082644628099175,
                "kept_percent_lambda": 59.917355371900825,
                "num_examples": 3,
                "num_explored_concrete": 260,
                "num_explored_lambda": 223,
                "num_explored_none": 88,
                "num_inputs": 1,
                "num_kept_concrete": 97,
                "num_kept_lambda": 145,
                "num_values_explored": 571,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.24915648100432009,
            "num_unique_values": 186,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 54.34782608695652,
                "explored_percent_lambda": 38.04347826086956,
                "explored_percent_none": 7.608695652173913,
                "kept_percent_concrete": 46.36871508379888,
                "kept_percent_lambda": 53.63128491620112,
                "num_examples": 2,
                "num_explored_concrete": 150,
                "num_explored_lambda": 105,
                "num_explored_none": 21,
                "num_inputs": 2,
                "num_kept_concrete": 83,
                "num_kept_lambda": 96,
                "num_values_explored": 276,
                "num_values_kept": 179,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.43317109206691384,
            "num_unique_values": 251,
            "solution": "Take(-1, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 40.119760479041915,
                "explored_percent_lambda": 49.10179640718563,
                "explored_percent_none": 10.778443113772456,
                "kept_percent_concrete": 29.387755102040817,
                "kept_percent_lambda": 70.61224489795919,
                "num_examples": 3,
                "num_explored_concrete": 201,
                "num_explored_lambda": 246,
                "num_explored_none": 54,
                "num_inputs": 1,
                "num_kept_concrete": 72,
                "num_kept_lambda": 173,
                "num_values_explored": 501,
                "num_values_kept": 245,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 501
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16641473397612572,
            "num_unique_values": 135,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 52.036199095022624,
                "explored_percent_lambda": 32.126696832579185,
                "explored_percent_none": 15.83710407239819,
                "kept_percent_concrete": 51.5625,
                "kept_percent_lambda": 48.4375,
                "num_examples": 3,
                "num_explored_concrete": 115,
                "num_explored_lambda": 71,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 66,
                "num_kept_lambda": 62,
                "num_values_explored": 221,
                "num_values_kept": 128,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1391158050391823,
            "num_unique_values": 90,
            "solution": "Take(Subtract(-1, 1), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 37.66233766233766,
                "explored_percent_lambda": 58.44155844155844,
                "explored_percent_none": 3.896103896103896,
                "kept_percent_concrete": 14.457831325301205,
                "kept_percent_lambda": 85.5421686746988,
                "num_examples": 2,
                "num_explored_concrete": 58,
                "num_explored_lambda": 90,
                "num_explored_none": 6,
                "num_inputs": 2,
                "num_kept_concrete": 12,
                "num_kept_lambda": 71,
                "num_values_explored": 154,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 154
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22087853506673127,
            "num_unique_values": 154,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x1, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 42.7007299270073,
                "explored_percent_lambda": 44.89051094890511,
                "explored_percent_none": 12.408759124087592,
                "kept_percent_concrete": 31.292517006802722,
                "kept_percent_lambda": 68.70748299319727,
                "num_examples": 3,
                "num_explored_concrete": 117,
                "num_explored_lambda": 123,
                "num_explored_none": 34,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 101,
                "num_values_explored": 274,
                "num_values_kept": 147,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 35.69767138699535,
            "num_unique_values": 742,
            "solution": "Max(IntDivide(Head(x2), Last(x2)), Max(Minimum(x1), Add(1, 1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 59.86745213549337,
                "explored_percent_lambda": 20.876288659793815,
                "explored_percent_none": 19.256259204712812,
                "kept_percent_concrete": 69.38775510204081,
                "kept_percent_lambda": 30.612244897959183,
                "num_examples": 4,
                "num_explored_concrete": 1626,
                "num_explored_lambda": 567,
                "num_explored_none": 523,
                "num_inputs": 2,
                "num_kept_concrete": 510,
                "num_kept_lambda": 225,
                "num_values_explored": 2716,
                "num_values_kept": 735,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 21703
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.554724470013753,
            "num_unique_values": 657,
            "solution": "IntDivide(Square(Square(fn_3(-1))), Head(x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 57.62010817690105,
                "explored_percent_lambda": 21.985364301622653,
                "explored_percent_none": 20.394527521476295,
                "kept_percent_concrete": 60.98310291858679,
                "kept_percent_lambda": 39.01689708141321,
                "num_examples": 5,
                "num_explored_concrete": 1811,
                "num_explored_lambda": 691,
                "num_explored_none": 641,
                "num_inputs": 1,
                "num_kept_concrete": 397,
                "num_kept_lambda": 254,
                "num_values_explored": 3143,
                "num_values_kept": 651,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 16217
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4862547799712047,
            "num_unique_values": 347,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(v1, Square(Minimum(x1)))))(u1)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 69.02086677367576,
                "explored_percent_lambda": 23.59550561797753,
                "explored_percent_none": 7.38362760834671,
                "kept_percent_concrete": 67.3529411764706,
                "kept_percent_lambda": 32.64705882352941,
                "num_examples": 5,
                "num_explored_concrete": 430,
                "num_explored_lambda": 147,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 229,
                "num_kept_lambda": 111,
                "num_values_explored": 623,
                "num_values_kept": 340,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2170389520470053,
            "num_unique_values": 169,
            "solution": "Scanl1((lambda u1, u2: Minimum(Take(x1, x2))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.971326164874554,
                "explored_percent_lambda": 38.70967741935484,
                "explored_percent_none": 9.31899641577061,
                "kept_percent_concrete": 46.91358024691358,
                "kept_percent_lambda": 53.08641975308642,
                "num_examples": 2,
                "num_explored_concrete": 145,
                "num_explored_lambda": 108,
                "num_explored_none": 26,
                "num_inputs": 2,
                "num_kept_concrete": 76,
                "num_kept_lambda": 86,
                "num_values_explored": 279,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 279
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14836162305437028,
            "num_unique_values": 91,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 63.905325443786985,
                "explored_percent_lambda": 26.035502958579883,
                "explored_percent_none": 10.059171597633137,
                "kept_percent_concrete": 53.01204819277108,
                "kept_percent_lambda": 46.98795180722892,
                "num_examples": 2,
                "num_explored_concrete": 108,
                "num_explored_lambda": 44,
                "num_explored_none": 17,
                "num_inputs": 3,
                "num_kept_concrete": 44,
                "num_kept_lambda": 39,
                "num_values_explored": 169,
                "num_values_kept": 83,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 169
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 43.245067021925934,
            "num_unique_values": 352,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 34.167385677308026,
                "explored_percent_lambda": 38.22260569456428,
                "explored_percent_none": 27.610008628127698,
                "kept_percent_concrete": 56.52173913043478,
                "kept_percent_lambda": 43.47826086956522,
                "num_examples": 5,
                "num_explored_concrete": 396,
                "num_explored_lambda": 443,
                "num_explored_none": 320,
                "num_inputs": 2,
                "num_kept_concrete": 195,
                "num_kept_lambda": 150,
                "num_values_explored": 1159,
                "num_values_kept": 345,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 25375
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.4027260140283,
            "num_unique_values": 345,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 15.887191539365453,
                "explored_percent_lambda": 23.924794359576968,
                "explored_percent_none": 60.18801410105758,
                "kept_percent_concrete": 56.04719764011799,
                "kept_percent_lambda": 43.95280235988201,
                "num_examples": 5,
                "num_explored_concrete": 676,
                "num_explored_lambda": 1018,
                "num_explored_none": 2561,
                "num_inputs": 1,
                "num_kept_concrete": 190,
                "num_kept_lambda": 149,
                "num_values_explored": 4255,
                "num_values_kept": 339,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 50010
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27432284806855023,
            "num_unique_values": 167,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 39.83402489626556,
                "explored_percent_lambda": 53.52697095435685,
                "explored_percent_none": 6.639004149377594,
                "kept_percent_concrete": 31.055900621118013,
                "kept_percent_lambda": 68.94409937888199,
                "num_examples": 3,
                "num_explored_concrete": 96,
                "num_explored_lambda": 129,
                "num_explored_none": 16,
                "num_inputs": 1,
                "num_kept_concrete": 50,
                "num_kept_lambda": 111,
                "num_values_explored": 241,
                "num_values_kept": 161,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 241
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5006690060254186,
            "num_unique_values": 334,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 72.62569832402235,
                "explored_percent_lambda": 13.547486033519553,
                "explored_percent_none": 13.8268156424581,
                "kept_percent_concrete": 78.2874617737003,
                "kept_percent_lambda": 21.712538226299696,
                "num_examples": 5,
                "num_explored_concrete": 520,
                "num_explored_lambda": 97,
                "num_explored_none": 99,
                "num_inputs": 2,
                "num_kept_concrete": 256,
                "num_kept_lambda": 71,
                "num_values_explored": 716,
                "num_values_kept": 327,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 716
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.47771861497312784,
            "num_unique_values": 296,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 66.77367576243981,
                "explored_percent_lambda": 24.077046548956663,
                "explored_percent_none": 9.149277688603531,
                "kept_percent_concrete": 61.937716262975776,
                "kept_percent_lambda": 38.062283737024224,
                "num_examples": 3,
                "num_explored_concrete": 416,
                "num_explored_lambda": 150,
                "num_explored_none": 57,
                "num_inputs": 2,
                "num_kept_concrete": 179,
                "num_kept_lambda": 110,
                "num_values_explored": 623,
                "num_values_kept": 289,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 623
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 80.46495122800115,
            "num_unique_values": 393,
            "solution": "IntDivide(Multiply(Square(Square(fn_3(-1))), Max(x1, fn_3(Add(x1, x1)))), Min(x1, 1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 21.248110559274455,
                "explored_percent_lambda": 24.530339019650185,
                "explored_percent_none": 54.221550421075364,
                "kept_percent_concrete": 52.713178294573645,
                "kept_percent_lambda": 47.286821705426355,
                "num_examples": 2,
                "num_explored_concrete": 984,
                "num_explored_lambda": 1136,
                "num_explored_none": 2511,
                "num_inputs": 1,
                "num_kept_concrete": 204,
                "num_kept_lambda": 183,
                "num_values_explored": 4631,
                "num_values_kept": 387,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 41806
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2384373319800943,
            "num_unique_values": 131,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(v1, x2)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 34.18181818181818,
                "explored_percent_lambda": 42.90909090909091,
                "explored_percent_none": 22.90909090909091,
                "kept_percent_concrete": 29.838709677419356,
                "kept_percent_lambda": 70.16129032258064,
                "num_examples": 5,
                "num_explored_concrete": 94,
                "num_explored_lambda": 118,
                "num_explored_none": 63,
                "num_inputs": 2,
                "num_kept_concrete": 37,
                "num_kept_lambda": 87,
                "num_values_explored": 275,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 275
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.32900911604519933,
            "num_unique_values": 269,
            "solution": "Max(Square(Head(x1)), Square(Last(x2)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.66183574879227,
                "explored_percent_lambda": 29.468599033816425,
                "explored_percent_none": 10.869565217391305,
                "kept_percent_concrete": 61.06870229007634,
                "kept_percent_lambda": 38.93129770992366,
                "num_examples": 3,
                "num_explored_concrete": 247,
                "num_explored_lambda": 122,
                "num_explored_none": 45,
                "num_inputs": 2,
                "num_kept_concrete": 160,
                "num_kept_lambda": 102,
                "num_values_explored": 414,
                "num_values_kept": 262,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 414
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.68932403100189,
            "num_unique_values": 1114,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.170731707317074,
                "explored_percent_lambda": 35.210643015521065,
                "explored_percent_none": 21.61862527716186,
                "kept_percent_concrete": 33.75451263537906,
                "kept_percent_lambda": 66.24548736462094,
                "num_examples": 2,
                "num_explored_concrete": 1947,
                "num_explored_lambda": 1588,
                "num_explored_none": 975,
                "num_inputs": 1,
                "num_kept_concrete": 374,
                "num_kept_lambda": 734,
                "num_values_explored": 4510,
                "num_values_kept": 1108,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43839
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.868316954933107,
            "num_unique_values": 585,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: fn_1((lambda u1: ((lambda v1: If(((lambda v1: IsEven(((lambda v1: Max(-1, v1)))(v1))))(v1), -1, fn_3(-1))))(u1)), v1)))(u2)), x1)",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 27.870328680774428,
                "explored_percent_lambda": 43.85411976587123,
                "explored_percent_none": 28.275551553354344,
                "kept_percent_concrete": 34.887737478411054,
                "kept_percent_lambda": 65.11226252158895,
                "num_examples": 4,
                "num_explored_concrete": 619,
                "num_explored_lambda": 974,
                "num_explored_none": 628,
                "num_inputs": 1,
                "num_kept_concrete": 202,
                "num_kept_lambda": 377,
                "num_values_explored": 2221,
                "num_values_kept": 579,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5021
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.37357438704930246,
            "num_unique_values": 258,
            "solution": "Scanl1((lambda u1, u2: Min(x2, Sum(x1))), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 59.71337579617835,
                "explored_percent_lambda": 23.726114649681527,
                "explored_percent_none": 16.56050955414013,
                "kept_percent_concrete": 58.56573705179283,
                "kept_percent_lambda": 41.43426294820717,
                "num_examples": 5,
                "num_explored_concrete": 375,
                "num_explored_lambda": 149,
                "num_explored_none": 104,
                "num_inputs": 2,
                "num_kept_concrete": 147,
                "num_kept_lambda": 104,
                "num_values_explored": 628,
                "num_values_kept": 251,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 628
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.84294988203328,
            "num_unique_values": 720,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.57549085985105,
                "explored_percent_lambda": 15.809072444143535,
                "explored_percent_none": 33.61543669600542,
                "kept_percent_concrete": 62.92134831460674,
                "kept_percent_lambda": 37.07865168539326,
                "num_examples": 2,
                "num_explored_concrete": 2988,
                "num_explored_lambda": 934,
                "num_explored_none": 1986,
                "num_inputs": 3,
                "num_kept_concrete": 448,
                "num_kept_lambda": 264,
                "num_values_explored": 5908,
                "num_values_kept": 712,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61223
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.11398883291986,
            "num_unique_values": 1072,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.3134328358209,
                "explored_percent_lambda": 36.03720527795804,
                "explored_percent_none": 26.64936188622107,
                "kept_percent_concrete": 34.9906191369606,
                "kept_percent_lambda": 65.0093808630394,
                "num_examples": 2,
                "num_explored_concrete": 1725,
                "num_explored_lambda": 1666,
                "num_explored_none": 1232,
                "num_inputs": 1,
                "num_kept_concrete": 373,
                "num_kept_lambda": 693,
                "num_values_explored": 4623,
                "num_values_kept": 1066,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46401
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2944791780319,
            "num_unique_values": 943,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.5334255417243,
                "explored_percent_lambda": 27.52420470262794,
                "explored_percent_none": 24.942369755647764,
                "kept_percent_concrete": 40.128068303094985,
                "kept_percent_lambda": 59.871931696905015,
                "num_examples": 2,
                "num_explored_concrete": 2062,
                "num_explored_lambda": 1194,
                "num_explored_none": 1082,
                "num_inputs": 1,
                "num_kept_concrete": 376,
                "num_kept_lambda": 561,
                "num_values_explored": 4338,
                "num_values_kept": 937,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48551
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 69.52940349606797,
            "num_unique_values": 387,
            "solution": "Subtract(Subtract(x1, fn_3(x2)), Min(1, fn_3(x2)))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 17.99268404206676,
                "explored_percent_lambda": 23.914037494284408,
                "explored_percent_none": 58.093278463648836,
                "kept_percent_concrete": 55.26315789473684,
                "kept_percent_lambda": 44.73684210526316,
                "num_examples": 2,
                "num_explored_concrete": 787,
                "num_explored_lambda": 1046,
                "num_explored_none": 2541,
                "num_inputs": 2,
                "num_kept_concrete": 210,
                "num_kept_lambda": 170,
                "num_values_explored": 4374,
                "num_values_kept": 380,
                "temperature": 1.0,
                "total_num_restarts": 8,
                "total_num_values_explored": 39403
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.712444672943093,
            "num_unique_values": 764,
            "solution": "Map((lambda u1: Max(Subtract(1, fn_3(-1)), fn_3(IntDivide(x2, Square(fn_3(-1)))))), x1)",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 25.905292479108635,
                "explored_percent_lambda": 33.533319048639385,
                "explored_percent_none": 40.561388472251984,
                "kept_percent_concrete": 32.89299867899604,
                "kept_percent_lambda": 67.10700132100396,
                "num_examples": 4,
                "num_explored_concrete": 1209,
                "num_explored_lambda": 1565,
                "num_explored_none": 1893,
                "num_inputs": 2,
                "num_kept_concrete": 249,
                "num_kept_lambda": 508,
                "num_values_explored": 4667,
                "num_values_kept": 757,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 10695
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.471186988055706,
            "num_unique_values": 333,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: fn_3(v1)))(u1)), x1, x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 60.52202283849918,
                "explored_percent_lambda": 31.484502446982056,
                "explored_percent_none": 7.993474714518761,
                "kept_percent_concrete": 54.29447852760736,
                "kept_percent_lambda": 45.70552147239264,
                "num_examples": 3,
                "num_explored_concrete": 371,
                "num_explored_lambda": 193,
                "num_explored_none": 49,
                "num_inputs": 2,
                "num_kept_concrete": 177,
                "num_kept_lambda": 149,
                "num_values_explored": 613,
                "num_values_kept": 326,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 613
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.39382724196184,
            "num_unique_values": 893,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.81481481481482,
                "explored_percent_lambda": 21.64814814814815,
                "explored_percent_none": 28.537037037037038,
                "kept_percent_concrete": 52.536640360766626,
                "kept_percent_lambda": 47.463359639233374,
                "num_examples": 4,
                "num_explored_concrete": 2690,
                "num_explored_lambda": 1169,
                "num_explored_none": 1541,
                "num_inputs": 1,
                "num_kept_concrete": 466,
                "num_kept_lambda": 421,
                "num_values_explored": 5400,
                "num_values_kept": 887,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55494
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.423865849035792,
            "num_unique_values": 388,
            "solution": "Multiply(Add(Square(fn_3(-1)), fn_3(x1)), If(IsEven(x1), 0, 1))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 17.532188841201716,
                "explored_percent_lambda": 31.330472103004293,
                "explored_percent_none": 51.137339055793994,
                "kept_percent_concrete": 36.64921465968586,
                "kept_percent_lambda": 63.35078534031414,
                "num_examples": 5,
                "num_explored_concrete": 817,
                "num_explored_lambda": 1460,
                "num_explored_none": 2383,
                "num_inputs": 1,
                "num_kept_concrete": 140,
                "num_kept_lambda": 242,
                "num_values_explored": 4660,
                "num_values_kept": 382,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11493
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.834875336033292,
            "num_unique_values": 254,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u2)), x3, x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 28.299894403379092,
                "explored_percent_lambda": 52.05913410770855,
                "explored_percent_none": 19.640971488912356,
                "kept_percent_concrete": 37.80487804878049,
                "kept_percent_lambda": 62.19512195121951,
                "num_examples": 2,
                "num_explored_concrete": 268,
                "num_explored_lambda": 493,
                "num_explored_none": 186,
                "num_inputs": 3,
                "num_kept_concrete": 93,
                "num_kept_lambda": 153,
                "num_values_explored": 947,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3047
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.67180603009183,
            "num_unique_values": 491,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.676358349990913,
                "explored_percent_lambda": 23.62347810285299,
                "explored_percent_none": 49.700163547156095,
                "kept_percent_concrete": 54.54545454545455,
                "kept_percent_lambda": 45.45454545454545,
                "num_examples": 2,
                "num_explored_concrete": 1468,
                "num_explored_lambda": 1300,
                "num_explored_none": 2735,
                "num_inputs": 2,
                "num_kept_concrete": 264,
                "num_kept_lambda": 220,
                "num_values_explored": 5503,
                "num_values_kept": 484,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55341
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2498980510281399,
            "num_unique_values": 161,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(v1, x1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 48.31460674157304,
                "explored_percent_lambda": 44.19475655430712,
                "explored_percent_none": 7.49063670411985,
                "kept_percent_concrete": 37.908496732026144,
                "kept_percent_lambda": 62.091503267973856,
                "num_examples": 4,
                "num_explored_concrete": 129,
                "num_explored_lambda": 118,
                "num_explored_none": 20,
                "num_inputs": 3,
                "num_kept_concrete": 58,
                "num_kept_lambda": 95,
                "num_values_explored": 267,
                "num_values_kept": 153,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 267
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4088247959734872,
            "num_unique_values": 331,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 67.69759450171821,
                "explored_percent_lambda": 23.195876288659793,
                "explored_percent_none": 9.106529209621993,
                "kept_percent_concrete": 65.94427244582043,
                "kept_percent_lambda": 34.05572755417957,
                "num_examples": 4,
                "num_explored_concrete": 394,
                "num_explored_lambda": 135,
                "num_explored_none": 53,
                "num_inputs": 3,
                "num_kept_concrete": 213,
                "num_kept_lambda": 110,
                "num_values_explored": 582,
                "num_values_kept": 323,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 582
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 10.579976293956861,
            "num_unique_values": 422,
            "solution": "Max(Add(x2, 1), Min(Add(Add(x1, 1), IntDivide(x1, x2)), IntDivide(Square(x1), x2)))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 23.71517027863777,
                "explored_percent_lambda": 20.43343653250774,
                "explored_percent_none": 55.85139318885449,
                "kept_percent_concrete": 57.59036144578313,
                "kept_percent_lambda": 42.40963855421687,
                "num_examples": 4,
                "num_explored_concrete": 1149,
                "num_explored_lambda": 990,
                "num_explored_none": 2706,
                "num_inputs": 2,
                "num_kept_concrete": 239,
                "num_kept_lambda": 176,
                "num_values_explored": 4845,
                "num_values_kept": 415,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 7295
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3474179119803,
            "num_unique_values": 1137,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.796530306275436,
                "explored_percent_lambda": 30.691796958663524,
                "explored_percent_none": 19.51167273506104,
                "kept_percent_concrete": 42.44031830238727,
                "kept_percent_lambda": 57.55968169761273,
                "num_examples": 5,
                "num_explored_concrete": 2325,
                "num_explored_lambda": 1433,
                "num_explored_none": 911,
                "num_inputs": 1,
                "num_kept_concrete": 480,
                "num_kept_lambda": 651,
                "num_values_explored": 4669,
                "num_values_kept": 1131,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47215
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.22483703901525587,
            "num_unique_values": 147,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Greater(v1, x2)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 62.043795620437955,
                "explored_percent_lambda": 23.722627737226276,
                "explored_percent_none": 14.233576642335766,
                "kept_percent_concrete": 58.992805755395686,
                "kept_percent_lambda": 41.007194244604314,
                "num_examples": 5,
                "num_explored_concrete": 170,
                "num_explored_lambda": 65,
                "num_explored_none": 39,
                "num_inputs": 3,
                "num_kept_concrete": 82,
                "num_kept_lambda": 57,
                "num_values_explored": 274,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.58220976195298,
            "num_unique_values": 997,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.72595822813863,
                "explored_percent_lambda": 26.899242598117972,
                "explored_percent_none": 31.3747991737434,
                "kept_percent_concrete": 43.59233097880929,
                "kept_percent_lambda": 56.40766902119071,
                "num_examples": 3,
                "num_explored_concrete": 1818,
                "num_explored_lambda": 1172,
                "num_explored_none": 1367,
                "num_inputs": 1,
                "num_kept_concrete": 432,
                "num_kept_lambda": 559,
                "num_values_explored": 4357,
                "num_values_kept": 991,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45746
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5270767960464582,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(x1, ((lambda v1: fn_3(v1)))(v1))))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 54.54545454545455,
                "explored_percent_lambda": 31.738437001594896,
                "explored_percent_none": 13.716108452950559,
                "kept_percent_concrete": 43.032786885245905,
                "kept_percent_lambda": 56.967213114754095,
                "num_examples": 4,
                "num_explored_concrete": 342,
                "num_explored_lambda": 199,
                "num_explored_none": 86,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 139,
                "num_values_explored": 627,
                "num_values_kept": 244,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 627
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 21.080164698068984,
            "num_unique_values": 1286,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 62.330623306233065,
                "explored_percent_lambda": 18.55326245570148,
                "explored_percent_none": 19.116114238065457,
                "kept_percent_concrete": 64.24100156494522,
                "kept_percent_lambda": 35.75899843505477,
                "num_examples": 5,
                "num_explored_concrete": 2990,
                "num_explored_lambda": 890,
                "num_explored_none": 917,
                "num_inputs": 3,
                "num_kept_concrete": 821,
                "num_kept_lambda": 457,
                "num_values_explored": 4797,
                "num_values_kept": 1278,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 11841
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.280332922004163,
            "num_unique_values": 481,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 36.83527885862516,
                "explored_percent_lambda": 41.958495460440986,
                "explored_percent_none": 21.20622568093385,
                "kept_percent_concrete": 41.983122362869196,
                "kept_percent_lambda": 58.016877637130804,
                "num_examples": 5,
                "num_explored_concrete": 568,
                "num_explored_lambda": 647,
                "num_explored_none": 327,
                "num_inputs": 2,
                "num_kept_concrete": 199,
                "num_kept_lambda": 275,
                "num_values_explored": 1542,
                "num_values_kept": 474,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3292
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7418851259863,
            "num_unique_values": 621,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 38.32590942835932,
                "explored_percent_lambda": 20.805493689680773,
                "explored_percent_none": 40.86859688195991,
                "kept_percent_concrete": 52.76872964169381,
                "kept_percent_lambda": 47.23127035830619,
                "num_examples": 5,
                "num_explored_concrete": 2065,
                "num_explored_lambda": 1121,
                "num_explored_none": 2202,
                "num_inputs": 2,
                "num_kept_concrete": 324,
                "num_kept_lambda": 290,
                "num_values_explored": 5388,
                "num_values_kept": 614,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52483
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.31875285797287,
            "num_unique_values": 795,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.43909928352098,
                "explored_percent_lambda": 28.004094165813715,
                "explored_percent_none": 28.556806550665303,
                "kept_percent_concrete": 29.568527918781726,
                "kept_percent_lambda": 70.43147208121827,
                "num_examples": 2,
                "num_explored_concrete": 2122,
                "num_explored_lambda": 1368,
                "num_explored_none": 1395,
                "num_inputs": 2,
                "num_kept_concrete": 233,
                "num_kept_lambda": 555,
                "num_values_explored": 4885,
                "num_values_kept": 788,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48657
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.99210436898284,
            "num_unique_values": 350,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 9.682765151515152,
                "explored_percent_lambda": 40.672348484848484,
                "explored_percent_none": 49.64488636363637,
                "kept_percent_concrete": 15.116279069767442,
                "kept_percent_lambda": 84.88372093023256,
                "num_examples": 4,
                "num_explored_concrete": 409,
                "num_explored_lambda": 1718,
                "num_explored_none": 2097,
                "num_inputs": 1,
                "num_kept_concrete": 52,
                "num_kept_lambda": 292,
                "num_values_explored": 4224,
                "num_values_kept": 344,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 45473
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 27.295814938959666,
            "num_unique_values": 566,
            "solution": "Map((lambda u1: ((lambda v1: If(IsOdd(x2), v1, fn_0(x2, x1))))(u1)), x1)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 32.226258432797096,
                "explored_percent_lambda": 41.411520498183705,
                "explored_percent_none": 26.3622210690192,
                "kept_percent_concrete": 43.29159212880143,
                "kept_percent_lambda": 56.70840787119857,
                "num_examples": 4,
                "num_explored_concrete": 621,
                "num_explored_lambda": 798,
                "num_explored_none": 508,
                "num_inputs": 2,
                "num_kept_concrete": 242,
                "num_kept_lambda": 317,
                "num_values_explored": 1927,
                "num_values_kept": 559,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 11899
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.45734504098073,
            "num_unique_values": 1003,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.104009527590314,
                "explored_percent_lambda": 22.40968638348551,
                "explored_percent_none": 25.486304088924175,
                "kept_percent_concrete": 52.75827482447342,
                "kept_percent_lambda": 47.24172517552658,
                "num_examples": 3,
                "num_explored_concrete": 2625,
                "num_explored_lambda": 1129,
                "num_explored_none": 1284,
                "num_inputs": 1,
                "num_kept_concrete": 526,
                "num_kept_lambda": 471,
                "num_values_explored": 5038,
                "num_values_kept": 997,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48687
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.4259364880854264,
            "num_unique_values": 220,
            "solution": "Map((lambda u1: ((lambda v1: fn_3(v1)))(u1)), Reverse(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 53.82003395585738,
                "explored_percent_lambda": 30.899830220713074,
                "explored_percent_none": 15.280135823429541,
                "kept_percent_concrete": 43.66197183098591,
                "kept_percent_lambda": 56.33802816901409,
                "num_examples": 2,
                "num_explored_concrete": 317,
                "num_explored_lambda": 182,
                "num_explored_none": 90,
                "num_inputs": 2,
                "num_kept_concrete": 93,
                "num_kept_lambda": 120,
                "num_values_explored": 589,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.85822441300843,
            "num_unique_values": 340,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.00089605734767,
                "explored_percent_lambda": 31.9668458781362,
                "explored_percent_none": 54.03225806451613,
                "kept_percent_concrete": 30.538922155688624,
                "kept_percent_lambda": 69.46107784431138,
                "num_examples": 4,
                "num_explored_concrete": 625,
                "num_explored_lambda": 1427,
                "num_explored_none": 2412,
                "num_inputs": 1,
                "num_kept_concrete": 102,
                "num_kept_lambda": 232,
                "num_values_explored": 4464,
                "num_values_kept": 334,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46169
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.6421246570535004,
            "num_unique_values": 382,
            "solution": "Scanl1((lambda u1, u2: fn_3(fn_3(IntDivide(Last(x1), Head(x2))))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 65.3875094055681,
                "explored_percent_lambda": 24.52972159518435,
                "explored_percent_none": 10.082768999247554,
                "kept_percent_concrete": 57.86666666666667,
                "kept_percent_lambda": 42.13333333333333,
                "num_examples": 2,
                "num_explored_concrete": 869,
                "num_explored_lambda": 326,
                "num_explored_none": 134,
                "num_inputs": 2,
                "num_kept_concrete": 217,
                "num_kept_lambda": 158,
                "num_values_explored": 1329,
                "num_values_kept": 375,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1329
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.27696724398993,
            "num_unique_values": 1232,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.49836946096298,
                "explored_percent_lambda": 19.04853251486668,
                "explored_percent_none": 26.453098024170345,
                "kept_percent_concrete": 64.0,
                "kept_percent_lambda": 36.0,
                "num_examples": 5,
                "num_explored_concrete": 2841,
                "num_explored_lambda": 993,
                "num_explored_none": 1379,
                "num_inputs": 2,
                "num_kept_concrete": 784,
                "num_kept_lambda": 441,
                "num_values_explored": 5213,
                "num_values_kept": 1225,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52843
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.50004748499487,
            "num_unique_values": 1018,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 54.251626898047725,
                "explored_percent_lambda": 25.227765726681127,
                "explored_percent_none": 20.52060737527115,
                "kept_percent_concrete": 44.26877470355731,
                "kept_percent_lambda": 55.73122529644269,
                "num_examples": 3,
                "num_explored_concrete": 2501,
                "num_explored_lambda": 1163,
                "num_explored_none": 946,
                "num_inputs": 1,
                "num_kept_concrete": 448,
                "num_kept_lambda": 564,
                "num_values_explored": 4610,
                "num_values_kept": 1012,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 46690
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.30411956005264,
            "num_unique_values": 1310,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.19124643196955,
                "explored_percent_lambda": 14.272121788772598,
                "explored_percent_none": 16.53663177925785,
                "kept_percent_concrete": 73.67613200306984,
                "kept_percent_lambda": 26.32386799693016,
                "num_examples": 5,
                "num_explored_concrete": 3636,
                "num_explored_lambda": 750,
                "num_explored_none": 869,
                "num_inputs": 2,
                "num_kept_concrete": 960,
                "num_kept_lambda": 343,
                "num_values_explored": 5255,
                "num_values_kept": 1303,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 52573
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.5050291219959,
            "num_unique_values": 1092,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.603950103950105,
                "explored_percent_lambda": 38.2016632016632,
                "explored_percent_none": 24.194386694386694,
                "kept_percent_concrete": 34.16206261510129,
                "kept_percent_lambda": 65.83793738489871,
                "num_examples": 2,
                "num_explored_concrete": 1447,
                "num_explored_lambda": 1470,
                "num_explored_none": 931,
                "num_inputs": 1,
                "num_kept_concrete": 371,
                "num_kept_lambda": 715,
                "num_values_explored": 3848,
                "num_values_kept": 1086,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42385
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.49681856599636,
            "num_unique_values": 1066,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 57.01736038485672,
                "explored_percent_lambda": 17.381300983057937,
                "explored_percent_none": 25.601338632085337,
                "kept_percent_concrete": 62.57088846880907,
                "kept_percent_lambda": 37.42911153119093,
                "num_examples": 4,
                "num_explored_concrete": 2726,
                "num_explored_lambda": 831,
                "num_explored_none": 1224,
                "num_inputs": 3,
                "num_kept_concrete": 662,
                "num_kept_lambda": 396,
                "num_values_explored": 4781,
                "num_values_kept": 1058,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 49051
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.73047549300827,
            "num_unique_values": 759,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.86441986107538,
                "explored_percent_lambda": 44.84178029328531,
                "explored_percent_none": 34.29379984563931,
                "kept_percent_concrete": 11.55378486055777,
                "kept_percent_lambda": 88.44621513944223,
                "num_examples": 2,
                "num_explored_concrete": 811,
                "num_explored_lambda": 1743,
                "num_explored_none": 1333,
                "num_inputs": 1,
                "num_kept_concrete": 87,
                "num_kept_lambda": 666,
                "num_values_explored": 3887,
                "num_values_kept": 753,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 41400
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.18264448700938,
            "num_unique_values": 1132,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 63.73863461242102,
                "explored_percent_lambda": 11.681306826937895,
                "explored_percent_none": 24.580058560641085,
                "kept_percent_concrete": 75.26690391459074,
                "kept_percent_lambda": 24.73309608540925,
                "num_examples": 4,
                "num_explored_concrete": 4136,
                "num_explored_lambda": 758,
                "num_explored_none": 1595,
                "num_inputs": 3,
                "num_kept_concrete": 846,
                "num_kept_lambda": 278,
                "num_values_explored": 6489,
                "num_values_kept": 1124,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62002
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.68538618797902,
            "num_unique_values": 973,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.69690501600854,
                "explored_percent_lambda": 38.71398078975454,
                "explored_percent_none": 29.589114194236927,
                "kept_percent_concrete": 31.023784901758013,
                "kept_percent_lambda": 68.97621509824198,
                "num_examples": 3,
                "num_explored_concrete": 1188,
                "num_explored_lambda": 1451,
                "num_explored_none": 1109,
                "num_inputs": 1,
                "num_kept_concrete": 300,
                "num_kept_lambda": 667,
                "num_values_explored": 3748,
                "num_values_kept": 967,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 37370
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.435172585072,
            "num_unique_values": 316,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.460992907801419,
                "explored_percent_lambda": 35.1063829787234,
                "explored_percent_none": 54.43262411347518,
                "kept_percent_concrete": 28.387096774193548,
                "kept_percent_lambda": 71.61290322580645,
                "num_examples": 4,
                "num_explored_concrete": 413,
                "num_explored_lambda": 1386,
                "num_explored_none": 2149,
                "num_inputs": 1,
                "num_kept_concrete": 88,
                "num_kept_lambda": 222,
                "num_values_explored": 3948,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 43493
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.83898695395328,
            "num_unique_values": 1076,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.15025906735751,
                "explored_percent_lambda": 26.031088082901555,
                "explored_percent_none": 22.818652849740932,
                "kept_percent_concrete": 44.299065420560744,
                "kept_percent_lambda": 55.700934579439256,
                "num_examples": 2,
                "num_explored_concrete": 2468,
                "num_explored_lambda": 1256,
                "num_explored_none": 1101,
                "num_inputs": 1,
                "num_kept_concrete": 474,
                "num_kept_lambda": 596,
                "num_values_explored": 4825,
                "num_values_kept": 1070,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 47390
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5071560899959877,
            "num_unique_values": 325,
            "solution": "Map((lambda u1: Square(fn_5(Last(x1), x2))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 59.76230899830221,
                "explored_percent_lambda": 33.446519524618,
                "explored_percent_none": 6.791171477079796,
                "kept_percent_concrete": 53.31230283911672,
                "kept_percent_lambda": 46.68769716088328,
                "num_examples": 5,
                "num_explored_concrete": 352,
                "num_explored_lambda": 197,
                "num_explored_none": 40,
                "num_inputs": 3,
                "num_kept_concrete": 169,
                "num_kept_lambda": 148,
                "num_values_explored": 589,
                "num_values_kept": 317,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 589
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 6.200872348970734,
            "num_unique_values": 583,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: fn_3(-1)), Drop(Head(x2), x2)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 37.19438877755511,
                "explored_percent_lambda": 40.721442885771545,
                "explored_percent_none": 22.084168336673347,
                "kept_percent_concrete": 30.381944444444443,
                "kept_percent_lambda": 69.61805555555556,
                "num_examples": 2,
                "num_explored_concrete": 928,
                "num_explored_lambda": 1016,
                "num_explored_none": 551,
                "num_inputs": 2,
                "num_kept_concrete": 175,
                "num_kept_lambda": 401,
                "num_values_explored": 2495,
                "num_values_kept": 576,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3895
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.46938496700022,
            "num_unique_values": 493,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.406498884995223,
                "explored_percent_lambda": 42.5931825422109,
                "explored_percent_none": 41.00031857279388,
                "kept_percent_concrete": 19.096509240246405,
                "kept_percent_lambda": 80.9034907597536,
                "num_examples": 3,
                "num_explored_concrete": 515,
                "num_explored_lambda": 1337,
                "num_explored_none": 1287,
                "num_inputs": 1,
                "num_kept_concrete": 93,
                "num_kept_lambda": 394,
                "num_values_explored": 3139,
                "num_values_kept": 487,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38308
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.46758867101744,
            "num_unique_values": 1118,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 74.61743988341026,
                "explored_percent_lambda": 11.513237794510566,
                "explored_percent_none": 13.869322322079183,
                "kept_percent_concrete": 79.09909909909909,
                "kept_percent_lambda": 20.9009009009009,
                "num_examples": 5,
                "num_explored_concrete": 3072,
                "num_explored_lambda": 474,
                "num_explored_none": 571,
                "num_inputs": 3,
                "num_kept_concrete": 878,
                "num_kept_lambda": 232,
                "num_values_explored": 4117,
                "num_values_kept": 1110,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48808
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.49866170308087,
            "num_unique_values": 596,
            "solution": "Scanl1((lambda u1, u2: Min(-1, IntDivide(x1, Head(x3)))), Sort(Scanl1((lambda u1, u2: x1), x2)))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 48.330683624801274,
                "explored_percent_lambda": 23.926868044515103,
                "explored_percent_none": 27.742448330683626,
                "kept_percent_concrete": 59.35374149659864,
                "kept_percent_lambda": 40.64625850340136,
                "num_examples": 4,
                "num_explored_concrete": 1216,
                "num_explored_lambda": 602,
                "num_explored_none": 698,
                "num_inputs": 3,
                "num_kept_concrete": 349,
                "num_kept_lambda": 239,
                "num_values_explored": 2516,
                "num_values_kept": 588,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4266
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.90230310207698,
            "num_unique_values": 1030,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 49.61439588688946,
                "explored_percent_lambda": 27.599906520215004,
                "explored_percent_none": 22.785697592895538,
                "kept_percent_concrete": 43.75,
                "kept_percent_lambda": 56.25,
                "num_examples": 2,
                "num_explored_concrete": 2123,
                "num_explored_lambda": 1181,
                "num_explored_none": 975,
                "num_inputs": 1,
                "num_kept_concrete": 448,
                "num_kept_lambda": 576,
                "num_values_explored": 4279,
                "num_values_kept": 1024,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 42535
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.25658452196512,
            "num_unique_values": 1171,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.77170670434919,
                "explored_percent_lambda": 14.963102527869367,
                "explored_percent_none": 19.26519076778144,
                "kept_percent_concrete": 66.1512027491409,
                "kept_percent_lambda": 33.84879725085911,
                "num_examples": 3,
                "num_explored_concrete": 4189,
                "num_explored_lambda": 953,
                "num_explored_none": 1227,
                "num_inputs": 2,
                "num_kept_concrete": 770,
                "num_kept_lambda": 394,
                "num_values_explored": 6369,
                "num_values_kept": 1164,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56805
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.62101246404927,
            "num_unique_values": 491,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 22.39804241435563,
                "explored_percent_lambda": 23.213703099510603,
                "explored_percent_none": 54.38825448613377,
                "kept_percent_concrete": 54.54545454545455,
                "kept_percent_lambda": 45.45454545454545,
                "num_examples": 4,
                "num_explored_concrete": 1373,
                "num_explored_lambda": 1423,
                "num_explored_none": 3334,
                "num_inputs": 2,
                "num_kept_concrete": 264,
                "num_kept_lambda": 220,
                "num_values_explored": 6130,
                "num_values_kept": 484,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61810
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.10793982096948,
            "num_unique_values": 710,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 48.53407290015848,
                "explored_percent_lambda": 29.239302694136292,
                "explored_percent_none": 22.22662440570523,
                "kept_percent_concrete": 65.9090909090909,
                "kept_percent_lambda": 34.09090909090909,
                "num_examples": 5,
                "num_explored_concrete": 1225,
                "num_explored_lambda": 738,
                "num_explored_none": 561,
                "num_inputs": 1,
                "num_kept_concrete": 464,
                "num_kept_lambda": 240,
                "num_values_explored": 2524,
                "num_values_kept": 704,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 38878
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.95189836807549,
            "num_unique_values": 517,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 40.55452865064695,
                "explored_percent_lambda": 23.10536044362292,
                "explored_percent_none": 36.34011090573013,
                "kept_percent_concrete": 60.3921568627451,
                "kept_percent_lambda": 39.6078431372549,
                "num_examples": 4,
                "num_explored_concrete": 1097,
                "num_explored_lambda": 625,
                "num_explored_none": 983,
                "num_inputs": 2,
                "num_kept_concrete": 308,
                "num_kept_lambda": 202,
                "num_values_explored": 2705,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 28534
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.57922444597352,
            "num_unique_values": 170,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 12.009345794392523,
                "explored_percent_lambda": 26.30841121495327,
                "explored_percent_none": 61.6822429906542,
                "kept_percent_concrete": 41.46341463414634,
                "kept_percent_lambda": 58.53658536585366,
                "num_examples": 3,
                "num_explored_concrete": 257,
                "num_explored_lambda": 563,
                "num_explored_none": 1320,
                "num_inputs": 1,
                "num_kept_concrete": 68,
                "num_kept_lambda": 96,
                "num_values_explored": 2140,
                "num_values_kept": 164,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 25056
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.22909469390288,
            "num_unique_values": 591,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.701149425287355,
                "explored_percent_lambda": 30.74712643678161,
                "explored_percent_none": 21.551724137931036,
                "kept_percent_concrete": 49.14383561643836,
                "kept_percent_lambda": 50.85616438356164,
                "num_examples": 3,
                "num_explored_concrete": 1162,
                "num_explored_lambda": 749,
                "num_explored_none": 525,
                "num_inputs": 2,
                "num_kept_concrete": 287,
                "num_kept_lambda": 297,
                "num_values_explored": 2436,
                "num_values_kept": 584,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 26246
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.36167850391939,
            "num_unique_values": 503,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.043956043956044,
                "explored_percent_lambda": 41.05494505494506,
                "explored_percent_none": 26.9010989010989,
                "kept_percent_concrete": 39.03420523138833,
                "kept_percent_lambda": 60.96579476861167,
                "num_examples": 5,
                "num_explored_concrete": 729,
                "num_explored_lambda": 934,
                "num_explored_none": 612,
                "num_inputs": 1,
                "num_kept_concrete": 194,
                "num_kept_lambda": 303,
                "num_values_explored": 2275,
                "num_values_kept": 497,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 26907
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.2863488009898,
            "num_unique_values": 569,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.91614518147684,
                "explored_percent_lambda": 29.078014184397162,
                "explored_percent_none": 38.00584063412599,
                "kept_percent_concrete": 57.54884547069272,
                "kept_percent_lambda": 42.45115452930728,
                "num_examples": 5,
                "num_explored_concrete": 789,
                "num_explored_lambda": 697,
                "num_explored_none": 911,
                "num_inputs": 1,
                "num_kept_concrete": 324,
                "num_kept_lambda": 239,
                "num_values_explored": 2397,
                "num_values_kept": 563,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 27625
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.47577546804678,
            "num_unique_values": 457,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 26.7879813796022,
                "explored_percent_lambda": 38.84892086330935,
                "explored_percent_none": 34.36309775708845,
                "kept_percent_concrete": 24.6119733924612,
                "kept_percent_lambda": 75.3880266075388,
                "num_examples": 2,
                "num_explored_concrete": 633,
                "num_explored_lambda": 918,
                "num_explored_none": 812,
                "num_inputs": 1,
                "num_kept_concrete": 111,
                "num_kept_lambda": 340,
                "num_values_explored": 2363,
                "num_values_kept": 451,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 26224
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.54181286296807,
            "num_unique_values": 626,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 41.306347746090154,
                "explored_percent_lambda": 31.41674333026679,
                "explored_percent_none": 27.276908923643056,
                "kept_percent_concrete": 50.0,
                "kept_percent_lambda": 50.0,
                "num_examples": 4,
                "num_explored_concrete": 898,
                "num_explored_lambda": 683,
                "num_explored_none": 593,
                "num_inputs": 1,
                "num_kept_concrete": 310,
                "num_kept_lambda": 310,
                "num_values_explored": 2174,
                "num_values_kept": 620,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 24255
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.40217256196775,
            "num_unique_values": 458,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 16.489091831557584,
                "explored_percent_lambda": 54.49010654490107,
                "explored_percent_none": 29.02080162354135,
                "kept_percent_concrete": 9.070796460176991,
                "kept_percent_lambda": 90.929203539823,
                "num_examples": 2,
                "num_explored_concrete": 325,
                "num_explored_lambda": 1074,
                "num_explored_none": 572,
                "num_inputs": 1,
                "num_kept_concrete": 41,
                "num_kept_lambda": 411,
                "num_values_explored": 1971,
                "num_values_kept": 452,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22153
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.5275526929181,
            "num_unique_values": 509,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 21.329507412721185,
                "explored_percent_lambda": 49.35437589670014,
                "explored_percent_none": 29.31611669057867,
                "kept_percent_concrete": 13.320079522862823,
                "kept_percent_lambda": 86.67992047713717,
                "num_examples": 2,
                "num_explored_concrete": 446,
                "num_explored_lambda": 1032,
                "num_explored_none": 613,
                "num_inputs": 1,
                "num_kept_concrete": 67,
                "num_kept_lambda": 436,
                "num_values_explored": 2091,
                "num_values_kept": 503,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 24201
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96123440400697,
            "num_unique_values": 201,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 7.699574870099197,
                "explored_percent_lambda": 32.87671232876713,
                "explored_percent_none": 59.42371280113368,
                "kept_percent_concrete": 21.53846153846154,
                "kept_percent_lambda": 78.46153846153847,
                "num_examples": 2,
                "num_explored_concrete": 163,
                "num_explored_lambda": 696,
                "num_explored_none": 1258,
                "num_inputs": 1,
                "num_kept_concrete": 42,
                "num_kept_lambda": 153,
                "num_values_explored": 2117,
                "num_values_kept": 195,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22672
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.09998957102653,
            "num_unique_values": 173,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.292682926829269,
                "explored_percent_lambda": 33.51219512195122,
                "explored_percent_none": 58.19512195121951,
                "kept_percent_concrete": 26.94610778443114,
                "kept_percent_lambda": 73.05389221556887,
                "num_examples": 2,
                "num_explored_concrete": 170,
                "num_explored_lambda": 687,
                "num_explored_none": 1193,
                "num_inputs": 1,
                "num_kept_concrete": 45,
                "num_kept_lambda": 122,
                "num_values_explored": 2050,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22940
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.38020136405248,
            "num_unique_values": 174,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 8.138401559454191,
                "explored_percent_lambda": 37.03703703703704,
                "explored_percent_none": 54.824561403508774,
                "kept_percent_concrete": 22.75449101796407,
                "kept_percent_lambda": 77.24550898203593,
                "num_examples": 2,
                "num_explored_concrete": 167,
                "num_explored_lambda": 760,
                "num_explored_none": 1125,
                "num_inputs": 2,
                "num_kept_concrete": 38,
                "num_kept_lambda": 129,
                "num_values_explored": 2052,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22740
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.971212521079,
            "num_unique_values": 171,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 10.321324245374878,
                "explored_percent_lambda": 37.92599805258033,
                "explored_percent_none": 51.75267770204479,
                "kept_percent_concrete": 21.341463414634145,
                "kept_percent_lambda": 78.65853658536585,
                "num_examples": 2,
                "num_explored_concrete": 212,
                "num_explored_lambda": 779,
                "num_explored_none": 1063,
                "num_inputs": 2,
                "num_kept_concrete": 35,
                "num_kept_lambda": 129,
                "num_values_explored": 2054,
                "num_values_kept": 164,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22826
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.523162203026,
            "num_unique_values": 180,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.860353897656625,
                "explored_percent_lambda": 37.350549976088,
                "explored_percent_none": 50.78909612625538,
                "kept_percent_concrete": 22.54335260115607,
                "kept_percent_lambda": 77.45664739884393,
                "num_examples": 2,
                "num_explored_concrete": 248,
                "num_explored_lambda": 781,
                "num_explored_none": 1062,
                "num_inputs": 2,
                "num_kept_concrete": 39,
                "num_kept_lambda": 134,
                "num_values_explored": 2091,
                "num_values_kept": 173,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 23637
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.96806471107993,
            "num_unique_values": 172,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 11.7477130476649,
                "explored_percent_lambda": 38.51709195955706,
                "explored_percent_none": 49.73519499277805,
                "kept_percent_concrete": 17.575757575757574,
                "kept_percent_lambda": 82.42424242424242,
                "num_examples": 2,
                "num_explored_concrete": 244,
                "num_explored_lambda": 800,
                "num_explored_none": 1033,
                "num_inputs": 2,
                "num_kept_concrete": 29,
                "num_kept_lambda": 136,
                "num_values_explored": 2077,
                "num_values_kept": 165,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 22553
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.3090790490387,
            "num_unique_values": 463,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 20.98828323993887,
                "explored_percent_lambda": 50.17829852266939,
                "explored_percent_none": 28.833418237391747,
                "kept_percent_concrete": 10.065645514223196,
                "kept_percent_lambda": 89.93435448577681,
                "num_examples": 2,
                "num_explored_concrete": 412,
                "num_explored_lambda": 985,
                "num_explored_none": 566,
                "num_inputs": 1,
                "num_kept_concrete": 46,
                "num_kept_lambda": 411,
                "num_values_explored": 1963,
                "num_values_kept": 457,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 23045
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.13053212489467,
            "num_unique_values": 173,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 14.058851004203643,
                "explored_percent_lambda": 34.93694535263895,
                "explored_percent_none": 51.0042036431574,
                "kept_percent_concrete": 23.952095808383234,
                "kept_percent_lambda": 76.04790419161677,
                "num_examples": 3,
                "num_explored_concrete": 301,
                "num_explored_lambda": 748,
                "num_explored_none": 1092,
                "num_inputs": 1,
                "num_kept_concrete": 40,
                "num_kept_lambda": 127,
                "num_values_explored": 2141,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 23811
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.53
}