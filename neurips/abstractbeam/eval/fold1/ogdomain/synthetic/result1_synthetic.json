{
    "num_tasks": 100,
    "num_tasks_solved": 73,
    "results": [
        {
            "elapsed_time": 0.48720705485902727,
            "num_unique_values": 94,
            "solution": "Map((lambda u1: ((lambda v1: If(IsEven(3), v1, 1)))(u1)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 61.37339055793991,
                "explored_percent_lambda": 18.88412017167382,
                "explored_percent_none": 19.742489270386265,
                "kept_percent_concrete": 60.0,
                "kept_percent_lambda": 40.0,
                "num_examples": 2,
                "num_explored_concrete": 143,
                "num_explored_lambda": 44,
                "num_explored_none": 46,
                "num_inputs": 1,
                "num_kept_concrete": 51,
                "num_kept_lambda": 34,
                "num_values_explored": 233,
                "num_values_kept": 85,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 233
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_0',\n    inputs_dict={'x1': [[-159, 106, 174, -57, 248], [-138, -159, 174]]},\n    outputs=[[1, 1, 1, 1, 1], [1, 1, 1]],\n    solution='Map(lambda u1: 1, x1)'\n)",
            "task_solution": "Map(lambda u1: 1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17345583089627326,
            "num_unique_values": 151,
            "solution": "Scanl1((lambda u1, u2: x2), x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 67.02898550724638,
                "explored_percent_lambda": 20.28985507246377,
                "explored_percent_none": 12.681159420289855,
                "kept_percent_concrete": 68.08510638297872,
                "kept_percent_lambda": 31.914893617021278,
                "num_examples": 3,
                "num_explored_concrete": 185,
                "num_explored_lambda": 56,
                "num_explored_none": 35,
                "num_inputs": 2,
                "num_kept_concrete": 96,
                "num_kept_lambda": 45,
                "num_values_explored": 276,
                "num_values_kept": 141,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 276
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_1',\n    inputs_dict={'x1': [[9, 0, 1, 3], [1, 8, 4, 5], [5, 7, 0, 6]], 'x2': [2, 8, 6]},\n    outputs=[[9, 2, 2, 2], [1, 8, 8, 8], [5, 6, 6, 6]],\n    solution='Scanl1(lambda u1, u2: x2, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.12471140781417489,
            "num_unique_values": 116,
            "solution": "Access(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 41.27906976744186,
                "explored_percent_lambda": 45.348837209302324,
                "explored_percent_none": 13.372093023255815,
                "kept_percent_concrete": 32.71028037383178,
                "kept_percent_lambda": 67.28971962616822,
                "num_examples": 5,
                "num_explored_concrete": 71,
                "num_explored_lambda": 78,
                "num_explored_none": 23,
                "num_inputs": 1,
                "num_kept_concrete": 35,
                "num_kept_lambda": 72,
                "num_values_explored": 172,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 172
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_2',\n    inputs_dict={'x1': [[-16, -8, -3, -12, -37, -4, -19], [-8, -30, -15, -28, -2, -36], [-34, -5, -39, -32, -2], [0, -9, -28, -45, -13, -29, -17], [-18, -16, -29, -26]]},\n    outputs=[-3, -15, -39, -28, -29],\n    solution='Access(2, x1)'\n)",
            "task_solution": "Access(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.15195742691867054,
            "num_unique_values": 133,
            "solution": "Drop(4, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 29.81366459627329,
                "explored_percent_lambda": 62.11180124223603,
                "explored_percent_none": 8.074534161490684,
                "kept_percent_concrete": 24.193548387096776,
                "kept_percent_lambda": 75.80645161290323,
                "num_examples": 5,
                "num_explored_concrete": 48,
                "num_explored_lambda": 100,
                "num_explored_none": 13,
                "num_inputs": 1,
                "num_kept_concrete": 30,
                "num_kept_lambda": 94,
                "num_values_explored": 161,
                "num_values_kept": 124,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_3',\n    inputs_dict={'x1': [[-231, -2, 204, 9, -49, 207, -82, 154, -3], [127, 135, 85, -56, -192, -215, 106, -164], [-101, 111, -187, 37, 7, -122, -213, 238, -18, -150], [-128, -53, -194, 68, 97, 134, -178, -173], [-172, 22, 228, -113, 153, -97]]},\n    outputs=[[-49, 207, -82, 154, -3], [-192, -215, 106, -164], [7, -122, -213, 238, -18, -150], [97, 134, -178, -173], [153, -97]],\n    solution='Drop(4, x1)'\n)",
            "task_solution": "Drop(4, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.07011740189045668,
            "num_unique_values": 73,
            "solution": "Take(x2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 80.79470198675497,
                "explored_percent_lambda": 7.947019867549669,
                "explored_percent_none": 11.258278145695364,
                "kept_percent_concrete": 82.53968253968254,
                "kept_percent_lambda": 17.46031746031746,
                "num_examples": 4,
                "num_explored_concrete": 122,
                "num_explored_lambda": 12,
                "num_explored_none": 17,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 11,
                "num_values_explored": 151,
                "num_values_kept": 63,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 151
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_4',\n    inputs_dict={'x1': [[71], [-234, -233, 18, 213, -64], [206, -26, 90, -63], [179]], 'x2': [-100, -186, -188, 237]},\n    outputs=[[], [], [], [179]],\n    solution='Take(x2, x1)'\n)",
            "task_solution": "Take(x2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2182852269615978,
            "num_unique_values": 131,
            "solution": "Drop(1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 15.950920245398773,
                "explored_percent_lambda": 68.71165644171779,
                "explored_percent_none": 15.337423312883436,
                "kept_percent_concrete": 14.87603305785124,
                "kept_percent_lambda": 85.12396694214875,
                "num_examples": 4,
                "num_explored_concrete": 26,
                "num_explored_lambda": 112,
                "num_explored_none": 25,
                "num_inputs": 2,
                "num_kept_concrete": 18,
                "num_kept_lambda": 103,
                "num_values_explored": 163,
                "num_values_kept": 121,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_5',\n    inputs_dict={'x1': [1, 1, 1, 1], 'x2': [[53], [25, 26, 94, 94, 98], [48, 49, 64, 35, 78], [38, 77, 92]]},\n    outputs=[[], [26, 94, 94, 98], [49, 64, 35, 78], [77, 92]],\n    solution='Drop(x1, x2)'\n)",
            "task_solution": "Drop(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13932055397890508,
            "num_unique_values": 116,
            "solution": "Drop(1, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 25.153374233128833,
                "explored_percent_lambda": 60.736196319018404,
                "explored_percent_none": 14.110429447852761,
                "kept_percent_concrete": 16.822429906542055,
                "kept_percent_lambda": 83.17757009345794,
                "num_examples": 2,
                "num_explored_concrete": 41,
                "num_explored_lambda": 99,
                "num_explored_none": 23,
                "num_inputs": 1,
                "num_kept_concrete": 18,
                "num_kept_lambda": 89,
                "num_values_explored": 163,
                "num_values_kept": 107,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 163
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_6',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[[1], [1, 2, 1, 1]],\n    solution='Drop(1, x1)'\n)",
            "task_solution": "Drop(1, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13079476705752313,
            "num_unique_values": 105,
            "solution": "Drop(2, x1)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 32.91925465838509,
                "explored_percent_lambda": 55.27950310559006,
                "explored_percent_none": 11.801242236024844,
                "kept_percent_concrete": 19.791666666666668,
                "kept_percent_lambda": 80.20833333333333,
                "num_examples": 2,
                "num_explored_concrete": 53,
                "num_explored_lambda": 89,
                "num_explored_none": 19,
                "num_inputs": 1,
                "num_kept_concrete": 19,
                "num_kept_lambda": 77,
                "num_values_explored": 161,
                "num_values_kept": 96,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 161
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_7',\n    inputs_dict={'x1': [[2, 2, 1, 4], [1, -1, 1, 0]]},\n    outputs=[[1, 4], [1, 0]],\n    solution='Drop(2, x1)'\n)",
            "task_solution": "Drop(2, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1791515771765262,
            "num_unique_values": 125,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: If(((lambda v1: IsEven(v1)))(v1), 3, 3)))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 39.11439114391144,
                "explored_percent_lambda": 39.11439114391144,
                "explored_percent_none": 21.771217712177123,
                "kept_percent_concrete": 32.758620689655174,
                "kept_percent_lambda": 67.24137931034483,
                "num_examples": 4,
                "num_explored_concrete": 106,
                "num_explored_lambda": 106,
                "num_explored_none": 59,
                "num_inputs": 1,
                "num_kept_concrete": 38,
                "num_kept_lambda": 78,
                "num_values_explored": 271,
                "num_values_kept": 116,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_8',\n    inputs_dict={'x1': [[1, 10], [9, 10], [6, 0], [4, 2]]},\n    outputs=[[1, 3], [9, 3], [6, 3], [4, 3]],\n    solution='Scanl1(lambda u1, u2: 3, x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: 3, x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09586704010143876,
            "num_unique_values": 85,
            "solution": "Access(x1, x2)",
            "solution_weight": 3,
            "stats": {
                "explored_percent_concrete": 66.08187134502924,
                "explored_percent_lambda": 15.2046783625731,
                "explored_percent_none": 18.71345029239766,
                "kept_percent_concrete": 69.33333333333333,
                "kept_percent_lambda": 30.666666666666668,
                "num_examples": 5,
                "num_explored_concrete": 113,
                "num_explored_lambda": 26,
                "num_explored_none": 32,
                "num_inputs": 2,
                "num_kept_concrete": 52,
                "num_kept_lambda": 23,
                "num_values_explored": 171,
                "num_values_kept": 75,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 171
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_3_function_9',\n    inputs_dict={'x1': [0, 1, 2, 2, 0], 'x2': [[108, 205, 206, 224, 125, 247, 140, 174, 212, 212], [112, 173, 167, 246, 143, 126, 134, 209], [112, 231, 117, 158, 171, 164, 180], [113, 233, 195, 207, 124], [109, 176, 116]]},\n    outputs=[108, 173, 117, 195, 109],\n    solution='Access(x1, x2)'\n)",
            "task_solution": "Access(x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.13184632314369082,
            "num_unique_values": 133,
            "solution": "IntDivide(Head(x2), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 72.97297297297297,
                "explored_percent_lambda": 4.504504504504505,
                "explored_percent_none": 22.52252252252252,
                "kept_percent_concrete": 95.1219512195122,
                "kept_percent_lambda": 4.878048780487805,
                "num_examples": 4,
                "num_explored_concrete": 243,
                "num_explored_lambda": 15,
                "num_explored_none": 75,
                "num_inputs": 2,
                "num_kept_concrete": 117,
                "num_kept_lambda": 6,
                "num_values_explored": 333,
                "num_values_kept": 123,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 333
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_0',\n    inputs_dict={'x1': [-36, -13, 10, 21], 'x2': [[14, -26], [-8, -27], [-35, -39], [18, 10]]},\n    outputs=[-1, 0, -4, 0],\n    solution='IntDivide(Head(x2), x1)'\n)",
            "task_solution": "IntDivide(Head(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.026337141171097755,
            "num_unique_values": 41,
            "solution": "Max(x1, Square(4))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 98.36065573770492,
                "explored_percent_lambda": 1.639344262295082,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 96.875,
                "kept_percent_lambda": 3.125,
                "num_examples": 2,
                "num_explored_concrete": 60,
                "num_explored_lambda": 1,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 31,
                "num_kept_lambda": 1,
                "num_values_explored": 61,
                "num_values_kept": 32,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 61
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_1',\n    inputs_dict={'x1': [34, 14]},\n    outputs=[34, 16],\n    solution='Max(x1, Square(4))'\n)",
            "task_solution": "Max(x1, Square(4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16138411196880043,
            "num_unique_values": 153,
            "solution": "Multiply(4, Minimum(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 74.92260061919505,
                "explored_percent_lambda": 12.38390092879257,
                "explored_percent_none": 12.693498452012383,
                "kept_percent_concrete": 79.86111111111111,
                "kept_percent_lambda": 20.13888888888889,
                "num_examples": 4,
                "num_explored_concrete": 242,
                "num_explored_lambda": 40,
                "num_explored_none": 41,
                "num_inputs": 1,
                "num_kept_concrete": 115,
                "num_kept_lambda": 29,
                "num_values_explored": 323,
                "num_values_kept": 144,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 323
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_2',\n    inputs_dict={'x1': [[2, 9, 8], [9, 2, 6, 4, 7, 5, 4], [2, 1, 2, 5, 5, 2], [1, 7, 4, 4, 1, 2, 7]]},\n    outputs=[8, 8, 4, 4],\n    solution='Multiply(4, Minimum(x1))'\n)",
            "task_solution": "Multiply(4, Minimum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1638477190863341,
            "num_unique_values": 148,
            "solution": "Multiply(2, Subtract(2, Head(x1)))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 69.51219512195122,
                "explored_percent_lambda": 17.378048780487806,
                "explored_percent_none": 13.109756097560975,
                "kept_percent_concrete": 69.06474820143885,
                "kept_percent_lambda": 30.93525179856115,
                "num_examples": 2,
                "num_explored_concrete": 228,
                "num_explored_lambda": 57,
                "num_explored_none": 43,
                "num_inputs": 1,
                "num_kept_concrete": 96,
                "num_kept_lambda": 43,
                "num_values_explored": 328,
                "num_values_kept": 139,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 328
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_3',\n    inputs_dict={'x1': [[0, 1], [2, 1, 2, 1, 1]]},\n    outputs=[4, 0],\n    solution='IntDivide(4, Sum(x1))'\n)",
            "task_solution": "IntDivide(4, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.17659854120574892,
            "num_unique_values": 177,
            "solution": "Scanl1((lambda u1, u2: Minimum(x1)), x2)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 67.51824817518248,
                "explored_percent_lambda": 25.182481751824817,
                "explored_percent_none": 7.299270072992701,
                "kept_percent_concrete": 62.874251497005986,
                "kept_percent_lambda": 37.125748502994014,
                "num_examples": 5,
                "num_explored_concrete": 185,
                "num_explored_lambda": 69,
                "num_explored_none": 20,
                "num_inputs": 2,
                "num_kept_concrete": 105,
                "num_kept_lambda": 62,
                "num_values_explored": 274,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_4',\n    inputs_dict={'x1': [[2, 4, 9, 8, 7, 6], [8, 1, 1, 7, 2], [8, 4, 7, 9, 4, 6, 5], [9, 9, 2, 8, 2], [8, 8, 8, 4, 3]], 'x2': [[65, 144], [47, 112], [109, 198], [55, 35], [197, 208]]},\n    outputs=[[65, 2], [47, 1], [109, 4], [55, 2], [197, 3]],\n    solution='Scanl1(lambda u1, u2: Minimum(x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Minimum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.410035366890952,
            "num_unique_values": 227,
            "solution": "Subtract(Sum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(2, v1)))(u2)), x1, x1)), 2)",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 68.75,
                "explored_percent_lambda": 15.021929824561404,
                "explored_percent_none": 16.228070175438596,
                "kept_percent_concrete": 59.174311926605505,
                "kept_percent_lambda": 40.825688073394495,
                "num_examples": 3,
                "num_explored_concrete": 627,
                "num_explored_lambda": 137,
                "num_explored_none": 148,
                "num_inputs": 1,
                "num_kept_concrete": 129,
                "num_kept_lambda": 89,
                "num_values_explored": 912,
                "num_values_kept": 218,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 912
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_5',\n    inputs_dict={'x1': [[-213, -36], [-13, -37], [-100, 0]]},\n    outputs=[251, 52, 102],\n    solution='Subtract(2, Sum(x1))'\n)",
            "task_solution": "Subtract(2, Sum(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.1698942098300904,
            "num_unique_values": 188,
            "solution": "Scanl1((lambda u1, u2: Sum(x2)), x1)",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 62.13235294117647,
                "explored_percent_lambda": 26.83823529411765,
                "explored_percent_none": 11.029411764705882,
                "kept_percent_concrete": 60.674157303370784,
                "kept_percent_lambda": 39.325842696629216,
                "num_examples": 2,
                "num_explored_concrete": 169,
                "num_explored_lambda": 73,
                "num_explored_none": 30,
                "num_inputs": 2,
                "num_kept_concrete": 108,
                "num_kept_lambda": 70,
                "num_values_explored": 272,
                "num_values_kept": 178,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 272
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_6',\n    inputs_dict={'x1': [[-71], [-43, 97, 45, -93, 8, -34]], 'x2': [[-37, -42, -27, -57, -85], [-69, -12, -52]]},\n    outputs=[[-71], [-43, -133, -133, -133, -133, -133]],\n    solution='Scanl1(lambda u1, u2: Sum(x2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Sum(x2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27302612201310694,
            "num_unique_values": 215,
            "solution": "Take(2, Sort(x1))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 49.889135254988915,
                "explored_percent_lambda": 39.689578713968956,
                "explored_percent_none": 10.42128603104213,
                "kept_percent_concrete": 40.29126213592233,
                "kept_percent_lambda": 59.70873786407767,
                "num_examples": 3,
                "num_explored_concrete": 225,
                "num_explored_lambda": 179,
                "num_explored_none": 47,
                "num_inputs": 1,
                "num_kept_concrete": 83,
                "num_kept_lambda": 123,
                "num_values_explored": 451,
                "num_values_kept": 206,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 451
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_7',\n    inputs_dict={'x1': [[72, 110, 199], [164, 67, 251], [76, 252, 170]]},\n    outputs=[[72, 110], [67, 164], [76, 170]],\n    solution='Take(-1, Sort(x1))'\n)",
            "task_solution": "Take(-1, Sort(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.09036284289322793,
            "num_unique_values": 111,
            "solution": "Sum(Drop(x1, x2))",
            "solution_weight": 4,
            "stats": {
                "explored_percent_concrete": 69.68325791855203,
                "explored_percent_lambda": 9.049773755656108,
                "explored_percent_none": 21.266968325791854,
                "kept_percent_concrete": 85.14851485148515,
                "kept_percent_lambda": 14.851485148514852,
                "num_examples": 3,
                "num_explored_concrete": 154,
                "num_explored_lambda": 20,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 86,
                "num_kept_lambda": 15,
                "num_values_explored": 221,
                "num_values_kept": 101,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 221
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_8',\n    inputs_dict={'x1': [-51, -130, 234], 'x2': [[3, 0, 3, 4, 0], [0, 3, 1, 3], [5, 3, 3, 5, 5, 3]]},\n    outputs=[10, 7, 0],\n    solution='Sum(Drop(x1, x2))'\n)",
            "task_solution": "Sum(Drop(x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.0929516488686204,
            "num_unique_values": 102,
            "solution": "Map((lambda u1: Head(x1)), Drop(2, x2))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 72.53218884120172,
                "explored_percent_lambda": 18.025751072961373,
                "explored_percent_none": 9.44206008583691,
                "kept_percent_concrete": 60.869565217391305,
                "kept_percent_lambda": 39.130434782608695,
                "num_examples": 2,
                "num_explored_concrete": 169,
                "num_explored_lambda": 42,
                "num_explored_none": 22,
                "num_inputs": 2,
                "num_kept_concrete": 56,
                "num_kept_lambda": 36,
                "num_values_explored": 233,
                "num_values_kept": 92,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 233
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_4_function_9',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[0], [1, 1]],\n    solution='Take(Sum(x1), x2)'\n)",
            "task_solution": "Take(Sum(x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16509689297527075,
            "num_unique_values": 146,
            "solution": "Scanl1((lambda u1, u2: Head(x2)), ZipWith((lambda u1, u2: Last(x2)), x2, x1))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 52.02952029520295,
                "explored_percent_lambda": 30.627306273062732,
                "explored_percent_none": 17.343173431734318,
                "kept_percent_concrete": 43.38235294117647,
                "kept_percent_lambda": 56.61764705882353,
                "num_examples": 3,
                "num_explored_concrete": 141,
                "num_explored_lambda": 83,
                "num_explored_none": 47,
                "num_inputs": 2,
                "num_kept_concrete": 59,
                "num_kept_lambda": 77,
                "num_values_explored": 271,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_0',\n    inputs_dict={'x1': [[81, 51, 51, 23], [1], [93, 75, 70, 43, 14]], 'x2': [[-51, -37], [-97, -33], [-88, -16]]},\n    outputs=[[-37, -51], [-33], [-16, -88]],\n    solution='Take(Head(x1), Reverse(x2))'\n)",
            "task_solution": "Take(Head(x1), Reverse(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 2.9604258069302887,
            "num_unique_values": 331,
            "solution": "IntDivide(Sum(x1), Head(x2))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 48.3197093551317,
                "explored_percent_lambda": 30.42688465031789,
                "explored_percent_none": 21.25340599455041,
                "kept_percent_concrete": 61.993769470404985,
                "kept_percent_lambda": 38.006230529595015,
                "num_examples": 4,
                "num_explored_concrete": 532,
                "num_explored_lambda": 335,
                "num_explored_none": 234,
                "num_inputs": 2,
                "num_kept_concrete": 199,
                "num_kept_lambda": 122,
                "num_values_explored": 1101,
                "num_values_kept": 321,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 2901
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_1',\n    inputs_dict={'x1': [[21, 3, 3, 33], [31, 17, 8, 0], [36, 2, 28, 40], [23, 0, 25, 20]], 'x2': [[20, 33, 29, 29], [22, 32, 5, 50], [21, 46, 9, 4], [27, 43, 28, 14]]},\n    outputs=[3, 2, 5, 2],\n    solution='IntDivide(Sum(x1), Head(x2))'\n)",
            "task_solution": "IntDivide(Sum(x1), Head(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 34.0493119219318,
            "num_unique_values": 403,
            "solution": "Head(ZipWith((lambda u1, u2: ((lambda v1: IntDivide(Square(4), v1)))(u2)), x1, x1))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 48.34874504623514,
                "explored_percent_lambda": 35.00660501981506,
                "explored_percent_none": 16.6446499339498,
                "kept_percent_concrete": 45.431472081218274,
                "kept_percent_lambda": 54.568527918781726,
                "num_examples": 5,
                "num_explored_concrete": 732,
                "num_explored_lambda": 530,
                "num_explored_none": 252,
                "num_inputs": 1,
                "num_kept_concrete": 179,
                "num_kept_lambda": 215,
                "num_values_explored": 1514,
                "num_values_kept": 394,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 16993
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_2',\n    inputs_dict={'x1': [[-5, -5, -4, -4, -3, -3, -2, -1], [-7, -5, -4, -4, -4, -3, -2, -1], [-9, -8, -6, -4, -4, -2], [-5, -5, -4, -4, -3, -2, -2], [-8, -8, -8, -7, -7, -7, -4, -4, -3, -2]]},\n    outputs=[-4, -3, -2, -4, -2],\n    solution='IntDivide(Square(4), Head(x1))'\n)",
            "task_solution": "IntDivide(Square(4), Head(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3263133270666003,
            "num_unique_values": 306,
            "solution": "Scanl1((lambda u1, u2: Square(Minimum(x1))), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 82.66897746967071,
                "explored_percent_lambda": 13.17157712305026,
                "explored_percent_none": 4.15944540727903,
                "kept_percent_concrete": 78.37837837837837,
                "kept_percent_lambda": 21.62162162162162,
                "num_examples": 5,
                "num_explored_concrete": 477,
                "num_explored_lambda": 76,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 232,
                "num_kept_lambda": 64,
                "num_values_explored": 577,
                "num_values_kept": 296,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 577
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_3',\n    inputs_dict={'x1': [[-9, 0, -4, -7, -6, -3, -5, -10], [0, -8, -7, -10, -4, -3, -2], [-2, -6, -7, -8, -4, -10, 0, -1, -3], [0, -3, -8, -4, -1, -6, -7, -9, -2], [0, -10, -1, -9, -7, -8, -5, -3]], 'x2': [[-4, -1, -8, -9, -6, -7, -3, -10], [-1, -8, -9, -10, -3, -4, -7], [-6, -10, -3, -7, 0, -5, -2, -1, -4], [-1, -10, -5, -3, 0, -6, -4, -8, -2], [-10, -6, -5, -1, -7, 0, -2, -3]]},\n    outputs=[[-4, 100, 100, 100, 100, 100, 100, 100], [-1, 100, 100, 100, 100, 100, 100], [-6, 100, 100, 100, 100, 100, 100, 100, 100], [-1, 81, 81, 81, 81, 81, 81, 81, 81], [-10, 100, 100, 100, 100, 100, 100, 100]],\n    solution='Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Square(Minimum(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16502761305309832,
            "num_unique_values": 146,
            "solution": "Scanl1((lambda u1, u2: If(IsEven(x1), 0, 2)), x2)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 62.361623616236166,
                "explored_percent_lambda": 26.937269372693727,
                "explored_percent_none": 10.70110701107011,
                "kept_percent_concrete": 56.61764705882353,
                "kept_percent_lambda": 43.38235294117647,
                "num_examples": 2,
                "num_explored_concrete": 169,
                "num_explored_lambda": 73,
                "num_explored_none": 29,
                "num_inputs": 2,
                "num_kept_concrete": 77,
                "num_kept_lambda": 59,
                "num_values_explored": 271,
                "num_values_kept": 136,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 271
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_4',\n    inputs_dict={'x1': [4, 1], 'x2': [[3, 1, 0, 1], [2, 5, 4, 0]]},\n    outputs=[[3, 0, 0, 0], [2, 2, 2, 2]],\n    solution='Scanl1(lambda u1, u2: IntDivide(2, x1), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: IntDivide(2, x1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.08563798503018916,
            "num_unique_values": 87,
            "solution": "Drop(IntDivide(x1, x3), x2)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 71.60493827160494,
                "explored_percent_lambda": 16.666666666666668,
                "explored_percent_none": 11.728395061728396,
                "kept_percent_concrete": 67.10526315789474,
                "kept_percent_lambda": 32.89473684210526,
                "num_examples": 2,
                "num_explored_concrete": 116,
                "num_explored_lambda": 27,
                "num_explored_none": 19,
                "num_inputs": 3,
                "num_kept_concrete": 51,
                "num_kept_lambda": 25,
                "num_values_explored": 162,
                "num_values_kept": 76,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 162
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_5',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[[-11], [182, -26]],\n    solution='Drop(IntDivide(x1, x3), x2)'\n)",
            "task_solution": "Drop(IntDivide(x1, x3), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.096701414091513,
            "num_unique_values": 549,
            "solution": "Subtract(Last(x2), Last(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 56.79936933385889,
                "explored_percent_lambda": 17.855735120220732,
                "explored_percent_none": 25.344895545920377,
                "kept_percent_concrete": 76.25231910946196,
                "kept_percent_lambda": 23.74768089053803,
                "num_examples": 5,
                "num_explored_concrete": 1441,
                "num_explored_lambda": 453,
                "num_explored_none": 643,
                "num_inputs": 2,
                "num_kept_concrete": 411,
                "num_kept_lambda": 128,
                "num_values_explored": 2537,
                "num_values_kept": 539,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4637
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_6',\n    inputs_dict={'x1': [[45, 21], [-2, -8, -31, -40], [-33, -49], [-46, 18, 0, -2], [23]], 'x2': [[32], [-32, 14, 8, -29, -18], [-45], [-41, -42], [46, 7]]},\n    outputs=[11, 22, 4, -40, -16],\n    solution='Subtract(Last(x2), Last(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Last(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 39.50818733405322,
            "num_unique_values": 319,
            "solution": "Subtract(Add(3, Subtract(3, IntDivide(x1, 4))), 2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 25.00591996211224,
                "explored_percent_lambda": 16.528534217381008,
                "explored_percent_none": 58.46554582050675,
                "kept_percent_concrete": 61.61290322580645,
                "kept_percent_lambda": 38.38709677419355,
                "num_examples": 5,
                "num_explored_concrete": 1056,
                "num_explored_lambda": 698,
                "num_explored_none": 2469,
                "num_inputs": 1,
                "num_kept_concrete": 191,
                "num_kept_lambda": 119,
                "num_values_explored": 4223,
                "num_values_kept": 310,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 19835
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_7',\n    inputs_dict={'x1': [81, -44, -38, -91, 6]},\n    outputs=[-16, 15, 14, 27, 3],\n    solution='Subtract(4, IntDivide(x1, 4))'\n)",
            "task_solution": "Subtract(4, IntDivide(x1, 4))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.19718578807078302,
            "num_unique_values": 169,
            "solution": "Filter((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x1)",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 45.04132231404959,
                "explored_percent_lambda": 43.388429752066116,
                "explored_percent_none": 11.570247933884298,
                "kept_percent_concrete": 40.625,
                "kept_percent_lambda": 59.375,
                "num_examples": 3,
                "num_explored_concrete": 109,
                "num_explored_lambda": 105,
                "num_explored_none": 28,
                "num_inputs": 1,
                "num_kept_concrete": 65,
                "num_kept_lambda": 95,
                "num_values_explored": 242,
                "num_values_kept": 160,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 242
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_8',\n    inputs_dict={'x1': [[-45, 22, 21, -1], [-48, -3, -30, -14, 9], [21, 22]]},\n    outputs=[[-45, 21, -1], [-3, 9], [21]],\n    solution='Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)'\n)",
            "task_solution": "Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 25.301779974019155,
            "num_unique_values": 562,
            "solution": "Subtract(Last(x2), Square(x1))",
            "solution_weight": 5,
            "stats": {
                "explored_percent_concrete": 65.71675302245251,
                "explored_percent_lambda": 7.944732297063903,
                "explored_percent_none": 26.33851468048359,
                "kept_percent_concrete": 83.33333333333333,
                "kept_percent_lambda": 16.666666666666668,
                "num_examples": 5,
                "num_explored_concrete": 1522,
                "num_explored_lambda": 184,
                "num_explored_none": 610,
                "num_inputs": 2,
                "num_kept_concrete": 460,
                "num_kept_lambda": 92,
                "num_values_explored": 2316,
                "num_values_kept": 552,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 15005
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_5_function_9',\n    inputs_dict={'x1': [6, 9, 0, -1, 2], 'x2': [[38, -36, -9, -6, -25, 10, -18, 11], [22, 22, -24, 2, -25, -40, 36, -42, 6, 35], [37, -39, -46, 50, -42, 42, -46, -34], [41, 48, -2, -37, -36, -19, 34, 9], [-12, -2, 40, -18, 44, -33, -18]]},\n    outputs=[-25, -46, -34, 8, -22],\n    solution='Subtract(Last(x2), Square(x1))'\n)",
            "task_solution": "Subtract(Last(x2), Square(x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.27273426693864167,
            "num_unique_values": 253,
            "solution": "Scanl1((lambda u1, u2: Multiply(-1, Last(x1))), x2)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 81.2937062937063,
                "explored_percent_lambda": 14.685314685314685,
                "explored_percent_none": 4.020979020979021,
                "kept_percent_concrete": 72.42798353909465,
                "kept_percent_lambda": 27.57201646090535,
                "num_examples": 3,
                "num_explored_concrete": 465,
                "num_explored_lambda": 84,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 176,
                "num_kept_lambda": 67,
                "num_values_explored": 572,
                "num_values_kept": 243,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 572
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_0',\n    inputs_dict={'x1': [[8, 5, 0, 4, 0, 9, 9, 3, 3], [9, 1, 8, 3], [9, 2, 9, 5, 9, 8, 1]], 'x2': [[-94, -58, -51, -40, 14, 63, 70], [-87, -68, -37, 41, 55, 58, 59, 83, 93], [-26, -14, -13, -8, 35, 38, 51, 74, 76, 82]]},\n    outputs=[[-94, -3, -3, -3, -3, -3, -3], [-87, -3, -3, -3, -3, -3, -3, -3, -3], [-26, -1, -1, -1, -1, -1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(0, Last(x1)), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.633332401979715,
            "num_unique_values": 179,
            "solution": "Multiply(Square(4), Add(3, x1))",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 30.432801822323462,
                "explored_percent_lambda": 17.35763097949886,
                "explored_percent_none": 52.20956719817767,
                "kept_percent_concrete": 61.76470588235294,
                "kept_percent_lambda": 38.23529411764706,
                "num_examples": 2,
                "num_explored_concrete": 668,
                "num_explored_lambda": 381,
                "num_explored_none": 1146,
                "num_inputs": 1,
                "num_kept_concrete": 105,
                "num_kept_lambda": 65,
                "num_values_explored": 2195,
                "num_values_kept": 170,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3395
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_1',\n    inputs_dict={'x1': [-2, 4]},\n    outputs=[16, 112],\n    solution='Multiply(Square(4), Add(x1, 3))'\n)",
            "task_solution": "Multiply(Square(4), Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.58814450795762,
            "num_unique_values": 718,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 52.821522309711284,
                "explored_percent_lambda": 23.79702537182852,
                "explored_percent_none": 23.38145231846019,
                "kept_percent_concrete": 56.49717514124294,
                "kept_percent_lambda": 43.50282485875706,
                "num_examples": 5,
                "num_explored_concrete": 2415,
                "num_explored_lambda": 1088,
                "num_explored_none": 1069,
                "num_inputs": 2,
                "num_kept_concrete": 400,
                "num_kept_lambda": 308,
                "num_values_explored": 4572,
                "num_values_kept": 708,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 48201
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_2',\n    inputs_dict={'x1': [[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1]], 'x2': [0, 0, 0, 1, 1]},\n    outputs=[[1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, -1, -1, -1, 0, -1, 0, -1], [1, 0, 0, 0, -1, -1, -1, 0, 0, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x2))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21583625092171133,
            "num_unique_values": 231,
            "solution": "If(IsEven(Minimum(x2)), Square(Last(x2)), Square(Square(3)))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 68.23529411764706,
                "explored_percent_lambda": 18.823529411764707,
                "explored_percent_none": 12.941176470588236,
                "kept_percent_concrete": 67.87330316742081,
                "kept_percent_lambda": 32.126696832579185,
                "num_examples": 3,
                "num_explored_concrete": 290,
                "num_explored_lambda": 80,
                "num_explored_none": 55,
                "num_inputs": 2,
                "num_kept_concrete": 150,
                "num_kept_lambda": 71,
                "num_values_explored": 425,
                "num_values_kept": 221,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 425
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_3',\n    inputs_dict={'x1': [[-9, -9, -9, -3], [-3, -6, -7, -7], [-2, -9, -3, -3]], 'x2': [[-4, -9, -7, -5], [-3, -6, -2, -5], [-8, -7, -7, -4]]},\n    outputs=[81, 25, 16],\n    solution='Square(Min(Head(x1), Last(x2)))'\n)",
            "task_solution": "Square(Min(Head(x1), Last(x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2102325540035963,
            "num_unique_values": 194,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, 3)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 49.81684981684982,
                "explored_percent_lambda": 45.05494505494506,
                "explored_percent_none": 5.128205128205129,
                "kept_percent_concrete": 41.62162162162162,
                "kept_percent_lambda": 58.37837837837838,
                "num_examples": 2,
                "num_explored_concrete": 136,
                "num_explored_lambda": 123,
                "num_explored_none": 14,
                "num_inputs": 1,
                "num_kept_concrete": 77,
                "num_kept_lambda": 108,
                "num_values_explored": 273,
                "num_values_kept": 185,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 273
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_4',\n    inputs_dict={'x1': [[5, 9, 3, 4, 1], [9, 2, 8, 2]]},\n    outputs=[[5, 1, 0, 0, 0], [9, 3, 1, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 3))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.72354234289378,
            "num_unique_values": 251,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(-1, v1)))(u2)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 31.493815413891532,
                "explored_percent_lambda": 49.57183634633682,
                "explored_percent_none": 18.934348239771648,
                "kept_percent_concrete": 40.90909090909091,
                "kept_percent_lambda": 59.09090909090909,
                "num_examples": 4,
                "num_explored_concrete": 331,
                "num_explored_lambda": 521,
                "num_explored_none": 199,
                "num_inputs": 1,
                "num_kept_concrete": 99,
                "num_kept_lambda": 143,
                "num_values_explored": 1051,
                "num_values_kept": 242,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 8077
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_5',\n    inputs_dict={'x1': [[1, 1, 0], [1, 1, 1], [1, 0, 1, 1], [1, 0, 0, 0, 0]]},\n    outputs=[[1, -2, -1], [1, -2, -2], [1, -1, -2, -2], [1, -1, -1, -1, -1]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(-1, v1))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2893764260224998,
            "num_unique_values": 222,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Min(v1, Sum(x1))))(u2)), x1, Scanl1((lambda u1, u2: x2), x1))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 82.62411347517731,
                "explored_percent_lambda": 13.120567375886525,
                "explored_percent_none": 4.25531914893617,
                "kept_percent_concrete": 76.88679245283019,
                "kept_percent_lambda": 23.11320754716981,
                "num_examples": 5,
                "num_explored_concrete": 466,
                "num_explored_lambda": 74,
                "num_explored_none": 24,
                "num_inputs": 2,
                "num_kept_concrete": 163,
                "num_kept_lambda": 49,
                "num_values_explored": 564,
                "num_values_kept": 212,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 564
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_6',\n    inputs_dict={'x1': [[1, 3, 4, 4, 5, 7], [1, 2, 2, 3, 6, 6, 7, 7, 9, 9], [2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 3, 3, 4, 5, 9], [1, 1, 1, 2, 3, 6, 7, 8, 8]], 'x2': [90, 95, 10, 77, 67]},\n    outputs=[[1, 24, 24, 24, 24, 24], [1, 52, 52, 52, 52, 52, 52, 52, 52, 52], [2, 10, 10, 10, 10, 10], [1, 28, 28, 28, 28, 28, 28, 28, 28], [1, 37, 37, 37, 37, 37, 37, 37, 37]],\n    solution='Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Min(x2, Sum(x1)), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.39910211996175,
            "num_unique_values": 595,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 47.565990184374584,
                "explored_percent_lambda": 11.11553256400053,
                "explored_percent_none": 41.318477251624884,
                "kept_percent_concrete": 65.41095890410959,
                "kept_percent_lambda": 34.58904109589041,
                "num_examples": 2,
                "num_explored_concrete": 3586,
                "num_explored_lambda": 838,
                "num_explored_none": 3115,
                "num_inputs": 3,
                "num_kept_concrete": 382,
                "num_kept_lambda": 202,
                "num_values_explored": 7539,
                "num_values_kept": 584,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 74520
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_6_function_7',\n    inputs_dict={'x1': [-61, 88], 'x2': [[189, -11], [182, -26]], 'x3': [-47, -3]},\n    outputs=[-239, -159],\n    solution='Subtract(Min(x1, x3), Sum(x2))'\n)",
            "task_solution": "Subtract(Min(x1, x3), Sum(x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 72.82098999386653,
            "num_unique_values": 238,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, 2)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 20.07011393514461,
                "explored_percent_lambda": 48.99211218229623,
                "explored_percent_none": 30.93777388255916,
                "kept_percent_concrete": 39.301310043668124,
                "kept_percent_lambda": 60.698689956331876,
                "num_examples": 2,
                "num_explored_concrete": 229,
                "num_explored_lambda": 559,
                "num_explored_none": 353,
                "num_inputs": 1,
                "num_kept_concrete": 90,
                "num_kept_lambda": 139,
                "num_values_explored": 1141,
                "num_values_kept": 229,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 40765
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_8',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[2, 1, 0], [-8, -4, -2]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16502858395688236,
            "num_unique_values": 160,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(4, v1)))(u1)), x1)",
            "solution_weight": 6,
            "stats": {
                "explored_percent_concrete": 51.824817518248175,
                "explored_percent_lambda": 34.306569343065696,
                "explored_percent_none": 13.86861313868613,
                "kept_percent_concrete": 48.34437086092715,
                "kept_percent_lambda": 51.65562913907285,
                "num_examples": 2,
                "num_explored_concrete": 142,
                "num_explored_lambda": 94,
                "num_explored_none": 38,
                "num_inputs": 1,
                "num_kept_concrete": 73,
                "num_kept_lambda": 78,
                "num_values_explored": 274,
                "num_values_kept": 151,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_6_function_9',\n    inputs_dict={'x1': [[-231, 79, 1, -5, -150], [172, 105, -57, 174, 0]]},\n    outputs=[[-231, 235, -231, 235, -231], [172, -168, 172, -168, 172]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(4, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.2328383158892393,
            "num_unique_values": 191,
            "solution": "Min(If(IsEven(x1), -1, Subtract(x1, x2)), Subtract(x1, Subtract(x2, 4)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 38.17292006525285,
                "explored_percent_lambda": 9.706362153344209,
                "explored_percent_none": 52.12071778140294,
                "kept_percent_concrete": 77.90055248618785,
                "kept_percent_lambda": 22.099447513812155,
                "num_examples": 2,
                "num_explored_concrete": 936,
                "num_explored_lambda": 238,
                "num_explored_none": 1278,
                "num_inputs": 2,
                "num_kept_concrete": 141,
                "num_kept_lambda": 40,
                "num_values_explored": 2452,
                "num_values_kept": 181,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3652
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_0',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-65, -42],\n    solution='Subtract(x1, Min(x2, Multiply(x2, 3)))'\n)",
            "task_solution": "Subtract(x1, Min(x2, Multiply(x2, 3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16696279705502093,
            "num_unique_values": 128,
            "solution": "Map((lambda u1: Max(3, Subtract(IntDivide(x2, 4), 1))), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 70.24482109227871,
                "explored_percent_lambda": 5.649717514124294,
                "explored_percent_none": 24.105461393596986,
                "kept_percent_concrete": 87.28813559322033,
                "kept_percent_lambda": 12.711864406779661,
                "num_examples": 4,
                "num_explored_concrete": 373,
                "num_explored_lambda": 30,
                "num_explored_none": 128,
                "num_inputs": 2,
                "num_kept_concrete": 103,
                "num_kept_lambda": 15,
                "num_values_explored": 531,
                "num_values_kept": 118,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 531
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_1',\n    inputs_dict={'x1': [[-67], [44], [2], [-79]], 'x2': [72, 82, 48, 15]},\n    outputs=[[17], [19], [11], [3]],\n    solution='Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Subtract(x2, 3), 4), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.670455992920324,
            "num_unique_values": 1069,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Subtract(v1, 1)))(u2)), x2, x1)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 70.3659976387249,
                "explored_percent_lambda": 18.083431719795357,
                "explored_percent_none": 11.550570641479732,
                "kept_percent_concrete": 61.9452313503305,
                "kept_percent_lambda": 38.0547686496695,
                "num_examples": 3,
                "num_explored_concrete": 3576,
                "num_explored_lambda": 919,
                "num_explored_none": 587,
                "num_inputs": 2,
                "num_kept_concrete": 656,
                "num_kept_lambda": 403,
                "num_values_explored": 5082,
                "num_values_kept": 1059,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 14510
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_2',\n    inputs_dict={'x1': [[6, -32, -4, 32, 22, -12, 31], [0, -47, 18, 18, 39, -5], [37, 26, -40, -40]], 'x2': [[108, 129], [124, 190], [139, 241]]},\n    outputs=[[5, -33], [-1, -48], [36, 25]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(-1, v1))(u1), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.34711425099521875,
            "num_unique_values": 222,
            "solution": "Multiply(2, Add(Head(x1), Square(4)))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 71.8783930510315,
                "explored_percent_lambda": 12.703583061889251,
                "explored_percent_none": 15.418023887079261,
                "kept_percent_concrete": 69.48356807511738,
                "kept_percent_lambda": 30.516431924882628,
                "num_examples": 4,
                "num_explored_concrete": 662,
                "num_explored_lambda": 117,
                "num_explored_none": 142,
                "num_inputs": 1,
                "num_kept_concrete": 148,
                "num_kept_lambda": 65,
                "num_values_explored": 921,
                "num_values_kept": 213,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 921
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_3',\n    inputs_dict={'x1': [[0, 1, 1, 0, 0], [1, 1], [0, 1], [1]]},\n    outputs=[32, 34, 32, 34],\n    solution='Multiply(2, Add(Square(4), Head(x1)))'\n)",
            "task_solution": "Multiply(2, Add(Square(4), Head(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.05375452805310488,
            "num_unique_values": 58,
            "solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 95.08196721311475,
                "explored_percent_lambda": 4.918032786885246,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 87.75510204081633,
                "kept_percent_lambda": 12.244897959183673,
                "num_examples": 5,
                "num_explored_concrete": 116,
                "num_explored_lambda": 6,
                "num_explored_none": 0,
                "num_inputs": 1,
                "num_kept_concrete": 43,
                "num_kept_lambda": 6,
                "num_values_explored": 122,
                "num_values_kept": 49,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 122
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_4',\n    inputs_dict={'x1': [63, 12, 11, 26, 98]},\n    outputs=[66, 0, 14, 0, 0],\n    solution='If(IsEven(x1), 0, Add(x1, 3))'\n)",
            "task_solution": "If(IsEven(x1), 0, Add(x1, 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2605787180364132,
            "num_unique_values": 230,
            "solution": "Map((lambda u1: ((lambda v1: Add(x1, v1)))(u1)), Take(2, x2))",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 84.51380552220888,
                "explored_percent_lambda": 6.722689075630252,
                "explored_percent_none": 8.763505402160865,
                "kept_percent_concrete": 86.7579908675799,
                "kept_percent_lambda": 13.242009132420092,
                "num_examples": 2,
                "num_explored_concrete": 704,
                "num_explored_lambda": 56,
                "num_explored_none": 73,
                "num_inputs": 3,
                "num_kept_concrete": 190,
                "num_kept_lambda": 29,
                "num_values_explored": 833,
                "num_values_kept": 219,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 833
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_5',\n    inputs_dict={'x1': [31, 63], 'x2': [[93, 80, 97, 39, 21, 73, 51], [76, 38, 93, 65, 16, 82]], 'x3': [[0, 1], [1, 0]]},\n    outputs=[[124, 111], [139, 101]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u1), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.04644969408400357,
            "num_unique_values": 63,
            "solution": "If(IsEven(x1), Add(x1, 2), IntDivide(x1, 4))",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 94.26229508196721,
                "explored_percent_lambda": 5.737704918032787,
                "explored_percent_none": 0.0,
                "kept_percent_concrete": 86.79245283018868,
                "kept_percent_lambda": 13.20754716981132,
                "num_examples": 2,
                "num_explored_concrete": 115,
                "num_explored_lambda": 7,
                "num_explored_none": 0,
                "num_inputs": 2,
                "num_kept_concrete": 46,
                "num_kept_lambda": 7,
                "num_values_explored": 122,
                "num_values_kept": 53,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 122
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_6',\n    inputs_dict={'x1': [-39, -48], 'x2': [26, -2]},\n    outputs=[-10, -46],\n    solution='Add(x1, Add(3, Max(x2, -1)))'\n)",
            "task_solution": "Add(x1, Add(3, Max(x2, -1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16174500691704452,
            "num_unique_values": 178,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Add(x1, v1)))(u2)), x2, x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 61.97718631178707,
                "explored_percent_lambda": 28.136882129277566,
                "explored_percent_none": 9.885931558935361,
                "kept_percent_concrete": 60.47904191616767,
                "kept_percent_lambda": 39.52095808383233,
                "num_examples": 4,
                "num_explored_concrete": 163,
                "num_explored_lambda": 74,
                "num_explored_none": 26,
                "num_inputs": 3,
                "num_kept_concrete": 101,
                "num_kept_lambda": 66,
                "num_values_explored": 263,
                "num_values_kept": 167,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 263
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_7',\n    inputs_dict={'x1': [36, 42, 16, 60], 'x2': [[-1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1]], 'x3': [[5, 9, 10, 5, 0, 10], [5, 5], [2, 2, 7, 7, 7, 9, 5, 4], [10, 5, 10, 9]]},\n    outputs=[[41, 45, 46, 41, 36], [47, 47], [18, 18, 23, 23, 23, 25, 21], [70, 65, 70, 69]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Add(x1, v1))(u2), x2, x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.21916881599463522,
            "num_unique_values": 267,
            "solution": "Map((lambda u1: IntDivide(Last(x2), Minimum(x1))), x3)",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 89.92537313432835,
                "explored_percent_lambda": 5.41044776119403,
                "explored_percent_none": 4.664179104477612,
                "kept_percent_concrete": 88.671875,
                "kept_percent_lambda": 11.328125,
                "num_examples": 4,
                "num_explored_concrete": 482,
                "num_explored_lambda": 29,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 227,
                "num_kept_lambda": 29,
                "num_values_explored": 536,
                "num_values_kept": 256,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 536
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_8',\n    inputs_dict={'x1': [[57, 100, 15, 30, 34, 60, 89, 27, 51], [17, 30, 73], [27, 21, 84, 18, 86, 46, 15], [42, 62, 14, 14, 83, 19, 39, 4]], 'x2': [[47, 39, 86, 73, 52, 87, 23, 70, 72], [6, 26, 3], [70, 26, 65, 10, 35, 90, 98], [13, 67, 63, 7, 98, 61, 98, 98]], 'x3': [[-1, -1, -1, -1, -1, -1], [-1], [-1, -1, -1, -1, -1, -1, -1, -1], [-1, -1, -1, -1, -1, -1, -1, -1]]},\n    outputs=[[4, 4, 4, 4, 4, 4], [0], [6, 6, 6, 6, 6, 6, 6, 6], [24, 24, 24, 24, 24, 24, 24, 24]],\n    solution='Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)'\n)",
            "task_solution": "Map(lambda u1: IntDivide(Last(x2), Minimum(x1)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 90.31264768308029,
            "num_unique_values": 433,
            "solution": "Max(If(IsOdd(x2), Subtract(x1, -1), Add(x1, Add(3, 2))), Multiply(IntDivide(x1, 4), Add(3, 2)))",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 37.66072169224388,
                "explored_percent_lambda": 12.069680630443798,
                "explored_percent_none": 50.26959767731232,
                "kept_percent_concrete": 75.65011820330969,
                "kept_percent_lambda": 24.34988179669031,
                "num_examples": 4,
                "num_explored_concrete": 2724,
                "num_explored_lambda": 873,
                "num_explored_none": 3636,
                "num_inputs": 2,
                "num_kept_concrete": 320,
                "num_kept_lambda": 103,
                "num_values_explored": 7233,
                "num_values_kept": 423,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 69491
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_7_function_9',\n    inputs_dict={'x1': [8, 6, 9, 9], 'x2': [5, 5, 9, 2]},\n    outputs=[10, 7, 10, 14],\n    solution='Add(x1, IntDivide(Add(x1, 2), x2))'\n)",
            "task_solution": "Add(x1, IntDivide(Add(x1, 2), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77967945113778,
            "num_unique_values": 1058,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 50.8503726351997,
                "explored_percent_lambda": 33.15497802407797,
                "explored_percent_none": 15.994649340722338,
                "kept_percent_concrete": 46.99714013346044,
                "kept_percent_lambda": 53.00285986653956,
                "num_examples": 5,
                "num_explored_concrete": 2661,
                "num_explored_lambda": 1735,
                "num_explored_none": 837,
                "num_inputs": 1,
                "num_kept_concrete": 493,
                "num_kept_lambda": 556,
                "num_values_explored": 5233,
                "num_values_kept": 1049,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 55940
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_0',\n    inputs_dict={'x1': [[1, 1, 1, 1, 0, 0, 0], [2, 2, 2, 1, 0, 0, 0, 0, 0], [2, 2, 1, 1, 1, 0, 0], [2, 2, 1, 1, 1, 0, 0, 0, 0], [2, 2, 2, 2, 2, 1, 1, 1]]},\n    outputs=[[1, 4, 1], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]],\n    solution='Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, v1))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.16498212306760252,
            "num_unique_values": 170,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Max(x3, v1)))(u1)), Filter((lambda u1: ((lambda v1: Less(x2, v1)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 73.35766423357664,
                "explored_percent_lambda": 13.138686131386862,
                "explored_percent_none": 13.503649635036496,
                "kept_percent_concrete": 78.61635220125787,
                "kept_percent_lambda": 21.38364779874214,
                "num_examples": 5,
                "num_explored_concrete": 201,
                "num_explored_lambda": 36,
                "num_explored_none": 37,
                "num_inputs": 3,
                "num_kept_concrete": 125,
                "num_kept_lambda": 34,
                "num_values_explored": 274,
                "num_values_kept": 159,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 274
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_1',\n    inputs_dict={'x1': [[32, 21, 0, 24, 27], [36, 30, 36, 29, 21, 45, 18], [6, 35, 0, 13, 10, 50, 41, 41, 16, 44], [45, 13, 42, 34, 30], [9, 21, 23, 45, 46, 50, 30, 20]], 'x2': [7, 37, 49, 22, 0], 'x3': [253, 203, 109, 209, 101]},\n    outputs=[[32, 253, 253, 253], [45], [50], [45, 209, 209, 209], [9, 101, 101, 101, 101, 101, 101, 101]],\n    solution='Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: x3, Filter(lambda u1: (lambda v1: Greater(v1, x2))(u1), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.03633302496746,
            "num_unique_values": 1207,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 51.19294605809129,
                "explored_percent_lambda": 29.92738589211618,
                "explored_percent_none": 18.87966804979253,
                "kept_percent_concrete": 49.58263772954925,
                "kept_percent_lambda": 50.41736227045075,
                "num_examples": 3,
                "num_explored_concrete": 2961,
                "num_explored_lambda": 1731,
                "num_explored_none": 1092,
                "num_inputs": 1,
                "num_kept_concrete": 594,
                "num_kept_lambda": 604,
                "num_values_explored": 5784,
                "num_values_kept": 1198,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 61044
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_2',\n    inputs_dict={'x1': [[-238, -195, 77, -187, -200], [182, 12], [-118]]},\n    outputs=[[-34, -28, 11, -27, -29], [26, 1], [-17]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Add(3, 4)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 7.040183976991102,
            "num_unique_values": 783,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Subtract(Add(x1, 1), v1)))(u2)), x2)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 49.42348008385744,
                "explored_percent_lambda": 31.00104821802935,
                "explored_percent_none": 19.57547169811321,
                "kept_percent_concrete": 50.323415265200516,
                "kept_percent_lambda": 49.676584734799484,
                "num_examples": 4,
                "num_explored_concrete": 1886,
                "num_explored_lambda": 1183,
                "num_explored_none": 747,
                "num_inputs": 2,
                "num_kept_concrete": 389,
                "num_kept_lambda": 384,
                "num_values_explored": 3816,
                "num_values_kept": 773,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5616
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_3',\n    inputs_dict={'x1': [226, 174, 125, 232], 'x2': [[1, 2, 4, 5, 7, 9], [3, 4, 6, 9], [1, 3, 4, 5, 6, 8, 9], [1, 2, 5, 7, 9]]},\n    outputs=[[1, 225, 223, 222, 220, 218], [3, 171, 169, 166], [1, 123, 122, 121, 120, 118, 117], [1, 231, 228, 226, 224]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Subtract(Add(x1, 1), v1))(u2), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 33.1659730670508,
            "num_unique_values": 562,
            "solution": "Scanl1((lambda u1, u2: ((lambda v1: Min(v1, Access(x2, x3))))(u2)), x1)",
            "solution_weight": 8,
            "stats": {
                "explored_percent_concrete": 62.857142857142854,
                "explored_percent_lambda": 15.182072829131652,
                "explored_percent_none": 21.96078431372549,
                "kept_percent_concrete": 75.68058076225046,
                "kept_percent_lambda": 24.319419237749546,
                "num_examples": 5,
                "num_explored_concrete": 1122,
                "num_explored_lambda": 271,
                "num_explored_none": 392,
                "num_inputs": 3,
                "num_kept_concrete": 417,
                "num_kept_lambda": 134,
                "num_values_explored": 1785,
                "num_values_kept": 551,
                "temperature": 1.0,
                "total_num_restarts": 5,
                "total_num_values_explored": 23306
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_4',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[[1, 0, 0, 0, -1], [4, -1, -1, -1], [3, 0, 1, -1], [-1, 1, 1, 1], [4, 3, 0]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: Min(v1, Access(x2, x3)))(u2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.20642794482409954,
            "num_unique_values": 206,
            "solution": "Take(Count((lambda u1: ((lambda v1: IsOdd(v1)))(u1)), x2), Map((lambda u1: Sum(x1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 81.4410480349345,
                "explored_percent_lambda": 13.537117903930131,
                "explored_percent_none": 5.021834061135372,
                "kept_percent_concrete": 77.04081632653062,
                "kept_percent_lambda": 22.959183673469386,
                "num_examples": 5,
                "num_explored_concrete": 373,
                "num_explored_lambda": 62,
                "num_explored_none": 23,
                "num_inputs": 2,
                "num_kept_concrete": 151,
                "num_kept_lambda": 45,
                "num_values_explored": 458,
                "num_values_kept": 196,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 458
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_5',\n    inputs_dict={'x1': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 1, 1, 1, 1, 1]], 'x2': [[-1, -1, -1, -1, 0, 0, 0, 0, 1, 1], [-1, -1, -1, 0, 0, 0, 1], [-1, -1, -1, -1, -1, 0, 0, 0, 1, 1], [-1, -1, 0, 0, 0, 0, 1, 1, 1, 1], [-1, -1, -1, 0, 0, 0, 0, 1, 1, 1]]},\n    outputs=[[-2, -2, -2, -2, -2, -2], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1], [-3, -3, -3, -3, -3, -3], [3, 3, 3, 3, 3, 3]],\n    solution='Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))'\n)",
            "task_solution": "Map(lambda u1: Sum(x1), Filter(lambda u1: (lambda v1: IsOdd(v1))(u1), x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.800652530044317,
            "num_unique_values": 439,
            "solution": "Min(Subtract(x1, 3), Add(2, Subtract(x1, Head(x2))))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 50.3831891223733,
                "explored_percent_lambda": 12.53399258343634,
                "explored_percent_none": 37.08281829419036,
                "kept_percent_concrete": 78.55477855477855,
                "kept_percent_lambda": 21.445221445221446,
                "num_examples": 5,
                "num_explored_concrete": 2038,
                "num_explored_lambda": 507,
                "num_explored_none": 1500,
                "num_inputs": 2,
                "num_kept_concrete": 337,
                "num_kept_lambda": 92,
                "num_values_explored": 4045,
                "num_values_kept": 429,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5545
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_6',\n    inputs_dict={'x1': [8, 6, 6, 5, 9], 'x2': [[4], [6], [4], [9], [8]]},\n    outputs=[5, 2, 3, -2, 3],\n    solution='Subtract(x1, Max(3, Subtract(Head(x2), 2)))'\n)",
            "task_solution": "Subtract(x1, Max(3, Subtract(Head(x2), 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.85923015489243,
            "num_unique_values": 412,
            "solution": "Reverse(Scanl1((lambda u1, u2: IntDivide(Add(3, 4), x1)), ZipWith((lambda u1, u2: If(Greater(x1, 4), 1, Add(x1, 3))), x2, x2)))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 40.94736842105263,
                "explored_percent_lambda": 30.80701754385965,
                "explored_percent_none": 28.24561403508772,
                "kept_percent_concrete": 40.54726368159204,
                "kept_percent_lambda": 59.45273631840796,
                "num_examples": 2,
                "num_explored_concrete": 1167,
                "num_explored_lambda": 878,
                "num_explored_none": 805,
                "num_inputs": 2,
                "num_kept_concrete": 163,
                "num_kept_lambda": 239,
                "num_values_explored": 2850,
                "num_values_kept": 402,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4650
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_7',\n    inputs_dict={'x1': [40, 4], 'x2': [[132, 218], [26, 114]]},\n    outputs=[[0, 1], [1, 7]],\n    solution='Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide(v1, Multiply(x1, 4)))(u1), x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.37015382805839,
            "num_unique_values": 420,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 37.12131788356834,
                "explored_percent_lambda": 10.582158313555773,
                "explored_percent_none": 52.29652380287589,
                "kept_percent_concrete": 66.42335766423358,
                "kept_percent_lambda": 33.57664233576642,
                "num_examples": 4,
                "num_explored_concrete": 2659,
                "num_explored_lambda": 758,
                "num_explored_none": 3746,
                "num_inputs": 1,
                "num_kept_concrete": 273,
                "num_kept_lambda": 138,
                "num_values_explored": 7163,
                "num_values_kept": 411,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71306
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_8_function_8',\n    inputs_dict={'x1': [37, 39, 31, 49]},\n    outputs=[-53, -51, -59, -41],\n    solution='Subtract(x1, Add(Square(3), Square(Square(3))))'\n)",
            "task_solution": "Subtract(x1, Add(Square(3), Square(Square(3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 20.436467319028452,
            "num_unique_values": 1180,
            "solution": "If(IsOdd(x2), x1, Map((lambda u1: 3), x1))",
            "solution_weight": 7,
            "stats": {
                "explored_percent_concrete": 63.513513513513516,
                "explored_percent_lambda": 19.94028912633564,
                "explored_percent_none": 16.54619736015085,
                "kept_percent_concrete": 54.7008547008547,
                "kept_percent_lambda": 45.2991452991453,
                "num_examples": 4,
                "num_explored_concrete": 4042,
                "num_explored_lambda": 1269,
                "num_explored_none": 1053,
                "num_inputs": 2,
                "num_kept_concrete": 640,
                "num_kept_lambda": 530,
                "num_values_explored": 6364,
                "num_values_kept": 1170,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 15147
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_8_function_9',\n    inputs_dict={'x1': [[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [0, 2, 10]], 'x2': [67, 31, 181, 40]},\n    outputs=[[0, 9, 3, 10, 6, 9, 7, 5, 10, 4], [10, 0], [10, 2], [3, 3, 3]],\n    solution='Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: If(IsEven(x2), 3, v1))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.05311181116849,
            "num_unique_values": 975,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 65.48599670510708,
                "explored_percent_lambda": 14.030752333882482,
                "explored_percent_none": 20.483250961010434,
                "kept_percent_concrete": 65.94202898550725,
                "kept_percent_lambda": 34.05797101449275,
                "num_examples": 3,
                "num_explored_concrete": 4770,
                "num_explored_lambda": 1022,
                "num_explored_none": 1492,
                "num_inputs": 1,
                "num_kept_concrete": 637,
                "num_kept_lambda": 329,
                "num_values_explored": 7284,
                "num_values_kept": 966,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 76603
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_0',\n    inputs_dict={'x1': [[19, 9, 8], [19, 14, 7], [48, 32, 20, 7]]},\n    outputs=[-13, -13, -61],\n    solution='Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))'\n)",
            "task_solution": "Subtract(3, Square(IntDivide(Access(2, Reverse(x1)), 4)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.2351467041298747,
            "num_unique_values": 179,
            "solution": "Scanl1((lambda u1, u2: Sum(Scanl1((lambda u1, u2: -1), x2))), Map((lambda u1: Add(x1, -1)), x2))",
            "solution_weight": 10,
            "stats": {
                "explored_percent_concrete": 64.62346760070052,
                "explored_percent_lambda": 15.936952714535902,
                "explored_percent_none": 19.439579684763572,
                "kept_percent_concrete": 65.08875739644971,
                "kept_percent_lambda": 34.9112426035503,
                "num_examples": 2,
                "num_explored_concrete": 369,
                "num_explored_lambda": 91,
                "num_explored_none": 111,
                "num_inputs": 2,
                "num_kept_concrete": 110,
                "num_kept_lambda": 59,
                "num_values_explored": 571,
                "num_values_kept": 169,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 571
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_1',\n    inputs_dict={'x1': [14, 45], 'x2': [[40, 2], [47, 42]]},\n    outputs=[[13, 39], [44, 46]],\n    solution='Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Reverse(Map(lambda u1: (lambda v1: Add(-1, v1))(u1), Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.57944502402097,
            "num_unique_values": 377,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 29.599383667180277,
                "explored_percent_lambda": 15.439137134052388,
                "explored_percent_none": 54.961479198767336,
                "kept_percent_concrete": 55.70652173913044,
                "kept_percent_lambda": 44.29347826086956,
                "num_examples": 4,
                "num_explored_concrete": 1921,
                "num_explored_lambda": 1002,
                "num_explored_none": 3567,
                "num_inputs": 1,
                "num_kept_concrete": 205,
                "num_kept_lambda": 163,
                "num_values_explored": 6490,
                "num_values_kept": 368,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66712
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-9, -30, -16, -12],\n    solution='Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))'\n)",
            "task_solution": "Subtract(IntDivide(x1, 3), Add(3, IntDivide(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.3722802170086652,
            "num_unique_values": 342,
            "solution": "Scanl1((lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 78.300803673938,
                "explored_percent_lambda": 16.417910447761194,
                "explored_percent_none": 5.281285878300804,
                "kept_percent_concrete": 66.86746987951807,
                "kept_percent_lambda": 33.13253012048193,
                "num_examples": 2,
                "num_explored_concrete": 682,
                "num_explored_lambda": 143,
                "num_explored_none": 46,
                "num_inputs": 2,
                "num_kept_concrete": 222,
                "num_kept_lambda": 110,
                "num_values_explored": 871,
                "num_values_kept": 332,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 871
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_3',\n    inputs_dict={'x1': [[38, 33, 0, -48], [-17, -46, 28, 12, -41]], 'x2': [[2, 9], [9, 3, 3, 5, 8]]},\n    outputs=[[38, -26, -26, -26], [-17, -7, -7, -7, -7]],\n    solution='Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)'\n)",
            "task_solution": "Scanl1(lambda u1, u2: Subtract(IntDivide(Last(x1), Head(x2)), 2), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.6598052540794,
            "num_unique_values": 1058,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.7726574500768,
                "explored_percent_lambda": 7.258064516129032,
                "explored_percent_none": 19.96927803379416,
                "kept_percent_concrete": 82.15648854961832,
                "kept_percent_lambda": 17.84351145038168,
                "num_examples": 5,
                "num_explored_concrete": 5685,
                "num_explored_lambda": 567,
                "num_explored_none": 1560,
                "num_inputs": 2,
                "num_kept_concrete": 861,
                "num_kept_lambda": 187,
                "num_values_explored": 7812,
                "num_values_kept": 1048,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 80359
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_4',\n    inputs_dict={'x1': [[48], [-3, 14, 19, 45, 9], [8, 9, 15, 17, 4], [15, 38], [33, 20, 26]], 'x2': [29, 8, 42, 30, 30]},\n    outputs=[48, 2, 125, 42, 87],\n    solution='Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))'\n)",
            "task_solution": "Sum(Take(Minimum(x1), Scanl1(lambda u1, u2: Subtract(x2, 3), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.15829807310365,
            "num_unique_values": 563,
            "solution": "Scanl1((lambda u1, u2: Subtract(-1, 2)), ZipWith((lambda u1, u2: Minimum(ZipWith((lambda u1, u2: ((lambda v1: Subtract(v1, 4)))(u1)), x1, x1))), x1, x1))",
            "solution_weight": 15,
            "stats": {
                "explored_percent_concrete": 60.24871355060034,
                "explored_percent_lambda": 28.259005145797598,
                "explored_percent_none": 11.492281303602057,
                "kept_percent_concrete": 55.415162454873645,
                "kept_percent_lambda": 44.584837545126355,
                "num_examples": 3,
                "num_explored_concrete": 1405,
                "num_explored_lambda": 659,
                "num_explored_none": 268,
                "num_inputs": 1,
                "num_kept_concrete": 307,
                "num_kept_lambda": 247,
                "num_values_explored": 2332,
                "num_values_kept": 554,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 17968
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_5',\n    inputs_dict={'x1': [[70, 56, 91, 17, 69, 28], [80, 44, 64, 28, 19, 47], [64, 89, 24, 47, 83, 42]]},\n    outputs=[[13, -3, -3, -3, -3, -3], [15, -3, -3, -3, -3, -3], [20, -3, -3, -3, -3, -3]],\n    solution='Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(v1, 4))(u1), Scanl1(lambda u1, u2: 1, Sort(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 4.97664948599413,
            "num_unique_values": 791,
            "solution": "Map((lambda u1: Max(Multiply(2, Access(1, x2)), Add(2, 4))), x1)",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 73.30140676444178,
                "explored_percent_lambda": 12.870398084405867,
                "explored_percent_none": 13.82819515115235,
                "kept_percent_concrete": 76.69654289372599,
                "kept_percent_lambda": 23.303457106274006,
                "num_examples": 5,
                "num_explored_concrete": 2449,
                "num_explored_lambda": 430,
                "num_explored_none": 462,
                "num_inputs": 2,
                "num_kept_concrete": 599,
                "num_kept_lambda": 182,
                "num_values_explored": 3341,
                "num_values_kept": 781,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5141
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_6',\n    inputs_dict={'x1': [[0], [2, 8], [8, 6, 2], [3, 2], [9]], 'x2': [[20, -40, -47, 50, 13, 25, 43, -48, 42], [11, 43, -11, -6, -13, -13, -15], [-25, 46, 4, 43, -43, 0], [47, 33, -4, 25, 46, -46, -14, -10, -16, 4], [-2, 43, 50, -37, -14, -38, -46, -26]]},\n    outputs=[[6], [86, 86], [92, 92, 92], [66, 66], [86]],\n    solution='Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)'\n)",
            "task_solution": "Map(lambda u1: Multiply(2, Max(3, Access(1, x2))), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 13.132724349852651,
            "num_unique_values": 519,
            "solution": "Map((lambda u1: ((lambda v1: Min(4, ((lambda v1: Max(0, v1)))(v1))))(u1)), x1)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 48.48874598070739,
                "explored_percent_lambda": 38.19935691318328,
                "explored_percent_none": 13.311897106109324,
                "kept_percent_concrete": 46.666666666666664,
                "kept_percent_lambda": 53.333333333333336,
                "num_examples": 2,
                "num_explored_concrete": 754,
                "num_explored_lambda": 594,
                "num_explored_none": 207,
                "num_inputs": 1,
                "num_kept_concrete": 238,
                "num_kept_lambda": 272,
                "num_values_explored": 1555,
                "num_values_kept": 510,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 9269
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_7',\n    inputs_dict={'x1': [[-9, -2, -10, -6, 0, -10, -6, 3, 1], [-1, -5, 8, 5]]},\n    outputs=[[0, 0, 0, 0, 0, 0, 0, 3, 1], [0, 0, 4, 4]],\n    solution='Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Min(4, (lambda v1: Max(0, v1))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.14872201904654503,
            "num_unique_values": 173,
            "solution": "ZipWith((lambda u1, u2: ((lambda v1: Max(v1, Add(x3, 3))))(u2)), x1, x2)",
            "solution_weight": 9,
            "stats": {
                "explored_percent_concrete": 74.04580152671755,
                "explored_percent_lambda": 16.412213740458014,
                "explored_percent_none": 9.541984732824428,
                "kept_percent_concrete": 73.45679012345678,
                "kept_percent_lambda": 26.54320987654321,
                "num_examples": 4,
                "num_explored_concrete": 194,
                "num_explored_lambda": 43,
                "num_explored_none": 25,
                "num_inputs": 3,
                "num_kept_concrete": 119,
                "num_kept_lambda": 43,
                "num_values_explored": 262,
                "num_values_kept": 162,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 262
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_9_function_8',\n    inputs_dict={'x1': [[7], [10, 8, 1, 3, 6], [6, 6], [5, 8, 10]], 'x2': [[-37, 49], [25, 156], [-106, 83], [-179, -100]], 'x3': [140, 26, -226, -196]},\n    outputs=[[143], [29, 156], [-106, 83], [-179, -100]],\n    solution='ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)'\n)",
            "task_solution": "ZipWith(lambda u1, u2: (lambda v1: Max(v1, Add(x3, 3)))(u2), x1, x2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.77586662699468,
            "num_unique_values": 600,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.13609467455621,
                "explored_percent_lambda": 38.812869822485204,
                "explored_percent_none": 28.05103550295858,
                "kept_percent_concrete": 20.981387478849406,
                "kept_percent_lambda": 79.01861252115059,
                "num_examples": 2,
                "num_explored_concrete": 1792,
                "num_explored_lambda": 2099,
                "num_explored_none": 1517,
                "num_inputs": 1,
                "num_kept_concrete": 124,
                "num_kept_lambda": 467,
                "num_values_explored": 5408,
                "num_values_kept": 591,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 57654
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_9_function_9',\n    inputs_dict={'x1': [[90], [26]]},\n    outputs=[[67], [19]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Multiply(3, v1))(v1), 4))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.7603642991744,
            "num_unique_values": 1004,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 72.87385034631544,
                "explored_percent_lambda": 4.416941069603724,
                "explored_percent_none": 22.709208584080844,
                "kept_percent_concrete": 88.82175226586102,
                "kept_percent_lambda": 11.178247734138973,
                "num_examples": 4,
                "num_explored_concrete": 6418,
                "num_explored_lambda": 389,
                "num_explored_none": 2000,
                "num_inputs": 3,
                "num_kept_concrete": 882,
                "num_kept_lambda": 111,
                "num_values_explored": 8807,
                "num_values_kept": 993,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 88543
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_0',\n    inputs_dict={'x1': [178, 95, -7, 63], 'x2': [[28, 32, 37], [-42, -34, -13, 42, 47], [-42, -21, 10, 35], [5, 25]], 'x3': [[3, 126, 134, 140, 171, 178, 228], [2, 13, 35, 93, 185, 220], [45, 62, 81, 89], [60, 116, 149, 214]]},\n    outputs=[71, 47, 32, 47],\n    solution='IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)'\n)",
            "task_solution": "IntDivide(Add(Last(x2), Max(x1, Access(1, x3))), 3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.0372278469149,
            "num_unique_values": 1097,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 45.519650655021834,
                "explored_percent_lambda": 35.056768558951966,
                "explored_percent_none": 19.4235807860262,
                "kept_percent_concrete": 39.705882352941174,
                "kept_percent_lambda": 60.294117647058826,
                "num_examples": 3,
                "num_explored_concrete": 2606,
                "num_explored_lambda": 2007,
                "num_explored_none": 1112,
                "num_inputs": 1,
                "num_kept_concrete": 432,
                "num_kept_lambda": 656,
                "num_values_explored": 5725,
                "num_values_kept": 1088,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 60251
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_1',\n    inputs_dict={'x1': [[-1, -1, 4], [2, 4, 8], [-1, 6, 9]]},\n    outputs=[[-1, 1, 2], [0, 1, 2], [-1, 0, 0]],\n    solution='Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))'\n)",
            "task_solution": "Sort(Scanl1(lambda u1, u2: (lambda v1: IntDivide(4, (lambda v1: Max(2, v1))(v1)))(u2), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.45981352496892,
            "num_unique_values": 371,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 31.738605493510413,
                "explored_percent_lambda": 15.544823422879565,
                "explored_percent_none": 52.71657108361002,
                "kept_percent_concrete": 61.87845303867403,
                "kept_percent_lambda": 38.12154696132597,
                "num_examples": 4,
                "num_explored_concrete": 2103,
                "num_explored_lambda": 1030,
                "num_explored_none": 3493,
                "num_inputs": 1,
                "num_kept_concrete": 224,
                "num_kept_lambda": 138,
                "num_values_explored": 6626,
                "num_values_kept": 362,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 66378
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_2',\n    inputs_dict={'x1': [34, 165, 79, 52]},\n    outputs=[-5, -1, 0, 11],\n    solution='Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)'\n)",
            "task_solution": "Subtract(IntDivide(x1, Subtract(x1, Multiply(3, Square(4)))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.39900488196872175,
            "num_unique_values": 286,
            "solution": "Scanl1((lambda u1, u2: Square(Sum(Scanl1((lambda u1, u2: 4), x1)))), Map((lambda u1: ((lambda v1: Square(v1)))(u1)), x1))",
            "solution_weight": 11,
            "stats": {
                "explored_percent_concrete": 70.662100456621,
                "explored_percent_lambda": 22.945205479452056,
                "explored_percent_none": 6.392694063926941,
                "kept_percent_concrete": 56.67870036101083,
                "kept_percent_lambda": 43.32129963898917,
                "num_examples": 2,
                "num_explored_concrete": 619,
                "num_explored_lambda": 201,
                "num_explored_none": 56,
                "num_inputs": 1,
                "num_kept_concrete": 157,
                "num_kept_lambda": 120,
                "num_values_explored": 876,
                "num_values_kept": 277,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 876
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_3',\n    inputs_dict={'x1': [[2, 0, 9], [-8, -5, -7]]},\n    outputs=[[4, 100, 100], [64, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Square(v1))(u1), Scanl1(lambda u1, u2: Sum(Scanl1(lambda u1, u2: 4, x1)), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 46.6441929100547,
            "num_unique_values": 717,
            "solution": "ZipWith((lambda u1, u2: Minimum(Drop(Access(3, x2), Scanl1((lambda u1, u2: If(fn_1(Head(x2)), 1, Square(3))), Map((lambda u1: 4), x2))))), x3, x3)",
            "solution_weight": 19,
            "stats": {
                "explored_percent_concrete": 68.77697841726619,
                "explored_percent_lambda": 13.980815347721823,
                "explored_percent_none": 17.24220623501199,
                "kept_percent_concrete": 73.08781869688386,
                "kept_percent_lambda": 26.912181303116146,
                "num_examples": 5,
                "num_explored_concrete": 2868,
                "num_explored_lambda": 583,
                "num_explored_none": 719,
                "num_inputs": 3,
                "num_kept_concrete": 516,
                "num_kept_lambda": 190,
                "num_values_explored": 4170,
                "num_values_kept": 706,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 34288
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_4',\n    inputs_dict={'x1': [[0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 1]], 'x2': [[0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0], [0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1]], 'x3': [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]},\n    outputs=[[4, 4], [9, 9], [1, 1], [9, 9], [9, 9]],\n    solution='Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)'\n)",
            "task_solution": "Map(lambda u1: Square(Count(lambda u1: (lambda v1: Equal(v1, Last(x1)))(u1), x2)), x3)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 77.67255415394902,
            "num_unique_values": 736,
            "solution": "Scanl1((lambda u1, u2: Last(x2)), Map((lambda u1: Add(-1, -1)), Sort(Scanl1((lambda u1, u2: ((lambda v1: Access(v1, Drop(1, x2))))(u1)), Reverse(Take(3, Sort(x2)))))))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 52.95660467334287,
                "explored_percent_lambda": 32.761087267525035,
                "explored_percent_none": 14.282308059132093,
                "kept_percent_concrete": 44.62809917355372,
                "kept_percent_lambda": 55.37190082644628,
                "num_examples": 2,
                "num_explored_concrete": 2221,
                "num_explored_lambda": 1374,
                "num_explored_none": 599,
                "num_inputs": 2,
                "num_kept_concrete": 324,
                "num_kept_lambda": 402,
                "num_values_explored": 4194,
                "num_values_kept": 726,
                "temperature": 1.0,
                "total_num_restarts": 9,
                "total_num_values_explored": 48820
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_5',\n    inputs_dict={'x1': [[0, 1, 0], [1, 0, 0, 1]], 'x2': [[0, 1, 1], [1, 1, 0, 0]]},\n    outputs=[[-2, 1, 1], [-2, 0, 0]],\n    solution='Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))'\n)",
            "task_solution": "Take(3, Scanl1(lambda u1, u2: Last(x2), Map(lambda u1: Add(-1, -1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.56294469116256,
            "num_unique_values": 602,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 32.62780269058296,
                "explored_percent_lambda": 34.582959641255606,
                "explored_percent_none": 32.789237668161434,
                "kept_percent_concrete": 31.534569983136592,
                "kept_percent_lambda": 68.46543001686341,
                "num_examples": 3,
                "num_explored_concrete": 1819,
                "num_explored_lambda": 1928,
                "num_explored_none": 1828,
                "num_inputs": 1,
                "num_kept_concrete": 187,
                "num_kept_lambda": 406,
                "num_values_explored": 5575,
                "num_values_kept": 593,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56573
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_6',\n    inputs_dict={'x1': [[1], [-4], [-1]]},\n    outputs=[[1], [-254], [1]],\n    solution='Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(2, (lambda v1: Square((lambda v1: Square(v1))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.74884868506342,
            "num_unique_values": 1342,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 85.3967084254483,
                "explored_percent_lambda": 3.082780643576517,
                "explored_percent_none": 11.52051093097519,
                "kept_percent_concrete": 91.88580015026297,
                "kept_percent_lambda": 8.11419984973704,
                "num_examples": 5,
                "num_explored_concrete": 6953,
                "num_explored_lambda": 251,
                "num_explored_none": 938,
                "num_inputs": 3,
                "num_kept_concrete": 1223,
                "num_kept_lambda": 108,
                "num_values_explored": 8142,
                "num_values_kept": 1331,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 81158
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_7',\n    inputs_dict={'x1': [[1, 4, 3, 5, -1], [4, -1, 0, 2], [3, 0, 4, -1], [-1, 5, 2, 1], [4, 5, 0]], 'x2': [3, -1, 1, -1, 2], 'x3': [[-1, 4, 1, 0, 2], [3, 1, 2, -1], [4, 1, 2, 0], [2, 0, 3, 1], [2, 1, 3]]},\n    outputs=[9, -2, 2, -7, 2],\n    solution='Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))'\n)",
            "task_solution": "Add(x2, Sum(Map(lambda u1: (lambda v1: IntDivide(v1, Head(x1)))(u1), x3)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.61672716704197,
            "num_unique_values": 1028,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 68.34569829493687,
                "explored_percent_lambda": 12.404008850709358,
                "explored_percent_none": 19.250292854353766,
                "kept_percent_concrete": 70.50147492625369,
                "kept_percent_lambda": 29.49852507374631,
                "num_examples": 4,
                "num_explored_concrete": 5251,
                "num_explored_lambda": 953,
                "num_explored_none": 1479,
                "num_inputs": 3,
                "num_kept_concrete": 717,
                "num_kept_lambda": 300,
                "num_values_explored": 7683,
                "num_values_kept": 1017,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 81556
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_10_function_8',\n    inputs_dict={'x1': [95, -121, 170, 179], 'x2': [[1, 1], [1, 1], [1, 1], [1, 1]], 'x3': [[-159, -150, -87, -180], [-182], [-188, -200, -70, -93], [-7, -186, -119, -169, -193, -187, -166, -135, -80]]},\n    outputs=[[1, -1], [-121, -1], [1, -1], [1, -26]],\n    solution='Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))'\n)",
            "task_solution": "Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, Head(x3)))(u2), Sort(Scanl1(lambda u1, u2: x1, x2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 3.885148673085496,
            "num_unique_values": 528,
            "solution": "Scanl1((lambda u1, u2: 0), ZipWith((lambda u1, u2: ((lambda v1: Subtract(4, v1)))(u2)), Take(-1, x1), Drop(1, x1)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 57.497656982193064,
                "explored_percent_lambda": 34.16119962511715,
                "explored_percent_none": 8.341143392689785,
                "kept_percent_concrete": 49.13294797687861,
                "kept_percent_lambda": 50.86705202312139,
                "num_examples": 2,
                "num_explored_concrete": 1227,
                "num_explored_lambda": 729,
                "num_explored_none": 178,
                "num_inputs": 1,
                "num_kept_concrete": 255,
                "num_kept_lambda": 264,
                "num_values_explored": 2134,
                "num_values_kept": 519,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 3934
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_10_function_9',\n    inputs_dict={'x1': [[-10, -6, -5, -4, -2, 6], [-10, -9, -7, -7, -5, -2]]},\n    outputs=[[10, 0, 0, 0, 0], [13, 0, 0, 0, 0]],\n    solution='Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(4, v1))(u1), Scanl1(lambda u1, u2: 4, Drop(1, x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.79737770184875,
            "num_unique_values": 942,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 69.55700981625975,
                "explored_percent_lambda": 9.124087591240876,
                "explored_percent_none": 21.31890259249937,
                "kept_percent_concrete": 71.13733905579399,
                "kept_percent_lambda": 28.86266094420601,
                "num_examples": 3,
                "num_explored_concrete": 5527,
                "num_explored_lambda": 725,
                "num_explored_none": 1694,
                "num_inputs": 2,
                "num_kept_concrete": 663,
                "num_kept_lambda": 269,
                "num_values_explored": 7946,
                "num_values_kept": 932,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 81560
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_0',\n    inputs_dict={'x1': [3, 3, 5], 'x2': [[2, 3, 3, 5, 8, 8, 9], [1, 1, 3, 3, 5, 5, 7, 8, 8, 8], [2, 3, 4, 5, 6, 6, 6, 8, 9]]},\n    outputs=[-22, -60, -78],\n    solution='Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))'\n)",
            "task_solution": "Add(3, IntDivide(Sum(Scanl1(lambda u1, u2: (lambda v1: Subtract(v1, x1))(u1), x2)), 2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.36813757708296,
            "num_unique_values": 403,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 44.58959822528962,
                "explored_percent_lambda": 9.970421493714568,
                "explored_percent_none": 45.43998028099581,
                "kept_percent_concrete": 79.6437659033079,
                "kept_percent_lambda": 20.356234096692113,
                "num_examples": 4,
                "num_explored_concrete": 3618,
                "num_explored_lambda": 809,
                "num_explored_none": 3687,
                "num_inputs": 2,
                "num_kept_concrete": 313,
                "num_kept_lambda": 80,
                "num_values_explored": 8114,
                "num_values_kept": 393,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 80418
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_1',\n    inputs_dict={'x1': [19, 10, 16, 7], 'x2': [36, 43, 13, 21]},\n    outputs=[1, -46, 0, -21],\n    solution='If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))'\n)",
            "task_solution": "If(IsEven(x2), 1, Subtract(x1, Multiply(4, IntDivide(x2, 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.90615670196712,
            "num_unique_values": 1108,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 71.68690958164642,
                "explored_percent_lambda": 12.091767881241566,
                "explored_percent_none": 16.221322537112012,
                "kept_percent_concrete": 70.33666969972703,
                "kept_percent_lambda": 29.663330300272975,
                "num_examples": 5,
                "num_explored_concrete": 5312,
                "num_explored_lambda": 896,
                "num_explored_none": 1202,
                "num_inputs": 1,
                "num_kept_concrete": 773,
                "num_kept_lambda": 326,
                "num_values_explored": 7410,
                "num_values_kept": 1099,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 75138
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_2',\n    inputs_dict={'x1': [[-1, 0], [-1, -1, 1, 0, 0], [1, 0, 0, 1, 1, 0, -1, 1], [-1, 1, 1, 0], [-1, 0, 0, -1, -1, 0]]},\n    outputs=[0, -16, 2, 0, -48],\n    solution='Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))'\n)",
            "task_solution": "Min(2, Sum(Drop(4, Scanl1(lambda u1, u2: (lambda v1: Add(v1, v1))(u1), x1))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59505862602964,
            "num_unique_values": 875,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 64.58521481099213,
                "explored_percent_lambda": 9.534253644691008,
                "explored_percent_none": 25.880531544316863,
                "kept_percent_concrete": 73.75722543352602,
                "kept_percent_lambda": 26.24277456647399,
                "num_examples": 4,
                "num_explored_concrete": 5006,
                "num_explored_lambda": 739,
                "num_explored_none": 2006,
                "num_inputs": 2,
                "num_kept_concrete": 638,
                "num_kept_lambda": 227,
                "num_values_explored": 7751,
                "num_values_kept": 865,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 79939
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_3',\n    inputs_dict={'x1': [[1, 1], [2, 2], [1, 0], [0, 1]], 'x2': [2, 0, 2, 0]},\n    outputs=[-36, 0, -9, -1],\n    solution='Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))'\n)",
            "task_solution": "Subtract(0, Square(Add(x2, Square(Count(lambda u1: (lambda v1: IsOdd(v1))(u1), x1)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.59629386104643,
            "num_unique_values": 385,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 27.72460635998765,
                "explored_percent_lambda": 18.49336214881136,
                "explored_percent_none": 53.78203149120099,
                "kept_percent_concrete": 59.308510638297875,
                "kept_percent_lambda": 40.691489361702125,
                "num_examples": 3,
                "num_explored_concrete": 1796,
                "num_explored_lambda": 1198,
                "num_explored_none": 3484,
                "num_inputs": 1,
                "num_kept_concrete": 223,
                "num_kept_lambda": 153,
                "num_values_explored": 6478,
                "num_values_kept": 376,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 67252
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_4',\n    inputs_dict={'x1': [2, 0, 4]},\n    outputs=[-20, 16, -164],\n    solution='Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))'\n)",
            "task_solution": "Multiply(4, Subtract(4, Multiply(Square(3), IntDivide(Square(x1), 3))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.3036098149605095,
            "num_unique_values": 683,
            "solution": "Drop(-1, Map((lambda u1: Multiply(3, Add(1, Square(4)))), Drop(3, x1)))",
            "solution_weight": 12,
            "stats": {
                "explored_percent_concrete": 51.55131264916468,
                "explored_percent_lambda": 26.610978520286395,
                "explored_percent_none": 21.837708830548927,
                "kept_percent_concrete": 51.11441307578009,
                "kept_percent_lambda": 48.88558692421991,
                "num_examples": 3,
                "num_explored_concrete": 1728,
                "num_explored_lambda": 892,
                "num_explored_none": 732,
                "num_inputs": 2,
                "num_kept_concrete": 344,
                "num_kept_lambda": 329,
                "num_values_explored": 3352,
                "num_values_kept": 673,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 4852
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_5',\n    inputs_dict={'x1': [[193, 228, 228, 215, 143], [229, 116, 186], [232, 243, 244, 186]], 'x2': [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]},\n    outputs=[[51], [], [51]],\n    solution='Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))'\n)",
            "task_solution": "Drop(3, ZipWith(lambda u1, u2: Add(2, Square(Add(3, 4))), x1, x2))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 85.49865006608889,
            "num_unique_values": 714,
            "solution": "Take(Count((lambda u1: IsEven(Last(x1))), x1), Reverse(Scanl1((lambda u1, u2: ((lambda v1: IntDivide(v1, 2)))(u1)), x1)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 44.34664861205145,
                "explored_percent_lambda": 37.27149627623561,
                "explored_percent_none": 18.38185511171293,
                "kept_percent_concrete": 44.822695035460995,
                "kept_percent_lambda": 55.177304964539005,
                "num_examples": 5,
                "num_explored_concrete": 1310,
                "num_explored_lambda": 1101,
                "num_explored_none": 543,
                "num_inputs": 1,
                "num_kept_concrete": 316,
                "num_kept_lambda": 389,
                "num_values_explored": 2954,
                "num_values_kept": 705,
                "temperature": 1.0,
                "total_num_restarts": 10,
                "total_num_values_explored": 56971
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_6',\n    inputs_dict={'x1': [[-117], [-166], [-99, -202, -90, -14], [-221, -222, -241, -193, -213], [-248]]},\n    outputs=[[], [-166], [-13, -25, -50, -99], [], [-248]],\n    solution='Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))'\n)",
            "task_solution": "Reverse(Filter(lambda u1: IsEven(Last(x1)), Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 17.685648853890598,
            "num_unique_values": 799,
            "solution": "Multiply(3, IntDivide(If(IsEven(Last(x1)), Subtract(1, 4), Max(Maximum(x1), Sum(x1))), 3))",
            "solution_weight": 16,
            "stats": {
                "explored_percent_concrete": 50.406852248394,
                "explored_percent_lambda": 20.342612419700213,
                "explored_percent_none": 29.25053533190578,
                "kept_percent_concrete": 65.18987341772151,
                "kept_percent_lambda": 34.81012658227848,
                "num_examples": 5,
                "num_explored_concrete": 2354,
                "num_explored_lambda": 950,
                "num_explored_none": 1366,
                "num_inputs": 1,
                "num_kept_concrete": 515,
                "num_kept_lambda": 275,
                "num_values_explored": 4670,
                "num_values_kept": 790,
                "temperature": 1.0,
                "total_num_restarts": 3,
                "total_num_values_explored": 13638
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_7',\n    inputs_dict={'x1': [[-20, 63], [0, -42], [93, 45], [-41, -94], [-9, 35]]},\n    outputs=[63, -3, 138, -3, 33],\n    solution='Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))'\n)",
            "task_solution": "Multiply(3, IntDivide(Max(-1, Max(Last(x1), Sum(x1))), 3))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 5.7460631870198995,
            "num_unique_values": 457,
            "solution": "Subtract(fn_3((lambda u1: ((lambda v1: If(fn_1(Head(x1)), v1, Square(Subtract(2, Square(4))))))(u1)), Subtract(-1, 4)), Head(x1))",
            "solution_weight": 18,
            "stats": {
                "explored_percent_concrete": 42.64705882352941,
                "explored_percent_lambda": 26.153402537485583,
                "explored_percent_none": 31.199538638985004,
                "kept_percent_concrete": 49.330357142857146,
                "kept_percent_lambda": 50.669642857142854,
                "num_examples": 2,
                "num_explored_concrete": 1479,
                "num_explored_lambda": 907,
                "num_explored_none": 1082,
                "num_inputs": 1,
                "num_kept_concrete": 221,
                "num_kept_lambda": 227,
                "num_values_explored": 3468,
                "num_values_kept": 448,
                "temperature": 1.0,
                "total_num_restarts": 2,
                "total_num_values_explored": 5868
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_11_function_8',\n    inputs_dict={'x1': [[8], [0, 2]]},\n    outputs=[-13, 196],\n    solution='IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))'\n)",
            "task_solution": "IntDivide(Square(Subtract(Square(4), Last(x1))), Subtract(3, Last(x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 101.02403295016848,
            "num_unique_values": 981,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 42.91298436437798,
                "explored_percent_lambda": 33.76954452753229,
                "explored_percent_none": 23.317471108089734,
                "kept_percent_concrete": 47.839506172839506,
                "kept_percent_lambda": 52.160493827160494,
                "num_examples": 4,
                "num_explored_concrete": 2525,
                "num_explored_lambda": 1987,
                "num_explored_none": 1372,
                "num_inputs": 1,
                "num_kept_concrete": 465,
                "num_kept_lambda": 507,
                "num_values_explored": 5884,
                "num_values_kept": 972,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 62076
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_11_function_9',\n    inputs_dict={'x1': [[-95], [-99, -47, -202, -131, -161, 180, 216, -193], [184, 117, -154, 4, 41, 15], [246, 129, 14, 78, 256, -95, -74]]},\n    outputs=[[-95], [-99, 19], [184, 187], [246, 249]],\n    solution='Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))'\n)",
            "task_solution": "Take(2, Scanl1(lambda u1, u2: Add(3, Max(Square(4), Head(x1))), x1))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.75264030392282,
            "num_unique_values": 624,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.345635726148736,
                "explored_percent_lambda": 41.871193947222736,
                "explored_percent_none": 24.78317032662853,
                "kept_percent_concrete": 25.203252032520325,
                "kept_percent_lambda": 74.79674796747967,
                "num_examples": 2,
                "num_explored_concrete": 1807,
                "num_explored_lambda": 2269,
                "num_explored_none": 1343,
                "num_inputs": 1,
                "num_kept_concrete": 155,
                "num_kept_lambda": 460,
                "num_values_explored": 5419,
                "num_values_kept": 615,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 56003
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_0',\n    inputs_dict={'x1': [[204], [31]]},\n    outputs=[[212], [4]],\n    solution='Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: IntDivide((lambda v1: Square(v1))(v1), Square(Subtract(2, Square(4)))))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 0.5283972390461713,
            "num_unique_values": 255,
            "solution": "Reverse(Scanl1((lambda u1, u2: Multiply(4, Multiply(2, Square(3)))), Map((lambda u1: Square(Multiply(3, 4))), x1)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 55.858310626702995,
                "explored_percent_lambda": 31.33514986376022,
                "explored_percent_none": 12.806539509536785,
                "kept_percent_concrete": 45.1219512195122,
                "kept_percent_lambda": 54.8780487804878,
                "num_examples": 2,
                "num_explored_concrete": 615,
                "num_explored_lambda": 345,
                "num_explored_none": 141,
                "num_inputs": 1,
                "num_kept_concrete": 111,
                "num_kept_lambda": 135,
                "num_values_explored": 1101,
                "num_values_kept": 246,
                "temperature": 1.0,
                "total_num_restarts": 1,
                "total_num_values_explored": 1101
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_1',\n    inputs_dict={'x1': [[0], [0, 1]]},\n    outputs=[[144], [72, 144]],\n    solution='Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))'\n)",
            "task_solution": "Reverse(Scanl1(lambda u1, u2: (lambda v1: IntDivide(v1, 2))(u1), Map(lambda u1: Square(Multiply(3, 4)), x1)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.4672979619354,
            "num_unique_values": 406,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 28.498727735368956,
                "explored_percent_lambda": 18.545127974854065,
                "explored_percent_none": 52.95614428977698,
                "kept_percent_concrete": 44.83627204030227,
                "kept_percent_lambda": 55.16372795969773,
                "num_examples": 2,
                "num_explored_concrete": 1904,
                "num_explored_lambda": 1239,
                "num_explored_none": 3538,
                "num_inputs": 1,
                "num_kept_concrete": 178,
                "num_kept_lambda": 219,
                "num_values_explored": 6681,
                "num_values_kept": 397,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 68432
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_2',\n    inputs_dict={'x1': [1, 0]},\n    outputs=[-177, -118],\n    solution='Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))'\n)",
            "task_solution": "Multiply(Add(x1, 2), Add(1, Subtract(4, Multiply(4, Square(4)))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 44.64253700803965,
            "num_unique_values": 256,
            "solution": "If(IsOdd(x1), Multiply(4, IntDivide(x1, 2)), IntDivide(Subtract(1, x1), Square(3)))",
            "solution_weight": 14,
            "stats": {
                "explored_percent_concrete": 42.11805555555556,
                "explored_percent_lambda": 18.506944444444443,
                "explored_percent_none": 39.375,
                "kept_percent_concrete": 48.178137651821864,
                "kept_percent_lambda": 51.821862348178136,
                "num_examples": 2,
                "num_explored_concrete": 1213,
                "num_explored_lambda": 533,
                "num_explored_none": 1134,
                "num_inputs": 1,
                "num_kept_concrete": 119,
                "num_kept_lambda": 128,
                "num_values_explored": 2880,
                "num_values_kept": 247,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 31087
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_3',\n    inputs_dict={'x1': [96, 79]},\n    outputs=[-11, 156],\n    solution='Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)'\n)",
            "task_solution": "Subtract(If(IsOdd(x1), Add(x1, x1), Subtract(0, Square(3))), 2)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 24.834235104965046,
            "num_unique_values": 238,
            "solution": "If(IsEven(IntDivide(x1, 3)), Subtract(-1, 3), Add(2, Add(x1, 3)))",
            "solution_weight": 13,
            "stats": {
                "explored_percent_concrete": 42.779844436929324,
                "explored_percent_lambda": 18.735204599256004,
                "explored_percent_none": 38.484950963814676,
                "kept_percent_concrete": 44.73684210526316,
                "kept_percent_lambda": 55.26315789473684,
                "num_examples": 2,
                "num_explored_concrete": 1265,
                "num_explored_lambda": 554,
                "num_explored_none": 1138,
                "num_inputs": 2,
                "num_kept_concrete": 102,
                "num_kept_lambda": 126,
                "num_values_explored": 2957,
                "num_values_kept": 228,
                "temperature": 1.0,
                "total_num_restarts": 4,
                "total_num_values_explored": 19340
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_4',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[-4, 237],\n    solution='Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)'\n)",
            "task_solution": "Subtract(If(IsEven(IntDivide(x1, 3)), x2, Add(x1, Square(3))), 4)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.40876543987542,
            "num_unique_values": 405,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 33.30060317015009,
                "explored_percent_lambda": 15.149389816243513,
                "explored_percent_none": 51.5500070136064,
                "kept_percent_concrete": 54.68354430379747,
                "kept_percent_lambda": 45.31645569620253,
                "num_examples": 2,
                "num_explored_concrete": 2374,
                "num_explored_lambda": 1080,
                "num_explored_none": 3675,
                "num_inputs": 2,
                "num_kept_concrete": 216,
                "num_kept_lambda": 179,
                "num_values_explored": 7129,
                "num_values_kept": 395,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 72256
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_5',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-16, -196],\n    solution='Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))'\n)",
            "task_solution": "Subtract(x2, Square(Add(Square(4), IntDivide(x1, Subtract(3, Square(3))))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 48.340297965100035,
            "num_unique_values": 382,
            "solution": "If(IsEven(IntDivide(x1, 3)), Square(4), Subtract(If(IsEven(IntDivide(x1, 3)), Square(4), Subtract(Square(4), x1)), 2))",
            "solution_weight": 20,
            "stats": {
                "explored_percent_concrete": 33.56150987678467,
                "explored_percent_lambda": 22.041854097398787,
                "explored_percent_none": 44.39663602581655,
                "kept_percent_concrete": 40.86021505376344,
                "kept_percent_lambda": 59.13978494623656,
                "num_examples": 2,
                "num_explored_concrete": 1716,
                "num_explored_lambda": 1127,
                "num_explored_none": 2270,
                "num_inputs": 2,
                "num_kept_concrete": 152,
                "num_kept_lambda": 220,
                "num_values_explored": 5113,
                "num_values_kept": 372,
                "temperature": 1.0,
                "total_num_restarts": 6,
                "total_num_values_explored": 32005
            },
            "success": true,
            "task": "Task(\n    name='synthetic:weight_12_function_6',\n    inputs_dict={'x1': [158, 232], 'x2': [0, 0]},\n    outputs=[16, -218],\n    solution='Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))'\n)",
            "task_solution": "Subtract(Square(4), If(IsEven(IntDivide(x1, 3)), x2, Add(x1, 2)))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.40381560078822,
            "num_unique_values": 373,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.827067669172934,
                "explored_percent_lambda": 16.612285430557527,
                "explored_percent_none": 52.56064690026954,
                "kept_percent_concrete": 54.269972451790636,
                "kept_percent_lambda": 45.730027548209364,
                "num_examples": 2,
                "num_explored_concrete": 2173,
                "num_explored_lambda": 1171,
                "num_explored_none": 3705,
                "num_inputs": 2,
                "num_kept_concrete": 197,
                "num_kept_lambda": 166,
                "num_values_explored": 7049,
                "num_values_kept": 363,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 71043
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_7',\n    inputs_dict={'x1': [115, 177], 'x2': [0, 0]},\n    outputs=[-138, -196],\n    solution='Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))'\n)",
            "task_solution": "Subtract(x2, Add(x1, IntDivide(x1, Subtract(IntDivide(x1, Square(4)), 2))))",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.80440133414231,
            "num_unique_values": 650,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 43.529411764705884,
                "explored_percent_lambda": 25.91331269349845,
                "explored_percent_none": 30.557275541795665,
                "kept_percent_concrete": 39.0015600624025,
                "kept_percent_lambda": 60.9984399375975,
                "num_examples": 2,
                "num_explored_concrete": 2812,
                "num_explored_lambda": 1674,
                "num_explored_none": 1974,
                "num_inputs": 1,
                "num_kept_concrete": 250,
                "num_kept_lambda": 391,
                "num_values_explored": 6460,
                "num_values_kept": 641,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 63970
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_8',\n    inputs_dict={'x1': [[1], [0]]},\n    outputs=[[-225], [-256]],\n    solution='Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)'\n)",
            "task_solution": "Map(lambda u1: (lambda v1: Subtract(0, (lambda v1: Square((lambda v1: Subtract(v1, Square(4)))(v1)))(v1)))(u1), x1)",
            "task_solution_weight": null
        },
        {
            "elapsed_time": 100.38185819983482,
            "num_unique_values": 397,
            "solution": null,
            "solution_weight": null,
            "stats": {
                "explored_percent_concrete": 30.580490724117293,
                "explored_percent_lambda": 17.160383004189107,
                "explored_percent_none": 52.259126271693596,
                "kept_percent_concrete": 55.154639175257735,
                "kept_percent_lambda": 44.845360824742265,
                "num_examples": 3,
                "num_explored_concrete": 2044,
                "num_explored_lambda": 1147,
                "num_explored_none": 3493,
                "num_inputs": 1,
                "num_kept_concrete": 214,
                "num_kept_lambda": 174,
                "num_values_explored": 6684,
                "num_values_kept": 388,
                "temperature": 1.0,
                "total_num_restarts": 11,
                "total_num_values_explored": 69346
            },
            "success": false,
            "task": "Task(\n    name='synthetic:weight_12_function_9',\n    inputs_dict={'x1': [67, 33, 99]},\n    outputs=[137, 115, 201],\n    solution='Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))'\n)",
            "task_solution": "Add(3, Multiply(2, Max(x1, Multiply(4, Subtract(Square(4), 2)))))",
            "task_solution_weight": null
        }
    ],
    "success_rate": 0.73
}